Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
Rule 3     SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist
Rule 4     SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist
Rule 5     SourceFile -> cmtlist PackageClause cmtlist
Rule 6     PackageClause -> PACKAGE IDENTIFIER SEMICOL
Rule 7     Imports -> Import SEMICOL
Rule 8     Imports -> Imports cmtlist Import SEMICOL
Rule 9     Import -> IMPORT ImportStmt
Rule 10    Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN
Rule 11    Import -> IMPORT LPAREN RPAREN
Rule 12    ImportStmt -> ImportHere STRING
Rule 13    ImportStmtList -> ImportStmt
Rule 14    ImportStmtList -> ImportStmtList SEMICOL ImportStmt
Rule 15    ImportHere -> <empty>
Rule 16    ImportHere -> IDENTIFIER
Rule 17    ImportHere -> DOT
Rule 18    Declaration -> CommonDecl
Rule 19    Declaration -> FuncDecl
Rule 20    Declaration -> NonDeclStmt
Rule 21    CommonDecl -> CONSTANT ConstDecl
Rule 22    CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN
Rule 23    CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
Rule 24    CommonDecl -> CONSTANT LPAREN RPAREN
Rule 25    CommonDecl -> VAR VarDecl
Rule 26    CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN
Rule 27    CommonDecl -> VAR LPAREN RPAREN
Rule 28    CommonDecl -> NewType TypeDecl
Rule 29    CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN
Rule 30    CommonDecl -> NewType LPAREN RPAREN
Rule 31    VarDecl -> DeclNameList NType
Rule 32    VarDecl -> DeclNameList NType EQUAL ExprList
Rule 33    VarDecl -> DeclNameList EQUAL ExprList
Rule 34    ConstDecl -> DeclNameList NType EQUAL ExprList
Rule 35    ConstDecl -> DeclNameList NType
Rule 36    ConstDecl -> DeclNameList EQUAL ExprList
Rule 37    ConstDecl1 -> ConstDecl
Rule 38    ConstDecl1 -> DeclNameList
Rule 39    TypeDeclName -> IDENTIFIER
Rule 40    TypeDecl -> TypeDeclName NType
Rule 41    SimpleStmt -> Expr
Rule 42    SimpleStmt -> Expr PLUSEQ Expr
Rule 43    SimpleStmt -> Expr MINUSEQ Expr
Rule 44    SimpleStmt -> Expr TIMESEQ Expr
Rule 45    SimpleStmt -> Expr DIVIDEEQ Expr
Rule 46    SimpleStmt -> Expr MODEQ Expr
Rule 47    SimpleStmt -> Expr OREQ Expr
Rule 48    SimpleStmt -> Expr AMPEQ Expr
Rule 49    SimpleStmt -> Expr CAREQ Expr
Rule 50    SimpleStmt -> Expr SHL_ASSIGN Expr
Rule 51    SimpleStmt -> Expr SHR_ASSIGN Expr
Rule 52    SimpleStmt -> Expr AMPCAREQ Expr
Rule 53    SimpleStmt -> ExprList EQUAL ExprList
Rule 54    SimpleStmt -> ExprList COLONEQ ExprList
Rule 55    SimpleStmt -> Expr PLUSPLUS
Rule 56    SimpleStmt -> Expr MINUSMIN
Rule 57    Case -> CASE ExprOrTypeList COLON
Rule 58    Case -> CASE ExprOrTypeList EQUAL Expr COLON
Rule 59    Case -> CASE ExprOrTypeList COLONEQ Expr COLON
Rule 60    Case -> DEFAULT COLON
Rule 61    CompoundStmt -> LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
Rule 62    compundmarker -> <empty>
Rule 63    revmarker -> <empty>
Rule 64    CaseBlock -> Case StmtList
Rule 65    CaseBlockList -> <empty>
Rule 66    CaseBlockList -> CaseBlockList CaseBlock
Rule 67    LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 68    RangeStmt -> ExprList EQUAL RANGE Expr
Rule 69    RangeStmt -> ExprList COLONEQ RANGE Expr
Rule 70    RangeStmt -> RANGE Expr
Rule 71    ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
Rule 72    ForHeader -> OSimpleStmt
Rule 73    ForHeader -> RangeStmt
Rule 74    ForBody -> ForHeader formarker LoopBody revmarker
Rule 75    ForStmt -> FOR ForBody
Rule 76    formarker -> <empty>
Rule 77    IfHeader -> OSimpleStmt
Rule 78    IfHeader -> OSimpleStmt SEMICOL OSimpleStmt
Rule 79    IfStmt -> IF IfHeader LoopBody ElseIfList
Rule 80    ElseIf -> ELSE IF IfHeader LoopBody
Rule 81    ElseIfList -> <empty>
Rule 82    ElseIfList -> ElseIf ElseIfList
Rule 83    ElseIfList -> Else
Rule 84    Else -> ELSE CompoundStmt
Rule 85    NType -> FuncType
Rule 86    NType -> OtherType
Rule 87    NType -> PtrType
Rule 88    NType -> DotName
Rule 89    NType -> LPAREN NType RPAREN
Rule 90    NType -> NewType
Rule 91    NonExprType -> FuncType
Rule 92    NonExprType -> OtherType
Rule 93    NonExprType -> TIMES NonExprType
Rule 94    OtherType -> LBRACK OExpr RBRACK NType
Rule 95    OtherType -> StructType
Rule 96    OtherType -> InterfaceType
Rule 97    OtherType -> ChannelType
Rule 98    ChannelType -> CHAN NewType
Rule 99    ChannelType -> CHAN LMINUS NewType
Rule 100   ChannelType -> LMINUS CHAN NewType
Rule 101   StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE
Rule 102   StructType -> STRUCT LBRACE RBRACE
Rule 103   InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
Rule 104   InterfaceType -> INTERFACE LBRACE RBRACE
Rule 105   FuncDecl -> FUNCTION funcmarker FuncDecl_ FuncBody
Rule 106   funcmarker -> <empty>
Rule 107   FuncDecl_ -> IDENTIFIER ArgList FuncRes
Rule 108   FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
Rule 109   FuncType -> FUNCTION ArgList FuncRes
Rule 110   ArgList -> LPAREN OArgTypeListOComma RPAREN
Rule 111   ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN
Rule 112   FuncBody -> <empty>
Rule 113   FuncBody -> LBRACE cmtlist StmtList cmtlist funcrevmarker RBRACE
Rule 114   funcrevmarker -> <empty>
Rule 115   FuncRes -> <empty>
Rule 116   FuncRes -> FuncRetType
Rule 117   FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT
Rule 118   StructDeclList -> StructDecl
Rule 119   StructDeclList -> StructDeclList SEMICOL StructDecl
Rule 120   InterfaceDeclList -> InterfaceDecl
Rule 121   InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl
Rule 122   StructDecl -> NewNameList NType OLiteral
Rule 123   StructDecl -> Embed OLiteral
Rule 124   StructDecl -> LPAREN Embed RPAREN OLiteral
Rule 125   StructDecl -> TIMES Embed OLiteral
Rule 126   StructDecl -> LPAREN TIMES Embed RPAREN OLiteral
Rule 127   StructDecl -> TIMES LPAREN Embed RPAREN OLiteral
Rule 128   InterfaceDecl -> NewName InDecl
Rule 129   InterfaceDecl -> IDENTIFIER
Rule 130   InterfaceDecl -> LPAREN IDENTIFIER RPAREN
Rule 131   InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes
Rule 132   LabelName -> NewName
Rule 133   NewName -> IDENTIFIER
Rule 134   PtrType -> TIMES NType
Rule 135   FuncRetType -> FuncType
Rule 136   FuncRetType -> OtherType
Rule 137   FuncRetType -> PtrType
Rule 138   FuncRetType -> DotName
Rule 139   FuncRetType -> myType
Rule 140   myType -> NewType
Rule 141   myType -> myType COMMA NewType
Rule 142   DotName -> Name
Rule 143   DotName -> Name DOT IDENTIFIER
Rule 144   OComma -> <empty>
Rule 145   OComma -> COMMA
Rule 146   OSemi -> <empty>
Rule 147   OSemi -> SEMICOL
Rule 148   OSimpleStmt -> <empty>
Rule 149   OSimpleStmt -> SimpleStmt
Rule 150   ONewName -> <empty>
Rule 151   ONewName -> NewName
Rule 152   OExpr -> <empty>
Rule 153   OExpr -> Expr
Rule 154   OExprList -> <empty>
Rule 155   OExprList -> ExprList
Rule 156   FuncLiteralDecl -> FuncType
Rule 157   FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
Rule 158   ExprList -> Expr
Rule 159   ExprList -> ExprList COMMA Expr
Rule 160   ExprOrTypeList -> ExprOrType
Rule 161   ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType
Rule 162   OLiteral -> <empty>
Rule 163   OLiteral -> Literal
Rule 164   Literal -> INTEGER
Rule 165   Literal -> FLOAT
Rule 166   Literal -> STRING
Rule 167   Embed -> IDENTIFIER
Rule 168   DeclList -> Declaration SEMICOL
Rule 169   DeclList -> DeclList cmtlist Declaration SEMICOL
Rule 170   VarDeclList -> VarDecl
Rule 171   VarDeclList -> VarDeclList SEMICOL VarDecl
Rule 172   ConstDeclList -> ConstDecl1
Rule 173   ConstDeclList -> ConstDeclList SEMICOL ConstDecl1
Rule 174   TypeDeclList -> TypeDecl
Rule 175   TypeDeclList -> TypeDeclList SEMICOL TypeDecl
Rule 176   DeclNameList -> DeclName
Rule 177   DeclNameList -> DeclNameList COMMA DeclName
Rule 178   StmtList -> Stmt SEMICOL
Rule 179   StmtList -> StmtList cmtlist Stmt SEMICOL
Rule 180   NewNameList -> NewName
Rule 181   NewNameList -> NewNameList COMMA NewName
Rule 182   KeyvalList -> Keyval
Rule 183   KeyvalList -> BareCompLitExpr
Rule 184   KeyvalList -> KeyvalList COMMA Keyval
Rule 185   KeyvalList -> KeyvalList COMMA BareCompLitExpr
Rule 186   BracedKeyvalList -> <empty>
Rule 187   BracedKeyvalList -> KeyvalList OComma
Rule 188   DeclName -> IDENTIFIER
Rule 189   Name -> IDENTIFIER
Rule 190   ArgType -> NameOrType
Rule 191   ArgType -> IDENTIFIER NameOrType
Rule 192   ArgType -> IDENTIFIER DotDotDot
Rule 193   ArgType -> DotDotDot
Rule 194   ArgTypeList -> ArgType
Rule 195   ArgTypeList -> ArgTypeList COMMA ArgType
Rule 196   OArgTypeListOComma -> <empty>
Rule 197   OArgTypeListOComma -> ArgTypeList OComma
Rule 198   Stmt -> <empty>
Rule 199   Stmt -> CompoundStmt
Rule 200   Stmt -> CommonDecl
Rule 201   Stmt -> NonDeclStmt
Rule 202   NonDeclStmt -> SimpleStmt
Rule 203   NonDeclStmt -> ForStmt
Rule 204   NonDeclStmt -> SwitchStmt
Rule 205   NonDeclStmt -> IfStmt
Rule 206   NonDeclStmt -> LabelName COLON Stmt
Rule 207   NonDeclStmt -> FALLTHROUGH
Rule 208   NonDeclStmt -> BREAK ONewName
Rule 209   NonDeclStmt -> CONTINUE ONewName
Rule 210   NonDeclStmt -> GOTO NewName
Rule 211   NonDeclStmt -> RETURN OExprList
Rule 212   DotDotDot -> DDD
Rule 213   DotDotDot -> DDD NType
Rule 214   PExpr -> PExprNoParen
Rule 215   PExpr -> LPAREN ExprOrType RPAREN
Rule 216   PExprNoParen -> Literal
Rule 217   PExprNoParen -> Name
Rule 218   PExprNoParen -> PExpr DOT IDENTIFIER
Rule 219   PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN
Rule 220   PExprNoParen -> PExpr DOT LPAREN NewType RPAREN
Rule 221   PExprNoParen -> PExpr LBRACK Expr RBRACK
Rule 222   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK
Rule 223   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
Rule 224   PExprNoParen -> PseudoCall
Rule 225   PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
Rule 226   PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 227   PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 228   PExprNoParen -> FuncLiteral
Rule 229   PExprNoParen -> ForCompExpr
Rule 230   NewType -> TYPE
Rule 231   ConvType -> FuncType
Rule 232   ConvType -> OtherType
Rule 233   CompType -> OtherType
Rule 234   Keyval -> Expr COLON CompLitExpr
Rule 235   BareCompLitExpr -> Expr
Rule 236   BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 237   CompLitExpr -> Expr
Rule 238   CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 239   ExprOrType -> Expr
Rule 240   ExprOrType -> NonExprType
Rule 241   NameOrType -> NType
Rule 242   SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE
Rule 243   Prec5Expr_ -> UExpr
Rule 244   Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr
Rule 245   Prec5Expr_ -> Prec5Expr_ MOD UExpr
Rule 246   Prec5Expr_ -> Prec5Expr_ SHL UExpr
Rule 247   Prec5Expr_ -> Prec5Expr_ SHR UExpr
Rule 248   Prec5Expr_ -> Prec5Expr_ AMPERS UExpr
Rule 249   Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr
Rule 250   Prec5Expr_ -> Prec5Expr_ TIMES UExpr
Rule 251   Prec4Expr_ -> Prec5Expr_
Rule 252   Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_
Rule 253   Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_
Rule 254   Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_
Rule 255   Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_
Rule 256   Prec3Expr_ -> Prec4Expr_
Rule 257   Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_
Rule 258   Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_
Rule 259   Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_
Rule 260   Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_
Rule 261   Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_
Rule 262   Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_
Rule 263   Prec2Expr_ -> Prec3Expr_
Rule 264   Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_
Rule 265   Expr -> Prec2Expr_
Rule 266   Expr -> Expr OROR Prec2Expr_
Rule 267   Expr -> CONSTANTS
Rule 268   Expr -> Chexpr
Rule 269   Expr -> Arrayexp
Rule 270   Chexpr -> LMINUS IDENTIFIER
Rule 271   Arrayexp -> OtherType LBRACE ExprList RBRACE
Rule 272   UExpr -> PExpr
Rule 273   UExpr -> AMPERS UExpr
Rule 274   UExpr -> NOT UExpr
Rule 275   UExpr -> TIMES UExpr
Rule 276   UExpr -> PLUS UExpr
Rule 277   UExpr -> MINUS UExpr
Rule 278   UExpr -> XOR UExpr
Rule 279   ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK
Rule 280   PseudoCall -> PExpr LPAREN RPAREN
Rule 281   PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN
Rule 282   PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
Rule 283   cmtlist -> <empty>
Rule 284   cmtlist -> cmtlist COMMENT

Terminals, with rules where they appear

AMPAMP               : 264
AMPCAR               : 249
AMPCAREQ             : 52
AMPEQ                : 48
AMPERS               : 248 273
BREAK                : 208
CAREQ                : 49
CASE                 : 57 58 59
CHAN                 : 98 99 100
COLON                : 57 58 59 60 206 222 223 223 234
COLONEQ              : 54 59 69
COMMA                : 141 145 159 161 177 181 184 185 195
COMMENT              : 284
CONSTANT             : 21 22 23 24
CONSTANTS            : 267
CONTINUE             : 209
DDD                  : 212 213 282
DEFAULT              : 60
DIVIDE               : 244
DIVIDEEQ             : 45
DOT                  : 17 143 218 219 220
ELSE                 : 80 84
EQEQ                 : 257
EQUAL                : 32 33 34 36 53 58 68
FALLTHROUGH          : 207
FLOAT                : 165
FOR                  : 75
FUNCTION             : 105 109
GEQ                  : 260
GOTO                 : 210
GREAT                : 261
IDENTIFIER           : 6 16 39 107 108 129 130 133 143 167 188 189 191 192 218 270
IF                   : 79 80
IMPORT               : 9 10 11
INTEGER              : 164
INTERFACE            : 103 104
LBRACE               : 61 67 101 102 103 104 113 157 242 271
LBRACK               : 94 221 222 223 279
LEFT_ANGLE           : 225
LEFT_LEFT            : 226 227 236 238
LEFT_OR              : 108 117
LEQ                  : 259
LESS                 : 262
LMINUS               : 99 100 270
LPAREN               : 10 11 22 23 24 26 27 29 30 89 110 111 124 126 127 130 131 215 219 220 280 281 282
MINUS                : 253 277
MINUSEQ              : 43
MINUSMIN             : 56
MOD                  : 245
MODEQ                : 46
NOT                  : 274
NOTEQ                : 258
OR                   : 255
OREQ                 : 47
OROR                 : 266
OR_RIGHT             : 108 117
PACKAGE              : 6
PIPE                 : 279
PLUS                 : 252 276
PLUSEQ               : 42
PLUSPLUS             : 55
RANGE                : 68 69 70
RBRACE               : 61 67 101 102 103 104 113 157 242 271
RBRACK               : 94 221 222 223 279
RETURN               : 211
RIGHT_ANGLE          : 225
RIGHT_RIGHT          : 226 227 236 238
RPAREN               : 10 11 22 23 24 26 27 29 30 89 110 111 124 126 127 130 131 215 219 220 280 281 282
SEMICOL              : 6 7 8 14 23 71 71 78 119 121 147 168 169 171 173 175 178 179
SHL                  : 246
SHL_ASSIGN           : 50
SHR                  : 247
SHR_ASSIGN           : 51
STRING               : 12 166
STRUCT               : 101 102
SWITCH               : 242
TIMES                : 93 125 126 127 134 250 275
TIMESEQ              : 44
TYPE                 : 230
VAR                  : 25 26 27
XOR                  : 254 278
error                : 

Nonterminals, with rules where they appear

ArgList              : 107 108 109 111
ArgType              : 194 195
ArgTypeList          : 195 197
Arrayexp             : 269
BareCompLitExpr      : 183 185
BracedKeyvalList     : 226 227 236 238
Case                 : 64
CaseBlock            : 66
CaseBlockList        : 66 242
ChannelType          : 97
Chexpr               : 268
CommonDecl           : 18 200
CompLitExpr          : 234
CompType             : 226
CompoundStmt         : 84 199
ConstDecl            : 21 22 23 37
ConstDecl1           : 172 173
ConstDeclList        : 23 173
ConvType             : 225
DeclList             : 2 3 169
DeclName             : 176 177
DeclNameList         : 31 32 33 34 35 36 38 177
Declaration          : 168 169
DotDotDot            : 192 193
DotName              : 88 138
Else                 : 83
ElseIf               : 82
ElseIfList           : 79 82
Embed                : 123 124 125 126 127
Expr                 : 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 55 56 58 59 68 69 70 153 158 159 221 225 234 235 237 239 266 279
ExprList             : 32 33 34 36 53 53 54 54 68 69 155 159 271
ExprOrType           : 160 161 215 219
ExprOrTypeList       : 57 58 59 161 281 282
ForBody              : 75
ForCompExpr          : 229
ForHeader            : 74
ForStmt              : 203
FuncBody             : 105
FuncDecl             : 19
FuncDecl_            : 105
FuncLiteral          : 228
FuncLiteralDecl      : 157
FuncRes              : 107 108 109 131
FuncRetType          : 116
FuncType             : 85 91 135 156 231
IfHeader             : 79 80 242
IfStmt               : 205
Import               : 7 8
ImportHere           : 12
ImportStmt           : 9 13 14
ImportStmtList       : 10 14
Imports              : 2 4 8
InDecl               : 128
InterfaceDecl        : 120 121
InterfaceDeclList    : 103 121
InterfaceType        : 96
Keyval               : 182 184
KeyvalList           : 184 185 187
LabelName            : 206
Literal              : 163 216
LoopBody             : 74 79 80
NType                : 31 32 34 35 40 89 94 122 134 213 241
Name                 : 142 143 217
NameOrType           : 190 191
NewName              : 128 132 151 180 181 210
NewNameList          : 122 181
NewType              : 28 29 30 90 98 99 100 140 141 220
NonDeclStmt          : 20 201
NonExprType          : 93 240
OArgTypeListOComma   : 108 110 111 117 131
OComma               : 187 197 225 281 282
OExpr                : 94 222 222 223 223 223
OExprList            : 211
OLiteral             : 122 123 124 125 126 127
ONewName             : 208 209
OSemi                : 10 22 23 26 29 101 103
OSimpleStmt          : 71 71 71 72 77 78 78
OtherType            : 86 92 136 232 233 271
PExpr                : 218 219 220 221 222 223 227 272 280 281 282
PExprNoParen         : 214
PackageClause        : 2 3 4 5
Prec2Expr_           : 264 265 266
Prec3Expr_           : 257 258 259 260 261 262 263 264
Prec4Expr_           : 252 253 254 255 256 257 258 259 260 261 262
Prec5Expr_           : 244 245 246 247 248 249 250 251 252 253 254 255
PseudoCall           : 224
PtrType              : 87 137
RangeStmt            : 73 279
SimpleStmt           : 149 202
SourceFile           : 1
Stmt                 : 178 179 206
StmtList             : 61 64 67 113 157 179
StructDecl           : 118 119
StructDeclList       : 101 119
StructType           : 95
SwitchStmt           : 204
TypeDecl             : 28 174 175
TypeDeclList         : 29 175
TypeDeclName         : 40
UExpr                : 243 244 245 246 247 248 249 250 273 274 275 276 277 278
VarDecl              : 25 170 171
VarDeclList          : 26 171
cmtlist              : 2 2 2 2 3 3 3 4 4 4 5 5 8 61 61 67 67 113 113 157 157 169 179 284
compundmarker        : 61
formarker            : 74
funcmarker           : 105
funcrevmarker        : 113
myType               : 139 141
revmarker            : 61 74
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (2) SourceFile -> . cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> . cmtlist PackageClause cmtlist DeclList cmtlist
    (4) SourceFile -> . cmtlist PackageClause cmtlist Imports cmtlist
    (5) SourceFile -> . cmtlist PackageClause cmtlist
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    PACKAGE         reduce using rule 283 (cmtlist -> .)

    start                          shift and go to state 1
    SourceFile                     shift and go to state 2
    cmtlist                        shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 3

    (2) SourceFile -> cmtlist . PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist . PackageClause cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist . PackageClause cmtlist Imports cmtlist
    (5) SourceFile -> cmtlist . PackageClause cmtlist
    (284) cmtlist -> cmtlist . COMMENT
    (6) PackageClause -> . PACKAGE IDENTIFIER SEMICOL

    COMMENT         shift and go to state 5
    PACKAGE         shift and go to state 6

    PackageClause                  shift and go to state 4

state 4

    (2) SourceFile -> cmtlist PackageClause . cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist PackageClause . cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause . cmtlist Imports cmtlist
    (5) SourceFile -> cmtlist PackageClause . cmtlist
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    IMPORT          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    $end            reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 7

state 5

    (284) cmtlist -> cmtlist COMMENT .

    COMMENT         reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    PACKAGE         reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    IMPORT          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    CONSTANT        reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    VAR             reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    FUNCTION        reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    BREAK           reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    CONTINUE        reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    GOTO            reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    RETURN          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    TYPE            reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    FOR             reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    SWITCH          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    IF              reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    CONSTANTS       reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    LMINUS          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    LBRACK          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    STRUCT          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    INTERFACE       reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    CHAN            reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    AMPERS          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    NOT             reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    TIMES           reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    PLUS            reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    MINUS           reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    XOR             reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    LPAREN          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    INTEGER         reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    FLOAT           reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    STRING          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    $end            reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    LBRACE          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    SEMICOL         reduce using rule 284 (cmtlist -> cmtlist COMMENT .)
    RBRACE          reduce using rule 284 (cmtlist -> cmtlist COMMENT .)


state 6

    (6) PackageClause -> PACKAGE . IDENTIFIER SEMICOL

    IDENTIFIER      shift and go to state 8


state 7

    (2) SourceFile -> cmtlist PackageClause cmtlist . Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist PackageClause cmtlist . DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist . Imports cmtlist
    (5) SourceFile -> cmtlist PackageClause cmtlist .
    (284) cmtlist -> cmtlist . COMMENT
    (7) Imports -> . Import SEMICOL
    (8) Imports -> . Imports cmtlist Import SEMICOL
    (168) DeclList -> . Declaration SEMICOL
    (169) DeclList -> . DeclList cmtlist Declaration SEMICOL
    (9) Import -> . IMPORT ImportStmt
    (10) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> . IMPORT LPAREN RPAREN
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (105) FuncDecl -> . FUNCTION funcmarker FuncDecl_ FuncBody
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 5 (SourceFile -> cmtlist PackageClause cmtlist .)
    COMMENT         shift and go to state 5
    IMPORT          shift and go to state 13
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FUNCTION        shift and go to state 21
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74

    Imports                        shift and go to state 9
    DeclList                       shift and go to state 10
    Import                         shift and go to state 11
    Declaration                    shift and go to state 12
    CommonDecl                     shift and go to state 15
    FuncDecl                       shift and go to state 16
    NonDeclStmt                    shift and go to state 17
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 8

    (6) PackageClause -> PACKAGE IDENTIFIER . SEMICOL

    SEMICOL         shift and go to state 77


state 9

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports . cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist Imports . cmtlist
    (8) Imports -> Imports . cmtlist Import SEMICOL
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    IMPORT          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    $end            reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 78

state 10

    (3) SourceFile -> cmtlist PackageClause cmtlist DeclList . cmtlist
    (169) DeclList -> DeclList . cmtlist Declaration SEMICOL
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    $end            reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 79

state 11

    (7) Imports -> Import . SEMICOL

    SEMICOL         shift and go to state 80


state 12

    (168) DeclList -> Declaration . SEMICOL

    SEMICOL         shift and go to state 81


state 13

    (9) Import -> IMPORT . ImportStmt
    (10) Import -> IMPORT . LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> IMPORT . LPAREN RPAREN
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    LPAREN          shift and go to state 83
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 85
    DOT             shift and go to state 86

    ImportStmt                     shift and go to state 82
    ImportHere                     shift and go to state 84

state 14

    (215) PExpr -> LPAREN . ExprOrType RPAREN
    (239) ExprOrType -> . Expr
    (240) ExprOrType -> . NonExprType
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (91) NonExprType -> . FuncType
    (92) NonExprType -> . OtherType
    (93) NonExprType -> . TIMES NonExprType
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    TIMES           shift and go to state 92
    LMINUS          shift and go to state 45
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93

    ExprOrType                     shift and go to state 87
    Expr                           shift and go to state 88
    NonExprType                    shift and go to state 89
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    FuncType                       shift and go to state 90
    OtherType                      shift and go to state 91
    Prec3Expr_                     shift and go to state 44
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec4Expr_                     shift and go to state 47
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncLiteralDecl                shift and go to state 76

state 15

    (18) Declaration -> CommonDecl .

    SEMICOL         reduce using rule 18 (Declaration -> CommonDecl .)


state 16

    (19) Declaration -> FuncDecl .

    SEMICOL         reduce using rule 19 (Declaration -> FuncDecl .)


state 17

    (20) Declaration -> NonDeclStmt .

    SEMICOL         reduce using rule 20 (Declaration -> NonDeclStmt .)


state 18

    (21) CommonDecl -> CONSTANT . ConstDecl
    (22) CommonDecl -> CONSTANT . LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> CONSTANT . LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> CONSTANT . LPAREN RPAREN
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (176) DeclNameList -> . DeclName
    (177) DeclNameList -> . DeclNameList COMMA DeclName
    (188) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 96
    IDENTIFIER      shift and go to state 99

    ConstDecl                      shift and go to state 95
    DeclNameList                   shift and go to state 97
    DeclName                       shift and go to state 98

state 19

    (25) CommonDecl -> VAR . VarDecl
    (26) CommonDecl -> VAR . LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> VAR . LPAREN RPAREN
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (176) DeclNameList -> . DeclName
    (177) DeclNameList -> . DeclNameList COMMA DeclName
    (188) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 101
    IDENTIFIER      shift and go to state 99

    VarDecl                        shift and go to state 100
    DeclNameList                   shift and go to state 102
    DeclName                       shift and go to state 98

state 20

    (28) CommonDecl -> NewType . TypeDecl
    (29) CommonDecl -> NewType . LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> NewType . LPAREN RPAREN
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    LPAREN          shift and go to state 104
    IDENTIFIER      shift and go to state 106

    TypeDecl                       shift and go to state 103
    TypeDeclName                   shift and go to state 105

state 21

    (105) FuncDecl -> FUNCTION . funcmarker FuncDecl_ FuncBody
    (109) FuncType -> FUNCTION . ArgList FuncRes
    (106) funcmarker -> .
    (110) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (111) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    IDENTIFIER      reduce using rule 106 (funcmarker -> .)
    LEFT_OR         reduce using rule 106 (funcmarker -> .)
    LPAREN          shift and go to state 109

    funcmarker                     shift and go to state 107
    ArgList                        shift and go to state 108

state 22

    (202) NonDeclStmt -> SimpleStmt .

    SEMICOL         reduce using rule 202 (NonDeclStmt -> SimpleStmt .)


state 23

    (203) NonDeclStmt -> ForStmt .

    SEMICOL         reduce using rule 203 (NonDeclStmt -> ForStmt .)


state 24

    (204) NonDeclStmt -> SwitchStmt .

    SEMICOL         reduce using rule 204 (NonDeclStmt -> SwitchStmt .)


state 25

    (205) NonDeclStmt -> IfStmt .

    SEMICOL         reduce using rule 205 (NonDeclStmt -> IfStmt .)


state 26

    (206) NonDeclStmt -> LabelName . COLON Stmt

    COLON           shift and go to state 110


state 27

    (207) NonDeclStmt -> FALLTHROUGH .

    SEMICOL         reduce using rule 207 (NonDeclStmt -> FALLTHROUGH .)


state 28

    (208) NonDeclStmt -> BREAK . ONewName
    (150) ONewName -> .
    (151) ONewName -> . NewName
    (133) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 150 (ONewName -> .)
    IDENTIFIER      shift and go to state 113

    ONewName                       shift and go to state 111
    NewName                        shift and go to state 112

state 29

    (209) NonDeclStmt -> CONTINUE . ONewName
    (150) ONewName -> .
    (151) ONewName -> . NewName
    (133) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 150 (ONewName -> .)
    IDENTIFIER      shift and go to state 113

    ONewName                       shift and go to state 114
    NewName                        shift and go to state 112

state 30

    (210) NonDeclStmt -> GOTO . NewName
    (133) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 113

    NewName                        shift and go to state 115

state 31

    (132) LabelName -> NewName .

    COLON           reduce using rule 132 (LabelName -> NewName .)


state 32

    (211) NonDeclStmt -> RETURN . OExprList
    (154) OExprList -> .
    (155) OExprList -> . ExprList
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 154 (OExprList -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    OExprList                      shift and go to state 116
    ExprList                       shift and go to state 117
    Expr                           shift and go to state 118
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 33

    (230) NewType -> TYPE .

    LPAREN          reduce using rule 230 (NewType -> TYPE .)
    IDENTIFIER      reduce using rule 230 (NewType -> TYPE .)
    LBRACE          reduce using rule 230 (NewType -> TYPE .)
    LEFT_ANGLE      reduce using rule 230 (NewType -> TYPE .)
    LEFT_LEFT       reduce using rule 230 (NewType -> TYPE .)
    RPAREN          reduce using rule 230 (NewType -> TYPE .)
    DDD             reduce using rule 230 (NewType -> TYPE .)
    COMMA           reduce using rule 230 (NewType -> TYPE .)
    COLON           reduce using rule 230 (NewType -> TYPE .)
    EQUAL           reduce using rule 230 (NewType -> TYPE .)
    COLONEQ         reduce using rule 230 (NewType -> TYPE .)
    SEMICOL         reduce using rule 230 (NewType -> TYPE .)
    OR_RIGHT        reduce using rule 230 (NewType -> TYPE .)
    INTEGER         reduce using rule 230 (NewType -> TYPE .)
    FLOAT           reduce using rule 230 (NewType -> TYPE .)
    STRING          reduce using rule 230 (NewType -> TYPE .)
    RBRACE          reduce using rule 230 (NewType -> TYPE .)


state 34

    (41) SimpleStmt -> Expr .
    (42) SimpleStmt -> Expr . PLUSEQ Expr
    (43) SimpleStmt -> Expr . MINUSEQ Expr
    (44) SimpleStmt -> Expr . TIMESEQ Expr
    (45) SimpleStmt -> Expr . DIVIDEEQ Expr
    (46) SimpleStmt -> Expr . MODEQ Expr
    (47) SimpleStmt -> Expr . OREQ Expr
    (48) SimpleStmt -> Expr . AMPEQ Expr
    (49) SimpleStmt -> Expr . CAREQ Expr
    (50) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (51) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (52) SimpleStmt -> Expr . AMPCAREQ Expr
    (55) SimpleStmt -> Expr . PLUSPLUS
    (56) SimpleStmt -> Expr . MINUSMIN
    (266) Expr -> Expr . OROR Prec2Expr_
    (158) ExprList -> Expr .

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 119
    MINUSEQ         shift and go to state 120
    TIMESEQ         shift and go to state 121
    DIVIDEEQ        shift and go to state 122
    MODEQ           shift and go to state 123
    OREQ            shift and go to state 124
    AMPEQ           shift and go to state 125
    CAREQ           shift and go to state 126
    SHL_ASSIGN      shift and go to state 127
    SHR_ASSIGN      shift and go to state 128
    AMPCAREQ        shift and go to state 129
    PLUSPLUS        shift and go to state 130
    MINUSMIN        shift and go to state 131
    OROR            shift and go to state 132
    EQUAL           reduce using rule 158 (ExprList -> Expr .)
    COLONEQ         reduce using rule 158 (ExprList -> Expr .)
    COMMA           reduce using rule 158 (ExprList -> Expr .)


state 35

    (53) SimpleStmt -> ExprList . EQUAL ExprList
    (54) SimpleStmt -> ExprList . COLONEQ ExprList
    (159) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 133
    COLONEQ         shift and go to state 134
    COMMA           shift and go to state 135


state 36

    (75) ForStmt -> FOR . ForBody
    (74) ForBody -> . ForHeader formarker LoopBody revmarker
    (71) ForHeader -> . OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (72) ForHeader -> . OSimpleStmt
    (73) ForHeader -> . RangeStmt
    (148) OSimpleStmt -> .
    (149) OSimpleStmt -> . SimpleStmt
    (68) RangeStmt -> . ExprList EQUAL RANGE Expr
    (69) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (70) RangeStmt -> . RANGE Expr
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 148 (OSimpleStmt -> .)
    LBRACE          reduce using rule 148 (OSimpleStmt -> .)
    RANGE           shift and go to state 142
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    ForBody                        shift and go to state 136
    ForHeader                      shift and go to state 137
    OSimpleStmt                    shift and go to state 138
    RangeStmt                      shift and go to state 139
    SimpleStmt                     shift and go to state 140
    ExprList                       shift and go to state 141
    Expr                           shift and go to state 143
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 37

    (242) SwitchStmt -> SWITCH . IfHeader LBRACE CaseBlockList RBRACE
    (77) IfHeader -> . OSimpleStmt
    (78) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (148) OSimpleStmt -> .
    (149) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 148 (OSimpleStmt -> .)
    LBRACE          reduce using rule 148 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    IfHeader                       shift and go to state 144
    OSimpleStmt                    shift and go to state 145
    SimpleStmt                     shift and go to state 140
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 38

    (79) IfStmt -> IF . IfHeader LoopBody ElseIfList
    (77) IfHeader -> . OSimpleStmt
    (78) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (148) OSimpleStmt -> .
    (149) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 148 (OSimpleStmt -> .)
    LBRACE          reduce using rule 148 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    IfHeader                       shift and go to state 146
    OSimpleStmt                    shift and go to state 145
    SimpleStmt                     shift and go to state 140
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 39

    (265) Expr -> Prec2Expr_ .
    (264) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    PLUSEQ          reduce using rule 265 (Expr -> Prec2Expr_ .)
    MINUSEQ         reduce using rule 265 (Expr -> Prec2Expr_ .)
    TIMESEQ         reduce using rule 265 (Expr -> Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 265 (Expr -> Prec2Expr_ .)
    MODEQ           reduce using rule 265 (Expr -> Prec2Expr_ .)
    OREQ            reduce using rule 265 (Expr -> Prec2Expr_ .)
    AMPEQ           reduce using rule 265 (Expr -> Prec2Expr_ .)
    CAREQ           reduce using rule 265 (Expr -> Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 265 (Expr -> Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 265 (Expr -> Prec2Expr_ .)
    AMPCAREQ        reduce using rule 265 (Expr -> Prec2Expr_ .)
    PLUSPLUS        reduce using rule 265 (Expr -> Prec2Expr_ .)
    MINUSMIN        reduce using rule 265 (Expr -> Prec2Expr_ .)
    OROR            reduce using rule 265 (Expr -> Prec2Expr_ .)
    SEMICOL         reduce using rule 265 (Expr -> Prec2Expr_ .)
    EQUAL           reduce using rule 265 (Expr -> Prec2Expr_ .)
    COLONEQ         reduce using rule 265 (Expr -> Prec2Expr_ .)
    COMMA           reduce using rule 265 (Expr -> Prec2Expr_ .)
    RPAREN          reduce using rule 265 (Expr -> Prec2Expr_ .)
    LBRACE          reduce using rule 265 (Expr -> Prec2Expr_ .)
    PIPE            reduce using rule 265 (Expr -> Prec2Expr_ .)
    RBRACK          reduce using rule 265 (Expr -> Prec2Expr_ .)
    RBRACE          reduce using rule 265 (Expr -> Prec2Expr_ .)
    DDD             reduce using rule 265 (Expr -> Prec2Expr_ .)
    COLON           reduce using rule 265 (Expr -> Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 265 (Expr -> Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 265 (Expr -> Prec2Expr_ .)
    AMPAMP          shift and go to state 147


state 40

    (267) Expr -> CONSTANTS .

    PLUSEQ          reduce using rule 267 (Expr -> CONSTANTS .)
    MINUSEQ         reduce using rule 267 (Expr -> CONSTANTS .)
    TIMESEQ         reduce using rule 267 (Expr -> CONSTANTS .)
    DIVIDEEQ        reduce using rule 267 (Expr -> CONSTANTS .)
    MODEQ           reduce using rule 267 (Expr -> CONSTANTS .)
    OREQ            reduce using rule 267 (Expr -> CONSTANTS .)
    AMPEQ           reduce using rule 267 (Expr -> CONSTANTS .)
    CAREQ           reduce using rule 267 (Expr -> CONSTANTS .)
    SHL_ASSIGN      reduce using rule 267 (Expr -> CONSTANTS .)
    SHR_ASSIGN      reduce using rule 267 (Expr -> CONSTANTS .)
    AMPCAREQ        reduce using rule 267 (Expr -> CONSTANTS .)
    PLUSPLUS        reduce using rule 267 (Expr -> CONSTANTS .)
    MINUSMIN        reduce using rule 267 (Expr -> CONSTANTS .)
    OROR            reduce using rule 267 (Expr -> CONSTANTS .)
    SEMICOL         reduce using rule 267 (Expr -> CONSTANTS .)
    EQUAL           reduce using rule 267 (Expr -> CONSTANTS .)
    COLONEQ         reduce using rule 267 (Expr -> CONSTANTS .)
    COMMA           reduce using rule 267 (Expr -> CONSTANTS .)
    RPAREN          reduce using rule 267 (Expr -> CONSTANTS .)
    LBRACE          reduce using rule 267 (Expr -> CONSTANTS .)
    PIPE            reduce using rule 267 (Expr -> CONSTANTS .)
    RBRACK          reduce using rule 267 (Expr -> CONSTANTS .)
    RBRACE          reduce using rule 267 (Expr -> CONSTANTS .)
    DDD             reduce using rule 267 (Expr -> CONSTANTS .)
    COLON           reduce using rule 267 (Expr -> CONSTANTS .)
    RIGHT_RIGHT     reduce using rule 267 (Expr -> CONSTANTS .)
    RIGHT_ANGLE     reduce using rule 267 (Expr -> CONSTANTS .)


state 41

    (268) Expr -> Chexpr .

    PLUSEQ          reduce using rule 268 (Expr -> Chexpr .)
    MINUSEQ         reduce using rule 268 (Expr -> Chexpr .)
    TIMESEQ         reduce using rule 268 (Expr -> Chexpr .)
    DIVIDEEQ        reduce using rule 268 (Expr -> Chexpr .)
    MODEQ           reduce using rule 268 (Expr -> Chexpr .)
    OREQ            reduce using rule 268 (Expr -> Chexpr .)
    AMPEQ           reduce using rule 268 (Expr -> Chexpr .)
    CAREQ           reduce using rule 268 (Expr -> Chexpr .)
    SHL_ASSIGN      reduce using rule 268 (Expr -> Chexpr .)
    SHR_ASSIGN      reduce using rule 268 (Expr -> Chexpr .)
    AMPCAREQ        reduce using rule 268 (Expr -> Chexpr .)
    PLUSPLUS        reduce using rule 268 (Expr -> Chexpr .)
    MINUSMIN        reduce using rule 268 (Expr -> Chexpr .)
    OROR            reduce using rule 268 (Expr -> Chexpr .)
    SEMICOL         reduce using rule 268 (Expr -> Chexpr .)
    EQUAL           reduce using rule 268 (Expr -> Chexpr .)
    COLONEQ         reduce using rule 268 (Expr -> Chexpr .)
    COMMA           reduce using rule 268 (Expr -> Chexpr .)
    RPAREN          reduce using rule 268 (Expr -> Chexpr .)
    LBRACE          reduce using rule 268 (Expr -> Chexpr .)
    PIPE            reduce using rule 268 (Expr -> Chexpr .)
    RBRACK          reduce using rule 268 (Expr -> Chexpr .)
    RBRACE          reduce using rule 268 (Expr -> Chexpr .)
    DDD             reduce using rule 268 (Expr -> Chexpr .)
    COLON           reduce using rule 268 (Expr -> Chexpr .)
    RIGHT_RIGHT     reduce using rule 268 (Expr -> Chexpr .)
    RIGHT_ANGLE     reduce using rule 268 (Expr -> Chexpr .)


state 42

    (269) Expr -> Arrayexp .

    PLUSEQ          reduce using rule 269 (Expr -> Arrayexp .)
    MINUSEQ         reduce using rule 269 (Expr -> Arrayexp .)
    TIMESEQ         reduce using rule 269 (Expr -> Arrayexp .)
    DIVIDEEQ        reduce using rule 269 (Expr -> Arrayexp .)
    MODEQ           reduce using rule 269 (Expr -> Arrayexp .)
    OREQ            reduce using rule 269 (Expr -> Arrayexp .)
    AMPEQ           reduce using rule 269 (Expr -> Arrayexp .)
    CAREQ           reduce using rule 269 (Expr -> Arrayexp .)
    SHL_ASSIGN      reduce using rule 269 (Expr -> Arrayexp .)
    SHR_ASSIGN      reduce using rule 269 (Expr -> Arrayexp .)
    AMPCAREQ        reduce using rule 269 (Expr -> Arrayexp .)
    PLUSPLUS        reduce using rule 269 (Expr -> Arrayexp .)
    MINUSMIN        reduce using rule 269 (Expr -> Arrayexp .)
    OROR            reduce using rule 269 (Expr -> Arrayexp .)
    SEMICOL         reduce using rule 269 (Expr -> Arrayexp .)
    EQUAL           reduce using rule 269 (Expr -> Arrayexp .)
    COLONEQ         reduce using rule 269 (Expr -> Arrayexp .)
    COMMA           reduce using rule 269 (Expr -> Arrayexp .)
    RPAREN          reduce using rule 269 (Expr -> Arrayexp .)
    LBRACE          reduce using rule 269 (Expr -> Arrayexp .)
    PIPE            reduce using rule 269 (Expr -> Arrayexp .)
    RBRACK          reduce using rule 269 (Expr -> Arrayexp .)
    RBRACE          reduce using rule 269 (Expr -> Arrayexp .)
    DDD             reduce using rule 269 (Expr -> Arrayexp .)
    COLON           reduce using rule 269 (Expr -> Arrayexp .)
    RIGHT_RIGHT     reduce using rule 269 (Expr -> Arrayexp .)
    RIGHT_ANGLE     reduce using rule 269 (Expr -> Arrayexp .)


state 43

    (133) NewName -> IDENTIFIER .
    (189) Name -> IDENTIFIER .

    COLON           reduce using rule 133 (NewName -> IDENTIFIER .)
    DOT             reduce using rule 189 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 189 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 189 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 189 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 189 (Name -> IDENTIFIER .)
    MOD             reduce using rule 189 (Name -> IDENTIFIER .)
    SHL             reduce using rule 189 (Name -> IDENTIFIER .)
    SHR             reduce using rule 189 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 189 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 189 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 189 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 189 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 189 (Name -> IDENTIFIER .)
    XOR             reduce using rule 189 (Name -> IDENTIFIER .)
    OR              reduce using rule 189 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 189 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 189 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 189 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 189 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 189 (Name -> IDENTIFIER .)
    LESS            reduce using rule 189 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 189 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 189 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 189 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 189 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 189 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 189 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 189 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 189 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 189 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 189 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 189 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 189 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 189 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 189 (Name -> IDENTIFIER .)
    OROR            reduce using rule 189 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 189 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 189 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 189 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 189 (Name -> IDENTIFIER .)


state 44

    (263) Prec2Expr_ -> Prec3Expr_ .
    (257) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (258) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (260) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (261) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (262) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSEQ          reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSEQ         reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    TIMESEQ         reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    MODEQ           reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    OREQ            reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    AMPEQ           reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    CAREQ           reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    AMPCAREQ        reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSPLUS        reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSMIN        reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    OROR            reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    SEMICOL         reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    EQUAL           reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    COLONEQ         reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    COMMA           reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    RPAREN          reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    LBRACE          reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    PIPE            reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACK          reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACE          reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    DDD             reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    COLON           reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 263 (Prec2Expr_ -> Prec3Expr_ .)
    EQEQ            shift and go to state 148
    NOTEQ           shift and go to state 149
    LEQ             shift and go to state 150
    GEQ             shift and go to state 151
    GREAT           shift and go to state 152
    LESS            shift and go to state 153


state 45

    (270) Chexpr -> LMINUS . IDENTIFIER
    (100) ChannelType -> LMINUS . CHAN NewType

    IDENTIFIER      shift and go to state 154
    CHAN            shift and go to state 155


state 46

    (271) Arrayexp -> OtherType . LBRACE ExprList RBRACE
    (232) ConvType -> OtherType .
    (233) CompType -> OtherType .

    LBRACE          shift and go to state 156
    LEFT_ANGLE      reduce using rule 232 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 233 (CompType -> OtherType .)


state 47

    (256) Prec3Expr_ -> Prec4Expr_ .
    (252) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (253) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    NOTEQ           reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    LEQ             reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    GEQ             reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    GREAT           reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    LESS            reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    AMPAMP          reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSEQ          reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSEQ         reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    TIMESEQ         reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    MODEQ           reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    OREQ            reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    AMPEQ           reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    CAREQ           reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    AMPCAREQ        reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSPLUS        reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSMIN        reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    OROR            reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    SEMICOL         reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    EQUAL           reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    COLONEQ         reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    COMMA           reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    RPAREN          reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    LBRACE          reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    PIPE            reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACK          reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACE          reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    DDD             reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    COLON           reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 256 (Prec3Expr_ -> Prec4Expr_ .)
    PLUS            shift and go to state 157
    MINUS           shift and go to state 158
    XOR             shift and go to state 159
    OR              shift and go to state 160


state 48

    (94) OtherType -> LBRACK . OExpr RBRACK NType
    (279) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (152) OExpr -> .
    (153) OExpr -> . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 152 (OExpr -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    OExpr                          shift and go to state 161
    Expr                           shift and go to state 162
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 49

    (95) OtherType -> StructType .

    LBRACE          reduce using rule 95 (OtherType -> StructType .)
    LEFT_ANGLE      reduce using rule 95 (OtherType -> StructType .)
    LEFT_LEFT       reduce using rule 95 (OtherType -> StructType .)
    RPAREN          reduce using rule 95 (OtherType -> StructType .)
    DDD             reduce using rule 95 (OtherType -> StructType .)
    COMMA           reduce using rule 95 (OtherType -> StructType .)
    COLON           reduce using rule 95 (OtherType -> StructType .)
    EQUAL           reduce using rule 95 (OtherType -> StructType .)
    COLONEQ         reduce using rule 95 (OtherType -> StructType .)
    SEMICOL         reduce using rule 95 (OtherType -> StructType .)
    OR_RIGHT        reduce using rule 95 (OtherType -> StructType .)
    INTEGER         reduce using rule 95 (OtherType -> StructType .)
    FLOAT           reduce using rule 95 (OtherType -> StructType .)
    STRING          reduce using rule 95 (OtherType -> StructType .)
    RBRACE          reduce using rule 95 (OtherType -> StructType .)


state 50

    (96) OtherType -> InterfaceType .

    LBRACE          reduce using rule 96 (OtherType -> InterfaceType .)
    LEFT_ANGLE      reduce using rule 96 (OtherType -> InterfaceType .)
    LEFT_LEFT       reduce using rule 96 (OtherType -> InterfaceType .)
    RPAREN          reduce using rule 96 (OtherType -> InterfaceType .)
    DDD             reduce using rule 96 (OtherType -> InterfaceType .)
    COMMA           reduce using rule 96 (OtherType -> InterfaceType .)
    COLON           reduce using rule 96 (OtherType -> InterfaceType .)
    EQUAL           reduce using rule 96 (OtherType -> InterfaceType .)
    COLONEQ         reduce using rule 96 (OtherType -> InterfaceType .)
    SEMICOL         reduce using rule 96 (OtherType -> InterfaceType .)
    OR_RIGHT        reduce using rule 96 (OtherType -> InterfaceType .)
    INTEGER         reduce using rule 96 (OtherType -> InterfaceType .)
    FLOAT           reduce using rule 96 (OtherType -> InterfaceType .)
    STRING          reduce using rule 96 (OtherType -> InterfaceType .)
    RBRACE          reduce using rule 96 (OtherType -> InterfaceType .)


state 51

    (97) OtherType -> ChannelType .

    LBRACE          reduce using rule 97 (OtherType -> ChannelType .)
    LEFT_ANGLE      reduce using rule 97 (OtherType -> ChannelType .)
    LEFT_LEFT       reduce using rule 97 (OtherType -> ChannelType .)
    RPAREN          reduce using rule 97 (OtherType -> ChannelType .)
    DDD             reduce using rule 97 (OtherType -> ChannelType .)
    COMMA           reduce using rule 97 (OtherType -> ChannelType .)
    COLON           reduce using rule 97 (OtherType -> ChannelType .)
    EQUAL           reduce using rule 97 (OtherType -> ChannelType .)
    COLONEQ         reduce using rule 97 (OtherType -> ChannelType .)
    SEMICOL         reduce using rule 97 (OtherType -> ChannelType .)
    OR_RIGHT        reduce using rule 97 (OtherType -> ChannelType .)
    INTEGER         reduce using rule 97 (OtherType -> ChannelType .)
    FLOAT           reduce using rule 97 (OtherType -> ChannelType .)
    STRING          reduce using rule 97 (OtherType -> ChannelType .)
    RBRACE          reduce using rule 97 (OtherType -> ChannelType .)


state 52

    (251) Prec4Expr_ -> Prec5Expr_ .
    (244) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (245) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (247) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (248) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (249) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (250) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    MINUS           reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    XOR             reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    OR              reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    EQEQ            reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    NOTEQ           reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    LEQ             reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    GEQ             reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    GREAT           reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    LESS            reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    AMPAMP          reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSEQ          reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSEQ         reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    TIMESEQ         reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    MODEQ           reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    OREQ            reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    AMPEQ           reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    CAREQ           reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    AMPCAREQ        reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSPLUS        reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSMIN        reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    OROR            reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    SEMICOL         reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    EQUAL           reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    COLONEQ         reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    COMMA           reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    RPAREN          reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    LBRACE          reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    PIPE            reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACK          reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACE          reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    DDD             reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    COLON           reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 251 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDE          shift and go to state 163
    MOD             shift and go to state 164
    SHL             shift and go to state 165
    SHR             shift and go to state 166
    AMPERS          shift and go to state 167
    AMPCAR          shift and go to state 168
    TIMES           shift and go to state 169


state 53

    (276) UExpr -> PLUS . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 170
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 54

    (277) UExpr -> MINUS . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 174
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 55

    (278) UExpr -> XOR . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 175
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 56

    (101) StructType -> STRUCT . LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> STRUCT . LBRACE RBRACE

    LBRACE          shift and go to state 176


state 57

    (103) InterfaceType -> INTERFACE . LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> INTERFACE . LBRACE RBRACE

    LBRACE          shift and go to state 177


state 58

    (98) ChannelType -> CHAN . NewType
    (99) ChannelType -> CHAN . LMINUS NewType
    (230) NewType -> . TYPE

    LMINUS          shift and go to state 179
    TYPE            shift and go to state 33

    NewType                        shift and go to state 178

state 59

    (243) Prec5Expr_ -> UExpr .

    DIVIDE          reduce using rule 243 (Prec5Expr_ -> UExpr .)
    MOD             reduce using rule 243 (Prec5Expr_ -> UExpr .)
    SHL             reduce using rule 243 (Prec5Expr_ -> UExpr .)
    SHR             reduce using rule 243 (Prec5Expr_ -> UExpr .)
    AMPERS          reduce using rule 243 (Prec5Expr_ -> UExpr .)
    AMPCAR          reduce using rule 243 (Prec5Expr_ -> UExpr .)
    TIMES           reduce using rule 243 (Prec5Expr_ -> UExpr .)
    PLUS            reduce using rule 243 (Prec5Expr_ -> UExpr .)
    MINUS           reduce using rule 243 (Prec5Expr_ -> UExpr .)
    XOR             reduce using rule 243 (Prec5Expr_ -> UExpr .)
    OR              reduce using rule 243 (Prec5Expr_ -> UExpr .)
    EQEQ            reduce using rule 243 (Prec5Expr_ -> UExpr .)
    NOTEQ           reduce using rule 243 (Prec5Expr_ -> UExpr .)
    LEQ             reduce using rule 243 (Prec5Expr_ -> UExpr .)
    GEQ             reduce using rule 243 (Prec5Expr_ -> UExpr .)
    GREAT           reduce using rule 243 (Prec5Expr_ -> UExpr .)
    LESS            reduce using rule 243 (Prec5Expr_ -> UExpr .)
    AMPAMP          reduce using rule 243 (Prec5Expr_ -> UExpr .)
    PLUSEQ          reduce using rule 243 (Prec5Expr_ -> UExpr .)
    MINUSEQ         reduce using rule 243 (Prec5Expr_ -> UExpr .)
    TIMESEQ         reduce using rule 243 (Prec5Expr_ -> UExpr .)
    DIVIDEEQ        reduce using rule 243 (Prec5Expr_ -> UExpr .)
    MODEQ           reduce using rule 243 (Prec5Expr_ -> UExpr .)
    OREQ            reduce using rule 243 (Prec5Expr_ -> UExpr .)
    AMPEQ           reduce using rule 243 (Prec5Expr_ -> UExpr .)
    CAREQ           reduce using rule 243 (Prec5Expr_ -> UExpr .)
    SHL_ASSIGN      reduce using rule 243 (Prec5Expr_ -> UExpr .)
    SHR_ASSIGN      reduce using rule 243 (Prec5Expr_ -> UExpr .)
    AMPCAREQ        reduce using rule 243 (Prec5Expr_ -> UExpr .)
    PLUSPLUS        reduce using rule 243 (Prec5Expr_ -> UExpr .)
    MINUSMIN        reduce using rule 243 (Prec5Expr_ -> UExpr .)
    OROR            reduce using rule 243 (Prec5Expr_ -> UExpr .)
    SEMICOL         reduce using rule 243 (Prec5Expr_ -> UExpr .)
    EQUAL           reduce using rule 243 (Prec5Expr_ -> UExpr .)
    COLONEQ         reduce using rule 243 (Prec5Expr_ -> UExpr .)
    COMMA           reduce using rule 243 (Prec5Expr_ -> UExpr .)
    RPAREN          reduce using rule 243 (Prec5Expr_ -> UExpr .)
    LBRACE          reduce using rule 243 (Prec5Expr_ -> UExpr .)
    PIPE            reduce using rule 243 (Prec5Expr_ -> UExpr .)
    RBRACK          reduce using rule 243 (Prec5Expr_ -> UExpr .)
    RBRACE          reduce using rule 243 (Prec5Expr_ -> UExpr .)
    DDD             reduce using rule 243 (Prec5Expr_ -> UExpr .)
    COLON           reduce using rule 243 (Prec5Expr_ -> UExpr .)
    RIGHT_RIGHT     reduce using rule 243 (Prec5Expr_ -> UExpr .)
    RIGHT_ANGLE     reduce using rule 243 (Prec5Expr_ -> UExpr .)


state 60

    (273) UExpr -> AMPERS . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 180
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 61

    (275) UExpr -> TIMES . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 181
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 62

    (272) UExpr -> PExpr .
    (218) PExprNoParen -> PExpr . DOT IDENTIFIER
    (219) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> PExpr . DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (222) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (227) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (280) PseudoCall -> PExpr . LPAREN RPAREN
    (281) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN

    DIVIDE          reduce using rule 272 (UExpr -> PExpr .)
    MOD             reduce using rule 272 (UExpr -> PExpr .)
    SHL             reduce using rule 272 (UExpr -> PExpr .)
    SHR             reduce using rule 272 (UExpr -> PExpr .)
    AMPERS          reduce using rule 272 (UExpr -> PExpr .)
    AMPCAR          reduce using rule 272 (UExpr -> PExpr .)
    TIMES           reduce using rule 272 (UExpr -> PExpr .)
    PLUS            reduce using rule 272 (UExpr -> PExpr .)
    MINUS           reduce using rule 272 (UExpr -> PExpr .)
    XOR             reduce using rule 272 (UExpr -> PExpr .)
    OR              reduce using rule 272 (UExpr -> PExpr .)
    EQEQ            reduce using rule 272 (UExpr -> PExpr .)
    NOTEQ           reduce using rule 272 (UExpr -> PExpr .)
    LEQ             reduce using rule 272 (UExpr -> PExpr .)
    GEQ             reduce using rule 272 (UExpr -> PExpr .)
    GREAT           reduce using rule 272 (UExpr -> PExpr .)
    LESS            reduce using rule 272 (UExpr -> PExpr .)
    AMPAMP          reduce using rule 272 (UExpr -> PExpr .)
    PLUSEQ          reduce using rule 272 (UExpr -> PExpr .)
    MINUSEQ         reduce using rule 272 (UExpr -> PExpr .)
    TIMESEQ         reduce using rule 272 (UExpr -> PExpr .)
    DIVIDEEQ        reduce using rule 272 (UExpr -> PExpr .)
    MODEQ           reduce using rule 272 (UExpr -> PExpr .)
    OREQ            reduce using rule 272 (UExpr -> PExpr .)
    AMPEQ           reduce using rule 272 (UExpr -> PExpr .)
    CAREQ           reduce using rule 272 (UExpr -> PExpr .)
    SHL_ASSIGN      reduce using rule 272 (UExpr -> PExpr .)
    SHR_ASSIGN      reduce using rule 272 (UExpr -> PExpr .)
    AMPCAREQ        reduce using rule 272 (UExpr -> PExpr .)
    PLUSPLUS        reduce using rule 272 (UExpr -> PExpr .)
    MINUSMIN        reduce using rule 272 (UExpr -> PExpr .)
    OROR            reduce using rule 272 (UExpr -> PExpr .)
    SEMICOL         reduce using rule 272 (UExpr -> PExpr .)
    EQUAL           reduce using rule 272 (UExpr -> PExpr .)
    COLONEQ         reduce using rule 272 (UExpr -> PExpr .)
    COMMA           reduce using rule 272 (UExpr -> PExpr .)
    RPAREN          reduce using rule 272 (UExpr -> PExpr .)
    LBRACE          reduce using rule 272 (UExpr -> PExpr .)
    PIPE            reduce using rule 272 (UExpr -> PExpr .)
    RBRACK          reduce using rule 272 (UExpr -> PExpr .)
    DDD             reduce using rule 272 (UExpr -> PExpr .)
    COLON           reduce using rule 272 (UExpr -> PExpr .)
    RBRACE          reduce using rule 272 (UExpr -> PExpr .)
    RIGHT_RIGHT     reduce using rule 272 (UExpr -> PExpr .)
    RIGHT_ANGLE     reduce using rule 272 (UExpr -> PExpr .)
    DOT             shift and go to state 182
    LBRACK          shift and go to state 184
    LEFT_LEFT       shift and go to state 185
    LPAREN          shift and go to state 183


state 63

    (274) UExpr -> NOT . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 186
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 64

    (214) PExpr -> PExprNoParen .

    DOT             reduce using rule 214 (PExpr -> PExprNoParen .)
    LBRACK          reduce using rule 214 (PExpr -> PExprNoParen .)
    LEFT_LEFT       reduce using rule 214 (PExpr -> PExprNoParen .)
    LPAREN          reduce using rule 214 (PExpr -> PExprNoParen .)
    DIVIDE          reduce using rule 214 (PExpr -> PExprNoParen .)
    MOD             reduce using rule 214 (PExpr -> PExprNoParen .)
    SHL             reduce using rule 214 (PExpr -> PExprNoParen .)
    SHR             reduce using rule 214 (PExpr -> PExprNoParen .)
    AMPERS          reduce using rule 214 (PExpr -> PExprNoParen .)
    AMPCAR          reduce using rule 214 (PExpr -> PExprNoParen .)
    TIMES           reduce using rule 214 (PExpr -> PExprNoParen .)
    PLUS            reduce using rule 214 (PExpr -> PExprNoParen .)
    MINUS           reduce using rule 214 (PExpr -> PExprNoParen .)
    XOR             reduce using rule 214 (PExpr -> PExprNoParen .)
    OR              reduce using rule 214 (PExpr -> PExprNoParen .)
    EQEQ            reduce using rule 214 (PExpr -> PExprNoParen .)
    NOTEQ           reduce using rule 214 (PExpr -> PExprNoParen .)
    LEQ             reduce using rule 214 (PExpr -> PExprNoParen .)
    GEQ             reduce using rule 214 (PExpr -> PExprNoParen .)
    GREAT           reduce using rule 214 (PExpr -> PExprNoParen .)
    LESS            reduce using rule 214 (PExpr -> PExprNoParen .)
    AMPAMP          reduce using rule 214 (PExpr -> PExprNoParen .)
    PLUSEQ          reduce using rule 214 (PExpr -> PExprNoParen .)
    MINUSEQ         reduce using rule 214 (PExpr -> PExprNoParen .)
    TIMESEQ         reduce using rule 214 (PExpr -> PExprNoParen .)
    DIVIDEEQ        reduce using rule 214 (PExpr -> PExprNoParen .)
    MODEQ           reduce using rule 214 (PExpr -> PExprNoParen .)
    OREQ            reduce using rule 214 (PExpr -> PExprNoParen .)
    AMPEQ           reduce using rule 214 (PExpr -> PExprNoParen .)
    CAREQ           reduce using rule 214 (PExpr -> PExprNoParen .)
    SHL_ASSIGN      reduce using rule 214 (PExpr -> PExprNoParen .)
    SHR_ASSIGN      reduce using rule 214 (PExpr -> PExprNoParen .)
    AMPCAREQ        reduce using rule 214 (PExpr -> PExprNoParen .)
    PLUSPLUS        reduce using rule 214 (PExpr -> PExprNoParen .)
    MINUSMIN        reduce using rule 214 (PExpr -> PExprNoParen .)
    OROR            reduce using rule 214 (PExpr -> PExprNoParen .)
    SEMICOL         reduce using rule 214 (PExpr -> PExprNoParen .)
    EQUAL           reduce using rule 214 (PExpr -> PExprNoParen .)
    COLONEQ         reduce using rule 214 (PExpr -> PExprNoParen .)
    COMMA           reduce using rule 214 (PExpr -> PExprNoParen .)
    RPAREN          reduce using rule 214 (PExpr -> PExprNoParen .)
    LBRACE          reduce using rule 214 (PExpr -> PExprNoParen .)
    PIPE            reduce using rule 214 (PExpr -> PExprNoParen .)
    RBRACK          reduce using rule 214 (PExpr -> PExprNoParen .)
    DDD             reduce using rule 214 (PExpr -> PExprNoParen .)
    COLON           reduce using rule 214 (PExpr -> PExprNoParen .)
    RBRACE          reduce using rule 214 (PExpr -> PExprNoParen .)
    RIGHT_RIGHT     reduce using rule 214 (PExpr -> PExprNoParen .)
    RIGHT_ANGLE     reduce using rule 214 (PExpr -> PExprNoParen .)


state 65

    (216) PExprNoParen -> Literal .

    DOT             reduce using rule 216 (PExprNoParen -> Literal .)
    LBRACK          reduce using rule 216 (PExprNoParen -> Literal .)
    LEFT_LEFT       reduce using rule 216 (PExprNoParen -> Literal .)
    LPAREN          reduce using rule 216 (PExprNoParen -> Literal .)
    DIVIDE          reduce using rule 216 (PExprNoParen -> Literal .)
    MOD             reduce using rule 216 (PExprNoParen -> Literal .)
    SHL             reduce using rule 216 (PExprNoParen -> Literal .)
    SHR             reduce using rule 216 (PExprNoParen -> Literal .)
    AMPERS          reduce using rule 216 (PExprNoParen -> Literal .)
    AMPCAR          reduce using rule 216 (PExprNoParen -> Literal .)
    TIMES           reduce using rule 216 (PExprNoParen -> Literal .)
    PLUS            reduce using rule 216 (PExprNoParen -> Literal .)
    MINUS           reduce using rule 216 (PExprNoParen -> Literal .)
    XOR             reduce using rule 216 (PExprNoParen -> Literal .)
    OR              reduce using rule 216 (PExprNoParen -> Literal .)
    EQEQ            reduce using rule 216 (PExprNoParen -> Literal .)
    NOTEQ           reduce using rule 216 (PExprNoParen -> Literal .)
    LEQ             reduce using rule 216 (PExprNoParen -> Literal .)
    GEQ             reduce using rule 216 (PExprNoParen -> Literal .)
    GREAT           reduce using rule 216 (PExprNoParen -> Literal .)
    LESS            reduce using rule 216 (PExprNoParen -> Literal .)
    AMPAMP          reduce using rule 216 (PExprNoParen -> Literal .)
    PLUSEQ          reduce using rule 216 (PExprNoParen -> Literal .)
    MINUSEQ         reduce using rule 216 (PExprNoParen -> Literal .)
    TIMESEQ         reduce using rule 216 (PExprNoParen -> Literal .)
    DIVIDEEQ        reduce using rule 216 (PExprNoParen -> Literal .)
    MODEQ           reduce using rule 216 (PExprNoParen -> Literal .)
    OREQ            reduce using rule 216 (PExprNoParen -> Literal .)
    AMPEQ           reduce using rule 216 (PExprNoParen -> Literal .)
    CAREQ           reduce using rule 216 (PExprNoParen -> Literal .)
    SHL_ASSIGN      reduce using rule 216 (PExprNoParen -> Literal .)
    SHR_ASSIGN      reduce using rule 216 (PExprNoParen -> Literal .)
    AMPCAREQ        reduce using rule 216 (PExprNoParen -> Literal .)
    PLUSPLUS        reduce using rule 216 (PExprNoParen -> Literal .)
    MINUSMIN        reduce using rule 216 (PExprNoParen -> Literal .)
    OROR            reduce using rule 216 (PExprNoParen -> Literal .)
    SEMICOL         reduce using rule 216 (PExprNoParen -> Literal .)
    EQUAL           reduce using rule 216 (PExprNoParen -> Literal .)
    COLONEQ         reduce using rule 216 (PExprNoParen -> Literal .)
    COMMA           reduce using rule 216 (PExprNoParen -> Literal .)
    RPAREN          reduce using rule 216 (PExprNoParen -> Literal .)
    LBRACE          reduce using rule 216 (PExprNoParen -> Literal .)
    PIPE            reduce using rule 216 (PExprNoParen -> Literal .)
    RBRACK          reduce using rule 216 (PExprNoParen -> Literal .)
    DDD             reduce using rule 216 (PExprNoParen -> Literal .)
    COLON           reduce using rule 216 (PExprNoParen -> Literal .)
    RBRACE          reduce using rule 216 (PExprNoParen -> Literal .)
    RIGHT_RIGHT     reduce using rule 216 (PExprNoParen -> Literal .)
    RIGHT_ANGLE     reduce using rule 216 (PExprNoParen -> Literal .)


state 66

    (217) PExprNoParen -> Name .

    DOT             reduce using rule 217 (PExprNoParen -> Name .)
    LBRACK          reduce using rule 217 (PExprNoParen -> Name .)
    LEFT_LEFT       reduce using rule 217 (PExprNoParen -> Name .)
    LPAREN          reduce using rule 217 (PExprNoParen -> Name .)
    DIVIDE          reduce using rule 217 (PExprNoParen -> Name .)
    MOD             reduce using rule 217 (PExprNoParen -> Name .)
    SHL             reduce using rule 217 (PExprNoParen -> Name .)
    SHR             reduce using rule 217 (PExprNoParen -> Name .)
    AMPERS          reduce using rule 217 (PExprNoParen -> Name .)
    AMPCAR          reduce using rule 217 (PExprNoParen -> Name .)
    TIMES           reduce using rule 217 (PExprNoParen -> Name .)
    PLUS            reduce using rule 217 (PExprNoParen -> Name .)
    MINUS           reduce using rule 217 (PExprNoParen -> Name .)
    XOR             reduce using rule 217 (PExprNoParen -> Name .)
    OR              reduce using rule 217 (PExprNoParen -> Name .)
    EQEQ            reduce using rule 217 (PExprNoParen -> Name .)
    NOTEQ           reduce using rule 217 (PExprNoParen -> Name .)
    LEQ             reduce using rule 217 (PExprNoParen -> Name .)
    GEQ             reduce using rule 217 (PExprNoParen -> Name .)
    GREAT           reduce using rule 217 (PExprNoParen -> Name .)
    LESS            reduce using rule 217 (PExprNoParen -> Name .)
    AMPAMP          reduce using rule 217 (PExprNoParen -> Name .)
    PLUSEQ          reduce using rule 217 (PExprNoParen -> Name .)
    MINUSEQ         reduce using rule 217 (PExprNoParen -> Name .)
    TIMESEQ         reduce using rule 217 (PExprNoParen -> Name .)
    DIVIDEEQ        reduce using rule 217 (PExprNoParen -> Name .)
    MODEQ           reduce using rule 217 (PExprNoParen -> Name .)
    OREQ            reduce using rule 217 (PExprNoParen -> Name .)
    AMPEQ           reduce using rule 217 (PExprNoParen -> Name .)
    CAREQ           reduce using rule 217 (PExprNoParen -> Name .)
    SHL_ASSIGN      reduce using rule 217 (PExprNoParen -> Name .)
    SHR_ASSIGN      reduce using rule 217 (PExprNoParen -> Name .)
    AMPCAREQ        reduce using rule 217 (PExprNoParen -> Name .)
    PLUSPLUS        reduce using rule 217 (PExprNoParen -> Name .)
    MINUSMIN        reduce using rule 217 (PExprNoParen -> Name .)
    OROR            reduce using rule 217 (PExprNoParen -> Name .)
    SEMICOL         reduce using rule 217 (PExprNoParen -> Name .)
    EQUAL           reduce using rule 217 (PExprNoParen -> Name .)
    COLONEQ         reduce using rule 217 (PExprNoParen -> Name .)
    COMMA           reduce using rule 217 (PExprNoParen -> Name .)
    RPAREN          reduce using rule 217 (PExprNoParen -> Name .)
    LBRACE          reduce using rule 217 (PExprNoParen -> Name .)
    PIPE            reduce using rule 217 (PExprNoParen -> Name .)
    RBRACK          reduce using rule 217 (PExprNoParen -> Name .)
    DDD             reduce using rule 217 (PExprNoParen -> Name .)
    COLON           reduce using rule 217 (PExprNoParen -> Name .)
    RBRACE          reduce using rule 217 (PExprNoParen -> Name .)
    RIGHT_RIGHT     reduce using rule 217 (PExprNoParen -> Name .)
    RIGHT_ANGLE     reduce using rule 217 (PExprNoParen -> Name .)


state 67

    (224) PExprNoParen -> PseudoCall .

    DOT             reduce using rule 224 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 224 (PExprNoParen -> PseudoCall .)
    LPAREN          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    DIVIDE          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    MOD             reduce using rule 224 (PExprNoParen -> PseudoCall .)
    SHL             reduce using rule 224 (PExprNoParen -> PseudoCall .)
    SHR             reduce using rule 224 (PExprNoParen -> PseudoCall .)
    AMPERS          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    AMPCAR          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    TIMES           reduce using rule 224 (PExprNoParen -> PseudoCall .)
    PLUS            reduce using rule 224 (PExprNoParen -> PseudoCall .)
    MINUS           reduce using rule 224 (PExprNoParen -> PseudoCall .)
    XOR             reduce using rule 224 (PExprNoParen -> PseudoCall .)
    OR              reduce using rule 224 (PExprNoParen -> PseudoCall .)
    EQEQ            reduce using rule 224 (PExprNoParen -> PseudoCall .)
    NOTEQ           reduce using rule 224 (PExprNoParen -> PseudoCall .)
    LEQ             reduce using rule 224 (PExprNoParen -> PseudoCall .)
    GEQ             reduce using rule 224 (PExprNoParen -> PseudoCall .)
    GREAT           reduce using rule 224 (PExprNoParen -> PseudoCall .)
    LESS            reduce using rule 224 (PExprNoParen -> PseudoCall .)
    AMPAMP          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    PLUSEQ          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    MINUSEQ         reduce using rule 224 (PExprNoParen -> PseudoCall .)
    TIMESEQ         reduce using rule 224 (PExprNoParen -> PseudoCall .)
    DIVIDEEQ        reduce using rule 224 (PExprNoParen -> PseudoCall .)
    MODEQ           reduce using rule 224 (PExprNoParen -> PseudoCall .)
    OREQ            reduce using rule 224 (PExprNoParen -> PseudoCall .)
    AMPEQ           reduce using rule 224 (PExprNoParen -> PseudoCall .)
    CAREQ           reduce using rule 224 (PExprNoParen -> PseudoCall .)
    SHL_ASSIGN      reduce using rule 224 (PExprNoParen -> PseudoCall .)
    SHR_ASSIGN      reduce using rule 224 (PExprNoParen -> PseudoCall .)
    AMPCAREQ        reduce using rule 224 (PExprNoParen -> PseudoCall .)
    PLUSPLUS        reduce using rule 224 (PExprNoParen -> PseudoCall .)
    MINUSMIN        reduce using rule 224 (PExprNoParen -> PseudoCall .)
    OROR            reduce using rule 224 (PExprNoParen -> PseudoCall .)
    SEMICOL         reduce using rule 224 (PExprNoParen -> PseudoCall .)
    EQUAL           reduce using rule 224 (PExprNoParen -> PseudoCall .)
    COLONEQ         reduce using rule 224 (PExprNoParen -> PseudoCall .)
    COMMA           reduce using rule 224 (PExprNoParen -> PseudoCall .)
    RPAREN          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    LBRACE          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    PIPE            reduce using rule 224 (PExprNoParen -> PseudoCall .)
    RBRACK          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    DDD             reduce using rule 224 (PExprNoParen -> PseudoCall .)
    COLON           reduce using rule 224 (PExprNoParen -> PseudoCall .)
    RBRACE          reduce using rule 224 (PExprNoParen -> PseudoCall .)
    RIGHT_RIGHT     reduce using rule 224 (PExprNoParen -> PseudoCall .)
    RIGHT_ANGLE     reduce using rule 224 (PExprNoParen -> PseudoCall .)


state 68

    (225) PExprNoParen -> ConvType . LEFT_ANGLE Expr OComma RIGHT_ANGLE

    LEFT_ANGLE      shift and go to state 187


state 69

    (226) PExprNoParen -> CompType . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LEFT_LEFT       shift and go to state 188


state 70

    (228) PExprNoParen -> FuncLiteral .

    DOT             reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    LBRACK          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    LEFT_LEFT       reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    LPAREN          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    DIVIDE          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    MOD             reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    SHL             reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    SHR             reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    AMPERS          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    AMPCAR          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    TIMES           reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    PLUS            reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    MINUS           reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    XOR             reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    OR              reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    EQEQ            reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    NOTEQ           reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    LEQ             reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    GEQ             reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    GREAT           reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    LESS            reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    AMPAMP          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    PLUSEQ          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    MINUSEQ         reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    TIMESEQ         reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    DIVIDEEQ        reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    MODEQ           reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    OREQ            reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    AMPEQ           reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    CAREQ           reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    SHL_ASSIGN      reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    SHR_ASSIGN      reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    AMPCAREQ        reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    PLUSPLUS        reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    MINUSMIN        reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    OROR            reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    SEMICOL         reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    EQUAL           reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    COLONEQ         reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    COMMA           reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    RPAREN          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    LBRACE          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    PIPE            reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    RBRACK          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    DDD             reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    COLON           reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    RBRACE          reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    RIGHT_RIGHT     reduce using rule 228 (PExprNoParen -> FuncLiteral .)
    RIGHT_ANGLE     reduce using rule 228 (PExprNoParen -> FuncLiteral .)


state 71

    (229) PExprNoParen -> ForCompExpr .

    DOT             reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    LBRACK          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    LEFT_LEFT       reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    LPAREN          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    DIVIDE          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    MOD             reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    SHL             reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    SHR             reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    AMPERS          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    AMPCAR          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    TIMES           reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    PLUS            reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    MINUS           reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    XOR             reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    OR              reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    EQEQ            reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    NOTEQ           reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    LEQ             reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    GEQ             reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    GREAT           reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    LESS            reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    AMPAMP          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    PLUSEQ          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    MINUSEQ         reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    TIMESEQ         reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    DIVIDEEQ        reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    MODEQ           reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    OREQ            reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    AMPEQ           reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    CAREQ           reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    SHL_ASSIGN      reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    SHR_ASSIGN      reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    AMPCAREQ        reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    PLUSPLUS        reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    MINUSMIN        reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    OROR            reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    SEMICOL         reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    EQUAL           reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    COLONEQ         reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    COMMA           reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    RPAREN          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    LBRACE          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    PIPE            reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    RBRACK          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    DDD             reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    COLON           reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    RBRACE          reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    RIGHT_RIGHT     reduce using rule 229 (PExprNoParen -> ForCompExpr .)
    RIGHT_ANGLE     reduce using rule 229 (PExprNoParen -> ForCompExpr .)


state 72

    (164) Literal -> INTEGER .

    DOT             reduce using rule 164 (Literal -> INTEGER .)
    LBRACK          reduce using rule 164 (Literal -> INTEGER .)
    LEFT_LEFT       reduce using rule 164 (Literal -> INTEGER .)
    LPAREN          reduce using rule 164 (Literal -> INTEGER .)
    DIVIDE          reduce using rule 164 (Literal -> INTEGER .)
    MOD             reduce using rule 164 (Literal -> INTEGER .)
    SHL             reduce using rule 164 (Literal -> INTEGER .)
    SHR             reduce using rule 164 (Literal -> INTEGER .)
    AMPERS          reduce using rule 164 (Literal -> INTEGER .)
    AMPCAR          reduce using rule 164 (Literal -> INTEGER .)
    TIMES           reduce using rule 164 (Literal -> INTEGER .)
    PLUS            reduce using rule 164 (Literal -> INTEGER .)
    MINUS           reduce using rule 164 (Literal -> INTEGER .)
    XOR             reduce using rule 164 (Literal -> INTEGER .)
    OR              reduce using rule 164 (Literal -> INTEGER .)
    EQEQ            reduce using rule 164 (Literal -> INTEGER .)
    NOTEQ           reduce using rule 164 (Literal -> INTEGER .)
    LEQ             reduce using rule 164 (Literal -> INTEGER .)
    GEQ             reduce using rule 164 (Literal -> INTEGER .)
    GREAT           reduce using rule 164 (Literal -> INTEGER .)
    LESS            reduce using rule 164 (Literal -> INTEGER .)
    AMPAMP          reduce using rule 164 (Literal -> INTEGER .)
    PLUSEQ          reduce using rule 164 (Literal -> INTEGER .)
    MINUSEQ         reduce using rule 164 (Literal -> INTEGER .)
    TIMESEQ         reduce using rule 164 (Literal -> INTEGER .)
    DIVIDEEQ        reduce using rule 164 (Literal -> INTEGER .)
    MODEQ           reduce using rule 164 (Literal -> INTEGER .)
    OREQ            reduce using rule 164 (Literal -> INTEGER .)
    AMPEQ           reduce using rule 164 (Literal -> INTEGER .)
    CAREQ           reduce using rule 164 (Literal -> INTEGER .)
    SHL_ASSIGN      reduce using rule 164 (Literal -> INTEGER .)
    SHR_ASSIGN      reduce using rule 164 (Literal -> INTEGER .)
    AMPCAREQ        reduce using rule 164 (Literal -> INTEGER .)
    PLUSPLUS        reduce using rule 164 (Literal -> INTEGER .)
    MINUSMIN        reduce using rule 164 (Literal -> INTEGER .)
    OROR            reduce using rule 164 (Literal -> INTEGER .)
    SEMICOL         reduce using rule 164 (Literal -> INTEGER .)
    EQUAL           reduce using rule 164 (Literal -> INTEGER .)
    COLONEQ         reduce using rule 164 (Literal -> INTEGER .)
    COMMA           reduce using rule 164 (Literal -> INTEGER .)
    RPAREN          reduce using rule 164 (Literal -> INTEGER .)
    LBRACE          reduce using rule 164 (Literal -> INTEGER .)
    PIPE            reduce using rule 164 (Literal -> INTEGER .)
    RBRACK          reduce using rule 164 (Literal -> INTEGER .)
    DDD             reduce using rule 164 (Literal -> INTEGER .)
    COLON           reduce using rule 164 (Literal -> INTEGER .)
    RBRACE          reduce using rule 164 (Literal -> INTEGER .)
    RIGHT_RIGHT     reduce using rule 164 (Literal -> INTEGER .)
    RIGHT_ANGLE     reduce using rule 164 (Literal -> INTEGER .)


state 73

    (165) Literal -> FLOAT .

    DOT             reduce using rule 165 (Literal -> FLOAT .)
    LBRACK          reduce using rule 165 (Literal -> FLOAT .)
    LEFT_LEFT       reduce using rule 165 (Literal -> FLOAT .)
    LPAREN          reduce using rule 165 (Literal -> FLOAT .)
    DIVIDE          reduce using rule 165 (Literal -> FLOAT .)
    MOD             reduce using rule 165 (Literal -> FLOAT .)
    SHL             reduce using rule 165 (Literal -> FLOAT .)
    SHR             reduce using rule 165 (Literal -> FLOAT .)
    AMPERS          reduce using rule 165 (Literal -> FLOAT .)
    AMPCAR          reduce using rule 165 (Literal -> FLOAT .)
    TIMES           reduce using rule 165 (Literal -> FLOAT .)
    PLUS            reduce using rule 165 (Literal -> FLOAT .)
    MINUS           reduce using rule 165 (Literal -> FLOAT .)
    XOR             reduce using rule 165 (Literal -> FLOAT .)
    OR              reduce using rule 165 (Literal -> FLOAT .)
    EQEQ            reduce using rule 165 (Literal -> FLOAT .)
    NOTEQ           reduce using rule 165 (Literal -> FLOAT .)
    LEQ             reduce using rule 165 (Literal -> FLOAT .)
    GEQ             reduce using rule 165 (Literal -> FLOAT .)
    GREAT           reduce using rule 165 (Literal -> FLOAT .)
    LESS            reduce using rule 165 (Literal -> FLOAT .)
    AMPAMP          reduce using rule 165 (Literal -> FLOAT .)
    PLUSEQ          reduce using rule 165 (Literal -> FLOAT .)
    MINUSEQ         reduce using rule 165 (Literal -> FLOAT .)
    TIMESEQ         reduce using rule 165 (Literal -> FLOAT .)
    DIVIDEEQ        reduce using rule 165 (Literal -> FLOAT .)
    MODEQ           reduce using rule 165 (Literal -> FLOAT .)
    OREQ            reduce using rule 165 (Literal -> FLOAT .)
    AMPEQ           reduce using rule 165 (Literal -> FLOAT .)
    CAREQ           reduce using rule 165 (Literal -> FLOAT .)
    SHL_ASSIGN      reduce using rule 165 (Literal -> FLOAT .)
    SHR_ASSIGN      reduce using rule 165 (Literal -> FLOAT .)
    AMPCAREQ        reduce using rule 165 (Literal -> FLOAT .)
    PLUSPLUS        reduce using rule 165 (Literal -> FLOAT .)
    MINUSMIN        reduce using rule 165 (Literal -> FLOAT .)
    OROR            reduce using rule 165 (Literal -> FLOAT .)
    SEMICOL         reduce using rule 165 (Literal -> FLOAT .)
    EQUAL           reduce using rule 165 (Literal -> FLOAT .)
    COLONEQ         reduce using rule 165 (Literal -> FLOAT .)
    COMMA           reduce using rule 165 (Literal -> FLOAT .)
    RPAREN          reduce using rule 165 (Literal -> FLOAT .)
    LBRACE          reduce using rule 165 (Literal -> FLOAT .)
    PIPE            reduce using rule 165 (Literal -> FLOAT .)
    RBRACK          reduce using rule 165 (Literal -> FLOAT .)
    DDD             reduce using rule 165 (Literal -> FLOAT .)
    COLON           reduce using rule 165 (Literal -> FLOAT .)
    RBRACE          reduce using rule 165 (Literal -> FLOAT .)
    RIGHT_RIGHT     reduce using rule 165 (Literal -> FLOAT .)
    RIGHT_ANGLE     reduce using rule 165 (Literal -> FLOAT .)


state 74

    (166) Literal -> STRING .

    DOT             reduce using rule 166 (Literal -> STRING .)
    LBRACK          reduce using rule 166 (Literal -> STRING .)
    LEFT_LEFT       reduce using rule 166 (Literal -> STRING .)
    LPAREN          reduce using rule 166 (Literal -> STRING .)
    DIVIDE          reduce using rule 166 (Literal -> STRING .)
    MOD             reduce using rule 166 (Literal -> STRING .)
    SHL             reduce using rule 166 (Literal -> STRING .)
    SHR             reduce using rule 166 (Literal -> STRING .)
    AMPERS          reduce using rule 166 (Literal -> STRING .)
    AMPCAR          reduce using rule 166 (Literal -> STRING .)
    TIMES           reduce using rule 166 (Literal -> STRING .)
    PLUS            reduce using rule 166 (Literal -> STRING .)
    MINUS           reduce using rule 166 (Literal -> STRING .)
    XOR             reduce using rule 166 (Literal -> STRING .)
    OR              reduce using rule 166 (Literal -> STRING .)
    EQEQ            reduce using rule 166 (Literal -> STRING .)
    NOTEQ           reduce using rule 166 (Literal -> STRING .)
    LEQ             reduce using rule 166 (Literal -> STRING .)
    GEQ             reduce using rule 166 (Literal -> STRING .)
    GREAT           reduce using rule 166 (Literal -> STRING .)
    LESS            reduce using rule 166 (Literal -> STRING .)
    AMPAMP          reduce using rule 166 (Literal -> STRING .)
    PLUSEQ          reduce using rule 166 (Literal -> STRING .)
    MINUSEQ         reduce using rule 166 (Literal -> STRING .)
    TIMESEQ         reduce using rule 166 (Literal -> STRING .)
    DIVIDEEQ        reduce using rule 166 (Literal -> STRING .)
    MODEQ           reduce using rule 166 (Literal -> STRING .)
    OREQ            reduce using rule 166 (Literal -> STRING .)
    AMPEQ           reduce using rule 166 (Literal -> STRING .)
    CAREQ           reduce using rule 166 (Literal -> STRING .)
    SHL_ASSIGN      reduce using rule 166 (Literal -> STRING .)
    SHR_ASSIGN      reduce using rule 166 (Literal -> STRING .)
    AMPCAREQ        reduce using rule 166 (Literal -> STRING .)
    PLUSPLUS        reduce using rule 166 (Literal -> STRING .)
    MINUSMIN        reduce using rule 166 (Literal -> STRING .)
    OROR            reduce using rule 166 (Literal -> STRING .)
    SEMICOL         reduce using rule 166 (Literal -> STRING .)
    EQUAL           reduce using rule 166 (Literal -> STRING .)
    COLONEQ         reduce using rule 166 (Literal -> STRING .)
    COMMA           reduce using rule 166 (Literal -> STRING .)
    RPAREN          reduce using rule 166 (Literal -> STRING .)
    LBRACE          reduce using rule 166 (Literal -> STRING .)
    PIPE            reduce using rule 166 (Literal -> STRING .)
    RBRACK          reduce using rule 166 (Literal -> STRING .)
    DDD             reduce using rule 166 (Literal -> STRING .)
    COLON           reduce using rule 166 (Literal -> STRING .)
    RBRACE          reduce using rule 166 (Literal -> STRING .)
    RIGHT_RIGHT     reduce using rule 166 (Literal -> STRING .)
    RIGHT_ANGLE     reduce using rule 166 (Literal -> STRING .)


state 75

    (231) ConvType -> FuncType .
    (156) FuncLiteralDecl -> FuncType .

    LEFT_ANGLE      reduce using rule 231 (ConvType -> FuncType .)
    LBRACE          reduce using rule 156 (FuncLiteralDecl -> FuncType .)


state 76

    (157) FuncLiteral -> FuncLiteralDecl . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 189


state 77

    (6) PackageClause -> PACKAGE IDENTIFIER SEMICOL .

    COMMENT         reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IMPORT          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANT        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    VAR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FUNCTION        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FALLTHROUGH     reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    BREAK           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONTINUE        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    GOTO            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    RETURN          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TYPE            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FOR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    SWITCH          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IF              reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANTS       reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IDENTIFIER      reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LMINUS          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LBRACK          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRUCT          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTERFACE       reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CHAN            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    AMPERS          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    NOT             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TIMES           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    PLUS            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MINUS           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    XOR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LPAREN          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTEGER         reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FLOAT           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRING          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    $end            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)


state 78

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist . DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist .
    (8) Imports -> Imports cmtlist . Import SEMICOL
    (284) cmtlist -> cmtlist . COMMENT
    (168) DeclList -> . Declaration SEMICOL
    (169) DeclList -> . DeclList cmtlist Declaration SEMICOL
    (9) Import -> . IMPORT ImportStmt
    (10) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> . IMPORT LPAREN RPAREN
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (105) FuncDecl -> . FUNCTION funcmarker FuncDecl_ FuncBody
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 4 (SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist .)
    COMMENT         shift and go to state 5
    IMPORT          shift and go to state 13
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FUNCTION        shift and go to state 21
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74

    DeclList                       shift and go to state 190
    Import                         shift and go to state 191
    Declaration                    shift and go to state 12
    CommonDecl                     shift and go to state 15
    FuncDecl                       shift and go to state 16
    NonDeclStmt                    shift and go to state 17
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 79

    (3) SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist .
    (169) DeclList -> DeclList cmtlist . Declaration SEMICOL
    (284) cmtlist -> cmtlist . COMMENT
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (105) FuncDecl -> . FUNCTION funcmarker FuncDecl_ FuncBody
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 3 (SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist .)
    COMMENT         shift and go to state 5
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FUNCTION        shift and go to state 21
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74

    Declaration                    shift and go to state 192
    CommonDecl                     shift and go to state 15
    FuncDecl                       shift and go to state 16
    NonDeclStmt                    shift and go to state 17
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 80

    (7) Imports -> Import SEMICOL .

    COMMENT         reduce using rule 7 (Imports -> Import SEMICOL .)
    IMPORT          reduce using rule 7 (Imports -> Import SEMICOL .)
    CONSTANT        reduce using rule 7 (Imports -> Import SEMICOL .)
    VAR             reduce using rule 7 (Imports -> Import SEMICOL .)
    FUNCTION        reduce using rule 7 (Imports -> Import SEMICOL .)
    FALLTHROUGH     reduce using rule 7 (Imports -> Import SEMICOL .)
    BREAK           reduce using rule 7 (Imports -> Import SEMICOL .)
    CONTINUE        reduce using rule 7 (Imports -> Import SEMICOL .)
    GOTO            reduce using rule 7 (Imports -> Import SEMICOL .)
    RETURN          reduce using rule 7 (Imports -> Import SEMICOL .)
    TYPE            reduce using rule 7 (Imports -> Import SEMICOL .)
    FOR             reduce using rule 7 (Imports -> Import SEMICOL .)
    SWITCH          reduce using rule 7 (Imports -> Import SEMICOL .)
    IF              reduce using rule 7 (Imports -> Import SEMICOL .)
    CONSTANTS       reduce using rule 7 (Imports -> Import SEMICOL .)
    IDENTIFIER      reduce using rule 7 (Imports -> Import SEMICOL .)
    LMINUS          reduce using rule 7 (Imports -> Import SEMICOL .)
    LBRACK          reduce using rule 7 (Imports -> Import SEMICOL .)
    STRUCT          reduce using rule 7 (Imports -> Import SEMICOL .)
    INTERFACE       reduce using rule 7 (Imports -> Import SEMICOL .)
    CHAN            reduce using rule 7 (Imports -> Import SEMICOL .)
    AMPERS          reduce using rule 7 (Imports -> Import SEMICOL .)
    NOT             reduce using rule 7 (Imports -> Import SEMICOL .)
    TIMES           reduce using rule 7 (Imports -> Import SEMICOL .)
    PLUS            reduce using rule 7 (Imports -> Import SEMICOL .)
    MINUS           reduce using rule 7 (Imports -> Import SEMICOL .)
    XOR             reduce using rule 7 (Imports -> Import SEMICOL .)
    LPAREN          reduce using rule 7 (Imports -> Import SEMICOL .)
    INTEGER         reduce using rule 7 (Imports -> Import SEMICOL .)
    FLOAT           reduce using rule 7 (Imports -> Import SEMICOL .)
    STRING          reduce using rule 7 (Imports -> Import SEMICOL .)
    $end            reduce using rule 7 (Imports -> Import SEMICOL .)


state 81

    (168) DeclList -> Declaration SEMICOL .

    COMMENT         reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    CONSTANT        reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    VAR             reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    FUNCTION        reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    BREAK           reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    CONTINUE        reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    GOTO            reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    RETURN          reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    TYPE            reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    FOR             reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    SWITCH          reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    IF              reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    CONSTANTS       reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    LMINUS          reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    LBRACK          reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    STRUCT          reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    INTERFACE       reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    CHAN            reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    AMPERS          reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    NOT             reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    TIMES           reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    PLUS            reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    MINUS           reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    XOR             reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    LPAREN          reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    INTEGER         reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    FLOAT           reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    STRING          reduce using rule 168 (DeclList -> Declaration SEMICOL .)
    $end            reduce using rule 168 (DeclList -> Declaration SEMICOL .)


state 82

    (9) Import -> IMPORT ImportStmt .

    SEMICOL         reduce using rule 9 (Import -> IMPORT ImportStmt .)


state 83

    (10) Import -> IMPORT LPAREN . ImportStmtList OSemi RPAREN
    (11) Import -> IMPORT LPAREN . RPAREN
    (13) ImportStmtList -> . ImportStmt
    (14) ImportStmtList -> . ImportStmtList SEMICOL ImportStmt
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    RPAREN          shift and go to state 194
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 85
    DOT             shift and go to state 86

    ImportStmtList                 shift and go to state 193
    ImportStmt                     shift and go to state 195
    ImportHere                     shift and go to state 84

state 84

    (12) ImportStmt -> ImportHere . STRING

    STRING          shift and go to state 196


state 85

    (16) ImportHere -> IDENTIFIER .

    STRING          reduce using rule 16 (ImportHere -> IDENTIFIER .)


state 86

    (17) ImportHere -> DOT .

    STRING          reduce using rule 17 (ImportHere -> DOT .)


state 87

    (215) PExpr -> LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 197


state 88

    (239) ExprOrType -> Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    RPAREN          reduce using rule 239 (ExprOrType -> Expr .)
    DDD             reduce using rule 239 (ExprOrType -> Expr .)
    COMMA           reduce using rule 239 (ExprOrType -> Expr .)
    COLON           reduce using rule 239 (ExprOrType -> Expr .)
    EQUAL           reduce using rule 239 (ExprOrType -> Expr .)
    COLONEQ         reduce using rule 239 (ExprOrType -> Expr .)
    OROR            shift and go to state 132


state 89

    (240) ExprOrType -> NonExprType .

    RPAREN          reduce using rule 240 (ExprOrType -> NonExprType .)
    DDD             reduce using rule 240 (ExprOrType -> NonExprType .)
    COMMA           reduce using rule 240 (ExprOrType -> NonExprType .)
    COLON           reduce using rule 240 (ExprOrType -> NonExprType .)
    EQUAL           reduce using rule 240 (ExprOrType -> NonExprType .)
    COLONEQ         reduce using rule 240 (ExprOrType -> NonExprType .)


state 90

    (91) NonExprType -> FuncType .
    (231) ConvType -> FuncType .
    (156) FuncLiteralDecl -> FuncType .

    RPAREN          reduce using rule 91 (NonExprType -> FuncType .)
    DDD             reduce using rule 91 (NonExprType -> FuncType .)
    COMMA           reduce using rule 91 (NonExprType -> FuncType .)
    COLON           reduce using rule 91 (NonExprType -> FuncType .)
    EQUAL           reduce using rule 91 (NonExprType -> FuncType .)
    COLONEQ         reduce using rule 91 (NonExprType -> FuncType .)
    LEFT_ANGLE      reduce using rule 231 (ConvType -> FuncType .)
    LBRACE          reduce using rule 156 (FuncLiteralDecl -> FuncType .)


state 91

    (92) NonExprType -> OtherType .
    (271) Arrayexp -> OtherType . LBRACE ExprList RBRACE
    (232) ConvType -> OtherType .
    (233) CompType -> OtherType .

    RPAREN          reduce using rule 92 (NonExprType -> OtherType .)
    DDD             reduce using rule 92 (NonExprType -> OtherType .)
    COMMA           reduce using rule 92 (NonExprType -> OtherType .)
    COLON           reduce using rule 92 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 92 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 92 (NonExprType -> OtherType .)
    LBRACE          shift and go to state 156
    LEFT_ANGLE      reduce using rule 232 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 233 (CompType -> OtherType .)


state 92

    (93) NonExprType -> TIMES . NonExprType
    (275) UExpr -> TIMES . UExpr
    (91) NonExprType -> . FuncType
    (92) NonExprType -> . OtherType
    (93) NonExprType -> . TIMES NonExprType
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (156) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 92
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 48
    LPAREN          shift and go to state 14
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93

    NonExprType                    shift and go to state 198
    UExpr                          shift and go to state 181
    FuncType                       shift and go to state 90
    OtherType                      shift and go to state 199
    PExpr                          shift and go to state 62
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncLiteralDecl                shift and go to state 76

state 93

    (189) Name -> IDENTIFIER .

    DOT             reduce using rule 189 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 189 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 189 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 189 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 189 (Name -> IDENTIFIER .)
    MOD             reduce using rule 189 (Name -> IDENTIFIER .)
    SHL             reduce using rule 189 (Name -> IDENTIFIER .)
    SHR             reduce using rule 189 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 189 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 189 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 189 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 189 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 189 (Name -> IDENTIFIER .)
    XOR             reduce using rule 189 (Name -> IDENTIFIER .)
    OR              reduce using rule 189 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 189 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 189 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 189 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 189 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 189 (Name -> IDENTIFIER .)
    LESS            reduce using rule 189 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 189 (Name -> IDENTIFIER .)
    OROR            reduce using rule 189 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 189 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 189 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 189 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 189 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 189 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 189 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 189 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 189 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 189 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 189 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 189 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 189 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 189 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 189 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 189 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 189 (Name -> IDENTIFIER .)
    LBRACE          reduce using rule 189 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 189 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 189 (Name -> IDENTIFIER .)
    PIPE            reduce using rule 189 (Name -> IDENTIFIER .)
    RBRACK          reduce using rule 189 (Name -> IDENTIFIER .)
    DDD             reduce using rule 189 (Name -> IDENTIFIER .)
    COLON           reduce using rule 189 (Name -> IDENTIFIER .)
    RBRACE          reduce using rule 189 (Name -> IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 189 (Name -> IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 189 (Name -> IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 189 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 189 (Name -> IDENTIFIER .)
    INTEGER         reduce using rule 189 (Name -> IDENTIFIER .)
    FLOAT           reduce using rule 189 (Name -> IDENTIFIER .)
    STRING          reduce using rule 189 (Name -> IDENTIFIER .)


state 94

    (109) FuncType -> FUNCTION . ArgList FuncRes
    (110) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (111) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 109

    ArgList                        shift and go to state 108

state 95

    (21) CommonDecl -> CONSTANT ConstDecl .

    SEMICOL         reduce using rule 21 (CommonDecl -> CONSTANT ConstDecl .)


state 96

    (22) CommonDecl -> CONSTANT LPAREN . ConstDecl OSemi RPAREN
    (23) CommonDecl -> CONSTANT LPAREN . ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> CONSTANT LPAREN . RPAREN
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (176) DeclNameList -> . DeclName
    (177) DeclNameList -> . DeclNameList COMMA DeclName
    (188) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 201
    IDENTIFIER      shift and go to state 99

    ConstDecl                      shift and go to state 200
    DeclNameList                   shift and go to state 97
    DeclName                       shift and go to state 98

state 97

    (34) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (35) ConstDecl -> DeclNameList . NType
    (36) ConstDecl -> DeclNameList . EQUAL ExprList
    (177) DeclNameList -> DeclNameList . COMMA DeclName
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    EQUAL           shift and go to state 203
    COMMA           shift and go to state 204
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93

    NType                          shift and go to state 202
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 98

    (176) DeclNameList -> DeclName .

    EQUAL           reduce using rule 176 (DeclNameList -> DeclName .)
    COMMA           reduce using rule 176 (DeclNameList -> DeclName .)
    LPAREN          reduce using rule 176 (DeclNameList -> DeclName .)
    FUNCTION        reduce using rule 176 (DeclNameList -> DeclName .)
    LBRACK          reduce using rule 176 (DeclNameList -> DeclName .)
    TIMES           reduce using rule 176 (DeclNameList -> DeclName .)
    TYPE            reduce using rule 176 (DeclNameList -> DeclName .)
    STRUCT          reduce using rule 176 (DeclNameList -> DeclName .)
    INTERFACE       reduce using rule 176 (DeclNameList -> DeclName .)
    CHAN            reduce using rule 176 (DeclNameList -> DeclName .)
    LMINUS          reduce using rule 176 (DeclNameList -> DeclName .)
    IDENTIFIER      reduce using rule 176 (DeclNameList -> DeclName .)
    SEMICOL         reduce using rule 176 (DeclNameList -> DeclName .)
    RPAREN          reduce using rule 176 (DeclNameList -> DeclName .)


state 99

    (188) DeclName -> IDENTIFIER .

    EQUAL           reduce using rule 188 (DeclName -> IDENTIFIER .)
    COMMA           reduce using rule 188 (DeclName -> IDENTIFIER .)
    LPAREN          reduce using rule 188 (DeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 188 (DeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 188 (DeclName -> IDENTIFIER .)
    TIMES           reduce using rule 188 (DeclName -> IDENTIFIER .)
    TYPE            reduce using rule 188 (DeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 188 (DeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 188 (DeclName -> IDENTIFIER .)
    CHAN            reduce using rule 188 (DeclName -> IDENTIFIER .)
    LMINUS          reduce using rule 188 (DeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 188 (DeclName -> IDENTIFIER .)
    SEMICOL         reduce using rule 188 (DeclName -> IDENTIFIER .)
    RPAREN          reduce using rule 188 (DeclName -> IDENTIFIER .)


state 100

    (25) CommonDecl -> VAR VarDecl .

    SEMICOL         reduce using rule 25 (CommonDecl -> VAR VarDecl .)


state 101

    (26) CommonDecl -> VAR LPAREN . VarDeclList OSemi RPAREN
    (27) CommonDecl -> VAR LPAREN . RPAREN
    (170) VarDeclList -> . VarDecl
    (171) VarDeclList -> . VarDeclList SEMICOL VarDecl
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (176) DeclNameList -> . DeclName
    (177) DeclNameList -> . DeclNameList COMMA DeclName
    (188) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 215
    IDENTIFIER      shift and go to state 99

    VarDeclList                    shift and go to state 214
    VarDecl                        shift and go to state 216
    DeclNameList                   shift and go to state 102
    DeclName                       shift and go to state 98

state 102

    (31) VarDecl -> DeclNameList . NType
    (32) VarDecl -> DeclNameList . NType EQUAL ExprList
    (33) VarDecl -> DeclNameList . EQUAL ExprList
    (177) DeclNameList -> DeclNameList . COMMA DeclName
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    EQUAL           shift and go to state 218
    COMMA           shift and go to state 204
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93

    NType                          shift and go to state 217
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 103

    (28) CommonDecl -> NewType TypeDecl .

    SEMICOL         reduce using rule 28 (CommonDecl -> NewType TypeDecl .)


state 104

    (29) CommonDecl -> NewType LPAREN . TypeDeclList OSemi RPAREN
    (30) CommonDecl -> NewType LPAREN . RPAREN
    (174) TypeDeclList -> . TypeDecl
    (175) TypeDeclList -> . TypeDeclList SEMICOL TypeDecl
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    RPAREN          shift and go to state 220
    IDENTIFIER      shift and go to state 106

    TypeDeclList                   shift and go to state 219
    TypeDecl                       shift and go to state 221
    TypeDeclName                   shift and go to state 105

state 105

    (40) TypeDecl -> TypeDeclName . NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93

    NType                          shift and go to state 222
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 106

    (39) TypeDeclName -> IDENTIFIER .

    LPAREN          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    TIMES           reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    TYPE            reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    CHAN            reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    LMINUS          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 39 (TypeDeclName -> IDENTIFIER .)


state 107

    (105) FuncDecl -> FUNCTION funcmarker . FuncDecl_ FuncBody
    (107) FuncDecl_ -> . IDENTIFIER ArgList FuncRes
    (108) FuncDecl_ -> . LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 224
    LEFT_OR         shift and go to state 225

    FuncDecl_                      shift and go to state 223

state 108

    (109) FuncType -> FUNCTION ArgList . FuncRes
    (111) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (115) FuncRes -> .
    (116) FuncRes -> . FuncRetType
    (117) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (135) FuncRetType -> . FuncType
    (136) FuncRetType -> . OtherType
    (137) FuncRetType -> . PtrType
    (138) FuncRetType -> . DotName
    (139) FuncRetType -> . myType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (140) myType -> . NewType
    (141) myType -> . myType COMMA NewType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER
    (230) NewType -> . TYPE

    LPAREN          shift and go to state 227
    LEFT_ANGLE      reduce using rule 115 (FuncRes -> .)
    LBRACE          reduce using rule 115 (FuncRes -> .)
    RPAREN          reduce using rule 115 (FuncRes -> .)
    DDD             reduce using rule 115 (FuncRes -> .)
    COMMA           reduce using rule 115 (FuncRes -> .)
    COLON           reduce using rule 115 (FuncRes -> .)
    EQUAL           reduce using rule 115 (FuncRes -> .)
    COLONEQ         reduce using rule 115 (FuncRes -> .)
    SEMICOL         reduce using rule 115 (FuncRes -> .)
    OR_RIGHT        reduce using rule 115 (FuncRes -> .)
    LEFT_LEFT       reduce using rule 115 (FuncRes -> .)
    INTEGER         reduce using rule 115 (FuncRes -> .)
    FLOAT           reduce using rule 115 (FuncRes -> .)
    STRING          reduce using rule 115 (FuncRes -> .)
    RBRACE          reduce using rule 115 (FuncRes -> .)
    LEFT_OR         shift and go to state 229
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93
    TYPE            shift and go to state 33

    FuncRes                        shift and go to state 226
    FuncRetType                    shift and go to state 228
    FuncType                       shift and go to state 230
    OtherType                      shift and go to state 231
    PtrType                        shift and go to state 232
    DotName                        shift and go to state 233
    myType                         shift and go to state 234
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213
    NewType                        shift and go to state 235

state 109

    (110) ArgList -> LPAREN . OArgTypeListOComma RPAREN
    (196) OArgTypeListOComma -> .
    (197) OArgTypeListOComma -> . ArgTypeList OComma
    (194) ArgTypeList -> . ArgType
    (195) ArgTypeList -> . ArgTypeList COMMA ArgType
    (190) ArgType -> . NameOrType
    (191) ArgType -> . IDENTIFIER NameOrType
    (192) ArgType -> . IDENTIFIER DotDotDot
    (193) ArgType -> . DotDotDot
    (241) NameOrType -> . NType
    (212) DotDotDot -> . DDD
    (213) DotDotDot -> . DDD NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    RPAREN          reduce using rule 196 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 240
    DDD             shift and go to state 243
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    OArgTypeListOComma             shift and go to state 236
    ArgTypeList                    shift and go to state 237
    ArgType                        shift and go to state 238
    NameOrType                     shift and go to state 239
    DotDotDot                      shift and go to state 241
    NType                          shift and go to state 242
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 110

    (206) NonDeclStmt -> LabelName COLON . Stmt
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    LabelName                      shift and go to state 26
    Stmt                           shift and go to state 244
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 111

    (208) NonDeclStmt -> BREAK ONewName .

    SEMICOL         reduce using rule 208 (NonDeclStmt -> BREAK ONewName .)


state 112

    (151) ONewName -> NewName .

    SEMICOL         reduce using rule 151 (ONewName -> NewName .)


state 113

    (133) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 133 (NewName -> IDENTIFIER .)
    COMMA           reduce using rule 133 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 133 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 133 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 133 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 133 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 133 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 133 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 133 (NewName -> IDENTIFIER .)
    CHAN            reduce using rule 133 (NewName -> IDENTIFIER .)
    LMINUS          reduce using rule 133 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 133 (NewName -> IDENTIFIER .)


state 114

    (209) NonDeclStmt -> CONTINUE ONewName .

    SEMICOL         reduce using rule 209 (NonDeclStmt -> CONTINUE ONewName .)


state 115

    (210) NonDeclStmt -> GOTO NewName .

    SEMICOL         reduce using rule 210 (NonDeclStmt -> GOTO NewName .)


state 116

    (211) NonDeclStmt -> RETURN OExprList .

    SEMICOL         reduce using rule 211 (NonDeclStmt -> RETURN OExprList .)


state 117

    (155) OExprList -> ExprList .
    (159) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 155 (OExprList -> ExprList .)
    COMMA           shift and go to state 135


state 118

    (158) ExprList -> Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 158 (ExprList -> Expr .)
    SEMICOL         reduce using rule 158 (ExprList -> Expr .)
    LBRACE          reduce using rule 158 (ExprList -> Expr .)
    RBRACE          reduce using rule 158 (ExprList -> Expr .)
    RPAREN          reduce using rule 158 (ExprList -> Expr .)
    EQUAL           reduce using rule 158 (ExprList -> Expr .)
    COLONEQ         reduce using rule 158 (ExprList -> Expr .)
    OROR            shift and go to state 132


state 119

    (42) SimpleStmt -> Expr PLUSEQ . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 249
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 120

    (43) SimpleStmt -> Expr MINUSEQ . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 250
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 121

    (44) SimpleStmt -> Expr TIMESEQ . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 251
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 122

    (45) SimpleStmt -> Expr DIVIDEEQ . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 252
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 123

    (46) SimpleStmt -> Expr MODEQ . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 253
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 124

    (47) SimpleStmt -> Expr OREQ . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 254
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 125

    (48) SimpleStmt -> Expr AMPEQ . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 255
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 126

    (49) SimpleStmt -> Expr CAREQ . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 256
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 127

    (50) SimpleStmt -> Expr SHL_ASSIGN . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 257
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 128

    (51) SimpleStmt -> Expr SHR_ASSIGN . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 258
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 129

    (52) SimpleStmt -> Expr AMPCAREQ . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 259
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 130

    (55) SimpleStmt -> Expr PLUSPLUS .

    SEMICOL         reduce using rule 55 (SimpleStmt -> Expr PLUSPLUS .)
    LBRACE          reduce using rule 55 (SimpleStmt -> Expr PLUSPLUS .)


state 131

    (56) SimpleStmt -> Expr MINUSMIN .

    SEMICOL         reduce using rule 56 (SimpleStmt -> Expr MINUSMIN .)
    LBRACE          reduce using rule 56 (SimpleStmt -> Expr MINUSMIN .)


state 132

    (266) Expr -> Expr OROR . Prec2Expr_
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec2Expr_                     shift and go to state 260
    Prec3Expr_                     shift and go to state 44
    Prec4Expr_                     shift and go to state 47
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 133

    (53) SimpleStmt -> ExprList EQUAL . ExprList
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    ExprList                       shift and go to state 261
    Expr                           shift and go to state 118
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 134

    (54) SimpleStmt -> ExprList COLONEQ . ExprList
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    ExprList                       shift and go to state 262
    Expr                           shift and go to state 118
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 135

    (159) ExprList -> ExprList COMMA . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 263
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 136

    (75) ForStmt -> FOR ForBody .

    SEMICOL         reduce using rule 75 (ForStmt -> FOR ForBody .)


state 137

    (74) ForBody -> ForHeader . formarker LoopBody revmarker
    (76) formarker -> .

    LBRACE          reduce using rule 76 (formarker -> .)

    formarker                      shift and go to state 264

state 138

    (71) ForHeader -> OSimpleStmt . SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (72) ForHeader -> OSimpleStmt .

    SEMICOL         shift and go to state 265
    LBRACE          reduce using rule 72 (ForHeader -> OSimpleStmt .)


state 139

    (73) ForHeader -> RangeStmt .

    LBRACE          reduce using rule 73 (ForHeader -> RangeStmt .)


state 140

    (149) OSimpleStmt -> SimpleStmt .

    SEMICOL         reduce using rule 149 (OSimpleStmt -> SimpleStmt .)
    LBRACE          reduce using rule 149 (OSimpleStmt -> SimpleStmt .)


state 141

    (68) RangeStmt -> ExprList . EQUAL RANGE Expr
    (69) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (53) SimpleStmt -> ExprList . EQUAL ExprList
    (54) SimpleStmt -> ExprList . COLONEQ ExprList
    (159) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 266
    COLONEQ         shift and go to state 267
    COMMA           shift and go to state 135


state 142

    (70) RangeStmt -> RANGE . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 268
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 143

    (41) SimpleStmt -> Expr .
    (42) SimpleStmt -> Expr . PLUSEQ Expr
    (43) SimpleStmt -> Expr . MINUSEQ Expr
    (44) SimpleStmt -> Expr . TIMESEQ Expr
    (45) SimpleStmt -> Expr . DIVIDEEQ Expr
    (46) SimpleStmt -> Expr . MODEQ Expr
    (47) SimpleStmt -> Expr . OREQ Expr
    (48) SimpleStmt -> Expr . AMPEQ Expr
    (49) SimpleStmt -> Expr . CAREQ Expr
    (50) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (51) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (52) SimpleStmt -> Expr . AMPCAREQ Expr
    (55) SimpleStmt -> Expr . PLUSPLUS
    (56) SimpleStmt -> Expr . MINUSMIN
    (158) ExprList -> Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 119
    MINUSEQ         shift and go to state 120
    TIMESEQ         shift and go to state 121
    DIVIDEEQ        shift and go to state 122
    MODEQ           shift and go to state 123
    OREQ            shift and go to state 124
    AMPEQ           shift and go to state 125
    CAREQ           shift and go to state 126
    SHL_ASSIGN      shift and go to state 127
    SHR_ASSIGN      shift and go to state 128
    AMPCAREQ        shift and go to state 129
    PLUSPLUS        shift and go to state 130
    MINUSMIN        shift and go to state 131
    EQUAL           reduce using rule 158 (ExprList -> Expr .)
    COLONEQ         reduce using rule 158 (ExprList -> Expr .)
    COMMA           reduce using rule 158 (ExprList -> Expr .)
    OROR            shift and go to state 132


state 144

    (242) SwitchStmt -> SWITCH IfHeader . LBRACE CaseBlockList RBRACE

    LBRACE          shift and go to state 269


state 145

    (77) IfHeader -> OSimpleStmt .
    (78) IfHeader -> OSimpleStmt . SEMICOL OSimpleStmt

    LBRACE          reduce using rule 77 (IfHeader -> OSimpleStmt .)
    SEMICOL         shift and go to state 270


state 146

    (79) IfStmt -> IF IfHeader . LoopBody ElseIfList
    (67) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 272

    LoopBody                       shift and go to state 271

state 147

    (264) Prec2Expr_ -> Prec2Expr_ AMPAMP . Prec3Expr_
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec3Expr_                     shift and go to state 273
    Prec4Expr_                     shift and go to state 47
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 148

    (257) Prec3Expr_ -> Prec3Expr_ EQEQ . Prec4Expr_
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec4Expr_                     shift and go to state 274
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 149

    (258) Prec3Expr_ -> Prec3Expr_ NOTEQ . Prec4Expr_
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec4Expr_                     shift and go to state 275
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 150

    (259) Prec3Expr_ -> Prec3Expr_ LEQ . Prec4Expr_
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec4Expr_                     shift and go to state 276
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 151

    (260) Prec3Expr_ -> Prec3Expr_ GEQ . Prec4Expr_
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec4Expr_                     shift and go to state 277
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 152

    (261) Prec3Expr_ -> Prec3Expr_ GREAT . Prec4Expr_
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec4Expr_                     shift and go to state 278
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 153

    (262) Prec3Expr_ -> Prec3Expr_ LESS . Prec4Expr_
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec4Expr_                     shift and go to state 279
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 154

    (270) Chexpr -> LMINUS IDENTIFIER .

    PLUSEQ          reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    MINUSEQ         reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    TIMESEQ         reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    DIVIDEEQ        reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    MODEQ           reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    OREQ            reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    AMPEQ           reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    CAREQ           reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    AMPCAREQ        reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    PLUSPLUS        reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    MINUSMIN        reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    OROR            reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    SEMICOL         reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    EQUAL           reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    COLONEQ         reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    COMMA           reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    RPAREN          reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    LBRACE          reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    PIPE            reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    RBRACK          reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    RBRACE          reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    DDD             reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    COLON           reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 270 (Chexpr -> LMINUS IDENTIFIER .)


state 155

    (100) ChannelType -> LMINUS CHAN . NewType
    (230) NewType -> . TYPE

    TYPE            shift and go to state 33

    NewType                        shift and go to state 280

state 156

    (271) Arrayexp -> OtherType LBRACE . ExprList RBRACE
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    OtherType                      shift and go to state 46
    ExprList                       shift and go to state 281
    Expr                           shift and go to state 118
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 157

    (252) Prec4Expr_ -> Prec4Expr_ PLUS . Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec5Expr_                     shift and go to state 282
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 158

    (253) Prec4Expr_ -> Prec4Expr_ MINUS . Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec5Expr_                     shift and go to state 283
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 159

    (254) Prec4Expr_ -> Prec4Expr_ XOR . Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec5Expr_                     shift and go to state 284
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 160

    (255) Prec4Expr_ -> Prec4Expr_ OR . Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    Prec5Expr_                     shift and go to state 285
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 161

    (94) OtherType -> LBRACK OExpr . RBRACK NType

    RBRACK          shift and go to state 286


state 162

    (279) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (153) OExpr -> Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    PIPE            shift and go to state 287
    RBRACK          reduce using rule 153 (OExpr -> Expr .)
    OROR            shift and go to state 132


state 163

    (244) Prec5Expr_ -> Prec5Expr_ DIVIDE . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 288
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 164

    (245) Prec5Expr_ -> Prec5Expr_ MOD . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 289
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 165

    (246) Prec5Expr_ -> Prec5Expr_ SHL . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 290
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 166

    (247) Prec5Expr_ -> Prec5Expr_ SHR . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 291
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 167

    (248) Prec5Expr_ -> Prec5Expr_ AMPERS . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 292
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 168

    (249) Prec5Expr_ -> Prec5Expr_ AMPCAR . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 293
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 169

    (250) Prec5Expr_ -> Prec5Expr_ TIMES . UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (156) FuncLiteralDecl -> . FuncType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    LBRACK          shift and go to state 171
    FUNCTION        shift and go to state 94
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    UExpr                          shift and go to state 294
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    OtherType                      shift and go to state 172
    FuncLiteralDecl                shift and go to state 76
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51

state 170

    (276) UExpr -> PLUS UExpr .

    DIVIDE          reduce using rule 276 (UExpr -> PLUS UExpr .)
    MOD             reduce using rule 276 (UExpr -> PLUS UExpr .)
    SHL             reduce using rule 276 (UExpr -> PLUS UExpr .)
    SHR             reduce using rule 276 (UExpr -> PLUS UExpr .)
    AMPERS          reduce using rule 276 (UExpr -> PLUS UExpr .)
    AMPCAR          reduce using rule 276 (UExpr -> PLUS UExpr .)
    TIMES           reduce using rule 276 (UExpr -> PLUS UExpr .)
    PLUS            reduce using rule 276 (UExpr -> PLUS UExpr .)
    MINUS           reduce using rule 276 (UExpr -> PLUS UExpr .)
    XOR             reduce using rule 276 (UExpr -> PLUS UExpr .)
    OR              reduce using rule 276 (UExpr -> PLUS UExpr .)
    EQEQ            reduce using rule 276 (UExpr -> PLUS UExpr .)
    NOTEQ           reduce using rule 276 (UExpr -> PLUS UExpr .)
    LEQ             reduce using rule 276 (UExpr -> PLUS UExpr .)
    GEQ             reduce using rule 276 (UExpr -> PLUS UExpr .)
    GREAT           reduce using rule 276 (UExpr -> PLUS UExpr .)
    LESS            reduce using rule 276 (UExpr -> PLUS UExpr .)
    AMPAMP          reduce using rule 276 (UExpr -> PLUS UExpr .)
    PLUSEQ          reduce using rule 276 (UExpr -> PLUS UExpr .)
    MINUSEQ         reduce using rule 276 (UExpr -> PLUS UExpr .)
    TIMESEQ         reduce using rule 276 (UExpr -> PLUS UExpr .)
    DIVIDEEQ        reduce using rule 276 (UExpr -> PLUS UExpr .)
    MODEQ           reduce using rule 276 (UExpr -> PLUS UExpr .)
    OREQ            reduce using rule 276 (UExpr -> PLUS UExpr .)
    AMPEQ           reduce using rule 276 (UExpr -> PLUS UExpr .)
    CAREQ           reduce using rule 276 (UExpr -> PLUS UExpr .)
    SHL_ASSIGN      reduce using rule 276 (UExpr -> PLUS UExpr .)
    SHR_ASSIGN      reduce using rule 276 (UExpr -> PLUS UExpr .)
    AMPCAREQ        reduce using rule 276 (UExpr -> PLUS UExpr .)
    PLUSPLUS        reduce using rule 276 (UExpr -> PLUS UExpr .)
    MINUSMIN        reduce using rule 276 (UExpr -> PLUS UExpr .)
    OROR            reduce using rule 276 (UExpr -> PLUS UExpr .)
    SEMICOL         reduce using rule 276 (UExpr -> PLUS UExpr .)
    EQUAL           reduce using rule 276 (UExpr -> PLUS UExpr .)
    COLONEQ         reduce using rule 276 (UExpr -> PLUS UExpr .)
    COMMA           reduce using rule 276 (UExpr -> PLUS UExpr .)
    RPAREN          reduce using rule 276 (UExpr -> PLUS UExpr .)
    LBRACE          reduce using rule 276 (UExpr -> PLUS UExpr .)
    PIPE            reduce using rule 276 (UExpr -> PLUS UExpr .)
    RBRACK          reduce using rule 276 (UExpr -> PLUS UExpr .)
    DDD             reduce using rule 276 (UExpr -> PLUS UExpr .)
    COLON           reduce using rule 276 (UExpr -> PLUS UExpr .)
    RBRACE          reduce using rule 276 (UExpr -> PLUS UExpr .)
    RIGHT_RIGHT     reduce using rule 276 (UExpr -> PLUS UExpr .)
    RIGHT_ANGLE     reduce using rule 276 (UExpr -> PLUS UExpr .)


state 171

    (279) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (94) OtherType -> LBRACK . OExpr RBRACK NType
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (152) OExpr -> .
    (153) OExpr -> . Expr
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    RBRACK          reduce using rule 152 (OExpr -> .)
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 295
    OExpr                          shift and go to state 161
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 172

    (232) ConvType -> OtherType .
    (233) CompType -> OtherType .

    LEFT_ANGLE      reduce using rule 232 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 233 (CompType -> OtherType .)


state 173

    (100) ChannelType -> LMINUS . CHAN NewType

    CHAN            shift and go to state 155


state 174

    (277) UExpr -> MINUS UExpr .

    DIVIDE          reduce using rule 277 (UExpr -> MINUS UExpr .)
    MOD             reduce using rule 277 (UExpr -> MINUS UExpr .)
    SHL             reduce using rule 277 (UExpr -> MINUS UExpr .)
    SHR             reduce using rule 277 (UExpr -> MINUS UExpr .)
    AMPERS          reduce using rule 277 (UExpr -> MINUS UExpr .)
    AMPCAR          reduce using rule 277 (UExpr -> MINUS UExpr .)
    TIMES           reduce using rule 277 (UExpr -> MINUS UExpr .)
    PLUS            reduce using rule 277 (UExpr -> MINUS UExpr .)
    MINUS           reduce using rule 277 (UExpr -> MINUS UExpr .)
    XOR             reduce using rule 277 (UExpr -> MINUS UExpr .)
    OR              reduce using rule 277 (UExpr -> MINUS UExpr .)
    EQEQ            reduce using rule 277 (UExpr -> MINUS UExpr .)
    NOTEQ           reduce using rule 277 (UExpr -> MINUS UExpr .)
    LEQ             reduce using rule 277 (UExpr -> MINUS UExpr .)
    GEQ             reduce using rule 277 (UExpr -> MINUS UExpr .)
    GREAT           reduce using rule 277 (UExpr -> MINUS UExpr .)
    LESS            reduce using rule 277 (UExpr -> MINUS UExpr .)
    AMPAMP          reduce using rule 277 (UExpr -> MINUS UExpr .)
    PLUSEQ          reduce using rule 277 (UExpr -> MINUS UExpr .)
    MINUSEQ         reduce using rule 277 (UExpr -> MINUS UExpr .)
    TIMESEQ         reduce using rule 277 (UExpr -> MINUS UExpr .)
    DIVIDEEQ        reduce using rule 277 (UExpr -> MINUS UExpr .)
    MODEQ           reduce using rule 277 (UExpr -> MINUS UExpr .)
    OREQ            reduce using rule 277 (UExpr -> MINUS UExpr .)
    AMPEQ           reduce using rule 277 (UExpr -> MINUS UExpr .)
    CAREQ           reduce using rule 277 (UExpr -> MINUS UExpr .)
    SHL_ASSIGN      reduce using rule 277 (UExpr -> MINUS UExpr .)
    SHR_ASSIGN      reduce using rule 277 (UExpr -> MINUS UExpr .)
    AMPCAREQ        reduce using rule 277 (UExpr -> MINUS UExpr .)
    PLUSPLUS        reduce using rule 277 (UExpr -> MINUS UExpr .)
    MINUSMIN        reduce using rule 277 (UExpr -> MINUS UExpr .)
    OROR            reduce using rule 277 (UExpr -> MINUS UExpr .)
    SEMICOL         reduce using rule 277 (UExpr -> MINUS UExpr .)
    EQUAL           reduce using rule 277 (UExpr -> MINUS UExpr .)
    COLONEQ         reduce using rule 277 (UExpr -> MINUS UExpr .)
    COMMA           reduce using rule 277 (UExpr -> MINUS UExpr .)
    RPAREN          reduce using rule 277 (UExpr -> MINUS UExpr .)
    LBRACE          reduce using rule 277 (UExpr -> MINUS UExpr .)
    PIPE            reduce using rule 277 (UExpr -> MINUS UExpr .)
    RBRACK          reduce using rule 277 (UExpr -> MINUS UExpr .)
    DDD             reduce using rule 277 (UExpr -> MINUS UExpr .)
    COLON           reduce using rule 277 (UExpr -> MINUS UExpr .)
    RBRACE          reduce using rule 277 (UExpr -> MINUS UExpr .)
    RIGHT_RIGHT     reduce using rule 277 (UExpr -> MINUS UExpr .)
    RIGHT_ANGLE     reduce using rule 277 (UExpr -> MINUS UExpr .)


state 175

    (278) UExpr -> XOR UExpr .

    DIVIDE          reduce using rule 278 (UExpr -> XOR UExpr .)
    MOD             reduce using rule 278 (UExpr -> XOR UExpr .)
    SHL             reduce using rule 278 (UExpr -> XOR UExpr .)
    SHR             reduce using rule 278 (UExpr -> XOR UExpr .)
    AMPERS          reduce using rule 278 (UExpr -> XOR UExpr .)
    AMPCAR          reduce using rule 278 (UExpr -> XOR UExpr .)
    TIMES           reduce using rule 278 (UExpr -> XOR UExpr .)
    PLUS            reduce using rule 278 (UExpr -> XOR UExpr .)
    MINUS           reduce using rule 278 (UExpr -> XOR UExpr .)
    XOR             reduce using rule 278 (UExpr -> XOR UExpr .)
    OR              reduce using rule 278 (UExpr -> XOR UExpr .)
    EQEQ            reduce using rule 278 (UExpr -> XOR UExpr .)
    NOTEQ           reduce using rule 278 (UExpr -> XOR UExpr .)
    LEQ             reduce using rule 278 (UExpr -> XOR UExpr .)
    GEQ             reduce using rule 278 (UExpr -> XOR UExpr .)
    GREAT           reduce using rule 278 (UExpr -> XOR UExpr .)
    LESS            reduce using rule 278 (UExpr -> XOR UExpr .)
    AMPAMP          reduce using rule 278 (UExpr -> XOR UExpr .)
    PLUSEQ          reduce using rule 278 (UExpr -> XOR UExpr .)
    MINUSEQ         reduce using rule 278 (UExpr -> XOR UExpr .)
    TIMESEQ         reduce using rule 278 (UExpr -> XOR UExpr .)
    DIVIDEEQ        reduce using rule 278 (UExpr -> XOR UExpr .)
    MODEQ           reduce using rule 278 (UExpr -> XOR UExpr .)
    OREQ            reduce using rule 278 (UExpr -> XOR UExpr .)
    AMPEQ           reduce using rule 278 (UExpr -> XOR UExpr .)
    CAREQ           reduce using rule 278 (UExpr -> XOR UExpr .)
    SHL_ASSIGN      reduce using rule 278 (UExpr -> XOR UExpr .)
    SHR_ASSIGN      reduce using rule 278 (UExpr -> XOR UExpr .)
    AMPCAREQ        reduce using rule 278 (UExpr -> XOR UExpr .)
    PLUSPLUS        reduce using rule 278 (UExpr -> XOR UExpr .)
    MINUSMIN        reduce using rule 278 (UExpr -> XOR UExpr .)
    OROR            reduce using rule 278 (UExpr -> XOR UExpr .)
    SEMICOL         reduce using rule 278 (UExpr -> XOR UExpr .)
    EQUAL           reduce using rule 278 (UExpr -> XOR UExpr .)
    COLONEQ         reduce using rule 278 (UExpr -> XOR UExpr .)
    COMMA           reduce using rule 278 (UExpr -> XOR UExpr .)
    RPAREN          reduce using rule 278 (UExpr -> XOR UExpr .)
    LBRACE          reduce using rule 278 (UExpr -> XOR UExpr .)
    PIPE            reduce using rule 278 (UExpr -> XOR UExpr .)
    RBRACK          reduce using rule 278 (UExpr -> XOR UExpr .)
    DDD             reduce using rule 278 (UExpr -> XOR UExpr .)
    COLON           reduce using rule 278 (UExpr -> XOR UExpr .)
    RBRACE          reduce using rule 278 (UExpr -> XOR UExpr .)
    RIGHT_RIGHT     reduce using rule 278 (UExpr -> XOR UExpr .)
    RIGHT_ANGLE     reduce using rule 278 (UExpr -> XOR UExpr .)


state 176

    (101) StructType -> STRUCT LBRACE . StructDeclList OSemi RBRACE
    (102) StructType -> STRUCT LBRACE . RBRACE
    (118) StructDeclList -> . StructDecl
    (119) StructDeclList -> . StructDeclList SEMICOL StructDecl
    (122) StructDecl -> . NewNameList NType OLiteral
    (123) StructDecl -> . Embed OLiteral
    (124) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (125) StructDecl -> . TIMES Embed OLiteral
    (126) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (127) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (180) NewNameList -> . NewName
    (181) NewNameList -> . NewNameList COMMA NewName
    (167) Embed -> . IDENTIFIER
    (133) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 297
    LPAREN          shift and go to state 301
    TIMES           shift and go to state 302
    IDENTIFIER      shift and go to state 304

    StructDeclList                 shift and go to state 296
    StructDecl                     shift and go to state 298
    NewNameList                    shift and go to state 299
    Embed                          shift and go to state 300
    NewName                        shift and go to state 303

state 177

    (103) InterfaceType -> INTERFACE LBRACE . InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> INTERFACE LBRACE . RBRACE
    (120) InterfaceDeclList -> . InterfaceDecl
    (121) InterfaceDeclList -> . InterfaceDeclList SEMICOL InterfaceDecl
    (128) InterfaceDecl -> . NewName InDecl
    (129) InterfaceDecl -> . IDENTIFIER
    (130) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (133) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 306
    IDENTIFIER      shift and go to state 309
    LPAREN          shift and go to state 310

    InterfaceDeclList              shift and go to state 305
    InterfaceDecl                  shift and go to state 307
    NewName                        shift and go to state 308

state 178

    (98) ChannelType -> CHAN NewType .

    LBRACE          reduce using rule 98 (ChannelType -> CHAN NewType .)
    LEFT_ANGLE      reduce using rule 98 (ChannelType -> CHAN NewType .)
    LEFT_LEFT       reduce using rule 98 (ChannelType -> CHAN NewType .)
    RPAREN          reduce using rule 98 (ChannelType -> CHAN NewType .)
    DDD             reduce using rule 98 (ChannelType -> CHAN NewType .)
    COMMA           reduce using rule 98 (ChannelType -> CHAN NewType .)
    COLON           reduce using rule 98 (ChannelType -> CHAN NewType .)
    EQUAL           reduce using rule 98 (ChannelType -> CHAN NewType .)
    COLONEQ         reduce using rule 98 (ChannelType -> CHAN NewType .)
    SEMICOL         reduce using rule 98 (ChannelType -> CHAN NewType .)
    OR_RIGHT        reduce using rule 98 (ChannelType -> CHAN NewType .)
    INTEGER         reduce using rule 98 (ChannelType -> CHAN NewType .)
    FLOAT           reduce using rule 98 (ChannelType -> CHAN NewType .)
    STRING          reduce using rule 98 (ChannelType -> CHAN NewType .)
    RBRACE          reduce using rule 98 (ChannelType -> CHAN NewType .)


state 179

    (99) ChannelType -> CHAN LMINUS . NewType
    (230) NewType -> . TYPE

    TYPE            shift and go to state 33

    NewType                        shift and go to state 311

state 180

    (273) UExpr -> AMPERS UExpr .

    DIVIDE          reduce using rule 273 (UExpr -> AMPERS UExpr .)
    MOD             reduce using rule 273 (UExpr -> AMPERS UExpr .)
    SHL             reduce using rule 273 (UExpr -> AMPERS UExpr .)
    SHR             reduce using rule 273 (UExpr -> AMPERS UExpr .)
    AMPERS          reduce using rule 273 (UExpr -> AMPERS UExpr .)
    AMPCAR          reduce using rule 273 (UExpr -> AMPERS UExpr .)
    TIMES           reduce using rule 273 (UExpr -> AMPERS UExpr .)
    PLUS            reduce using rule 273 (UExpr -> AMPERS UExpr .)
    MINUS           reduce using rule 273 (UExpr -> AMPERS UExpr .)
    XOR             reduce using rule 273 (UExpr -> AMPERS UExpr .)
    OR              reduce using rule 273 (UExpr -> AMPERS UExpr .)
    EQEQ            reduce using rule 273 (UExpr -> AMPERS UExpr .)
    NOTEQ           reduce using rule 273 (UExpr -> AMPERS UExpr .)
    LEQ             reduce using rule 273 (UExpr -> AMPERS UExpr .)
    GEQ             reduce using rule 273 (UExpr -> AMPERS UExpr .)
    GREAT           reduce using rule 273 (UExpr -> AMPERS UExpr .)
    LESS            reduce using rule 273 (UExpr -> AMPERS UExpr .)
    AMPAMP          reduce using rule 273 (UExpr -> AMPERS UExpr .)
    PLUSEQ          reduce using rule 273 (UExpr -> AMPERS UExpr .)
    MINUSEQ         reduce using rule 273 (UExpr -> AMPERS UExpr .)
    TIMESEQ         reduce using rule 273 (UExpr -> AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 273 (UExpr -> AMPERS UExpr .)
    MODEQ           reduce using rule 273 (UExpr -> AMPERS UExpr .)
    OREQ            reduce using rule 273 (UExpr -> AMPERS UExpr .)
    AMPEQ           reduce using rule 273 (UExpr -> AMPERS UExpr .)
    CAREQ           reduce using rule 273 (UExpr -> AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 273 (UExpr -> AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 273 (UExpr -> AMPERS UExpr .)
    AMPCAREQ        reduce using rule 273 (UExpr -> AMPERS UExpr .)
    PLUSPLUS        reduce using rule 273 (UExpr -> AMPERS UExpr .)
    MINUSMIN        reduce using rule 273 (UExpr -> AMPERS UExpr .)
    OROR            reduce using rule 273 (UExpr -> AMPERS UExpr .)
    SEMICOL         reduce using rule 273 (UExpr -> AMPERS UExpr .)
    EQUAL           reduce using rule 273 (UExpr -> AMPERS UExpr .)
    COLONEQ         reduce using rule 273 (UExpr -> AMPERS UExpr .)
    COMMA           reduce using rule 273 (UExpr -> AMPERS UExpr .)
    RPAREN          reduce using rule 273 (UExpr -> AMPERS UExpr .)
    LBRACE          reduce using rule 273 (UExpr -> AMPERS UExpr .)
    PIPE            reduce using rule 273 (UExpr -> AMPERS UExpr .)
    RBRACK          reduce using rule 273 (UExpr -> AMPERS UExpr .)
    DDD             reduce using rule 273 (UExpr -> AMPERS UExpr .)
    COLON           reduce using rule 273 (UExpr -> AMPERS UExpr .)
    RBRACE          reduce using rule 273 (UExpr -> AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 273 (UExpr -> AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 273 (UExpr -> AMPERS UExpr .)


state 181

    (275) UExpr -> TIMES UExpr .

    DIVIDE          reduce using rule 275 (UExpr -> TIMES UExpr .)
    MOD             reduce using rule 275 (UExpr -> TIMES UExpr .)
    SHL             reduce using rule 275 (UExpr -> TIMES UExpr .)
    SHR             reduce using rule 275 (UExpr -> TIMES UExpr .)
    AMPERS          reduce using rule 275 (UExpr -> TIMES UExpr .)
    AMPCAR          reduce using rule 275 (UExpr -> TIMES UExpr .)
    TIMES           reduce using rule 275 (UExpr -> TIMES UExpr .)
    PLUS            reduce using rule 275 (UExpr -> TIMES UExpr .)
    MINUS           reduce using rule 275 (UExpr -> TIMES UExpr .)
    XOR             reduce using rule 275 (UExpr -> TIMES UExpr .)
    OR              reduce using rule 275 (UExpr -> TIMES UExpr .)
    EQEQ            reduce using rule 275 (UExpr -> TIMES UExpr .)
    NOTEQ           reduce using rule 275 (UExpr -> TIMES UExpr .)
    LEQ             reduce using rule 275 (UExpr -> TIMES UExpr .)
    GEQ             reduce using rule 275 (UExpr -> TIMES UExpr .)
    GREAT           reduce using rule 275 (UExpr -> TIMES UExpr .)
    LESS            reduce using rule 275 (UExpr -> TIMES UExpr .)
    AMPAMP          reduce using rule 275 (UExpr -> TIMES UExpr .)
    PLUSEQ          reduce using rule 275 (UExpr -> TIMES UExpr .)
    MINUSEQ         reduce using rule 275 (UExpr -> TIMES UExpr .)
    TIMESEQ         reduce using rule 275 (UExpr -> TIMES UExpr .)
    DIVIDEEQ        reduce using rule 275 (UExpr -> TIMES UExpr .)
    MODEQ           reduce using rule 275 (UExpr -> TIMES UExpr .)
    OREQ            reduce using rule 275 (UExpr -> TIMES UExpr .)
    AMPEQ           reduce using rule 275 (UExpr -> TIMES UExpr .)
    CAREQ           reduce using rule 275 (UExpr -> TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 275 (UExpr -> TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 275 (UExpr -> TIMES UExpr .)
    AMPCAREQ        reduce using rule 275 (UExpr -> TIMES UExpr .)
    PLUSPLUS        reduce using rule 275 (UExpr -> TIMES UExpr .)
    MINUSMIN        reduce using rule 275 (UExpr -> TIMES UExpr .)
    OROR            reduce using rule 275 (UExpr -> TIMES UExpr .)
    SEMICOL         reduce using rule 275 (UExpr -> TIMES UExpr .)
    EQUAL           reduce using rule 275 (UExpr -> TIMES UExpr .)
    COLONEQ         reduce using rule 275 (UExpr -> TIMES UExpr .)
    COMMA           reduce using rule 275 (UExpr -> TIMES UExpr .)
    RPAREN          reduce using rule 275 (UExpr -> TIMES UExpr .)
    LBRACE          reduce using rule 275 (UExpr -> TIMES UExpr .)
    PIPE            reduce using rule 275 (UExpr -> TIMES UExpr .)
    RBRACK          reduce using rule 275 (UExpr -> TIMES UExpr .)
    DDD             reduce using rule 275 (UExpr -> TIMES UExpr .)
    COLON           reduce using rule 275 (UExpr -> TIMES UExpr .)
    RBRACE          reduce using rule 275 (UExpr -> TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 275 (UExpr -> TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 275 (UExpr -> TIMES UExpr .)


state 182

    (218) PExprNoParen -> PExpr DOT . IDENTIFIER
    (219) PExprNoParen -> PExpr DOT . LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> PExpr DOT . LPAREN NewType RPAREN

    IDENTIFIER      shift and go to state 312
    LPAREN          shift and go to state 313


state 183

    (280) PseudoCall -> PExpr LPAREN . RPAREN
    (281) PseudoCall -> PExpr LPAREN . ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> PExpr LPAREN . ExprOrTypeList DDD OComma RPAREN
    (160) ExprOrTypeList -> . ExprOrType
    (161) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (239) ExprOrType -> . Expr
    (240) ExprOrType -> . NonExprType
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (91) NonExprType -> . FuncType
    (92) NonExprType -> . OtherType
    (93) NonExprType -> . TIMES NonExprType
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (156) FuncLiteralDecl -> . FuncType

    RPAREN          shift and go to state 314
    CONSTANTS       shift and go to state 40
    TIMES           shift and go to state 92
    LMINUS          shift and go to state 45
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93

    PExpr                          shift and go to state 62
    ExprOrTypeList                 shift and go to state 315
    ExprOrType                     shift and go to state 316
    Expr                           shift and go to state 88
    NonExprType                    shift and go to state 89
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    FuncType                       shift and go to state 90
    OtherType                      shift and go to state 91
    Prec3Expr_                     shift and go to state 44
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec4Expr_                     shift and go to state 47
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncLiteralDecl                shift and go to state 76

state 184

    (221) PExprNoParen -> PExpr LBRACK . Expr RBRACK
    (222) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr COLON OExpr RBRACK
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (152) OExpr -> .
    (153) OExpr -> . Expr
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    COLON           reduce using rule 152 (OExpr -> .)
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    PExpr                          shift and go to state 62
    Expr                           shift and go to state 317
    OExpr                          shift and go to state 318
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 185

    (227) PExprNoParen -> PExpr LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (186) BracedKeyvalList -> .
    (187) BracedKeyvalList -> . KeyvalList OComma
    (182) KeyvalList -> . Keyval
    (183) KeyvalList -> . BareCompLitExpr
    (184) KeyvalList -> . KeyvalList COMMA Keyval
    (185) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (234) Keyval -> . Expr COLON CompLitExpr
    (235) BareCompLitExpr -> . Expr
    (236) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 186 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 319
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    PExpr                          shift and go to state 62
    BracedKeyvalList               shift and go to state 320
    KeyvalList                     shift and go to state 321
    Keyval                         shift and go to state 322
    BareCompLitExpr                shift and go to state 323
    Expr                           shift and go to state 324
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 186

    (274) UExpr -> NOT UExpr .

    DIVIDE          reduce using rule 274 (UExpr -> NOT UExpr .)
    MOD             reduce using rule 274 (UExpr -> NOT UExpr .)
    SHL             reduce using rule 274 (UExpr -> NOT UExpr .)
    SHR             reduce using rule 274 (UExpr -> NOT UExpr .)
    AMPERS          reduce using rule 274 (UExpr -> NOT UExpr .)
    AMPCAR          reduce using rule 274 (UExpr -> NOT UExpr .)
    TIMES           reduce using rule 274 (UExpr -> NOT UExpr .)
    PLUS            reduce using rule 274 (UExpr -> NOT UExpr .)
    MINUS           reduce using rule 274 (UExpr -> NOT UExpr .)
    XOR             reduce using rule 274 (UExpr -> NOT UExpr .)
    OR              reduce using rule 274 (UExpr -> NOT UExpr .)
    EQEQ            reduce using rule 274 (UExpr -> NOT UExpr .)
    NOTEQ           reduce using rule 274 (UExpr -> NOT UExpr .)
    LEQ             reduce using rule 274 (UExpr -> NOT UExpr .)
    GEQ             reduce using rule 274 (UExpr -> NOT UExpr .)
    GREAT           reduce using rule 274 (UExpr -> NOT UExpr .)
    LESS            reduce using rule 274 (UExpr -> NOT UExpr .)
    AMPAMP          reduce using rule 274 (UExpr -> NOT UExpr .)
    PLUSEQ          reduce using rule 274 (UExpr -> NOT UExpr .)
    MINUSEQ         reduce using rule 274 (UExpr -> NOT UExpr .)
    TIMESEQ         reduce using rule 274 (UExpr -> NOT UExpr .)
    DIVIDEEQ        reduce using rule 274 (UExpr -> NOT UExpr .)
    MODEQ           reduce using rule 274 (UExpr -> NOT UExpr .)
    OREQ            reduce using rule 274 (UExpr -> NOT UExpr .)
    AMPEQ           reduce using rule 274 (UExpr -> NOT UExpr .)
    CAREQ           reduce using rule 274 (UExpr -> NOT UExpr .)
    SHL_ASSIGN      reduce using rule 274 (UExpr -> NOT UExpr .)
    SHR_ASSIGN      reduce using rule 274 (UExpr -> NOT UExpr .)
    AMPCAREQ        reduce using rule 274 (UExpr -> NOT UExpr .)
    PLUSPLUS        reduce using rule 274 (UExpr -> NOT UExpr .)
    MINUSMIN        reduce using rule 274 (UExpr -> NOT UExpr .)
    OROR            reduce using rule 274 (UExpr -> NOT UExpr .)
    SEMICOL         reduce using rule 274 (UExpr -> NOT UExpr .)
    EQUAL           reduce using rule 274 (UExpr -> NOT UExpr .)
    COLONEQ         reduce using rule 274 (UExpr -> NOT UExpr .)
    COMMA           reduce using rule 274 (UExpr -> NOT UExpr .)
    RPAREN          reduce using rule 274 (UExpr -> NOT UExpr .)
    LBRACE          reduce using rule 274 (UExpr -> NOT UExpr .)
    PIPE            reduce using rule 274 (UExpr -> NOT UExpr .)
    RBRACK          reduce using rule 274 (UExpr -> NOT UExpr .)
    DDD             reduce using rule 274 (UExpr -> NOT UExpr .)
    COLON           reduce using rule 274 (UExpr -> NOT UExpr .)
    RBRACE          reduce using rule 274 (UExpr -> NOT UExpr .)
    RIGHT_RIGHT     reduce using rule 274 (UExpr -> NOT UExpr .)
    RIGHT_ANGLE     reduce using rule 274 (UExpr -> NOT UExpr .)


state 187

    (225) PExprNoParen -> ConvType LEFT_ANGLE . Expr OComma RIGHT_ANGLE
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    ConvType                       shift and go to state 68
    Expr                           shift and go to state 325
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 188

    (226) PExprNoParen -> CompType LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (186) BracedKeyvalList -> .
    (187) BracedKeyvalList -> . KeyvalList OComma
    (182) KeyvalList -> . Keyval
    (183) KeyvalList -> . BareCompLitExpr
    (184) KeyvalList -> . KeyvalList COMMA Keyval
    (185) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (234) Keyval -> . Expr COLON CompLitExpr
    (235) BareCompLitExpr -> . Expr
    (236) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 186 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 319
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    CompType                       shift and go to state 69
    BracedKeyvalList               shift and go to state 326
    KeyvalList                     shift and go to state 321
    Keyval                         shift and go to state 322
    BareCompLitExpr                shift and go to state 323
    Expr                           shift and go to state 324
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 189

    (157) FuncLiteral -> FuncLiteralDecl LBRACE . cmtlist StmtList cmtlist RBRACE
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    LBRACE          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    SEMICOL         reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 327

state 190

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList . cmtlist
    (169) DeclList -> DeclList . cmtlist Declaration SEMICOL
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    $end            reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 328

state 191

    (8) Imports -> Imports cmtlist Import . SEMICOL

    SEMICOL         shift and go to state 329


state 192

    (169) DeclList -> DeclList cmtlist Declaration . SEMICOL

    SEMICOL         shift and go to state 330


state 193

    (10) Import -> IMPORT LPAREN ImportStmtList . OSemi RPAREN
    (14) ImportStmtList -> ImportStmtList . SEMICOL ImportStmt
    (146) OSemi -> .
    (147) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 332
    RPAREN          reduce using rule 146 (OSemi -> .)

    OSemi                          shift and go to state 331

state 194

    (11) Import -> IMPORT LPAREN RPAREN .

    SEMICOL         reduce using rule 11 (Import -> IMPORT LPAREN RPAREN .)


state 195

    (13) ImportStmtList -> ImportStmt .

    SEMICOL         reduce using rule 13 (ImportStmtList -> ImportStmt .)
    RPAREN          reduce using rule 13 (ImportStmtList -> ImportStmt .)


state 196

    (12) ImportStmt -> ImportHere STRING .

    SEMICOL         reduce using rule 12 (ImportStmt -> ImportHere STRING .)
    RPAREN          reduce using rule 12 (ImportStmt -> ImportHere STRING .)


state 197

    (215) PExpr -> LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 215 (PExpr -> LPAREN ExprOrType RPAREN .)


state 198

    (93) NonExprType -> TIMES NonExprType .

    RPAREN          reduce using rule 93 (NonExprType -> TIMES NonExprType .)
    DDD             reduce using rule 93 (NonExprType -> TIMES NonExprType .)
    COMMA           reduce using rule 93 (NonExprType -> TIMES NonExprType .)
    COLON           reduce using rule 93 (NonExprType -> TIMES NonExprType .)
    EQUAL           reduce using rule 93 (NonExprType -> TIMES NonExprType .)
    COLONEQ         reduce using rule 93 (NonExprType -> TIMES NonExprType .)


state 199

    (92) NonExprType -> OtherType .
    (232) ConvType -> OtherType .
    (233) CompType -> OtherType .

    RPAREN          reduce using rule 92 (NonExprType -> OtherType .)
    DDD             reduce using rule 92 (NonExprType -> OtherType .)
    COMMA           reduce using rule 92 (NonExprType -> OtherType .)
    COLON           reduce using rule 92 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 92 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 92 (NonExprType -> OtherType .)
    LEFT_ANGLE      reduce using rule 232 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 233 (CompType -> OtherType .)


state 200

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl . OSemi RPAREN
    (23) CommonDecl -> CONSTANT LPAREN ConstDecl . SEMICOL ConstDeclList OSemi RPAREN
    (146) OSemi -> .
    (147) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 334
    RPAREN          reduce using rule 146 (OSemi -> .)

    OSemi                          shift and go to state 333

state 201

    (24) CommonDecl -> CONSTANT LPAREN RPAREN .

    SEMICOL         reduce using rule 24 (CommonDecl -> CONSTANT LPAREN RPAREN .)


state 202

    (34) ConstDecl -> DeclNameList NType . EQUAL ExprList
    (35) ConstDecl -> DeclNameList NType .

    EQUAL           shift and go to state 335
    SEMICOL         reduce using rule 35 (ConstDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 35 (ConstDecl -> DeclNameList NType .)


state 203

    (36) ConstDecl -> DeclNameList EQUAL . ExprList
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    ExprList                       shift and go to state 336
    Expr                           shift and go to state 118
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 204

    (177) DeclNameList -> DeclNameList COMMA . DeclName
    (188) DeclName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 99

    DeclName                       shift and go to state 337

state 205

    (85) NType -> FuncType .

    EQUAL           reduce using rule 85 (NType -> FuncType .)
    SEMICOL         reduce using rule 85 (NType -> FuncType .)
    RPAREN          reduce using rule 85 (NType -> FuncType .)
    COMMA           reduce using rule 85 (NType -> FuncType .)
    LEFT_ANGLE      reduce using rule 85 (NType -> FuncType .)
    LBRACE          reduce using rule 85 (NType -> FuncType .)
    DDD             reduce using rule 85 (NType -> FuncType .)
    COLON           reduce using rule 85 (NType -> FuncType .)
    COLONEQ         reduce using rule 85 (NType -> FuncType .)
    OR_RIGHT        reduce using rule 85 (NType -> FuncType .)
    LEFT_LEFT       reduce using rule 85 (NType -> FuncType .)
    INTEGER         reduce using rule 85 (NType -> FuncType .)
    FLOAT           reduce using rule 85 (NType -> FuncType .)
    STRING          reduce using rule 85 (NType -> FuncType .)
    RBRACE          reduce using rule 85 (NType -> FuncType .)


state 206

    (86) NType -> OtherType .

    EQUAL           reduce using rule 86 (NType -> OtherType .)
    SEMICOL         reduce using rule 86 (NType -> OtherType .)
    RPAREN          reduce using rule 86 (NType -> OtherType .)
    COMMA           reduce using rule 86 (NType -> OtherType .)
    LEFT_ANGLE      reduce using rule 86 (NType -> OtherType .)
    LBRACE          reduce using rule 86 (NType -> OtherType .)
    DDD             reduce using rule 86 (NType -> OtherType .)
    COLON           reduce using rule 86 (NType -> OtherType .)
    COLONEQ         reduce using rule 86 (NType -> OtherType .)
    OR_RIGHT        reduce using rule 86 (NType -> OtherType .)
    LEFT_LEFT       reduce using rule 86 (NType -> OtherType .)
    INTEGER         reduce using rule 86 (NType -> OtherType .)
    FLOAT           reduce using rule 86 (NType -> OtherType .)
    STRING          reduce using rule 86 (NType -> OtherType .)
    RBRACE          reduce using rule 86 (NType -> OtherType .)


state 207

    (87) NType -> PtrType .

    EQUAL           reduce using rule 87 (NType -> PtrType .)
    SEMICOL         reduce using rule 87 (NType -> PtrType .)
    RPAREN          reduce using rule 87 (NType -> PtrType .)
    COMMA           reduce using rule 87 (NType -> PtrType .)
    LEFT_ANGLE      reduce using rule 87 (NType -> PtrType .)
    LBRACE          reduce using rule 87 (NType -> PtrType .)
    DDD             reduce using rule 87 (NType -> PtrType .)
    COLON           reduce using rule 87 (NType -> PtrType .)
    COLONEQ         reduce using rule 87 (NType -> PtrType .)
    OR_RIGHT        reduce using rule 87 (NType -> PtrType .)
    LEFT_LEFT       reduce using rule 87 (NType -> PtrType .)
    INTEGER         reduce using rule 87 (NType -> PtrType .)
    FLOAT           reduce using rule 87 (NType -> PtrType .)
    STRING          reduce using rule 87 (NType -> PtrType .)
    RBRACE          reduce using rule 87 (NType -> PtrType .)


state 208

    (88) NType -> DotName .

    EQUAL           reduce using rule 88 (NType -> DotName .)
    SEMICOL         reduce using rule 88 (NType -> DotName .)
    RPAREN          reduce using rule 88 (NType -> DotName .)
    COMMA           reduce using rule 88 (NType -> DotName .)
    LEFT_ANGLE      reduce using rule 88 (NType -> DotName .)
    LBRACE          reduce using rule 88 (NType -> DotName .)
    DDD             reduce using rule 88 (NType -> DotName .)
    COLON           reduce using rule 88 (NType -> DotName .)
    COLONEQ         reduce using rule 88 (NType -> DotName .)
    OR_RIGHT        reduce using rule 88 (NType -> DotName .)
    LEFT_LEFT       reduce using rule 88 (NType -> DotName .)
    INTEGER         reduce using rule 88 (NType -> DotName .)
    FLOAT           reduce using rule 88 (NType -> DotName .)
    STRING          reduce using rule 88 (NType -> DotName .)
    RBRACE          reduce using rule 88 (NType -> DotName .)


state 209

    (89) NType -> LPAREN . NType RPAREN
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93

    NType                          shift and go to state 338
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 210

    (90) NType -> NewType .

    EQUAL           reduce using rule 90 (NType -> NewType .)
    SEMICOL         reduce using rule 90 (NType -> NewType .)
    RPAREN          reduce using rule 90 (NType -> NewType .)
    COMMA           reduce using rule 90 (NType -> NewType .)
    LEFT_ANGLE      reduce using rule 90 (NType -> NewType .)
    LBRACE          reduce using rule 90 (NType -> NewType .)
    DDD             reduce using rule 90 (NType -> NewType .)
    COLON           reduce using rule 90 (NType -> NewType .)
    COLONEQ         reduce using rule 90 (NType -> NewType .)
    OR_RIGHT        reduce using rule 90 (NType -> NewType .)
    LEFT_LEFT       reduce using rule 90 (NType -> NewType .)
    INTEGER         reduce using rule 90 (NType -> NewType .)
    FLOAT           reduce using rule 90 (NType -> NewType .)
    STRING          reduce using rule 90 (NType -> NewType .)
    RBRACE          reduce using rule 90 (NType -> NewType .)


state 211

    (94) OtherType -> LBRACK . OExpr RBRACK NType
    (152) OExpr -> .
    (153) OExpr -> . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 152 (OExpr -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    OExpr                          shift and go to state 161
    Expr                           shift and go to state 339
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 212

    (134) PtrType -> TIMES . NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93

    NType                          shift and go to state 340
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 213

    (142) DotName -> Name .
    (143) DotName -> Name . DOT IDENTIFIER

    EQUAL           reduce using rule 142 (DotName -> Name .)
    SEMICOL         reduce using rule 142 (DotName -> Name .)
    RPAREN          reduce using rule 142 (DotName -> Name .)
    LEFT_ANGLE      reduce using rule 142 (DotName -> Name .)
    LBRACE          reduce using rule 142 (DotName -> Name .)
    DDD             reduce using rule 142 (DotName -> Name .)
    COMMA           reduce using rule 142 (DotName -> Name .)
    COLON           reduce using rule 142 (DotName -> Name .)
    COLONEQ         reduce using rule 142 (DotName -> Name .)
    OR_RIGHT        reduce using rule 142 (DotName -> Name .)
    LEFT_LEFT       reduce using rule 142 (DotName -> Name .)
    INTEGER         reduce using rule 142 (DotName -> Name .)
    FLOAT           reduce using rule 142 (DotName -> Name .)
    STRING          reduce using rule 142 (DotName -> Name .)
    RBRACE          reduce using rule 142 (DotName -> Name .)
    DOT             shift and go to state 341


state 214

    (26) CommonDecl -> VAR LPAREN VarDeclList . OSemi RPAREN
    (171) VarDeclList -> VarDeclList . SEMICOL VarDecl
    (146) OSemi -> .
    (147) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 343
    RPAREN          reduce using rule 146 (OSemi -> .)

    OSemi                          shift and go to state 342

state 215

    (27) CommonDecl -> VAR LPAREN RPAREN .

    SEMICOL         reduce using rule 27 (CommonDecl -> VAR LPAREN RPAREN .)


state 216

    (170) VarDeclList -> VarDecl .

    SEMICOL         reduce using rule 170 (VarDeclList -> VarDecl .)
    RPAREN          reduce using rule 170 (VarDeclList -> VarDecl .)


state 217

    (31) VarDecl -> DeclNameList NType .
    (32) VarDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 31 (VarDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 31 (VarDecl -> DeclNameList NType .)
    EQUAL           shift and go to state 344


state 218

    (33) VarDecl -> DeclNameList EQUAL . ExprList
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    ExprList                       shift and go to state 345
    Expr                           shift and go to state 118
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 219

    (29) CommonDecl -> NewType LPAREN TypeDeclList . OSemi RPAREN
    (175) TypeDeclList -> TypeDeclList . SEMICOL TypeDecl
    (146) OSemi -> .
    (147) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 347
    RPAREN          reduce using rule 146 (OSemi -> .)

    OSemi                          shift and go to state 346

state 220

    (30) CommonDecl -> NewType LPAREN RPAREN .

    SEMICOL         reduce using rule 30 (CommonDecl -> NewType LPAREN RPAREN .)


state 221

    (174) TypeDeclList -> TypeDecl .

    SEMICOL         reduce using rule 174 (TypeDeclList -> TypeDecl .)
    RPAREN          reduce using rule 174 (TypeDeclList -> TypeDecl .)


state 222

    (40) TypeDecl -> TypeDeclName NType .

    SEMICOL         reduce using rule 40 (TypeDecl -> TypeDeclName NType .)
    RPAREN          reduce using rule 40 (TypeDecl -> TypeDeclName NType .)


state 223

    (105) FuncDecl -> FUNCTION funcmarker FuncDecl_ . FuncBody
    (112) FuncBody -> .
    (113) FuncBody -> . LBRACE cmtlist StmtList cmtlist funcrevmarker RBRACE

    SEMICOL         reduce using rule 112 (FuncBody -> .)
    LBRACE          shift and go to state 349

    FuncBody                       shift and go to state 348

state 224

    (107) FuncDecl_ -> IDENTIFIER . ArgList FuncRes
    (110) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (111) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 109

    ArgList                        shift and go to state 350

state 225

    (108) FuncDecl_ -> LEFT_OR . OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (196) OArgTypeListOComma -> .
    (197) OArgTypeListOComma -> . ArgTypeList OComma
    (194) ArgTypeList -> . ArgType
    (195) ArgTypeList -> . ArgTypeList COMMA ArgType
    (190) ArgType -> . NameOrType
    (191) ArgType -> . IDENTIFIER NameOrType
    (192) ArgType -> . IDENTIFIER DotDotDot
    (193) ArgType -> . DotDotDot
    (241) NameOrType -> . NType
    (212) DotDotDot -> . DDD
    (213) DotDotDot -> . DDD NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 196 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 240
    DDD             shift and go to state 243
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    OArgTypeListOComma             shift and go to state 351
    ArgTypeList                    shift and go to state 237
    ArgType                        shift and go to state 238
    NameOrType                     shift and go to state 239
    DotDotDot                      shift and go to state 241
    NType                          shift and go to state 242
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 226

    (109) FuncType -> FUNCTION ArgList FuncRes .

    LEFT_ANGLE      reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    LBRACE          reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    RPAREN          reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    DDD             reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    COMMA           reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    COLON           reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    EQUAL           reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    COLONEQ         reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    SEMICOL         reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    OR_RIGHT        reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    LEFT_LEFT       reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    INTEGER         reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    FLOAT           reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    STRING          reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACE          reduce using rule 109 (FuncType -> FUNCTION ArgList FuncRes .)


state 227

    (111) ArgList -> ArgList LPAREN . OArgTypeListOComma RPAREN
    (196) OArgTypeListOComma -> .
    (197) OArgTypeListOComma -> . ArgTypeList OComma
    (194) ArgTypeList -> . ArgType
    (195) ArgTypeList -> . ArgTypeList COMMA ArgType
    (190) ArgType -> . NameOrType
    (191) ArgType -> . IDENTIFIER NameOrType
    (192) ArgType -> . IDENTIFIER DotDotDot
    (193) ArgType -> . DotDotDot
    (241) NameOrType -> . NType
    (212) DotDotDot -> . DDD
    (213) DotDotDot -> . DDD NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    RPAREN          reduce using rule 196 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 240
    DDD             shift and go to state 243
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    OArgTypeListOComma             shift and go to state 352
    ArgTypeList                    shift and go to state 237
    ArgType                        shift and go to state 238
    NameOrType                     shift and go to state 239
    DotDotDot                      shift and go to state 241
    NType                          shift and go to state 242
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 228

    (116) FuncRes -> FuncRetType .

    LEFT_ANGLE      reduce using rule 116 (FuncRes -> FuncRetType .)
    LBRACE          reduce using rule 116 (FuncRes -> FuncRetType .)
    RPAREN          reduce using rule 116 (FuncRes -> FuncRetType .)
    DDD             reduce using rule 116 (FuncRes -> FuncRetType .)
    COMMA           reduce using rule 116 (FuncRes -> FuncRetType .)
    COLON           reduce using rule 116 (FuncRes -> FuncRetType .)
    EQUAL           reduce using rule 116 (FuncRes -> FuncRetType .)
    COLONEQ         reduce using rule 116 (FuncRes -> FuncRetType .)
    SEMICOL         reduce using rule 116 (FuncRes -> FuncRetType .)
    OR_RIGHT        reduce using rule 116 (FuncRes -> FuncRetType .)
    LEFT_LEFT       reduce using rule 116 (FuncRes -> FuncRetType .)
    INTEGER         reduce using rule 116 (FuncRes -> FuncRetType .)
    FLOAT           reduce using rule 116 (FuncRes -> FuncRetType .)
    STRING          reduce using rule 116 (FuncRes -> FuncRetType .)
    RBRACE          reduce using rule 116 (FuncRes -> FuncRetType .)


state 229

    (117) FuncRes -> LEFT_OR . OArgTypeListOComma OR_RIGHT
    (196) OArgTypeListOComma -> .
    (197) OArgTypeListOComma -> . ArgTypeList OComma
    (194) ArgTypeList -> . ArgType
    (195) ArgTypeList -> . ArgTypeList COMMA ArgType
    (190) ArgType -> . NameOrType
    (191) ArgType -> . IDENTIFIER NameOrType
    (192) ArgType -> . IDENTIFIER DotDotDot
    (193) ArgType -> . DotDotDot
    (241) NameOrType -> . NType
    (212) DotDotDot -> . DDD
    (213) DotDotDot -> . DDD NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 196 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 240
    DDD             shift and go to state 243
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    OArgTypeListOComma             shift and go to state 353
    ArgTypeList                    shift and go to state 237
    ArgType                        shift and go to state 238
    NameOrType                     shift and go to state 239
    DotDotDot                      shift and go to state 241
    NType                          shift and go to state 242
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 230

    (135) FuncRetType -> FuncType .

    LEFT_ANGLE      reduce using rule 135 (FuncRetType -> FuncType .)
    LBRACE          reduce using rule 135 (FuncRetType -> FuncType .)
    RPAREN          reduce using rule 135 (FuncRetType -> FuncType .)
    DDD             reduce using rule 135 (FuncRetType -> FuncType .)
    COMMA           reduce using rule 135 (FuncRetType -> FuncType .)
    COLON           reduce using rule 135 (FuncRetType -> FuncType .)
    EQUAL           reduce using rule 135 (FuncRetType -> FuncType .)
    COLONEQ         reduce using rule 135 (FuncRetType -> FuncType .)
    SEMICOL         reduce using rule 135 (FuncRetType -> FuncType .)
    OR_RIGHT        reduce using rule 135 (FuncRetType -> FuncType .)
    LEFT_LEFT       reduce using rule 135 (FuncRetType -> FuncType .)
    INTEGER         reduce using rule 135 (FuncRetType -> FuncType .)
    FLOAT           reduce using rule 135 (FuncRetType -> FuncType .)
    STRING          reduce using rule 135 (FuncRetType -> FuncType .)
    RBRACE          reduce using rule 135 (FuncRetType -> FuncType .)


state 231

    (136) FuncRetType -> OtherType .

    LEFT_ANGLE      reduce using rule 136 (FuncRetType -> OtherType .)
    LBRACE          reduce using rule 136 (FuncRetType -> OtherType .)
    RPAREN          reduce using rule 136 (FuncRetType -> OtherType .)
    DDD             reduce using rule 136 (FuncRetType -> OtherType .)
    COMMA           reduce using rule 136 (FuncRetType -> OtherType .)
    COLON           reduce using rule 136 (FuncRetType -> OtherType .)
    EQUAL           reduce using rule 136 (FuncRetType -> OtherType .)
    COLONEQ         reduce using rule 136 (FuncRetType -> OtherType .)
    SEMICOL         reduce using rule 136 (FuncRetType -> OtherType .)
    OR_RIGHT        reduce using rule 136 (FuncRetType -> OtherType .)
    LEFT_LEFT       reduce using rule 136 (FuncRetType -> OtherType .)
    INTEGER         reduce using rule 136 (FuncRetType -> OtherType .)
    FLOAT           reduce using rule 136 (FuncRetType -> OtherType .)
    STRING          reduce using rule 136 (FuncRetType -> OtherType .)
    RBRACE          reduce using rule 136 (FuncRetType -> OtherType .)


state 232

    (137) FuncRetType -> PtrType .

    LEFT_ANGLE      reduce using rule 137 (FuncRetType -> PtrType .)
    LBRACE          reduce using rule 137 (FuncRetType -> PtrType .)
    RPAREN          reduce using rule 137 (FuncRetType -> PtrType .)
    DDD             reduce using rule 137 (FuncRetType -> PtrType .)
    COMMA           reduce using rule 137 (FuncRetType -> PtrType .)
    COLON           reduce using rule 137 (FuncRetType -> PtrType .)
    EQUAL           reduce using rule 137 (FuncRetType -> PtrType .)
    COLONEQ         reduce using rule 137 (FuncRetType -> PtrType .)
    SEMICOL         reduce using rule 137 (FuncRetType -> PtrType .)
    OR_RIGHT        reduce using rule 137 (FuncRetType -> PtrType .)
    LEFT_LEFT       reduce using rule 137 (FuncRetType -> PtrType .)
    INTEGER         reduce using rule 137 (FuncRetType -> PtrType .)
    FLOAT           reduce using rule 137 (FuncRetType -> PtrType .)
    STRING          reduce using rule 137 (FuncRetType -> PtrType .)
    RBRACE          reduce using rule 137 (FuncRetType -> PtrType .)


state 233

    (138) FuncRetType -> DotName .

    LEFT_ANGLE      reduce using rule 138 (FuncRetType -> DotName .)
    LBRACE          reduce using rule 138 (FuncRetType -> DotName .)
    RPAREN          reduce using rule 138 (FuncRetType -> DotName .)
    DDD             reduce using rule 138 (FuncRetType -> DotName .)
    COMMA           reduce using rule 138 (FuncRetType -> DotName .)
    COLON           reduce using rule 138 (FuncRetType -> DotName .)
    EQUAL           reduce using rule 138 (FuncRetType -> DotName .)
    COLONEQ         reduce using rule 138 (FuncRetType -> DotName .)
    SEMICOL         reduce using rule 138 (FuncRetType -> DotName .)
    OR_RIGHT        reduce using rule 138 (FuncRetType -> DotName .)
    LEFT_LEFT       reduce using rule 138 (FuncRetType -> DotName .)
    INTEGER         reduce using rule 138 (FuncRetType -> DotName .)
    FLOAT           reduce using rule 138 (FuncRetType -> DotName .)
    STRING          reduce using rule 138 (FuncRetType -> DotName .)
    RBRACE          reduce using rule 138 (FuncRetType -> DotName .)


state 234

    (139) FuncRetType -> myType .
    (141) myType -> myType . COMMA NewType

  ! shift/reduce conflict for COMMA resolved as shift
    LEFT_ANGLE      reduce using rule 139 (FuncRetType -> myType .)
    LBRACE          reduce using rule 139 (FuncRetType -> myType .)
    RPAREN          reduce using rule 139 (FuncRetType -> myType .)
    DDD             reduce using rule 139 (FuncRetType -> myType .)
    COLON           reduce using rule 139 (FuncRetType -> myType .)
    EQUAL           reduce using rule 139 (FuncRetType -> myType .)
    COLONEQ         reduce using rule 139 (FuncRetType -> myType .)
    SEMICOL         reduce using rule 139 (FuncRetType -> myType .)
    OR_RIGHT        reduce using rule 139 (FuncRetType -> myType .)
    LEFT_LEFT       reduce using rule 139 (FuncRetType -> myType .)
    INTEGER         reduce using rule 139 (FuncRetType -> myType .)
    FLOAT           reduce using rule 139 (FuncRetType -> myType .)
    STRING          reduce using rule 139 (FuncRetType -> myType .)
    RBRACE          reduce using rule 139 (FuncRetType -> myType .)
    COMMA           shift and go to state 354

  ! COMMA           [ reduce using rule 139 (FuncRetType -> myType .) ]


state 235

    (140) myType -> NewType .

    COMMA           reduce using rule 140 (myType -> NewType .)
    LEFT_ANGLE      reduce using rule 140 (myType -> NewType .)
    LBRACE          reduce using rule 140 (myType -> NewType .)
    RPAREN          reduce using rule 140 (myType -> NewType .)
    DDD             reduce using rule 140 (myType -> NewType .)
    COLON           reduce using rule 140 (myType -> NewType .)
    EQUAL           reduce using rule 140 (myType -> NewType .)
    COLONEQ         reduce using rule 140 (myType -> NewType .)
    SEMICOL         reduce using rule 140 (myType -> NewType .)
    OR_RIGHT        reduce using rule 140 (myType -> NewType .)
    LEFT_LEFT       reduce using rule 140 (myType -> NewType .)
    INTEGER         reduce using rule 140 (myType -> NewType .)
    FLOAT           reduce using rule 140 (myType -> NewType .)
    STRING          reduce using rule 140 (myType -> NewType .)
    RBRACE          reduce using rule 140 (myType -> NewType .)


state 236

    (110) ArgList -> LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 355


state 237

    (197) OArgTypeListOComma -> ArgTypeList . OComma
    (195) ArgTypeList -> ArgTypeList . COMMA ArgType
    (144) OComma -> .
    (145) OComma -> . COMMA

    COMMA           shift and go to state 357
    RPAREN          reduce using rule 144 (OComma -> .)
    OR_RIGHT        reduce using rule 144 (OComma -> .)

    OComma                         shift and go to state 356

state 238

    (194) ArgTypeList -> ArgType .

    COMMA           reduce using rule 194 (ArgTypeList -> ArgType .)
    RPAREN          reduce using rule 194 (ArgTypeList -> ArgType .)
    OR_RIGHT        reduce using rule 194 (ArgTypeList -> ArgType .)


state 239

    (190) ArgType -> NameOrType .

    COMMA           reduce using rule 190 (ArgType -> NameOrType .)
    RPAREN          reduce using rule 190 (ArgType -> NameOrType .)
    OR_RIGHT        reduce using rule 190 (ArgType -> NameOrType .)


state 240

    (191) ArgType -> IDENTIFIER . NameOrType
    (192) ArgType -> IDENTIFIER . DotDotDot
    (189) Name -> IDENTIFIER .
    (241) NameOrType -> . NType
    (212) DotDotDot -> . DDD
    (213) DotDotDot -> . DDD NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    DOT             reduce using rule 189 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 189 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 189 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 189 (Name -> IDENTIFIER .)
    DDD             shift and go to state 243
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93

    NameOrType                     shift and go to state 358
    DotDotDot                      shift and go to state 359
    NType                          shift and go to state 242
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 241

    (193) ArgType -> DotDotDot .

    COMMA           reduce using rule 193 (ArgType -> DotDotDot .)
    RPAREN          reduce using rule 193 (ArgType -> DotDotDot .)
    OR_RIGHT        reduce using rule 193 (ArgType -> DotDotDot .)


state 242

    (241) NameOrType -> NType .

    COMMA           reduce using rule 241 (NameOrType -> NType .)
    RPAREN          reduce using rule 241 (NameOrType -> NType .)
    OR_RIGHT        reduce using rule 241 (NameOrType -> NType .)


state 243

    (212) DotDotDot -> DDD .
    (213) DotDotDot -> DDD . NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    COMMA           reduce using rule 212 (DotDotDot -> DDD .)
    RPAREN          reduce using rule 212 (DotDotDot -> DDD .)
    OR_RIGHT        reduce using rule 212 (DotDotDot -> DDD .)
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93

    NType                          shift and go to state 360
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 244

    (206) NonDeclStmt -> LabelName COLON Stmt .

    SEMICOL         reduce using rule 206 (NonDeclStmt -> LabelName COLON Stmt .)


state 245

    (199) Stmt -> CompoundStmt .

    SEMICOL         reduce using rule 199 (Stmt -> CompoundStmt .)


state 246

    (200) Stmt -> CommonDecl .

    SEMICOL         reduce using rule 200 (Stmt -> CommonDecl .)


state 247

    (201) Stmt -> NonDeclStmt .

    SEMICOL         reduce using rule 201 (Stmt -> NonDeclStmt .)


state 248

    (61) CompoundStmt -> LBRACE . compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (62) compundmarker -> .

    COMMENT         reduce using rule 62 (compundmarker -> .)
    LBRACE          reduce using rule 62 (compundmarker -> .)
    CONSTANT        reduce using rule 62 (compundmarker -> .)
    VAR             reduce using rule 62 (compundmarker -> .)
    FALLTHROUGH     reduce using rule 62 (compundmarker -> .)
    BREAK           reduce using rule 62 (compundmarker -> .)
    CONTINUE        reduce using rule 62 (compundmarker -> .)
    GOTO            reduce using rule 62 (compundmarker -> .)
    RETURN          reduce using rule 62 (compundmarker -> .)
    TYPE            reduce using rule 62 (compundmarker -> .)
    FOR             reduce using rule 62 (compundmarker -> .)
    SWITCH          reduce using rule 62 (compundmarker -> .)
    IF              reduce using rule 62 (compundmarker -> .)
    CONSTANTS       reduce using rule 62 (compundmarker -> .)
    IDENTIFIER      reduce using rule 62 (compundmarker -> .)
    LMINUS          reduce using rule 62 (compundmarker -> .)
    LBRACK          reduce using rule 62 (compundmarker -> .)
    STRUCT          reduce using rule 62 (compundmarker -> .)
    INTERFACE       reduce using rule 62 (compundmarker -> .)
    CHAN            reduce using rule 62 (compundmarker -> .)
    AMPERS          reduce using rule 62 (compundmarker -> .)
    NOT             reduce using rule 62 (compundmarker -> .)
    TIMES           reduce using rule 62 (compundmarker -> .)
    PLUS            reduce using rule 62 (compundmarker -> .)
    MINUS           reduce using rule 62 (compundmarker -> .)
    XOR             reduce using rule 62 (compundmarker -> .)
    LPAREN          reduce using rule 62 (compundmarker -> .)
    INTEGER         reduce using rule 62 (compundmarker -> .)
    FLOAT           reduce using rule 62 (compundmarker -> .)
    STRING          reduce using rule 62 (compundmarker -> .)
    FUNCTION        reduce using rule 62 (compundmarker -> .)
    SEMICOL         reduce using rule 62 (compundmarker -> .)

    compundmarker                  shift and go to state 361

state 249

    (42) SimpleStmt -> Expr PLUSEQ Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 42 (SimpleStmt -> Expr PLUSEQ Expr .)
    LBRACE          reduce using rule 42 (SimpleStmt -> Expr PLUSEQ Expr .)
    OROR            shift and go to state 132


state 250

    (43) SimpleStmt -> Expr MINUSEQ Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 43 (SimpleStmt -> Expr MINUSEQ Expr .)
    LBRACE          reduce using rule 43 (SimpleStmt -> Expr MINUSEQ Expr .)
    OROR            shift and go to state 132


state 251

    (44) SimpleStmt -> Expr TIMESEQ Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 44 (SimpleStmt -> Expr TIMESEQ Expr .)
    LBRACE          reduce using rule 44 (SimpleStmt -> Expr TIMESEQ Expr .)
    OROR            shift and go to state 132


state 252

    (45) SimpleStmt -> Expr DIVIDEEQ Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 45 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    LBRACE          reduce using rule 45 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    OROR            shift and go to state 132


state 253

    (46) SimpleStmt -> Expr MODEQ Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 46 (SimpleStmt -> Expr MODEQ Expr .)
    LBRACE          reduce using rule 46 (SimpleStmt -> Expr MODEQ Expr .)
    OROR            shift and go to state 132


state 254

    (47) SimpleStmt -> Expr OREQ Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 47 (SimpleStmt -> Expr OREQ Expr .)
    LBRACE          reduce using rule 47 (SimpleStmt -> Expr OREQ Expr .)
    OROR            shift and go to state 132


state 255

    (48) SimpleStmt -> Expr AMPEQ Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 48 (SimpleStmt -> Expr AMPEQ Expr .)
    LBRACE          reduce using rule 48 (SimpleStmt -> Expr AMPEQ Expr .)
    OROR            shift and go to state 132


state 256

    (49) SimpleStmt -> Expr CAREQ Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 49 (SimpleStmt -> Expr CAREQ Expr .)
    LBRACE          reduce using rule 49 (SimpleStmt -> Expr CAREQ Expr .)
    OROR            shift and go to state 132


state 257

    (50) SimpleStmt -> Expr SHL_ASSIGN Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 50 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    LBRACE          reduce using rule 50 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    OROR            shift and go to state 132


state 258

    (51) SimpleStmt -> Expr SHR_ASSIGN Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 51 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    LBRACE          reduce using rule 51 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    OROR            shift and go to state 132


state 259

    (52) SimpleStmt -> Expr AMPCAREQ Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 52 (SimpleStmt -> Expr AMPCAREQ Expr .)
    LBRACE          reduce using rule 52 (SimpleStmt -> Expr AMPCAREQ Expr .)
    OROR            shift and go to state 132


state 260

    (266) Expr -> Expr OROR Prec2Expr_ .
    (264) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    PLUSEQ          reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSEQ         reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    TIMESEQ         reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    MODEQ           reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    OREQ            reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    AMPEQ           reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    CAREQ           reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    AMPCAREQ        reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSPLUS        reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSMIN        reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    OROR            reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    SEMICOL         reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    EQUAL           reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    COLONEQ         reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    COMMA           reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    RPAREN          reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    LBRACE          reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    PIPE            reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACK          reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACE          reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    DDD             reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    COLON           reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 266 (Expr -> Expr OROR Prec2Expr_ .)
    AMPAMP          shift and go to state 147


state 261

    (53) SimpleStmt -> ExprList EQUAL ExprList .
    (159) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 53 (SimpleStmt -> ExprList EQUAL ExprList .)
    LBRACE          reduce using rule 53 (SimpleStmt -> ExprList EQUAL ExprList .)
    COMMA           shift and go to state 135


state 262

    (54) SimpleStmt -> ExprList COLONEQ ExprList .
    (159) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 54 (SimpleStmt -> ExprList COLONEQ ExprList .)
    LBRACE          reduce using rule 54 (SimpleStmt -> ExprList COLONEQ ExprList .)
    COMMA           shift and go to state 135


state 263

    (159) ExprList -> ExprList COMMA Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    EQUAL           reduce using rule 159 (ExprList -> ExprList COMMA Expr .)
    COLONEQ         reduce using rule 159 (ExprList -> ExprList COMMA Expr .)
    COMMA           reduce using rule 159 (ExprList -> ExprList COMMA Expr .)
    SEMICOL         reduce using rule 159 (ExprList -> ExprList COMMA Expr .)
    LBRACE          reduce using rule 159 (ExprList -> ExprList COMMA Expr .)
    RBRACE          reduce using rule 159 (ExprList -> ExprList COMMA Expr .)
    RPAREN          reduce using rule 159 (ExprList -> ExprList COMMA Expr .)
    OROR            shift and go to state 132


state 264

    (74) ForBody -> ForHeader formarker . LoopBody revmarker
    (67) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 272

    LoopBody                       shift and go to state 362

state 265

    (71) ForHeader -> OSimpleStmt SEMICOL . OSimpleStmt SEMICOL OSimpleStmt
    (148) OSimpleStmt -> .
    (149) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 148 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    OSimpleStmt                    shift and go to state 363
    SimpleStmt                     shift and go to state 140
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 266

    (68) RangeStmt -> ExprList EQUAL . RANGE Expr
    (53) SimpleStmt -> ExprList EQUAL . ExprList
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 364
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    ExprList                       shift and go to state 261
    Expr                           shift and go to state 118
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 267

    (69) RangeStmt -> ExprList COLONEQ . RANGE Expr
    (54) SimpleStmt -> ExprList COLONEQ . ExprList
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 365
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    ExprList                       shift and go to state 262
    Expr                           shift and go to state 118
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 268

    (70) RangeStmt -> RANGE Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 70 (RangeStmt -> RANGE Expr .)
    RBRACK          reduce using rule 70 (RangeStmt -> RANGE Expr .)
    OROR            shift and go to state 132


state 269

    (242) SwitchStmt -> SWITCH IfHeader LBRACE . CaseBlockList RBRACE
    (65) CaseBlockList -> .
    (66) CaseBlockList -> . CaseBlockList CaseBlock

    RBRACE          reduce using rule 65 (CaseBlockList -> .)
    CASE            reduce using rule 65 (CaseBlockList -> .)
    DEFAULT         reduce using rule 65 (CaseBlockList -> .)

    CaseBlockList                  shift and go to state 366

state 270

    (78) IfHeader -> OSimpleStmt SEMICOL . OSimpleStmt
    (148) OSimpleStmt -> .
    (149) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    LBRACE          reduce using rule 148 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    OSimpleStmt                    shift and go to state 367
    SimpleStmt                     shift and go to state 140
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 271

    (79) IfStmt -> IF IfHeader LoopBody . ElseIfList
    (81) ElseIfList -> .
    (82) ElseIfList -> . ElseIf ElseIfList
    (83) ElseIfList -> . Else
    (80) ElseIf -> . ELSE IF IfHeader LoopBody
    (84) Else -> . ELSE CompoundStmt

    SEMICOL         reduce using rule 81 (ElseIfList -> .)
    ELSE            shift and go to state 371

    ElseIfList                     shift and go to state 368
    ElseIf                         shift and go to state 369
    Else                           shift and go to state 370

state 272

    (67) LoopBody -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    LBRACE          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    SEMICOL         reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 372

state 273

    (264) Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .
    (257) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (258) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (260) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (261) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (262) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSEQ          reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSEQ         reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    TIMESEQ         reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MODEQ           reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OREQ            reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPEQ           reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    CAREQ           reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPCAREQ        reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSPLUS        reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSMIN        reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OROR            reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SEMICOL         reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQUAL           reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLONEQ         reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COMMA           reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RPAREN          reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    LBRACE          reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PIPE            reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACK          reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACE          reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DDD             reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLON           reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 264 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQEQ            shift and go to state 148
    NOTEQ           shift and go to state 149
    LEQ             shift and go to state 150
    GEQ             shift and go to state 151
    GREAT           shift and go to state 152
    LESS            shift and go to state 153


state 274

    (257) Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .
    (252) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (253) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LEQ             reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GEQ             reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GREAT           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LESS            reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MODEQ           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OREQ            reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    CAREQ           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OROR            reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    EQUAL           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COMMA           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RPAREN          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LBRACE          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PIPE            reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACK          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACE          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DDD             reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLON           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUS            shift and go to state 157
    MINUS           shift and go to state 158
    XOR             shift and go to state 159
    OR              shift and go to state 160


state 275

    (258) Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .
    (252) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (253) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LEQ             reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GEQ             reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GREAT           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LESS            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MODEQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OREQ            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    CAREQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OROR            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    EQUAL           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COMMA           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RPAREN          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LBRACE          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PIPE            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACK          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACE          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DDD             reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLON           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUS            shift and go to state 157
    MINUS           shift and go to state 158
    XOR             shift and go to state 159
    OR              shift and go to state 160


state 276

    (259) Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .
    (252) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (253) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LEQ             reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GEQ             reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GREAT           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LESS            reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MODEQ           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OREQ            reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    CAREQ           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OROR            reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    EQUAL           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COMMA           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RPAREN          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LBRACE          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PIPE            reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACK          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACE          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DDD             reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLON           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUS            shift and go to state 157
    MINUS           shift and go to state 158
    XOR             shift and go to state 159
    OR              shift and go to state 160


state 277

    (260) Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .
    (252) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (253) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LEQ             reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GEQ             reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GREAT           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LESS            reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MODEQ           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OREQ            reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    CAREQ           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OROR            reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    EQUAL           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COMMA           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RPAREN          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LBRACE          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PIPE            reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACK          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACE          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DDD             reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLON           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUS            shift and go to state 157
    MINUS           shift and go to state 158
    XOR             shift and go to state 159
    OR              shift and go to state 160


state 278

    (261) Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .
    (252) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (253) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    NOTEQ           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LEQ             reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GEQ             reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GREAT           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LESS            reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPAMP          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSEQ          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSEQ         reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    TIMESEQ         reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MODEQ           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OREQ            reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPEQ           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    CAREQ           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPCAREQ        reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSPLUS        reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSMIN        reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OROR            reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SEMICOL         reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    EQUAL           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLONEQ         reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COMMA           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RPAREN          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LBRACE          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PIPE            reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACK          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACE          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DDD             reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLON           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUS            shift and go to state 157
    MINUS           shift and go to state 158
    XOR             shift and go to state 159
    OR              shift and go to state 160


state 279

    (262) Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .
    (252) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (253) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    NOTEQ           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LEQ             reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GEQ             reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GREAT           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LESS            reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPAMP          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSEQ          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSEQ         reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    TIMESEQ         reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MODEQ           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OREQ            reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPEQ           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    CAREQ           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPCAREQ        reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSPLUS        reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSMIN        reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OROR            reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SEMICOL         reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    EQUAL           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLONEQ         reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COMMA           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RPAREN          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LBRACE          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PIPE            reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACK          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACE          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DDD             reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLON           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUS            shift and go to state 157
    MINUS           shift and go to state 158
    XOR             shift and go to state 159
    OR              shift and go to state 160


state 280

    (100) ChannelType -> LMINUS CHAN NewType .

    LBRACE          reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    LEFT_ANGLE      reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    LEFT_LEFT       reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    RPAREN          reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    DDD             reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    COMMA           reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    COLON           reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    EQUAL           reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    COLONEQ         reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    SEMICOL         reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    OR_RIGHT        reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    INTEGER         reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    FLOAT           reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    STRING          reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)
    RBRACE          reduce using rule 100 (ChannelType -> LMINUS CHAN NewType .)


state 281

    (271) Arrayexp -> OtherType LBRACE ExprList . RBRACE
    (159) ExprList -> ExprList . COMMA Expr

    RBRACE          shift and go to state 373
    COMMA           shift and go to state 135


state 282

    (252) Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .
    (244) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (245) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (247) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (248) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (249) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (250) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUS           reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    XOR             reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OR              reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQEQ            reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    NOTEQ           reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LEQ             reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GEQ             reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GREAT           reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LESS            reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPAMP          reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MODEQ           reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OREQ            reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPEQ           reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    CAREQ           reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OROR            reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SEMICOL         reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQUAL           reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLONEQ         reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COMMA           reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RPAREN          reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LBRACE          reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PIPE            reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACK          reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACE          reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DDD             reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLON           reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 252 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDE          shift and go to state 163
    MOD             shift and go to state 164
    SHL             shift and go to state 165
    SHR             shift and go to state 166
    AMPERS          shift and go to state 167
    AMPCAR          shift and go to state 168
    TIMES           shift and go to state 169


state 283

    (253) Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .
    (244) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (245) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (247) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (248) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (249) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (250) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUS           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    XOR             reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OR              reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQEQ            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    NOTEQ           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LEQ             reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GEQ             reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GREAT           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LESS            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPAMP          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MODEQ           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OREQ            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPEQ           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    CAREQ           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OROR            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SEMICOL         reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQUAL           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLONEQ         reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COMMA           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RPAREN          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LBRACE          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PIPE            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACK          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACE          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DDD             reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLON           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDE          shift and go to state 163
    MOD             shift and go to state 164
    SHL             shift and go to state 165
    SHR             shift and go to state 166
    AMPERS          shift and go to state 167
    AMPCAR          shift and go to state 168
    TIMES           shift and go to state 169


state 284

    (254) Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .
    (244) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (245) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (247) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (248) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (249) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (250) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUS           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    XOR             reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OR              reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQEQ            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    NOTEQ           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LEQ             reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GEQ             reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GREAT           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LESS            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPAMP          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSEQ          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSEQ         reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    TIMESEQ         reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MODEQ           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OREQ            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPEQ           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    CAREQ           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSMIN        reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OROR            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SEMICOL         reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQUAL           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLONEQ         reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COMMA           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RPAREN          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LBRACE          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PIPE            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACK          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACE          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DDD             reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLON           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDE          shift and go to state 163
    MOD             shift and go to state 164
    SHL             shift and go to state 165
    SHR             shift and go to state 166
    AMPERS          shift and go to state 167
    AMPCAR          shift and go to state 168
    TIMES           shift and go to state 169


state 285

    (255) Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .
    (244) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (245) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (247) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (248) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (249) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (250) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUS           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    XOR             reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OR              reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQEQ            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    NOTEQ           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LEQ             reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GEQ             reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GREAT           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LESS            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPAMP          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSEQ          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSEQ         reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    TIMESEQ         reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MODEQ           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OREQ            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPEQ           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    CAREQ           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSMIN        reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OROR            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SEMICOL         reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQUAL           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLONEQ         reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COMMA           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RPAREN          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LBRACE          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PIPE            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACK          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACE          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DDD             reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLON           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDE          shift and go to state 163
    MOD             shift and go to state 164
    SHL             shift and go to state 165
    SHR             shift and go to state 166
    AMPERS          shift and go to state 167
    AMPCAR          shift and go to state 168
    TIMES           shift and go to state 169


state 286

    (94) OtherType -> LBRACK OExpr RBRACK . NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93

    NType                          shift and go to state 374
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 287

    (279) ForCompExpr -> LBRACK Expr PIPE . RangeStmt RBRACK
    (68) RangeStmt -> . ExprList EQUAL RANGE Expr
    (69) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (70) RangeStmt -> . RANGE Expr
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 142
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 118
    RangeStmt                      shift and go to state 375
    ExprList                       shift and go to state 376
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 288

    (244) Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .

    DIVIDE          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MOD             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPERS          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAR          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMES           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUS            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUS           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    XOR             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OR              reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQEQ            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    NOTEQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LEQ             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GEQ             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GREAT           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LESS            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPAMP          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSEQ          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSEQ         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMESEQ         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DIVIDEEQ        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MODEQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OREQ            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPEQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    CAREQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL_ASSIGN      reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR_ASSIGN      reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAREQ        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSPLUS        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSMIN        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OROR            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SEMICOL         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQUAL           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLONEQ         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COMMA           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RPAREN          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LBRACE          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PIPE            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACK          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACE          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DDD             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLON           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_RIGHT     reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_ANGLE     reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)


state 289

    (245) Prec5Expr_ -> Prec5Expr_ MOD UExpr .

    DIVIDE          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MOD             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPERS          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAR          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMES           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUS            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUS           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    XOR             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OR              reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQEQ            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    NOTEQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LEQ             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GEQ             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GREAT           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LESS            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPAMP          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSEQ          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSEQ         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMESEQ         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DIVIDEEQ        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MODEQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OREQ            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPEQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    CAREQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL_ASSIGN      reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR_ASSIGN      reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAREQ        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSPLUS        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSMIN        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OROR            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SEMICOL         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQUAL           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLONEQ         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COMMA           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RPAREN          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LBRACE          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PIPE            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACK          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACE          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DDD             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLON           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_RIGHT     reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_ANGLE     reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)


state 290

    (246) Prec5Expr_ -> Prec5Expr_ SHL UExpr .

    DIVIDE          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MOD             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPERS          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAR          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMES           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUS            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUS           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    XOR             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OR              reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQEQ            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    NOTEQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LEQ             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GEQ             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GREAT           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LESS            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPAMP          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSEQ          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSEQ         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMESEQ         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DIVIDEEQ        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MODEQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OREQ            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPEQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    CAREQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL_ASSIGN      reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR_ASSIGN      reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAREQ        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSPLUS        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSMIN        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OROR            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SEMICOL         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQUAL           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLONEQ         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COMMA           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RPAREN          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LBRACE          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PIPE            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACK          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACE          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DDD             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLON           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_RIGHT     reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_ANGLE     reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)


state 291

    (247) Prec5Expr_ -> Prec5Expr_ SHR UExpr .

    DIVIDE          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MOD             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPERS          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAR          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMES           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUS            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUS           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    XOR             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OR              reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQEQ            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    NOTEQ           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LEQ             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GEQ             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GREAT           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LESS            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPAMP          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSEQ          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSEQ         reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMESEQ         reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DIVIDEEQ        reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MODEQ           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OREQ            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPEQ           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    CAREQ           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL_ASSIGN      reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR_ASSIGN      reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAREQ        reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSPLUS        reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSMIN        reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OROR            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SEMICOL         reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQUAL           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLONEQ         reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COMMA           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RPAREN          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LBRACE          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PIPE            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACK          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACE          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DDD             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLON           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_RIGHT     reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_ANGLE     reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)


state 292

    (248) Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .

    DIVIDE          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MOD             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPERS          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAR          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMES           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUS            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUS           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    XOR             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OR              reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQEQ            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    NOTEQ           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LEQ             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GEQ             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GREAT           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LESS            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPAMP          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSEQ          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSEQ         reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMESEQ         reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MODEQ           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OREQ            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPEQ           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    CAREQ           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAREQ        reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSPLUS        reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSMIN        reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OROR            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SEMICOL         reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQUAL           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLONEQ         reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COMMA           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RPAREN          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LBRACE          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PIPE            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACK          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACE          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DDD             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLON           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)


state 293

    (249) Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .

    DIVIDE          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MOD             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPERS          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAR          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMES           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUS            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUS           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    XOR             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OR              reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQEQ            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    NOTEQ           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LEQ             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GEQ             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GREAT           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LESS            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPAMP          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSEQ          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSEQ         reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMESEQ         reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DIVIDEEQ        reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MODEQ           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OREQ            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPEQ           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    CAREQ           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL_ASSIGN      reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR_ASSIGN      reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAREQ        reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSPLUS        reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSMIN        reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OROR            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SEMICOL         reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQUAL           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLONEQ         reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COMMA           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RPAREN          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LBRACE          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PIPE            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACK          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACE          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DDD             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLON           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_RIGHT     reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_ANGLE     reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)


state 294

    (250) Prec5Expr_ -> Prec5Expr_ TIMES UExpr .

    DIVIDE          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MOD             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPERS          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAR          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMES           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUS            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUS           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    XOR             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OR              reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQEQ            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    NOTEQ           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LEQ             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GEQ             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GREAT           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LESS            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPAMP          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSEQ          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSEQ         reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMESEQ         reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DIVIDEEQ        reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MODEQ           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OREQ            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPEQ           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    CAREQ           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAREQ        reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSPLUS        reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSMIN        reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OROR            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SEMICOL         reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQUAL           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLONEQ         reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COMMA           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RPAREN          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LBRACE          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PIPE            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACK          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACE          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DDD             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLON           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)


state 295

    (279) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (266) Expr -> Expr . OROR Prec2Expr_
    (153) OExpr -> Expr .

    PIPE            shift and go to state 287
    OROR            shift and go to state 132
    RBRACK          reduce using rule 153 (OExpr -> Expr .)


state 296

    (101) StructType -> STRUCT LBRACE StructDeclList . OSemi RBRACE
    (119) StructDeclList -> StructDeclList . SEMICOL StructDecl
    (146) OSemi -> .
    (147) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 378
    RBRACE          reduce using rule 146 (OSemi -> .)

    OSemi                          shift and go to state 377

state 297

    (102) StructType -> STRUCT LBRACE RBRACE .

    LBRACE          reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    RPAREN          reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    DDD             reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    COMMA           reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    COLON           reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    EQUAL           reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    COLONEQ         reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    SEMICOL         reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    INTEGER         reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    FLOAT           reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    STRING          reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACE          reduce using rule 102 (StructType -> STRUCT LBRACE RBRACE .)


state 298

    (118) StructDeclList -> StructDecl .

    SEMICOL         reduce using rule 118 (StructDeclList -> StructDecl .)
    RBRACE          reduce using rule 118 (StructDeclList -> StructDecl .)


state 299

    (122) StructDecl -> NewNameList . NType OLiteral
    (181) NewNameList -> NewNameList . COMMA NewName
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    COMMA           shift and go to state 380
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93

    NType                          shift and go to state 379
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 300

    (123) StructDecl -> Embed . OLiteral
    (162) OLiteral -> .
    (163) OLiteral -> . Literal
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING

    SEMICOL         reduce using rule 162 (OLiteral -> .)
    RBRACE          reduce using rule 162 (OLiteral -> .)
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74

    OLiteral                       shift and go to state 381
    Literal                        shift and go to state 382

state 301

    (124) StructDecl -> LPAREN . Embed RPAREN OLiteral
    (126) StructDecl -> LPAREN . TIMES Embed RPAREN OLiteral
    (167) Embed -> . IDENTIFIER

    TIMES           shift and go to state 384
    IDENTIFIER      shift and go to state 385

    Embed                          shift and go to state 383

state 302

    (125) StructDecl -> TIMES . Embed OLiteral
    (127) StructDecl -> TIMES . LPAREN Embed RPAREN OLiteral
    (167) Embed -> . IDENTIFIER

    LPAREN          shift and go to state 387
    IDENTIFIER      shift and go to state 385

    Embed                          shift and go to state 386

state 303

    (180) NewNameList -> NewName .

    COMMA           reduce using rule 180 (NewNameList -> NewName .)
    LPAREN          reduce using rule 180 (NewNameList -> NewName .)
    FUNCTION        reduce using rule 180 (NewNameList -> NewName .)
    LBRACK          reduce using rule 180 (NewNameList -> NewName .)
    TIMES           reduce using rule 180 (NewNameList -> NewName .)
    TYPE            reduce using rule 180 (NewNameList -> NewName .)
    STRUCT          reduce using rule 180 (NewNameList -> NewName .)
    INTERFACE       reduce using rule 180 (NewNameList -> NewName .)
    CHAN            reduce using rule 180 (NewNameList -> NewName .)
    LMINUS          reduce using rule 180 (NewNameList -> NewName .)
    IDENTIFIER      reduce using rule 180 (NewNameList -> NewName .)


state 304

    (167) Embed -> IDENTIFIER .
    (133) NewName -> IDENTIFIER .

    INTEGER         reduce using rule 167 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 167 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 167 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 167 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 167 (Embed -> IDENTIFIER .)
    COMMA           reduce using rule 133 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 133 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 133 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 133 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 133 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 133 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 133 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 133 (NewName -> IDENTIFIER .)
    CHAN            reduce using rule 133 (NewName -> IDENTIFIER .)
    LMINUS          reduce using rule 133 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 133 (NewName -> IDENTIFIER .)


state 305

    (103) InterfaceType -> INTERFACE LBRACE InterfaceDeclList . OSemi RBRACE
    (121) InterfaceDeclList -> InterfaceDeclList . SEMICOL InterfaceDecl
    (146) OSemi -> .
    (147) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 389
    RBRACE          reduce using rule 146 (OSemi -> .)

    OSemi                          shift and go to state 388

state 306

    (104) InterfaceType -> INTERFACE LBRACE RBRACE .

    LBRACE          reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RPAREN          reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    DDD             reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COMMA           reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLON           reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    EQUAL           reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLONEQ         reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    SEMICOL         reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    INTEGER         reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    FLOAT           reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    STRING          reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACE          reduce using rule 104 (InterfaceType -> INTERFACE LBRACE RBRACE .)


state 307

    (120) InterfaceDeclList -> InterfaceDecl .

    SEMICOL         reduce using rule 120 (InterfaceDeclList -> InterfaceDecl .)
    RBRACE          reduce using rule 120 (InterfaceDeclList -> InterfaceDecl .)


state 308

    (128) InterfaceDecl -> NewName . InDecl
    (131) InDecl -> . LPAREN OArgTypeListOComma RPAREN FuncRes

    LPAREN          shift and go to state 391

    InDecl                         shift and go to state 390

state 309

    (129) InterfaceDecl -> IDENTIFIER .
    (133) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 129 (InterfaceDecl -> IDENTIFIER .)
    RBRACE          reduce using rule 129 (InterfaceDecl -> IDENTIFIER .)
    LPAREN          reduce using rule 133 (NewName -> IDENTIFIER .)


state 310

    (130) InterfaceDecl -> LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 392


state 311

    (99) ChannelType -> CHAN LMINUS NewType .

    LBRACE          reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    LEFT_ANGLE      reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    LEFT_LEFT       reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    RPAREN          reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    DDD             reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    COMMA           reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    COLON           reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    EQUAL           reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    COLONEQ         reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    SEMICOL         reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    OR_RIGHT        reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    INTEGER         reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    FLOAT           reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    STRING          reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)
    RBRACE          reduce using rule 99 (ChannelType -> CHAN LMINUS NewType .)


state 312

    (218) PExprNoParen -> PExpr DOT IDENTIFIER .

    DOT             reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACK          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LPAREN          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDE          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MOD             reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL             reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR             reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPERS          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAR          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMES           reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUS            reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUS           reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    XOR             reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OR              reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQEQ            reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    NOTEQ           reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEQ             reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GEQ             reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GREAT           reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LESS            reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPAMP          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MODEQ           reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OREQ            reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPEQ           reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    CAREQ           reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAREQ        reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OROR            reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SEMICOL         reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQUAL           reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLONEQ         reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COMMA           reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RPAREN          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACE          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PIPE            reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACK          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DDD             reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLON           reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACE          reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 218 (PExprNoParen -> PExpr DOT IDENTIFIER .)


state 313

    (219) PExprNoParen -> PExpr DOT LPAREN . ExprOrType RPAREN
    (220) PExprNoParen -> PExpr DOT LPAREN . NewType RPAREN
    (239) ExprOrType -> . Expr
    (240) ExprOrType -> . NonExprType
    (230) NewType -> . TYPE
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (91) NonExprType -> . FuncType
    (92) NonExprType -> . OtherType
    (93) NonExprType -> . TIMES NonExprType
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (156) FuncLiteralDecl -> . FuncType

    TYPE            shift and go to state 33
    CONSTANTS       shift and go to state 40
    TIMES           shift and go to state 92
    LMINUS          shift and go to state 45
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93

    PExpr                          shift and go to state 62
    ExprOrType                     shift and go to state 393
    NewType                        shift and go to state 394
    Expr                           shift and go to state 88
    NonExprType                    shift and go to state 89
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    FuncType                       shift and go to state 90
    OtherType                      shift and go to state 91
    Prec3Expr_                     shift and go to state 44
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec4Expr_                     shift and go to state 47
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncLiteralDecl                shift and go to state 76

state 314

    (280) PseudoCall -> PExpr LPAREN RPAREN .

    DOT             reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACK          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEFT_LEFT       reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    LPAREN          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDE          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    MOD             reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL             reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR             reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPERS          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAR          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMES           reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUS            reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUS           reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    XOR             reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    OR              reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQEQ            reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    NOTEQ           reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEQ             reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    GEQ             reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    GREAT           reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    LESS            reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPAMP          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSEQ          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSEQ         reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMESEQ         reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDEEQ        reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    MODEQ           reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    OREQ            reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPEQ           reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    CAREQ           reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAREQ        reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSMIN        reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    OROR            reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    SEMICOL         reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQUAL           reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLONEQ         reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    COMMA           reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    RPAREN          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACE          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    PIPE            reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACK          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    DDD             reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLON           reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACE          reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_RIGHT     reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_ANGLE     reduce using rule 280 (PseudoCall -> PExpr LPAREN RPAREN .)


state 315

    (281) PseudoCall -> PExpr LPAREN ExprOrTypeList . OComma RPAREN
    (282) PseudoCall -> PExpr LPAREN ExprOrTypeList . DDD OComma RPAREN
    (161) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType
    (144) OComma -> .
    (145) OComma -> . COMMA

    DDD             shift and go to state 396
    COMMA           shift and go to state 397
    RPAREN          reduce using rule 144 (OComma -> .)

    OComma                         shift and go to state 395

state 316

    (160) ExprOrTypeList -> ExprOrType .

    DDD             reduce using rule 160 (ExprOrTypeList -> ExprOrType .)
    COMMA           reduce using rule 160 (ExprOrTypeList -> ExprOrType .)
    RPAREN          reduce using rule 160 (ExprOrTypeList -> ExprOrType .)
    COLON           reduce using rule 160 (ExprOrTypeList -> ExprOrType .)
    EQUAL           reduce using rule 160 (ExprOrTypeList -> ExprOrType .)
    COLONEQ         reduce using rule 160 (ExprOrTypeList -> ExprOrType .)


state 317

    (221) PExprNoParen -> PExpr LBRACK Expr . RBRACK
    (266) Expr -> Expr . OROR Prec2Expr_
    (153) OExpr -> Expr .

    RBRACK          shift and go to state 398
    OROR            shift and go to state 132
    COLON           reduce using rule 153 (OExpr -> Expr .)


state 318

    (222) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr RBRACK
    (223) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr COLON OExpr RBRACK

    COLON           shift and go to state 399


state 319

    (236) BareCompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (186) BracedKeyvalList -> .
    (187) BracedKeyvalList -> . KeyvalList OComma
    (182) KeyvalList -> . Keyval
    (183) KeyvalList -> . BareCompLitExpr
    (184) KeyvalList -> . KeyvalList COMMA Keyval
    (185) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (234) Keyval -> . Expr COLON CompLitExpr
    (235) BareCompLitExpr -> . Expr
    (236) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 186 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 319
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    BracedKeyvalList               shift and go to state 400
    KeyvalList                     shift and go to state 321
    Keyval                         shift and go to state 322
    BareCompLitExpr                shift and go to state 323
    Expr                           shift and go to state 324
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 320

    (227) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 401


state 321

    (187) BracedKeyvalList -> KeyvalList . OComma
    (184) KeyvalList -> KeyvalList . COMMA Keyval
    (185) KeyvalList -> KeyvalList . COMMA BareCompLitExpr
    (144) OComma -> .
    (145) OComma -> . COMMA

    COMMA           shift and go to state 403
    RIGHT_RIGHT     reduce using rule 144 (OComma -> .)

    OComma                         shift and go to state 402

state 322

    (182) KeyvalList -> Keyval .

    COMMA           reduce using rule 182 (KeyvalList -> Keyval .)
    RIGHT_RIGHT     reduce using rule 182 (KeyvalList -> Keyval .)


state 323

    (183) KeyvalList -> BareCompLitExpr .

    COMMA           reduce using rule 183 (KeyvalList -> BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 183 (KeyvalList -> BareCompLitExpr .)


state 324

    (234) Keyval -> Expr . COLON CompLitExpr
    (235) BareCompLitExpr -> Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 404
    COMMA           reduce using rule 235 (BareCompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 235 (BareCompLitExpr -> Expr .)
    OROR            shift and go to state 132


state 325

    (225) PExprNoParen -> ConvType LEFT_ANGLE Expr . OComma RIGHT_ANGLE
    (266) Expr -> Expr . OROR Prec2Expr_
    (144) OComma -> .
    (145) OComma -> . COMMA

    OROR            shift and go to state 132
    RIGHT_ANGLE     reduce using rule 144 (OComma -> .)
    COMMA           shift and go to state 406

    OComma                         shift and go to state 405

state 326

    (226) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 407


state 327

    (157) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist . StmtList cmtlist RBRACE
    (284) cmtlist -> cmtlist . COMMENT
    (178) StmtList -> . Stmt SEMICOL
    (179) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 5
    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    FuncLiteralDecl                shift and go to state 76
    StmtList                       shift and go to state 408
    Stmt                           shift and go to state 409
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75

state 328

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .
    (169) DeclList -> DeclList cmtlist . Declaration SEMICOL
    (284) cmtlist -> cmtlist . COMMENT
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (105) FuncDecl -> . FUNCTION funcmarker FuncDecl_ FuncBody
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 2 (SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .)
    COMMENT         shift and go to state 5
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FUNCTION        shift and go to state 21
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74

    Declaration                    shift and go to state 192
    CommonDecl                     shift and go to state 15
    FuncDecl                       shift and go to state 16
    NonDeclStmt                    shift and go to state 17
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 329

    (8) Imports -> Imports cmtlist Import SEMICOL .

    COMMENT         reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IMPORT          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANT        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    VAR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FUNCTION        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FALLTHROUGH     reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    BREAK           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONTINUE        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    GOTO            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    RETURN          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    TYPE            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FOR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    SWITCH          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IF              reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANTS       reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IDENTIFIER      reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LMINUS          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LBRACK          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    STRUCT          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    INTERFACE       reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CHAN            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    AMPERS          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    NOT             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    TIMES           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    PLUS            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    MINUS           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    XOR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LPAREN          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    INTEGER         reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FLOAT           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    STRING          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    $end            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)


state 330

    (169) DeclList -> DeclList cmtlist Declaration SEMICOL .

    COMMENT         reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANT        reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    VAR             reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FUNCTION        reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    BREAK           reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONTINUE        reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    GOTO            reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    RETURN          reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TYPE            reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FOR             reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    SWITCH          reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IF              reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANTS       reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LMINUS          reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LBRACK          reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRUCT          reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTERFACE       reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CHAN            reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    AMPERS          reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    NOT             reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TIMES           reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    PLUS            reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    MINUS           reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    XOR             reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LPAREN          reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTEGER         reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FLOAT           reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRING          reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    $end            reduce using rule 169 (DeclList -> DeclList cmtlist Declaration SEMICOL .)


state 331

    (10) Import -> IMPORT LPAREN ImportStmtList OSemi . RPAREN

    RPAREN          shift and go to state 410


state 332

    (14) ImportStmtList -> ImportStmtList SEMICOL . ImportStmt
    (147) OSemi -> SEMICOL .
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    RPAREN          reduce using rule 147 (OSemi -> SEMICOL .)
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 85
    DOT             shift and go to state 86

    ImportStmt                     shift and go to state 411
    ImportHere                     shift and go to state 84

state 333

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi . RPAREN

    RPAREN          shift and go to state 412


state 334

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL . ConstDeclList OSemi RPAREN
    (147) OSemi -> SEMICOL .
    (172) ConstDeclList -> . ConstDecl1
    (173) ConstDeclList -> . ConstDeclList SEMICOL ConstDecl1
    (37) ConstDecl1 -> . ConstDecl
    (38) ConstDecl1 -> . DeclNameList
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (176) DeclNameList -> . DeclName
    (177) DeclNameList -> . DeclNameList COMMA DeclName
    (188) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 147 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 99

    ConstDecl                      shift and go to state 413
    ConstDeclList                  shift and go to state 414
    ConstDecl1                     shift and go to state 415
    DeclNameList                   shift and go to state 416
    DeclName                       shift and go to state 98

state 335

    (34) ConstDecl -> DeclNameList NType EQUAL . ExprList
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    ExprList                       shift and go to state 417
    Expr                           shift and go to state 118
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 336

    (36) ConstDecl -> DeclNameList EQUAL ExprList .
    (159) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 36 (ConstDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 36 (ConstDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 135


state 337

    (177) DeclNameList -> DeclNameList COMMA DeclName .

    EQUAL           reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    COMMA           reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    LPAREN          reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    FUNCTION        reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    LBRACK          reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    TIMES           reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    TYPE            reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    STRUCT          reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    INTERFACE       reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    CHAN            reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    LMINUS          reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    IDENTIFIER      reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    SEMICOL         reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)
    RPAREN          reduce using rule 177 (DeclNameList -> DeclNameList COMMA DeclName .)


state 338

    (89) NType -> LPAREN NType . RPAREN

    RPAREN          shift and go to state 418


state 339

    (153) OExpr -> Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 153 (OExpr -> Expr .)
    COLON           reduce using rule 153 (OExpr -> Expr .)
    OROR            shift and go to state 132


state 340

    (134) PtrType -> TIMES NType .

    EQUAL           reduce using rule 134 (PtrType -> TIMES NType .)
    SEMICOL         reduce using rule 134 (PtrType -> TIMES NType .)
    RPAREN          reduce using rule 134 (PtrType -> TIMES NType .)
    LEFT_ANGLE      reduce using rule 134 (PtrType -> TIMES NType .)
    LBRACE          reduce using rule 134 (PtrType -> TIMES NType .)
    DDD             reduce using rule 134 (PtrType -> TIMES NType .)
    COMMA           reduce using rule 134 (PtrType -> TIMES NType .)
    COLON           reduce using rule 134 (PtrType -> TIMES NType .)
    COLONEQ         reduce using rule 134 (PtrType -> TIMES NType .)
    OR_RIGHT        reduce using rule 134 (PtrType -> TIMES NType .)
    LEFT_LEFT       reduce using rule 134 (PtrType -> TIMES NType .)
    INTEGER         reduce using rule 134 (PtrType -> TIMES NType .)
    FLOAT           reduce using rule 134 (PtrType -> TIMES NType .)
    STRING          reduce using rule 134 (PtrType -> TIMES NType .)
    RBRACE          reduce using rule 134 (PtrType -> TIMES NType .)


state 341

    (143) DotName -> Name DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 419


state 342

    (26) CommonDecl -> VAR LPAREN VarDeclList OSemi . RPAREN

    RPAREN          shift and go to state 420


state 343

    (171) VarDeclList -> VarDeclList SEMICOL . VarDecl
    (147) OSemi -> SEMICOL .
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (176) DeclNameList -> . DeclName
    (177) DeclNameList -> . DeclNameList COMMA DeclName
    (188) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 147 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 99

    VarDecl                        shift and go to state 421
    DeclNameList                   shift and go to state 102
    DeclName                       shift and go to state 98

state 344

    (32) VarDecl -> DeclNameList NType EQUAL . ExprList
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    ExprList                       shift and go to state 422
    Expr                           shift and go to state 118
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 345

    (33) VarDecl -> DeclNameList EQUAL ExprList .
    (159) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 33 (VarDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 33 (VarDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 135


state 346

    (29) CommonDecl -> NewType LPAREN TypeDeclList OSemi . RPAREN

    RPAREN          shift and go to state 423


state 347

    (175) TypeDeclList -> TypeDeclList SEMICOL . TypeDecl
    (147) OSemi -> SEMICOL .
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    RPAREN          reduce using rule 147 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 106

    TypeDecl                       shift and go to state 424
    TypeDeclName                   shift and go to state 105

state 348

    (105) FuncDecl -> FUNCTION funcmarker FuncDecl_ FuncBody .

    SEMICOL         reduce using rule 105 (FuncDecl -> FUNCTION funcmarker FuncDecl_ FuncBody .)


state 349

    (113) FuncBody -> LBRACE . cmtlist StmtList cmtlist funcrevmarker RBRACE
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    LBRACE          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    SEMICOL         reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 425

state 350

    (107) FuncDecl_ -> IDENTIFIER ArgList . FuncRes
    (111) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (115) FuncRes -> .
    (116) FuncRes -> . FuncRetType
    (117) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (135) FuncRetType -> . FuncType
    (136) FuncRetType -> . OtherType
    (137) FuncRetType -> . PtrType
    (138) FuncRetType -> . DotName
    (139) FuncRetType -> . myType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (140) myType -> . NewType
    (141) myType -> . myType COMMA NewType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER
    (230) NewType -> . TYPE

    LPAREN          shift and go to state 227
    LBRACE          reduce using rule 115 (FuncRes -> .)
    SEMICOL         reduce using rule 115 (FuncRes -> .)
    LEFT_OR         shift and go to state 229
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93
    TYPE            shift and go to state 33

    FuncRes                        shift and go to state 426
    FuncRetType                    shift and go to state 228
    FuncType                       shift and go to state 230
    OtherType                      shift and go to state 231
    PtrType                        shift and go to state 232
    DotName                        shift and go to state 233
    myType                         shift and go to state 234
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213
    NewType                        shift and go to state 235

state 351

    (108) FuncDecl_ -> LEFT_OR OArgTypeListOComma . OR_RIGHT IDENTIFIER ArgList FuncRes

    OR_RIGHT        shift and go to state 427


state 352

    (111) ArgList -> ArgList LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 428


state 353

    (117) FuncRes -> LEFT_OR OArgTypeListOComma . OR_RIGHT

    OR_RIGHT        shift and go to state 429


state 354

    (141) myType -> myType COMMA . NewType
    (230) NewType -> . TYPE

    TYPE            shift and go to state 33

    NewType                        shift and go to state 430

state 355

    (110) ArgList -> LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    CHAN            reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LMINUS          reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 110 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)


state 356

    (197) OArgTypeListOComma -> ArgTypeList OComma .

    RPAREN          reduce using rule 197 (OArgTypeListOComma -> ArgTypeList OComma .)
    OR_RIGHT        reduce using rule 197 (OArgTypeListOComma -> ArgTypeList OComma .)


state 357

    (195) ArgTypeList -> ArgTypeList COMMA . ArgType
    (145) OComma -> COMMA .
    (190) ArgType -> . NameOrType
    (191) ArgType -> . IDENTIFIER NameOrType
    (192) ArgType -> . IDENTIFIER DotDotDot
    (193) ArgType -> . DotDotDot
    (241) NameOrType -> . NType
    (212) DotDotDot -> . DDD
    (213) DotDotDot -> . DDD NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    RPAREN          reduce using rule 145 (OComma -> COMMA .)
    OR_RIGHT        reduce using rule 145 (OComma -> COMMA .)
    IDENTIFIER      shift and go to state 240
    DDD             shift and go to state 243
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    ArgType                        shift and go to state 431
    NameOrType                     shift and go to state 239
    DotDotDot                      shift and go to state 241
    NType                          shift and go to state 242
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 358

    (191) ArgType -> IDENTIFIER NameOrType .

    COMMA           reduce using rule 191 (ArgType -> IDENTIFIER NameOrType .)
    RPAREN          reduce using rule 191 (ArgType -> IDENTIFIER NameOrType .)
    OR_RIGHT        reduce using rule 191 (ArgType -> IDENTIFIER NameOrType .)


state 359

    (192) ArgType -> IDENTIFIER DotDotDot .

    COMMA           reduce using rule 192 (ArgType -> IDENTIFIER DotDotDot .)
    RPAREN          reduce using rule 192 (ArgType -> IDENTIFIER DotDotDot .)
    OR_RIGHT        reduce using rule 192 (ArgType -> IDENTIFIER DotDotDot .)


state 360

    (213) DotDotDot -> DDD NType .

    COMMA           reduce using rule 213 (DotDotDot -> DDD NType .)
    RPAREN          reduce using rule 213 (DotDotDot -> DDD NType .)
    OR_RIGHT        reduce using rule 213 (DotDotDot -> DDD NType .)


state 361

    (61) CompoundStmt -> LBRACE compundmarker . cmtlist StmtList cmtlist revmarker RBRACE
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    LBRACE          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    SEMICOL         reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 432

state 362

    (74) ForBody -> ForHeader formarker LoopBody . revmarker
    (63) revmarker -> .

    SEMICOL         reduce using rule 63 (revmarker -> .)

    revmarker                      shift and go to state 433

state 363

    (71) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt . SEMICOL OSimpleStmt

    SEMICOL         shift and go to state 434


state 364

    (68) RangeStmt -> ExprList EQUAL RANGE . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 435
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 365

    (69) RangeStmt -> ExprList COLONEQ RANGE . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 436
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 366

    (242) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList . RBRACE
    (66) CaseBlockList -> CaseBlockList . CaseBlock
    (64) CaseBlock -> . Case StmtList
    (57) Case -> . CASE ExprOrTypeList COLON
    (58) Case -> . CASE ExprOrTypeList EQUAL Expr COLON
    (59) Case -> . CASE ExprOrTypeList COLONEQ Expr COLON
    (60) Case -> . DEFAULT COLON

    RBRACE          shift and go to state 437
    CASE            shift and go to state 440
    DEFAULT         shift and go to state 441

    CaseBlock                      shift and go to state 438
    Case                           shift and go to state 439

state 367

    (78) IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 78 (IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .)


state 368

    (79) IfStmt -> IF IfHeader LoopBody ElseIfList .

    SEMICOL         reduce using rule 79 (IfStmt -> IF IfHeader LoopBody ElseIfList .)


state 369

    (82) ElseIfList -> ElseIf . ElseIfList
    (81) ElseIfList -> .
    (82) ElseIfList -> . ElseIf ElseIfList
    (83) ElseIfList -> . Else
    (80) ElseIf -> . ELSE IF IfHeader LoopBody
    (84) Else -> . ELSE CompoundStmt

    SEMICOL         reduce using rule 81 (ElseIfList -> .)
    ELSE            shift and go to state 371

    ElseIf                         shift and go to state 369
    ElseIfList                     shift and go to state 442
    Else                           shift and go to state 370

state 370

    (83) ElseIfList -> Else .

    SEMICOL         reduce using rule 83 (ElseIfList -> Else .)


state 371

    (80) ElseIf -> ELSE . IF IfHeader LoopBody
    (84) Else -> ELSE . CompoundStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE

    IF              shift and go to state 443
    LBRACE          shift and go to state 248

    CompoundStmt                   shift and go to state 444

state 372

    (67) LoopBody -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (284) cmtlist -> cmtlist . COMMENT
    (178) StmtList -> . Stmt SEMICOL
    (179) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 5
    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    StmtList                       shift and go to state 445
    Stmt                           shift and go to state 409
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 373

    (271) Arrayexp -> OtherType LBRACE ExprList RBRACE .

    PLUSEQ          reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MINUSEQ         reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    TIMESEQ         reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    DIVIDEEQ        reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MODEQ           reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    OREQ            reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    AMPEQ           reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    CAREQ           reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SHL_ASSIGN      reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SHR_ASSIGN      reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    AMPCAREQ        reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PLUSPLUS        reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MINUSMIN        reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    OROR            reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SEMICOL         reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    EQUAL           reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COLONEQ         reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COMMA           reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RPAREN          reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    LBRACE          reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PIPE            reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RBRACK          reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RBRACE          reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    DDD             reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COLON           reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RIGHT_RIGHT     reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RIGHT_ANGLE     reduce using rule 271 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)


state 374

    (94) OtherType -> LBRACK OExpr RBRACK NType .

    LBRACE          reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_ANGLE      reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_LEFT       reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    RPAREN          reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    DDD             reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    COMMA           reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLON           reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    EQUAL           reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLONEQ         reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    SEMICOL         reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    OR_RIGHT        reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    INTEGER         reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    FLOAT           reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    STRING          reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACE          reduce using rule 94 (OtherType -> LBRACK OExpr RBRACK NType .)


state 375

    (279) ForCompExpr -> LBRACK Expr PIPE RangeStmt . RBRACK

    RBRACK          shift and go to state 446


state 376

    (68) RangeStmt -> ExprList . EQUAL RANGE Expr
    (69) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (159) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 447
    COLONEQ         shift and go to state 448
    COMMA           shift and go to state 135


state 377

    (101) StructType -> STRUCT LBRACE StructDeclList OSemi . RBRACE

    RBRACE          shift and go to state 449


state 378

    (119) StructDeclList -> StructDeclList SEMICOL . StructDecl
    (147) OSemi -> SEMICOL .
    (122) StructDecl -> . NewNameList NType OLiteral
    (123) StructDecl -> . Embed OLiteral
    (124) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (125) StructDecl -> . TIMES Embed OLiteral
    (126) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (127) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (180) NewNameList -> . NewName
    (181) NewNameList -> . NewNameList COMMA NewName
    (167) Embed -> . IDENTIFIER
    (133) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 147 (OSemi -> SEMICOL .)
    LPAREN          shift and go to state 301
    TIMES           shift and go to state 302
    IDENTIFIER      shift and go to state 304

    StructDecl                     shift and go to state 450
    NewNameList                    shift and go to state 299
    Embed                          shift and go to state 300
    NewName                        shift and go to state 303

state 379

    (122) StructDecl -> NewNameList NType . OLiteral
    (162) OLiteral -> .
    (163) OLiteral -> . Literal
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING

    SEMICOL         reduce using rule 162 (OLiteral -> .)
    RBRACE          reduce using rule 162 (OLiteral -> .)
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74

    OLiteral                       shift and go to state 451
    Literal                        shift and go to state 382

state 380

    (181) NewNameList -> NewNameList COMMA . NewName
    (133) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 113

    NewName                        shift and go to state 452

state 381

    (123) StructDecl -> Embed OLiteral .

    SEMICOL         reduce using rule 123 (StructDecl -> Embed OLiteral .)
    RBRACE          reduce using rule 123 (StructDecl -> Embed OLiteral .)


state 382

    (163) OLiteral -> Literal .

    SEMICOL         reduce using rule 163 (OLiteral -> Literal .)
    RBRACE          reduce using rule 163 (OLiteral -> Literal .)


state 383

    (124) StructDecl -> LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 453


state 384

    (126) StructDecl -> LPAREN TIMES . Embed RPAREN OLiteral
    (167) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 385

    Embed                          shift and go to state 454

state 385

    (167) Embed -> IDENTIFIER .

    RPAREN          reduce using rule 167 (Embed -> IDENTIFIER .)
    INTEGER         reduce using rule 167 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 167 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 167 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 167 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 167 (Embed -> IDENTIFIER .)


state 386

    (125) StructDecl -> TIMES Embed . OLiteral
    (162) OLiteral -> .
    (163) OLiteral -> . Literal
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING

    SEMICOL         reduce using rule 162 (OLiteral -> .)
    RBRACE          reduce using rule 162 (OLiteral -> .)
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74

    OLiteral                       shift and go to state 455
    Literal                        shift and go to state 382

state 387

    (127) StructDecl -> TIMES LPAREN . Embed RPAREN OLiteral
    (167) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 385

    Embed                          shift and go to state 456

state 388

    (103) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi . RBRACE

    RBRACE          shift and go to state 457


state 389

    (121) InterfaceDeclList -> InterfaceDeclList SEMICOL . InterfaceDecl
    (147) OSemi -> SEMICOL .
    (128) InterfaceDecl -> . NewName InDecl
    (129) InterfaceDecl -> . IDENTIFIER
    (130) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (133) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 147 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 309
    LPAREN          shift and go to state 310

    InterfaceDecl                  shift and go to state 458
    NewName                        shift and go to state 308

state 390

    (128) InterfaceDecl -> NewName InDecl .

    SEMICOL         reduce using rule 128 (InterfaceDecl -> NewName InDecl .)
    RBRACE          reduce using rule 128 (InterfaceDecl -> NewName InDecl .)


state 391

    (131) InDecl -> LPAREN . OArgTypeListOComma RPAREN FuncRes
    (196) OArgTypeListOComma -> .
    (197) OArgTypeListOComma -> . ArgTypeList OComma
    (194) ArgTypeList -> . ArgType
    (195) ArgTypeList -> . ArgTypeList COMMA ArgType
    (190) ArgType -> . NameOrType
    (191) ArgType -> . IDENTIFIER NameOrType
    (192) ArgType -> . IDENTIFIER DotDotDot
    (193) ArgType -> . DotDotDot
    (241) NameOrType -> . NType
    (212) DotDotDot -> . DDD
    (213) DotDotDot -> . DDD NType
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    RPAREN          reduce using rule 196 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 240
    DDD             shift and go to state 243
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173

    OArgTypeListOComma             shift and go to state 459
    ArgTypeList                    shift and go to state 237
    ArgType                        shift and go to state 238
    NameOrType                     shift and go to state 239
    DotDotDot                      shift and go to state 241
    NType                          shift and go to state 242
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 392

    (130) InterfaceDecl -> LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 460


state 393

    (219) PExprNoParen -> PExpr DOT LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 461


state 394

    (220) PExprNoParen -> PExpr DOT LPAREN NewType . RPAREN

    RPAREN          shift and go to state 462


state 395

    (281) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma . RPAREN

    RPAREN          shift and go to state 463


state 396

    (282) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD . OComma RPAREN
    (144) OComma -> .
    (145) OComma -> . COMMA

    RPAREN          reduce using rule 144 (OComma -> .)
    COMMA           shift and go to state 406

    OComma                         shift and go to state 464

state 397

    (161) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (145) OComma -> COMMA .
    (239) ExprOrType -> . Expr
    (240) ExprOrType -> . NonExprType
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (91) NonExprType -> . FuncType
    (92) NonExprType -> . OtherType
    (93) NonExprType -> . TIMES NonExprType
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (156) FuncLiteralDecl -> . FuncType

    RPAREN          reduce using rule 145 (OComma -> COMMA .)
    CONSTANTS       shift and go to state 40
    TIMES           shift and go to state 92
    LMINUS          shift and go to state 45
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93

    ExprOrType                     shift and go to state 465
    Expr                           shift and go to state 88
    NonExprType                    shift and go to state 89
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    FuncType                       shift and go to state 90
    OtherType                      shift and go to state 91
    Prec3Expr_                     shift and go to state 44
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec4Expr_                     shift and go to state 47
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncLiteralDecl                shift and go to state 76

state 398

    (221) PExprNoParen -> PExpr LBRACK Expr RBRACK .

    DOT             reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACK          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEFT_LEFT       reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LPAREN          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDE          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MOD             reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL             reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR             reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPERS          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAR          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMES           reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUS            reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUS           reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    XOR             reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OR              reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQEQ            reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    NOTEQ           reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEQ             reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GEQ             reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GREAT           reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LESS            reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPAMP          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSEQ          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSEQ         reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMESEQ         reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDEEQ        reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MODEQ           reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OREQ            reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPEQ           reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    CAREQ           reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAREQ        reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSPLUS        reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSMIN        reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OROR            reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SEMICOL         reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQUAL           reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLONEQ         reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COMMA           reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RPAREN          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACE          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PIPE            reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACK          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DDD             reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLON           reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACE          reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_RIGHT     reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_ANGLE     reduce using rule 221 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)


state 399

    (222) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr RBRACK
    (223) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr COLON OExpr RBRACK
    (152) OExpr -> .
    (153) OExpr -> . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 152 (OExpr -> .)
    COLON           reduce using rule 152 (OExpr -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    PExpr                          shift and go to state 62
    OExpr                          shift and go to state 466
    Expr                           shift and go to state 339
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 400

    (236) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 467


state 401

    (227) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 227 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 402

    (187) BracedKeyvalList -> KeyvalList OComma .

    RIGHT_RIGHT     reduce using rule 187 (BracedKeyvalList -> KeyvalList OComma .)


state 403

    (184) KeyvalList -> KeyvalList COMMA . Keyval
    (185) KeyvalList -> KeyvalList COMMA . BareCompLitExpr
    (145) OComma -> COMMA .
    (234) Keyval -> . Expr COLON CompLitExpr
    (235) BareCompLitExpr -> . Expr
    (236) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 145 (OComma -> COMMA .)
    LEFT_LEFT       shift and go to state 319
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Keyval                         shift and go to state 468
    BareCompLitExpr                shift and go to state 469
    Expr                           shift and go to state 324
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 404

    (234) Keyval -> Expr COLON . CompLitExpr
    (237) CompLitExpr -> . Expr
    (238) CompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    LEFT_LEFT       shift and go to state 472
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 470
    CompLitExpr                    shift and go to state 471
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 405

    (225) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma . RIGHT_ANGLE

    RIGHT_ANGLE     shift and go to state 473


state 406

    (145) OComma -> COMMA .

    RIGHT_ANGLE     reduce using rule 145 (OComma -> COMMA .)
    RPAREN          reduce using rule 145 (OComma -> COMMA .)


state 407

    (226) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 226 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 408

    (157) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList . cmtlist RBRACE
    (179) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 283 (cmtlist -> .)
    COMMENT         reduce using rule 283 (cmtlist -> .)
    LBRACE          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    SEMICOL         reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 474

state 409

    (178) StmtList -> Stmt . SEMICOL

    SEMICOL         shift and go to state 475


state 410

    (10) Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .

    SEMICOL         reduce using rule 10 (Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .)


state 411

    (14) ImportStmtList -> ImportStmtList SEMICOL ImportStmt .

    SEMICOL         reduce using rule 14 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)
    RPAREN          reduce using rule 14 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)


state 412

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .

    SEMICOL         reduce using rule 22 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)


state 413

    (37) ConstDecl1 -> ConstDecl .

    SEMICOL         reduce using rule 37 (ConstDecl1 -> ConstDecl .)
    RPAREN          reduce using rule 37 (ConstDecl1 -> ConstDecl .)


state 414

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList . OSemi RPAREN
    (173) ConstDeclList -> ConstDeclList . SEMICOL ConstDecl1
    (146) OSemi -> .
    (147) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 476
    RPAREN          reduce using rule 146 (OSemi -> .)

    OSemi                          shift and go to state 477

state 415

    (172) ConstDeclList -> ConstDecl1 .

    SEMICOL         reduce using rule 172 (ConstDeclList -> ConstDecl1 .)
    RPAREN          reduce using rule 172 (ConstDeclList -> ConstDecl1 .)


state 416

    (38) ConstDecl1 -> DeclNameList .
    (34) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (35) ConstDecl -> DeclNameList . NType
    (36) ConstDecl -> DeclNameList . EQUAL ExprList
    (177) DeclNameList -> DeclNameList . COMMA DeclName
    (85) NType -> . FuncType
    (86) NType -> . OtherType
    (87) NType -> . PtrType
    (88) NType -> . DotName
    (89) NType -> . LPAREN NType RPAREN
    (90) NType -> . NewType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (230) NewType -> . TYPE
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 38 (ConstDecl1 -> DeclNameList .)
    RPAREN          reduce using rule 38 (ConstDecl1 -> DeclNameList .)
    EQUAL           shift and go to state 203
    COMMA           shift and go to state 204
    LPAREN          shift and go to state 209
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    TYPE            shift and go to state 33
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93

    NType                          shift and go to state 202
    FuncType                       shift and go to state 205
    OtherType                      shift and go to state 206
    PtrType                        shift and go to state 207
    DotName                        shift and go to state 208
    NewType                        shift and go to state 210
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213

state 417

    (34) ConstDecl -> DeclNameList NType EQUAL ExprList .
    (159) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 34 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 34 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 135


state 418

    (89) NType -> LPAREN NType RPAREN .

    EQUAL           reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    SEMICOL         reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    RPAREN          reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    COMMA           reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    LEFT_ANGLE      reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    LBRACE          reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    DDD             reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    COLON           reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    COLONEQ         reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    OR_RIGHT        reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    LEFT_LEFT       reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    INTEGER         reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    FLOAT           reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    STRING          reduce using rule 89 (NType -> LPAREN NType RPAREN .)
    RBRACE          reduce using rule 89 (NType -> LPAREN NType RPAREN .)


state 419

    (143) DotName -> Name DOT IDENTIFIER .

    EQUAL           reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    SEMICOL         reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    RPAREN          reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    LBRACE          reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    DDD             reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    COMMA           reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    COLON           reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    COLONEQ         reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    OR_RIGHT        reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    INTEGER         reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    FLOAT           reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    STRING          reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)
    RBRACE          reduce using rule 143 (DotName -> Name DOT IDENTIFIER .)


state 420

    (26) CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 26 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)


state 421

    (171) VarDeclList -> VarDeclList SEMICOL VarDecl .

    SEMICOL         reduce using rule 171 (VarDeclList -> VarDeclList SEMICOL VarDecl .)
    RPAREN          reduce using rule 171 (VarDeclList -> VarDeclList SEMICOL VarDecl .)


state 422

    (32) VarDecl -> DeclNameList NType EQUAL ExprList .
    (159) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 32 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 32 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 135


state 423

    (29) CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 29 (CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN .)


state 424

    (175) TypeDeclList -> TypeDeclList SEMICOL TypeDecl .

    SEMICOL         reduce using rule 175 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)
    RPAREN          reduce using rule 175 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)


state 425

    (113) FuncBody -> LBRACE cmtlist . StmtList cmtlist funcrevmarker RBRACE
    (284) cmtlist -> cmtlist . COMMENT
    (178) StmtList -> . Stmt SEMICOL
    (179) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 5
    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    StmtList                       shift and go to state 478
    Stmt                           shift and go to state 409
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 426

    (107) FuncDecl_ -> IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 107 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 107 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)


state 427

    (108) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT . IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 479


state 428

    (111) ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    CHAN            reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LMINUS          reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 111 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)


state 429

    (117) FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .

    LEFT_ANGLE      reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LBRACE          reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RPAREN          reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    DDD             reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COMMA           reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLON           reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    EQUAL           reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLONEQ         reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    SEMICOL         reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    OR_RIGHT        reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_LEFT       reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    INTEGER         reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    FLOAT           reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    STRING          reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACE          reduce using rule 117 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)


state 430

    (141) myType -> myType COMMA NewType .

    COMMA           reduce using rule 141 (myType -> myType COMMA NewType .)
    LEFT_ANGLE      reduce using rule 141 (myType -> myType COMMA NewType .)
    LBRACE          reduce using rule 141 (myType -> myType COMMA NewType .)
    RPAREN          reduce using rule 141 (myType -> myType COMMA NewType .)
    DDD             reduce using rule 141 (myType -> myType COMMA NewType .)
    COLON           reduce using rule 141 (myType -> myType COMMA NewType .)
    EQUAL           reduce using rule 141 (myType -> myType COMMA NewType .)
    COLONEQ         reduce using rule 141 (myType -> myType COMMA NewType .)
    SEMICOL         reduce using rule 141 (myType -> myType COMMA NewType .)
    OR_RIGHT        reduce using rule 141 (myType -> myType COMMA NewType .)
    LEFT_LEFT       reduce using rule 141 (myType -> myType COMMA NewType .)
    INTEGER         reduce using rule 141 (myType -> myType COMMA NewType .)
    FLOAT           reduce using rule 141 (myType -> myType COMMA NewType .)
    STRING          reduce using rule 141 (myType -> myType COMMA NewType .)
    RBRACE          reduce using rule 141 (myType -> myType COMMA NewType .)


state 431

    (195) ArgTypeList -> ArgTypeList COMMA ArgType .

    COMMA           reduce using rule 195 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    RPAREN          reduce using rule 195 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    OR_RIGHT        reduce using rule 195 (ArgTypeList -> ArgTypeList COMMA ArgType .)


state 432

    (61) CompoundStmt -> LBRACE compundmarker cmtlist . StmtList cmtlist revmarker RBRACE
    (284) cmtlist -> cmtlist . COMMENT
    (178) StmtList -> . Stmt SEMICOL
    (179) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 5
    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    StmtList                       shift and go to state 480
    Stmt                           shift and go to state 409
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 433

    (74) ForBody -> ForHeader formarker LoopBody revmarker .

    SEMICOL         reduce using rule 74 (ForBody -> ForHeader formarker LoopBody revmarker .)


state 434

    (71) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL . OSimpleStmt
    (148) OSimpleStmt -> .
    (149) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    LBRACE          reduce using rule 148 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    OSimpleStmt                    shift and go to state 481
    SimpleStmt                     shift and go to state 140
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 435

    (68) RangeStmt -> ExprList EQUAL RANGE Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 68 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    RBRACK          reduce using rule 68 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    OROR            shift and go to state 132


state 436

    (69) RangeStmt -> ExprList COLONEQ RANGE Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 69 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    RBRACK          reduce using rule 69 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    OROR            shift and go to state 132


state 437

    (242) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .

    SEMICOL         reduce using rule 242 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)


state 438

    (66) CaseBlockList -> CaseBlockList CaseBlock .

    RBRACE          reduce using rule 66 (CaseBlockList -> CaseBlockList CaseBlock .)
    CASE            reduce using rule 66 (CaseBlockList -> CaseBlockList CaseBlock .)
    DEFAULT         reduce using rule 66 (CaseBlockList -> CaseBlockList CaseBlock .)


state 439

    (64) CaseBlock -> Case . StmtList
    (178) StmtList -> . Stmt SEMICOL
    (179) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    StmtList                       shift and go to state 482
    Stmt                           shift and go to state 409
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 440

    (57) Case -> CASE . ExprOrTypeList COLON
    (58) Case -> CASE . ExprOrTypeList EQUAL Expr COLON
    (59) Case -> CASE . ExprOrTypeList COLONEQ Expr COLON
    (160) ExprOrTypeList -> . ExprOrType
    (161) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (239) ExprOrType -> . Expr
    (240) ExprOrType -> . NonExprType
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (91) NonExprType -> . FuncType
    (92) NonExprType -> . OtherType
    (93) NonExprType -> . TIMES NonExprType
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    TIMES           shift and go to state 92
    LMINUS          shift and go to state 45
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93

    ExprOrTypeList                 shift and go to state 483
    Expr                           shift and go to state 88
    ExprOrType                     shift and go to state 316
    NonExprType                    shift and go to state 89
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    FuncType                       shift and go to state 90
    OtherType                      shift and go to state 91
    Prec3Expr_                     shift and go to state 44
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec4Expr_                     shift and go to state 47
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncLiteralDecl                shift and go to state 76

state 441

    (60) Case -> DEFAULT . COLON

    COLON           shift and go to state 484


state 442

    (82) ElseIfList -> ElseIf ElseIfList .

    SEMICOL         reduce using rule 82 (ElseIfList -> ElseIf ElseIfList .)


state 443

    (80) ElseIf -> ELSE IF . IfHeader LoopBody
    (77) IfHeader -> . OSimpleStmt
    (78) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (148) OSimpleStmt -> .
    (149) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 148 (OSimpleStmt -> .)
    LBRACE          reduce using rule 148 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    IfHeader                       shift and go to state 485
    OSimpleStmt                    shift and go to state 145
    SimpleStmt                     shift and go to state 140
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 444

    (84) Else -> ELSE CompoundStmt .

    SEMICOL         reduce using rule 84 (Else -> ELSE CompoundStmt .)


state 445

    (67) LoopBody -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (179) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 283 (cmtlist -> .)
    COMMENT         reduce using rule 283 (cmtlist -> .)
    LBRACE          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    SEMICOL         reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 486

state 446

    (279) ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .

    DOT             reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACK          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEFT_LEFT       reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LPAREN          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDE          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MOD             reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL             reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR             reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPERS          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAR          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMES           reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUS            reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUS           reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    XOR             reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OR              reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQEQ            reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    NOTEQ           reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEQ             reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GEQ             reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GREAT           reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LESS            reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPAMP          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSEQ          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSEQ         reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMESEQ         reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDEEQ        reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MODEQ           reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OREQ            reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPEQ           reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    CAREQ           reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL_ASSIGN      reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR_ASSIGN      reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAREQ        reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSPLUS        reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSMIN        reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OROR            reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SEMICOL         reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQUAL           reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLONEQ         reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COMMA           reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RPAREN          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACE          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PIPE            reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACK          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DDD             reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLON           reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACE          reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_RIGHT     reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_ANGLE     reduce using rule 279 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)


state 447

    (68) RangeStmt -> ExprList EQUAL . RANGE Expr

    RANGE           shift and go to state 364


state 448

    (69) RangeStmt -> ExprList COLONEQ . RANGE Expr

    RANGE           shift and go to state 365


state 449

    (101) StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .

    LBRACE          reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    DDD             reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COMMA           reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLON           reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    STRING          reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 101 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)


state 450

    (119) StructDeclList -> StructDeclList SEMICOL StructDecl .

    SEMICOL         reduce using rule 119 (StructDeclList -> StructDeclList SEMICOL StructDecl .)
    RBRACE          reduce using rule 119 (StructDeclList -> StructDeclList SEMICOL StructDecl .)


state 451

    (122) StructDecl -> NewNameList NType OLiteral .

    SEMICOL         reduce using rule 122 (StructDecl -> NewNameList NType OLiteral .)
    RBRACE          reduce using rule 122 (StructDecl -> NewNameList NType OLiteral .)


state 452

    (181) NewNameList -> NewNameList COMMA NewName .

    COMMA           reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)
    LPAREN          reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)
    FUNCTION        reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)
    LBRACK          reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)
    TIMES           reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)
    TYPE            reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)
    STRUCT          reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)
    INTERFACE       reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)
    CHAN            reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)
    LMINUS          reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)
    IDENTIFIER      reduce using rule 181 (NewNameList -> NewNameList COMMA NewName .)


state 453

    (124) StructDecl -> LPAREN Embed RPAREN . OLiteral
    (162) OLiteral -> .
    (163) OLiteral -> . Literal
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING

    SEMICOL         reduce using rule 162 (OLiteral -> .)
    RBRACE          reduce using rule 162 (OLiteral -> .)
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74

    OLiteral                       shift and go to state 487
    Literal                        shift and go to state 382

state 454

    (126) StructDecl -> LPAREN TIMES Embed . RPAREN OLiteral

    RPAREN          shift and go to state 488


state 455

    (125) StructDecl -> TIMES Embed OLiteral .

    SEMICOL         reduce using rule 125 (StructDecl -> TIMES Embed OLiteral .)
    RBRACE          reduce using rule 125 (StructDecl -> TIMES Embed OLiteral .)


state 456

    (127) StructDecl -> TIMES LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 489


state 457

    (103) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .

    LBRACE          reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    DDD             reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COMMA           reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLON           reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    STRING          reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 103 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)


state 458

    (121) InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .

    SEMICOL         reduce using rule 121 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)
    RBRACE          reduce using rule 121 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)


state 459

    (131) InDecl -> LPAREN OArgTypeListOComma . RPAREN FuncRes

    RPAREN          shift and go to state 490


state 460

    (130) InterfaceDecl -> LPAREN IDENTIFIER RPAREN .

    SEMICOL         reduce using rule 130 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)
    RBRACE          reduce using rule 130 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)


state 461

    (219) PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 219 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)


state 462

    (220) PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .

    DOT             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LBRACK          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LEFT_LEFT       reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LPAREN          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DIVIDE          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MOD             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHL             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHR             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPERS          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPCAR          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    TIMES           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUS            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUS           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    XOR             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OR              reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    EQEQ            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    NOTEQ           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LEQ             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    GEQ             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    GREAT           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LESS            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPAMP          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUSEQ          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUSEQ         reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    TIMESEQ         reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DIVIDEEQ        reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MODEQ           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OREQ            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPEQ           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    CAREQ           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHL_ASSIGN      reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHR_ASSIGN      reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPCAREQ        reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUSPLUS        reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUSMIN        reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OROR            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SEMICOL         reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    EQUAL           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COLONEQ         reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COMMA           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RPAREN          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LBRACE          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PIPE            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RBRACK          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DDD             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COLON           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RBRACE          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RIGHT_RIGHT     reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RIGHT_ANGLE     reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)


state 463

    (281) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .

    DOT             reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACK          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEFT_LEFT       reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LPAREN          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDE          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MOD             reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL             reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR             reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPERS          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAR          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMES           reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUS            reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUS           reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    XOR             reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OR              reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQEQ            reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    NOTEQ           reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEQ             reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GEQ             reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GREAT           reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LESS            reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPAMP          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSEQ          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSEQ         reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMESEQ         reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDEEQ        reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MODEQ           reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OREQ            reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPEQ           reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    CAREQ           reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAREQ        reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSPLUS        reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSMIN        reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OROR            reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SEMICOL         reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQUAL           reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLONEQ         reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COMMA           reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RPAREN          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACE          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PIPE            reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACK          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DDD             reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLON           reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACE          reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 281 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)


state 464

    (282) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma . RPAREN

    RPAREN          shift and go to state 491


state 465

    (161) ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .

    DDD             reduce using rule 161 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COMMA           reduce using rule 161 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    RPAREN          reduce using rule 161 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLON           reduce using rule 161 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    EQUAL           reduce using rule 161 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLONEQ         reduce using rule 161 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)


state 466

    (222) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . RBRACK
    (223) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . COLON OExpr RBRACK

    RBRACK          shift and go to state 493
    COLON           shift and go to state 492


state 467

    (236) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 236 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 236 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 468

    (184) KeyvalList -> KeyvalList COMMA Keyval .

    COMMA           reduce using rule 184 (KeyvalList -> KeyvalList COMMA Keyval .)
    RIGHT_RIGHT     reduce using rule 184 (KeyvalList -> KeyvalList COMMA Keyval .)


state 469

    (185) KeyvalList -> KeyvalList COMMA BareCompLitExpr .

    COMMA           reduce using rule 185 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 185 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)


state 470

    (237) CompLitExpr -> Expr .
    (266) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 237 (CompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 237 (CompLitExpr -> Expr .)
    OROR            shift and go to state 132


state 471

    (234) Keyval -> Expr COLON CompLitExpr .

    COMMA           reduce using rule 234 (Keyval -> Expr COLON CompLitExpr .)
    RIGHT_RIGHT     reduce using rule 234 (Keyval -> Expr COLON CompLitExpr .)


state 472

    (238) CompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (186) BracedKeyvalList -> .
    (187) BracedKeyvalList -> . KeyvalList OComma
    (182) KeyvalList -> . Keyval
    (183) KeyvalList -> . BareCompLitExpr
    (184) KeyvalList -> . KeyvalList COMMA Keyval
    (185) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (234) Keyval -> . Expr COLON CompLitExpr
    (235) BareCompLitExpr -> . Expr
    (236) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 186 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 319
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    BracedKeyvalList               shift and go to state 494
    KeyvalList                     shift and go to state 321
    Keyval                         shift and go to state 322
    BareCompLitExpr                shift and go to state 323
    Expr                           shift and go to state 324
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 473

    (225) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .

    DOT             reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACK          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEFT_LEFT       reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LPAREN          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDE          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MOD             reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL             reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR             reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPERS          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAR          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMES           reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUS            reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUS           reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    XOR             reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OR              reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQEQ            reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    NOTEQ           reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEQ             reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GEQ             reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GREAT           reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LESS            reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPAMP          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSEQ          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSEQ         reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMESEQ         reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDEEQ        reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MODEQ           reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OREQ            reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPEQ           reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    CAREQ           reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL_ASSIGN      reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR_ASSIGN      reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAREQ        reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSPLUS        reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSMIN        reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OROR            reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SEMICOL         reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQUAL           reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLONEQ         reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COMMA           reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RPAREN          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACE          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PIPE            reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACK          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DDD             reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLON           reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACE          reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_RIGHT     reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_ANGLE     reduce using rule 225 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)


state 474

    (157) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist . RBRACE
    (179) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (284) cmtlist -> cmtlist . COMMENT
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 495
    COMMENT         shift and go to state 5
    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    FuncLiteralDecl                shift and go to state 76
    Stmt                           shift and go to state 496
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75

state 475

    (178) StmtList -> Stmt SEMICOL .

    RBRACE          reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    COMMENT         reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    LBRACE          reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    CONSTANT        reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    VAR             reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    BREAK           reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    CONTINUE        reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    GOTO            reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    RETURN          reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    TYPE            reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    FOR             reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    SWITCH          reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    IF              reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    CONSTANTS       reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    LMINUS          reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    LBRACK          reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    STRUCT          reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    INTERFACE       reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    CHAN            reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    AMPERS          reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    NOT             reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    TIMES           reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    PLUS            reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    MINUS           reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    XOR             reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    LPAREN          reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    INTEGER         reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    FLOAT           reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    STRING          reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    FUNCTION        reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    SEMICOL         reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    CASE            reduce using rule 178 (StmtList -> Stmt SEMICOL .)
    DEFAULT         reduce using rule 178 (StmtList -> Stmt SEMICOL .)


state 476

    (173) ConstDeclList -> ConstDeclList SEMICOL . ConstDecl1
    (147) OSemi -> SEMICOL .
    (37) ConstDecl1 -> . ConstDecl
    (38) ConstDecl1 -> . DeclNameList
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (176) DeclNameList -> . DeclName
    (177) DeclNameList -> . DeclNameList COMMA DeclName
    (188) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 147 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 99

    ConstDecl1                     shift and go to state 497
    ConstDecl                      shift and go to state 413
    DeclNameList                   shift and go to state 416
    DeclName                       shift and go to state 98

state 477

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi . RPAREN

    RPAREN          shift and go to state 498


state 478

    (113) FuncBody -> LBRACE cmtlist StmtList . cmtlist funcrevmarker RBRACE
    (179) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    LBRACE          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    RBRACE          reduce using rule 283 (cmtlist -> .)
    SEMICOL         reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 499

state 479

    (108) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER . ArgList FuncRes
    (110) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (111) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 109

    ArgList                        shift and go to state 500

state 480

    (61) CompoundStmt -> LBRACE compundmarker cmtlist StmtList . cmtlist revmarker RBRACE
    (179) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 283 (cmtlist -> .)
    LBRACE          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    RBRACE          reduce using rule 283 (cmtlist -> .)
    SEMICOL         reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 501

state 481

    (71) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 71 (ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .)


state 482

    (64) CaseBlock -> Case StmtList .
    (179) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (283) cmtlist -> .
    (284) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 64 (CaseBlock -> Case StmtList .)
    CASE            reduce using rule 64 (CaseBlock -> Case StmtList .)
    DEFAULT         reduce using rule 64 (CaseBlock -> Case StmtList .)
    COMMENT         reduce using rule 283 (cmtlist -> .)
    LBRACE          reduce using rule 283 (cmtlist -> .)
    CONSTANT        reduce using rule 283 (cmtlist -> .)
    VAR             reduce using rule 283 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 283 (cmtlist -> .)
    BREAK           reduce using rule 283 (cmtlist -> .)
    CONTINUE        reduce using rule 283 (cmtlist -> .)
    GOTO            reduce using rule 283 (cmtlist -> .)
    RETURN          reduce using rule 283 (cmtlist -> .)
    TYPE            reduce using rule 283 (cmtlist -> .)
    FOR             reduce using rule 283 (cmtlist -> .)
    SWITCH          reduce using rule 283 (cmtlist -> .)
    IF              reduce using rule 283 (cmtlist -> .)
    CONSTANTS       reduce using rule 283 (cmtlist -> .)
    IDENTIFIER      reduce using rule 283 (cmtlist -> .)
    LMINUS          reduce using rule 283 (cmtlist -> .)
    LBRACK          reduce using rule 283 (cmtlist -> .)
    STRUCT          reduce using rule 283 (cmtlist -> .)
    INTERFACE       reduce using rule 283 (cmtlist -> .)
    CHAN            reduce using rule 283 (cmtlist -> .)
    AMPERS          reduce using rule 283 (cmtlist -> .)
    NOT             reduce using rule 283 (cmtlist -> .)
    TIMES           reduce using rule 283 (cmtlist -> .)
    PLUS            reduce using rule 283 (cmtlist -> .)
    MINUS           reduce using rule 283 (cmtlist -> .)
    XOR             reduce using rule 283 (cmtlist -> .)
    LPAREN          reduce using rule 283 (cmtlist -> .)
    INTEGER         reduce using rule 283 (cmtlist -> .)
    FLOAT           reduce using rule 283 (cmtlist -> .)
    STRING          reduce using rule 283 (cmtlist -> .)
    FUNCTION        reduce using rule 283 (cmtlist -> .)
    SEMICOL         reduce using rule 283 (cmtlist -> .)

    cmtlist                        shift and go to state 502

state 483

    (57) Case -> CASE ExprOrTypeList . COLON
    (58) Case -> CASE ExprOrTypeList . EQUAL Expr COLON
    (59) Case -> CASE ExprOrTypeList . COLONEQ Expr COLON
    (161) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType

    COLON           shift and go to state 503
    EQUAL           shift and go to state 504
    COLONEQ         shift and go to state 505
    COMMA           shift and go to state 506


state 484

    (60) Case -> DEFAULT COLON .

    LBRACE          reduce using rule 60 (Case -> DEFAULT COLON .)
    CONSTANT        reduce using rule 60 (Case -> DEFAULT COLON .)
    VAR             reduce using rule 60 (Case -> DEFAULT COLON .)
    FALLTHROUGH     reduce using rule 60 (Case -> DEFAULT COLON .)
    BREAK           reduce using rule 60 (Case -> DEFAULT COLON .)
    CONTINUE        reduce using rule 60 (Case -> DEFAULT COLON .)
    GOTO            reduce using rule 60 (Case -> DEFAULT COLON .)
    RETURN          reduce using rule 60 (Case -> DEFAULT COLON .)
    TYPE            reduce using rule 60 (Case -> DEFAULT COLON .)
    FOR             reduce using rule 60 (Case -> DEFAULT COLON .)
    SWITCH          reduce using rule 60 (Case -> DEFAULT COLON .)
    IF              reduce using rule 60 (Case -> DEFAULT COLON .)
    CONSTANTS       reduce using rule 60 (Case -> DEFAULT COLON .)
    IDENTIFIER      reduce using rule 60 (Case -> DEFAULT COLON .)
    LMINUS          reduce using rule 60 (Case -> DEFAULT COLON .)
    LBRACK          reduce using rule 60 (Case -> DEFAULT COLON .)
    STRUCT          reduce using rule 60 (Case -> DEFAULT COLON .)
    INTERFACE       reduce using rule 60 (Case -> DEFAULT COLON .)
    CHAN            reduce using rule 60 (Case -> DEFAULT COLON .)
    AMPERS          reduce using rule 60 (Case -> DEFAULT COLON .)
    NOT             reduce using rule 60 (Case -> DEFAULT COLON .)
    TIMES           reduce using rule 60 (Case -> DEFAULT COLON .)
    PLUS            reduce using rule 60 (Case -> DEFAULT COLON .)
    MINUS           reduce using rule 60 (Case -> DEFAULT COLON .)
    XOR             reduce using rule 60 (Case -> DEFAULT COLON .)
    LPAREN          reduce using rule 60 (Case -> DEFAULT COLON .)
    INTEGER         reduce using rule 60 (Case -> DEFAULT COLON .)
    FLOAT           reduce using rule 60 (Case -> DEFAULT COLON .)
    STRING          reduce using rule 60 (Case -> DEFAULT COLON .)
    FUNCTION        reduce using rule 60 (Case -> DEFAULT COLON .)
    SEMICOL         reduce using rule 60 (Case -> DEFAULT COLON .)


state 485

    (80) ElseIf -> ELSE IF IfHeader . LoopBody
    (67) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 272

    LoopBody                       shift and go to state 507

state 486

    (67) LoopBody -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (179) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (284) cmtlist -> cmtlist . COMMENT
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 508
    COMMENT         shift and go to state 5
    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    Stmt                           shift and go to state 496
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 487

    (124) StructDecl -> LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 124 (StructDecl -> LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 124 (StructDecl -> LPAREN Embed RPAREN OLiteral .)


state 488

    (126) StructDecl -> LPAREN TIMES Embed RPAREN . OLiteral
    (162) OLiteral -> .
    (163) OLiteral -> . Literal
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING

    SEMICOL         reduce using rule 162 (OLiteral -> .)
    RBRACE          reduce using rule 162 (OLiteral -> .)
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74

    OLiteral                       shift and go to state 509
    Literal                        shift and go to state 382

state 489

    (127) StructDecl -> TIMES LPAREN Embed RPAREN . OLiteral
    (162) OLiteral -> .
    (163) OLiteral -> . Literal
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING

    SEMICOL         reduce using rule 162 (OLiteral -> .)
    RBRACE          reduce using rule 162 (OLiteral -> .)
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74

    OLiteral                       shift and go to state 510
    Literal                        shift and go to state 382

state 490

    (131) InDecl -> LPAREN OArgTypeListOComma RPAREN . FuncRes
    (115) FuncRes -> .
    (116) FuncRes -> . FuncRetType
    (117) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (135) FuncRetType -> . FuncType
    (136) FuncRetType -> . OtherType
    (137) FuncRetType -> . PtrType
    (138) FuncRetType -> . DotName
    (139) FuncRetType -> . myType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (140) myType -> . NewType
    (141) myType -> . myType COMMA NewType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER
    (230) NewType -> . TYPE

    SEMICOL         reduce using rule 115 (FuncRes -> .)
    RBRACE          reduce using rule 115 (FuncRes -> .)
    LEFT_OR         shift and go to state 229
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93
    TYPE            shift and go to state 33

    FuncRes                        shift and go to state 511
    FuncRetType                    shift and go to state 228
    FuncType                       shift and go to state 230
    OtherType                      shift and go to state 231
    PtrType                        shift and go to state 232
    DotName                        shift and go to state 233
    myType                         shift and go to state 234
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213
    NewType                        shift and go to state 235

state 491

    (282) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .

    DOT             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACK          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEFT_LEFT       reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LPAREN          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDE          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MOD             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPERS          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAR          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMES           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUS            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUS           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    XOR             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OR              reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQEQ            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    NOTEQ           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEQ             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GEQ             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GREAT           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LESS            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPAMP          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSEQ          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSEQ         reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMESEQ         reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDEEQ        reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MODEQ           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OREQ            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPEQ           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    CAREQ           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAREQ        reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSPLUS        reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSMIN        reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OROR            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SEMICOL         reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQUAL           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLONEQ         reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COMMA           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RPAREN          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACE          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PIPE            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACK          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DDD             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLON           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACE          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)


state 492

    (223) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON . OExpr RBRACK
    (152) OExpr -> .
    (153) OExpr -> . Expr
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 152 (OExpr -> .)
    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    PExpr                          shift and go to state 62
    OExpr                          shift and go to state 512
    Expr                           shift and go to state 339
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 493

    (222) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 222 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)


state 494

    (238) CompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 513


state 495

    (157) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .

    DOT             reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACK          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEFT_LEFT       reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LPAREN          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDE          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MOD             reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL             reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR             reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPERS          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAR          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMES           reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUS            reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUS           reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    XOR             reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OR              reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQEQ            reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    NOTEQ           reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEQ             reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GEQ             reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GREAT           reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LESS            reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPAMP          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSEQ          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSEQ         reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMESEQ         reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDEEQ        reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MODEQ           reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OREQ            reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPEQ           reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    CAREQ           reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL_ASSIGN      reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR_ASSIGN      reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAREQ        reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSPLUS        reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSMIN        reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OROR            reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SEMICOL         reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQUAL           reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLONEQ         reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COMMA           reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RPAREN          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACE          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PIPE            reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACK          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DDD             reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLON           reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACE          reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_RIGHT     reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_ANGLE     reduce using rule 157 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)


state 496

    (179) StmtList -> StmtList cmtlist Stmt . SEMICOL

    SEMICOL         shift and go to state 514


state 497

    (173) ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .

    SEMICOL         reduce using rule 173 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)
    RPAREN          reduce using rule 173 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)


state 498

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 23 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)


state 499

    (113) FuncBody -> LBRACE cmtlist StmtList cmtlist . funcrevmarker RBRACE
    (179) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (284) cmtlist -> cmtlist . COMMENT
    (114) funcrevmarker -> .
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 5
    RBRACE          reduce using rule 114 (funcrevmarker -> .)
    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    funcrevmarker                  shift and go to state 515
    Stmt                           shift and go to state 496
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 500

    (108) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList . FuncRes
    (111) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (115) FuncRes -> .
    (116) FuncRes -> . FuncRetType
    (117) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (135) FuncRetType -> . FuncType
    (136) FuncRetType -> . OtherType
    (137) FuncRetType -> . PtrType
    (138) FuncRetType -> . DotName
    (139) FuncRetType -> . myType
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (134) PtrType -> . TIMES NType
    (142) DotName -> . Name
    (143) DotName -> . Name DOT IDENTIFIER
    (140) myType -> . NewType
    (141) myType -> . myType COMMA NewType
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (189) Name -> . IDENTIFIER
    (230) NewType -> . TYPE

    LPAREN          shift and go to state 227
    LBRACE          reduce using rule 115 (FuncRes -> .)
    SEMICOL         reduce using rule 115 (FuncRes -> .)
    LEFT_OR         shift and go to state 229
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 211
    TIMES           shift and go to state 212
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    LMINUS          shift and go to state 173
    IDENTIFIER      shift and go to state 93
    TYPE            shift and go to state 33

    FuncRes                        shift and go to state 516
    FuncRetType                    shift and go to state 228
    FuncType                       shift and go to state 230
    OtherType                      shift and go to state 231
    PtrType                        shift and go to state 232
    DotName                        shift and go to state 233
    myType                         shift and go to state 234
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Name                           shift and go to state 213
    NewType                        shift and go to state 235

state 501

    (61) CompoundStmt -> LBRACE compundmarker cmtlist StmtList cmtlist . revmarker RBRACE
    (179) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (284) cmtlist -> cmtlist . COMMENT
    (63) revmarker -> .
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 5
    RBRACE          reduce using rule 63 (revmarker -> .)
    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    revmarker                      shift and go to state 517
    Stmt                           shift and go to state 496
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 502

    (179) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (284) cmtlist -> cmtlist . COMMENT
    (198) Stmt -> .
    (199) Stmt -> . CompoundStmt
    (200) Stmt -> . CommonDecl
    (201) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (202) NonDeclStmt -> . SimpleStmt
    (203) NonDeclStmt -> . ForStmt
    (204) NonDeclStmt -> . SwitchStmt
    (205) NonDeclStmt -> . IfStmt
    (206) NonDeclStmt -> . LabelName COLON Stmt
    (207) NonDeclStmt -> . FALLTHROUGH
    (208) NonDeclStmt -> . BREAK ONewName
    (209) NonDeclStmt -> . CONTINUE ONewName
    (210) NonDeclStmt -> . GOTO NewName
    (211) NonDeclStmt -> . RETURN OExprList
    (230) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (242) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (79) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (132) LabelName -> . NewName
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (158) ExprList -> . Expr
    (159) ExprList -> . ExprList COMMA Expr
    (133) NewName -> . IDENTIFIER
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 5
    SEMICOL         reduce using rule 198 (Stmt -> .)
    LBRACE          shift and go to state 248
    CONSTANT        shift and go to state 18
    VAR             shift and go to state 19
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29
    GOTO            shift and go to state 30
    RETURN          shift and go to state 32
    TYPE            shift and go to state 33
    FOR             shift and go to state 36
    SWITCH          shift and go to state 37
    IF              shift and go to state 38
    CONSTANTS       shift and go to state 40
    IDENTIFIER      shift and go to state 43
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    FUNCTION        shift and go to state 94

    Stmt                           shift and go to state 496
    CompoundStmt                   shift and go to state 245
    CommonDecl                     shift and go to state 246
    NonDeclStmt                    shift and go to state 247
    NewType                        shift and go to state 20
    SimpleStmt                     shift and go to state 22
    ForStmt                        shift and go to state 23
    SwitchStmt                     shift and go to state 24
    IfStmt                         shift and go to state 25
    LabelName                      shift and go to state 26
    NewName                        shift and go to state 31
    Expr                           shift and go to state 34
    ExprList                       shift and go to state 35
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 503

    (57) Case -> CASE ExprOrTypeList COLON .

    LBRACE          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANT        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    VAR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FALLTHROUGH     reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    BREAK           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONTINUE        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    GOTO            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    RETURN          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    TYPE            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FOR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    SWITCH          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    IF              reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANTS       reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    IDENTIFIER      reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LMINUS          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LBRACK          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    STRUCT          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    INTERFACE       reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CHAN            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    AMPERS          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    NOT             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    TIMES           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    PLUS            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    MINUS           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    XOR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LPAREN          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    INTEGER         reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FLOAT           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    STRING          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FUNCTION        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    SEMICOL         reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)


state 504

    (58) Case -> CASE ExprOrTypeList EQUAL . Expr COLON
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 518
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 505

    (59) Case -> CASE ExprOrTypeList COLONEQ . Expr COLON
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    LMINUS          shift and go to state 45
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    TIMES           shift and go to state 61
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93
    FUNCTION        shift and go to state 94

    Expr                           shift and go to state 519
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    Prec3Expr_                     shift and go to state 44
    OtherType                      shift and go to state 46
    Prec4Expr_                     shift and go to state 47
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncType                       shift and go to state 75
    FuncLiteralDecl                shift and go to state 76

state 506

    (161) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (239) ExprOrType -> . Expr
    (240) ExprOrType -> . NonExprType
    (265) Expr -> . Prec2Expr_
    (266) Expr -> . Expr OROR Prec2Expr_
    (267) Expr -> . CONSTANTS
    (268) Expr -> . Chexpr
    (269) Expr -> . Arrayexp
    (91) NonExprType -> . FuncType
    (92) NonExprType -> . OtherType
    (93) NonExprType -> . TIMES NonExprType
    (263) Prec2Expr_ -> . Prec3Expr_
    (264) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (270) Chexpr -> . LMINUS IDENTIFIER
    (271) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (109) FuncType -> . FUNCTION ArgList FuncRes
    (94) OtherType -> . LBRACK OExpr RBRACK NType
    (95) OtherType -> . StructType
    (96) OtherType -> . InterfaceType
    (97) OtherType -> . ChannelType
    (256) Prec3Expr_ -> . Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (101) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (102) StructType -> . STRUCT LBRACE RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE RBRACE
    (98) ChannelType -> . CHAN NewType
    (99) ChannelType -> . CHAN LMINUS NewType
    (100) ChannelType -> . LMINUS CHAN NewType
    (251) Prec4Expr_ -> . Prec5Expr_
    (252) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (243) Prec5Expr_ -> . UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (272) UExpr -> . PExpr
    (273) UExpr -> . AMPERS UExpr
    (274) UExpr -> . NOT UExpr
    (275) UExpr -> . TIMES UExpr
    (276) UExpr -> . PLUS UExpr
    (277) UExpr -> . MINUS UExpr
    (278) UExpr -> . XOR UExpr
    (214) PExpr -> . PExprNoParen
    (215) PExpr -> . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . Literal
    (217) PExprNoParen -> . Name
    (218) PExprNoParen -> . PExpr DOT IDENTIFIER
    (219) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (220) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (221) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (222) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PseudoCall
    (225) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (226) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (227) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . FuncLiteral
    (229) PExprNoParen -> . ForCompExpr
    (164) Literal -> . INTEGER
    (165) Literal -> . FLOAT
    (166) Literal -> . STRING
    (189) Name -> . IDENTIFIER
    (280) PseudoCall -> . PExpr LPAREN RPAREN
    (281) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (231) ConvType -> . FuncType
    (232) ConvType -> . OtherType
    (233) CompType -> . OtherType
    (157) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (279) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (156) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 40
    TIMES           shift and go to state 92
    LMINUS          shift and go to state 45
    FUNCTION        shift and go to state 94
    LBRACK          shift and go to state 48
    STRUCT          shift and go to state 56
    INTERFACE       shift and go to state 57
    CHAN            shift and go to state 58
    AMPERS          shift and go to state 60
    NOT             shift and go to state 63
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    XOR             shift and go to state 55
    LPAREN          shift and go to state 14
    INTEGER         shift and go to state 72
    FLOAT           shift and go to state 73
    STRING          shift and go to state 74
    IDENTIFIER      shift and go to state 93

    ExprOrType                     shift and go to state 465
    Expr                           shift and go to state 88
    NonExprType                    shift and go to state 89
    Prec2Expr_                     shift and go to state 39
    Chexpr                         shift and go to state 41
    Arrayexp                       shift and go to state 42
    FuncType                       shift and go to state 90
    OtherType                      shift and go to state 91
    Prec3Expr_                     shift and go to state 44
    StructType                     shift and go to state 49
    InterfaceType                  shift and go to state 50
    ChannelType                    shift and go to state 51
    Prec4Expr_                     shift and go to state 47
    Prec5Expr_                     shift and go to state 52
    UExpr                          shift and go to state 59
    PExpr                          shift and go to state 62
    PExprNoParen                   shift and go to state 64
    Literal                        shift and go to state 65
    Name                           shift and go to state 66
    PseudoCall                     shift and go to state 67
    ConvType                       shift and go to state 68
    CompType                       shift and go to state 69
    FuncLiteral                    shift and go to state 70
    ForCompExpr                    shift and go to state 71
    FuncLiteralDecl                shift and go to state 76

state 507

    (80) ElseIf -> ELSE IF IfHeader LoopBody .

    ELSE            reduce using rule 80 (ElseIf -> ELSE IF IfHeader LoopBody .)
    SEMICOL         reduce using rule 80 (ElseIf -> ELSE IF IfHeader LoopBody .)


state 508

    (67) LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .

    ELSE            reduce using rule 67 (LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)
    SEMICOL         reduce using rule 67 (LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 509

    (126) StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 126 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 126 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)


state 510

    (127) StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 127 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 127 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)


state 511

    (131) InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .

    SEMICOL         reduce using rule 131 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)
    RBRACE          reduce using rule 131 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)


state 512

    (223) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr . RBRACK

    RBRACK          shift and go to state 520


state 513

    (238) CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 238 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 238 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 514

    (179) StmtList -> StmtList cmtlist Stmt SEMICOL .

    RBRACE          reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    COMMENT         reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACE          reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANT        reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    VAR             reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    BREAK           reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONTINUE        reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    GOTO            reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    RETURN          reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TYPE            reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FOR             reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SWITCH          reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IF              reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANTS       reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LMINUS          reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACK          reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRUCT          reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTERFACE       reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CHAN            reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    AMPERS          reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    NOT             reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TIMES           reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    PLUS            reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    MINUS           reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    XOR             reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LPAREN          reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTEGER         reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FLOAT           reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRING          reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FUNCTION        reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SEMICOL         reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CASE            reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    DEFAULT         reduce using rule 179 (StmtList -> StmtList cmtlist Stmt SEMICOL .)


state 515

    (113) FuncBody -> LBRACE cmtlist StmtList cmtlist funcrevmarker . RBRACE

    RBRACE          shift and go to state 521


state 516

    (108) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 108 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 108 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)


state 517

    (61) CompoundStmt -> LBRACE compundmarker cmtlist StmtList cmtlist revmarker . RBRACE

    RBRACE          shift and go to state 522


state 518

    (58) Case -> CASE ExprOrTypeList EQUAL Expr . COLON
    (266) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 523
    OROR            shift and go to state 132


state 519

    (59) Case -> CASE ExprOrTypeList COLONEQ Expr . COLON
    (266) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 524
    OROR            shift and go to state 132


state 520

    (223) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)


state 521

    (113) FuncBody -> LBRACE cmtlist StmtList cmtlist funcrevmarker RBRACE .

    SEMICOL         reduce using rule 113 (FuncBody -> LBRACE cmtlist StmtList cmtlist funcrevmarker RBRACE .)


state 522

    (61) CompoundStmt -> LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE .

    SEMICOL         reduce using rule 61 (CompoundStmt -> LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE .)


state 523

    (58) Case -> CASE ExprOrTypeList EQUAL Expr COLON .

    LBRACE          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANT        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    VAR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FALLTHROUGH     reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    BREAK           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONTINUE        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    GOTO            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    RETURN          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TYPE            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FOR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SWITCH          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IF              reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANTS       reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IDENTIFIER      reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LMINUS          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LBRACK          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRUCT          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTERFACE       reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CHAN            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    AMPERS          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    NOT             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TIMES           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    PLUS            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MINUS           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    XOR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LPAREN          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTEGER         reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FLOAT           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRING          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FUNCTION        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SEMICOL         reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)


state 524

    (59) Case -> CASE ExprOrTypeList COLONEQ Expr COLON .

    LBRACE          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANT        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    VAR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FALLTHROUGH     reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    BREAK           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONTINUE        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    GOTO            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    RETURN          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TYPE            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FOR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SWITCH          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IF              reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANTS       reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IDENTIFIER      reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LMINUS          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LBRACK          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRUCT          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTERFACE       reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CHAN            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    AMPERS          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    NOT             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TIMES           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    PLUS            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MINUS           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    XOR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LPAREN          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTEGER         reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FLOAT           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRING          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FUNCTION        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SEMICOL         reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 234 resolved as shift
