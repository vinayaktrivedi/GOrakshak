Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
Rule 3     SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist
Rule 4     SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist
Rule 5     SourceFile -> cmtlist PackageClause cmtlist
Rule 6     PackageClause -> PACKAGE IDENTIFIER SEMICOL
Rule 7     Imports -> Import SEMICOL
Rule 8     Imports -> Imports cmtlist Import SEMICOL
Rule 9     Import -> IMPORT ImportStmt
Rule 10    Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN
Rule 11    Import -> IMPORT LPAREN RPAREN
Rule 12    ImportStmt -> ImportHere STRING
Rule 13    ImportStmtList -> ImportStmt
Rule 14    ImportStmtList -> ImportStmtList SEMICOL ImportStmt
Rule 15    ImportHere -> <empty>
Rule 16    ImportHere -> IDENTIFIER
Rule 17    ImportHere -> DOT
Rule 18    Declaration -> CommonDecl
Rule 19    Declaration -> FuncDecl
Rule 20    Declaration -> NonDeclStmt
Rule 21    CommonDecl -> CONSTANT ConstDecl
Rule 22    CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN
Rule 23    CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
Rule 24    CommonDecl -> CONSTANT LPAREN RPAREN
Rule 25    CommonDecl -> VAR VarDecl
Rule 26    CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN
Rule 27    CommonDecl -> VAR LPAREN RPAREN
Rule 28    CommonDecl -> NewType TypeDecl
Rule 29    CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN
Rule 30    CommonDecl -> NewType LPAREN RPAREN
Rule 31    VarDecl -> DeclNameList NType
Rule 32    VarDecl -> DeclNameList NType EQUAL ExprList
Rule 33    VarDecl -> DeclNameList EQUAL ExprList
Rule 34    ConstDecl -> DeclNameList NType EQUAL ExprList
Rule 35    ConstDecl -> DeclNameList NType
Rule 36    ConstDecl -> DeclNameList EQUAL ExprList
Rule 37    ConstDecl1 -> ConstDecl
Rule 38    ConstDecl1 -> DeclNameList
Rule 39    TypeDeclName -> IDENTIFIER
Rule 40    TypeDecl -> TypeDeclName NType
Rule 41    SimpleStmt -> Expr
Rule 42    SimpleStmt -> Expr PLUSEQ Expr
Rule 43    SimpleStmt -> Expr MINUSEQ Expr
Rule 44    SimpleStmt -> Expr TIMESEQ Expr
Rule 45    SimpleStmt -> Expr DIVIDEEQ Expr
Rule 46    SimpleStmt -> Expr MODEQ Expr
Rule 47    SimpleStmt -> Expr OREQ Expr
Rule 48    SimpleStmt -> Expr AMPEQ Expr
Rule 49    SimpleStmt -> Expr CAREQ Expr
Rule 50    SimpleStmt -> Expr SHL_ASSIGN Expr
Rule 51    SimpleStmt -> Expr SHR_ASSIGN Expr
Rule 52    SimpleStmt -> Expr AMPCAREQ Expr
Rule 53    SimpleStmt -> ExprList EQUAL ExprList
Rule 54    SimpleStmt -> ExprList COLONEQ ExprList
Rule 55    SimpleStmt -> Expr PLUSPLUS
Rule 56    SimpleStmt -> Expr MINUSMIN
Rule 57    Case -> CASE ExprOrTypeList COLON
Rule 58    Case -> CASE ExprOrTypeList EQUAL Expr COLON
Rule 59    Case -> CASE ExprOrTypeList COLONEQ Expr COLON
Rule 60    Case -> DEFAULT COLON
Rule 61    CompoundStmt -> LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
Rule 62    compundmarker -> <empty>
Rule 63    revmarker -> <empty>
Rule 64    CaseBlock -> Case StmtList
Rule 65    CaseBlockList -> <empty>
Rule 66    CaseBlockList -> CaseBlockList CaseBlock
Rule 67    LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 68    RangeStmt -> ExprList EQUAL RANGE Expr
Rule 69    RangeStmt -> ExprList COLONEQ RANGE Expr
Rule 70    RangeStmt -> RANGE Expr
Rule 71    ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
Rule 72    ForHeader -> OSimpleStmt
Rule 73    ForHeader -> RangeStmt
Rule 74    ForBody -> ForHeader formarker LoopBody revmarker
Rule 75    ForStmt -> FOR ForBody
Rule 76    formarker -> <empty>
Rule 77    ifmarker -> <empty>
Rule 78    IfHeader -> OSimpleStmt
Rule 79    IfHeader -> OSimpleStmt SEMICOL OSimpleStmt
Rule 80    IfStmt -> IF IfHeader ifmarker LoopBody revmarker ElseIfList
Rule 81    ElseIf -> ELSE IF IfHeader ifmarker LoopBody revmarker
Rule 82    ElseIfList -> <empty>
Rule 83    ElseIfList -> ElseIf ElseIfList
Rule 84    ElseIfList -> Else
Rule 85    Else -> ELSE CompoundStmt
Rule 86    NType -> FuncType
Rule 87    NType -> OtherType
Rule 88    NType -> PtrType
Rule 89    NType -> DotName
Rule 90    NType -> LPAREN NType RPAREN
Rule 91    NType -> NewType
Rule 92    NonExprType -> FuncType
Rule 93    NonExprType -> OtherType
Rule 94    NonExprType -> TIMES NonExprType
Rule 95    OtherType -> LBRACK OExpr RBRACK NType
Rule 96    OtherType -> StructType
Rule 97    OtherType -> InterfaceType
Rule 98    OtherType -> ChannelType
Rule 99    ChannelType -> CHAN NewType
Rule 100   ChannelType -> CHAN LMINUS NewType
Rule 101   ChannelType -> LMINUS CHAN NewType
Rule 102   StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE
Rule 103   StructType -> STRUCT LBRACE RBRACE
Rule 104   InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
Rule 105   InterfaceType -> INTERFACE LBRACE RBRACE
Rule 106   FuncDecl -> FUNCTION funcmarker FuncDecl_ FuncBody
Rule 107   funcmarker -> <empty>
Rule 108   FuncDecl_ -> IDENTIFIER ArgList FuncRes
Rule 109   FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
Rule 110   FuncType -> FUNCTION ArgList FuncRes
Rule 111   ArgList -> LPAREN OArgTypeListOComma RPAREN
Rule 112   ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN
Rule 113   FuncBody -> <empty>
Rule 114   FuncBody -> LBRACE cmtlist StmtList cmtlist funcrevmarker RBRACE
Rule 115   funcrevmarker -> <empty>
Rule 116   FuncRes -> <empty>
Rule 117   FuncRes -> FuncRetType
Rule 118   FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT
Rule 119   StructDeclList -> StructDecl
Rule 120   StructDeclList -> StructDeclList SEMICOL StructDecl
Rule 121   InterfaceDeclList -> InterfaceDecl
Rule 122   InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl
Rule 123   StructDecl -> NewNameList NType OLiteral
Rule 124   StructDecl -> Embed OLiteral
Rule 125   StructDecl -> LPAREN Embed RPAREN OLiteral
Rule 126   StructDecl -> TIMES Embed OLiteral
Rule 127   StructDecl -> LPAREN TIMES Embed RPAREN OLiteral
Rule 128   StructDecl -> TIMES LPAREN Embed RPAREN OLiteral
Rule 129   InterfaceDecl -> NewName InDecl
Rule 130   InterfaceDecl -> IDENTIFIER
Rule 131   InterfaceDecl -> LPAREN IDENTIFIER RPAREN
Rule 132   InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes
Rule 133   LabelName -> NewName
Rule 134   NewName -> IDENTIFIER
Rule 135   PtrType -> TIMES NType
Rule 136   FuncRetType -> FuncType
Rule 137   FuncRetType -> OtherType
Rule 138   FuncRetType -> PtrType
Rule 139   FuncRetType -> DotName
Rule 140   FuncRetType -> myType
Rule 141   myType -> NewType
Rule 142   myType -> myType COMMA NewType
Rule 143   DotName -> Name
Rule 144   DotName -> Name DOT IDENTIFIER
Rule 145   OComma -> <empty>
Rule 146   OComma -> COMMA
Rule 147   OSemi -> <empty>
Rule 148   OSemi -> SEMICOL
Rule 149   OSimpleStmt -> <empty>
Rule 150   OSimpleStmt -> SimpleStmt
Rule 151   ONewName -> <empty>
Rule 152   ONewName -> NewName
Rule 153   OExpr -> <empty>
Rule 154   OExpr -> Expr
Rule 155   OExprList -> <empty>
Rule 156   OExprList -> ExprList
Rule 157   FuncLiteralDecl -> FuncType
Rule 158   FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
Rule 159   ExprList -> Expr
Rule 160   ExprList -> ExprList COMMA Expr
Rule 161   ExprOrTypeList -> ExprOrType
Rule 162   ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType
Rule 163   OLiteral -> <empty>
Rule 164   OLiteral -> Literal
Rule 165   Literal -> INTEGER
Rule 166   Literal -> FLOAT
Rule 167   Literal -> STRING
Rule 168   Embed -> IDENTIFIER
Rule 169   DeclList -> Declaration SEMICOL
Rule 170   DeclList -> DeclList cmtlist Declaration SEMICOL
Rule 171   VarDeclList -> VarDecl
Rule 172   VarDeclList -> VarDeclList SEMICOL VarDecl
Rule 173   ConstDeclList -> ConstDecl1
Rule 174   ConstDeclList -> ConstDeclList SEMICOL ConstDecl1
Rule 175   TypeDeclList -> TypeDecl
Rule 176   TypeDeclList -> TypeDeclList SEMICOL TypeDecl
Rule 177   DeclNameList -> DeclName
Rule 178   DeclNameList -> DeclNameList COMMA DeclName
Rule 179   StmtList -> Stmt SEMICOL
Rule 180   StmtList -> StmtList cmtlist Stmt SEMICOL
Rule 181   NewNameList -> NewName
Rule 182   NewNameList -> NewNameList COMMA NewName
Rule 183   KeyvalList -> Keyval
Rule 184   KeyvalList -> BareCompLitExpr
Rule 185   KeyvalList -> KeyvalList COMMA Keyval
Rule 186   KeyvalList -> KeyvalList COMMA BareCompLitExpr
Rule 187   BracedKeyvalList -> <empty>
Rule 188   BracedKeyvalList -> KeyvalList OComma
Rule 189   DeclName -> IDENTIFIER
Rule 190   Name -> IDENTIFIER
Rule 191   ArgType -> NameOrType
Rule 192   ArgType -> IDENTIFIER NameOrType
Rule 193   ArgType -> IDENTIFIER DotDotDot
Rule 194   ArgType -> DotDotDot
Rule 195   ArgTypeList -> ArgType
Rule 196   ArgTypeList -> ArgTypeList COMMA ArgType
Rule 197   OArgTypeListOComma -> <empty>
Rule 198   OArgTypeListOComma -> ArgTypeList OComma
Rule 199   Stmt -> <empty>
Rule 200   Stmt -> CompoundStmt
Rule 201   Stmt -> CommonDecl
Rule 202   Stmt -> NonDeclStmt
Rule 203   NonDeclStmt -> SimpleStmt
Rule 204   NonDeclStmt -> ForStmt
Rule 205   NonDeclStmt -> SwitchStmt
Rule 206   NonDeclStmt -> IfStmt
Rule 207   NonDeclStmt -> LabelName COLON Stmt
Rule 208   NonDeclStmt -> FALLTHROUGH
Rule 209   NonDeclStmt -> BREAK ONewName
Rule 210   NonDeclStmt -> CONTINUE ONewName
Rule 211   NonDeclStmt -> GOTO NewName
Rule 212   NonDeclStmt -> RETURN OExprList
Rule 213   DotDotDot -> DDD
Rule 214   DotDotDot -> DDD NType
Rule 215   PExpr -> PExprNoParen
Rule 216   PExpr -> LPAREN ExprOrType RPAREN
Rule 217   PExprNoParen -> Literal
Rule 218   PExprNoParen -> Name
Rule 219   PExprNoParen -> PExpr DOT IDENTIFIER
Rule 220   PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN
Rule 221   PExprNoParen -> PExpr DOT LPAREN NewType RPAREN
Rule 222   PExprNoParen -> PExpr LBRACK Expr RBRACK
Rule 223   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK
Rule 224   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
Rule 225   PExprNoParen -> PseudoCall
Rule 226   PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
Rule 227   PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 228   PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 229   PExprNoParen -> FuncLiteral
Rule 230   PExprNoParen -> ForCompExpr
Rule 231   NewType -> TYPE
Rule 232   ConvType -> FuncType
Rule 233   ConvType -> OtherType
Rule 234   CompType -> OtherType
Rule 235   Keyval -> Expr COLON CompLitExpr
Rule 236   BareCompLitExpr -> Expr
Rule 237   BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 238   CompLitExpr -> Expr
Rule 239   CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 240   ExprOrType -> Expr
Rule 241   ExprOrType -> NonExprType
Rule 242   NameOrType -> NType
Rule 243   SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE
Rule 244   Prec5Expr_ -> UExpr
Rule 245   Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr
Rule 246   Prec5Expr_ -> Prec5Expr_ MOD UExpr
Rule 247   Prec5Expr_ -> Prec5Expr_ SHL UExpr
Rule 248   Prec5Expr_ -> Prec5Expr_ SHR UExpr
Rule 249   Prec5Expr_ -> Prec5Expr_ AMPERS UExpr
Rule 250   Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr
Rule 251   Prec5Expr_ -> Prec5Expr_ TIMES UExpr
Rule 252   Prec4Expr_ -> Prec5Expr_
Rule 253   Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_
Rule 254   Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_
Rule 255   Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_
Rule 256   Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_
Rule 257   Prec3Expr_ -> Prec4Expr_
Rule 258   Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_
Rule 259   Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_
Rule 260   Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_
Rule 261   Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_
Rule 262   Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_
Rule 263   Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_
Rule 264   Prec2Expr_ -> Prec3Expr_
Rule 265   Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_
Rule 266   Expr -> Prec2Expr_
Rule 267   Expr -> Expr OROR Prec2Expr_
Rule 268   Expr -> CONSTANTS
Rule 269   Expr -> Chexpr
Rule 270   Expr -> Arrayexp
Rule 271   Chexpr -> LMINUS IDENTIFIER
Rule 272   Arrayexp -> OtherType LBRACE ExprList RBRACE
Rule 273   UExpr -> PExpr
Rule 274   UExpr -> AMPERS UExpr
Rule 275   UExpr -> NOT UExpr
Rule 276   UExpr -> TIMES UExpr
Rule 277   UExpr -> PLUS UExpr
Rule 278   UExpr -> MINUS UExpr
Rule 279   UExpr -> XOR UExpr
Rule 280   ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK
Rule 281   PseudoCall -> PExpr LPAREN RPAREN
Rule 282   PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN
Rule 283   PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
Rule 284   cmtlist -> <empty>
Rule 285   cmtlist -> cmtlist COMMENT

Terminals, with rules where they appear

AMPAMP               : 265
AMPCAR               : 250
AMPCAREQ             : 52
AMPEQ                : 48
AMPERS               : 249 274
BREAK                : 209
CAREQ                : 49
CASE                 : 57 58 59
CHAN                 : 99 100 101
COLON                : 57 58 59 60 207 223 224 224 235
COLONEQ              : 54 59 69
COMMA                : 142 146 160 162 178 182 185 186 196
COMMENT              : 285
CONSTANT             : 21 22 23 24
CONSTANTS            : 268
CONTINUE             : 210
DDD                  : 213 214 283
DEFAULT              : 60
DIVIDE               : 245
DIVIDEEQ             : 45
DOT                  : 17 144 219 220 221
ELSE                 : 81 85
EQEQ                 : 258
EQUAL                : 32 33 34 36 53 58 68
FALLTHROUGH          : 208
FLOAT                : 166
FOR                  : 75
FUNCTION             : 106 110
GEQ                  : 261
GOTO                 : 211
GREAT                : 262
IDENTIFIER           : 6 16 39 108 109 130 131 134 144 168 189 190 192 193 219 271
IF                   : 80 81
IMPORT               : 9 10 11
INTEGER              : 165
INTERFACE            : 104 105
LBRACE               : 61 67 102 103 104 105 114 158 243 272
LBRACK               : 95 222 223 224 280
LEFT_ANGLE           : 226
LEFT_LEFT            : 227 228 237 239
LEFT_OR              : 109 118
LEQ                  : 260
LESS                 : 263
LMINUS               : 100 101 271
LPAREN               : 10 11 22 23 24 26 27 29 30 90 111 112 125 127 128 131 132 216 220 221 281 282 283
MINUS                : 254 278
MINUSEQ              : 43
MINUSMIN             : 56
MOD                  : 246
MODEQ                : 46
NOT                  : 275
NOTEQ                : 259
OR                   : 256
OREQ                 : 47
OROR                 : 267
OR_RIGHT             : 109 118
PACKAGE              : 6
PIPE                 : 280
PLUS                 : 253 277
PLUSEQ               : 42
PLUSPLUS             : 55
RANGE                : 68 69 70
RBRACE               : 61 67 102 103 104 105 114 158 243 272
RBRACK               : 95 222 223 224 280
RETURN               : 212
RIGHT_ANGLE          : 226
RIGHT_RIGHT          : 227 228 237 239
RPAREN               : 10 11 22 23 24 26 27 29 30 90 111 112 125 127 128 131 132 216 220 221 281 282 283
SEMICOL              : 6 7 8 14 23 71 71 79 120 122 148 169 170 172 174 176 179 180
SHL                  : 247
SHL_ASSIGN           : 50
SHR                  : 248
SHR_ASSIGN           : 51
STRING               : 12 167
STRUCT               : 102 103
SWITCH               : 243
TIMES                : 94 126 127 128 135 251 276
TIMESEQ              : 44
TYPE                 : 231
VAR                  : 25 26 27
XOR                  : 255 279
error                : 

Nonterminals, with rules where they appear

ArgList              : 108 109 110 112
ArgType              : 195 196
ArgTypeList          : 196 198
Arrayexp             : 270
BareCompLitExpr      : 184 186
BracedKeyvalList     : 227 228 237 239
Case                 : 64
CaseBlock            : 66
CaseBlockList        : 66 243
ChannelType          : 98
Chexpr               : 269
CommonDecl           : 18 201
CompLitExpr          : 235
CompType             : 227
CompoundStmt         : 85 200
ConstDecl            : 21 22 23 37
ConstDecl1           : 173 174
ConstDeclList        : 23 174
ConvType             : 226
DeclList             : 2 3 170
DeclName             : 177 178
DeclNameList         : 31 32 33 34 35 36 38 178
Declaration          : 169 170
DotDotDot            : 193 194
DotName              : 89 139
Else                 : 84
ElseIf               : 83
ElseIfList           : 80 83
Embed                : 124 125 126 127 128
Expr                 : 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 55 56 58 59 68 69 70 154 159 160 222 226 235 236 238 240 267 280
ExprList             : 32 33 34 36 53 53 54 54 68 69 156 160 272
ExprOrType           : 161 162 216 220
ExprOrTypeList       : 57 58 59 162 282 283
ForBody              : 75
ForCompExpr          : 230
ForHeader            : 74
ForStmt              : 204
FuncBody             : 106
FuncDecl             : 19
FuncDecl_            : 106
FuncLiteral          : 229
FuncLiteralDecl      : 158
FuncRes              : 108 109 110 132
FuncRetType          : 117
FuncType             : 86 92 136 157 232
IfHeader             : 80 81 243
IfStmt               : 206
Import               : 7 8
ImportHere           : 12
ImportStmt           : 9 13 14
ImportStmtList       : 10 14
Imports              : 2 4 8
InDecl               : 129
InterfaceDecl        : 121 122
InterfaceDeclList    : 104 122
InterfaceType        : 97
Keyval               : 183 185
KeyvalList           : 185 186 188
LabelName            : 207
Literal              : 164 217
LoopBody             : 74 80 81
NType                : 31 32 34 35 40 90 95 123 135 214 242
Name                 : 143 144 218
NameOrType           : 191 192
NewName              : 129 133 152 181 182 211
NewNameList          : 123 182
NewType              : 28 29 30 91 99 100 101 141 142 221
NonDeclStmt          : 20 202
NonExprType          : 94 241
OArgTypeListOComma   : 109 111 112 118 132
OComma               : 188 198 226 282 283
OExpr                : 95 223 223 224 224 224
OExprList            : 212
OLiteral             : 123 124 125 126 127 128
ONewName             : 209 210
OSemi                : 10 22 23 26 29 102 104
OSimpleStmt          : 71 71 71 72 78 79 79
OtherType            : 87 93 137 233 234 272
PExpr                : 219 220 221 222 223 224 228 273 281 282 283
PExprNoParen         : 215
PackageClause        : 2 3 4 5
Prec2Expr_           : 265 266 267
Prec3Expr_           : 258 259 260 261 262 263 264 265
Prec4Expr_           : 253 254 255 256 257 258 259 260 261 262 263
Prec5Expr_           : 245 246 247 248 249 250 251 252 253 254 255 256
PseudoCall           : 225
PtrType              : 88 138
RangeStmt            : 73 280
SimpleStmt           : 150 203
SourceFile           : 1
Stmt                 : 179 180 207
StmtList             : 61 64 67 114 158 180
StructDecl           : 119 120
StructDeclList       : 102 120
StructType           : 96
SwitchStmt           : 205
TypeDecl             : 28 175 176
TypeDeclList         : 29 176
TypeDeclName         : 40
UExpr                : 244 245 246 247 248 249 250 251 274 275 276 277 278 279
VarDecl              : 25 171 172
VarDeclList          : 26 172
cmtlist              : 2 2 2 2 3 3 3 4 4 4 5 5 8 61 61 67 67 114 114 158 158 170 180 285
compundmarker        : 61
formarker            : 74
funcmarker           : 106
funcrevmarker        : 114
ifmarker             : 80 81
myType               : 140 142
revmarker            : 61 74 80 81
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (2) SourceFile -> . cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> . cmtlist PackageClause cmtlist DeclList cmtlist
    (4) SourceFile -> . cmtlist PackageClause cmtlist Imports cmtlist
    (5) SourceFile -> . cmtlist PackageClause cmtlist
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    PACKAGE         reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 1
    SourceFile                     shift and go to state 2
    start                          shift and go to state 3

state 1

    (2) SourceFile -> cmtlist . PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist . PackageClause cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist . PackageClause cmtlist Imports cmtlist
    (5) SourceFile -> cmtlist . PackageClause cmtlist
    (285) cmtlist -> cmtlist . COMMENT
    (6) PackageClause -> . PACKAGE IDENTIFIER SEMICOL

    COMMENT         shift and go to state 4
    PACKAGE         shift and go to state 6

    PackageClause                  shift and go to state 5

state 2

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 3

    (0) S' -> start .



state 4

    (285) cmtlist -> cmtlist COMMENT .

    COMMENT         reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    LBRACE          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    CONSTANT        reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    VAR             reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    FALLTHROUGH     reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    BREAK           reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    CONTINUE        reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    GOTO            reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    RETURN          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    TYPE            reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    FOR             reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    SWITCH          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    IF              reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    CONSTANTS       reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    IDENTIFIER      reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    LMINUS          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    LBRACK          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    STRUCT          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    INTERFACE       reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    CHAN            reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    AMPERS          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    NOT             reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    TIMES           reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    PLUS            reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    MINUS           reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    XOR             reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    LPAREN          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    INTEGER         reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    FLOAT           reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    STRING          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    FUNCTION        reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    RBRACE          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    SEMICOL         reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    IMPORT          reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    $end            reduce using rule 285 (cmtlist -> cmtlist COMMENT .)
    PACKAGE         reduce using rule 285 (cmtlist -> cmtlist COMMENT .)


state 5

    (2) SourceFile -> cmtlist PackageClause . cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist PackageClause . cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause . cmtlist Imports cmtlist
    (5) SourceFile -> cmtlist PackageClause . cmtlist
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    IMPORT          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    $end            reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 7

state 6

    (6) PackageClause -> PACKAGE . IDENTIFIER SEMICOL

    IDENTIFIER      shift and go to state 8


state 7

    (2) SourceFile -> cmtlist PackageClause cmtlist . Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist PackageClause cmtlist . DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist . Imports cmtlist
    (5) SourceFile -> cmtlist PackageClause cmtlist .
    (285) cmtlist -> cmtlist . COMMENT
    (7) Imports -> . Import SEMICOL
    (8) Imports -> . Imports cmtlist Import SEMICOL
    (169) DeclList -> . Declaration SEMICOL
    (170) DeclList -> . DeclList cmtlist Declaration SEMICOL
    (9) Import -> . IMPORT ImportStmt
    (10) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> . IMPORT LPAREN RPAREN
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (106) FuncDecl -> . FUNCTION funcmarker FuncDecl_ FuncBody
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 5 (SourceFile -> cmtlist PackageClause cmtlist .)
    COMMENT         shift and go to state 4
    IMPORT          shift and go to state 18
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    NewType                        shift and go to state 65
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    IfStmt                         shift and go to state 12
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 52
    ChannelType                    shift and go to state 35
    Import                         shift and go to state 50
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    DeclList                       shift and go to state 57
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Imports                        shift and go to state 58
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 8

    (6) PackageClause -> PACKAGE IDENTIFIER . SEMICOL

    SEMICOL         shift and go to state 77


state 9

    (229) PExprNoParen -> FuncLiteral .

    DOT             reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    LBRACK          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    LEFT_LEFT       reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    LPAREN          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    DIVIDE          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    MOD             reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    SHL             reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    SHR             reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    AMPERS          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    AMPCAR          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    TIMES           reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    PLUS            reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    MINUS           reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    XOR             reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    OR              reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    EQEQ            reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    NOTEQ           reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    LEQ             reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    GEQ             reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    GREAT           reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    LESS            reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    AMPAMP          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    OROR            reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    COMMA           reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    SEMICOL         reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    RPAREN          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    LBRACE          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    PLUSEQ          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    MINUSEQ         reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    TIMESEQ         reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    DIVIDEEQ        reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    MODEQ           reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    OREQ            reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    AMPEQ           reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    CAREQ           reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    SHL_ASSIGN      reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    SHR_ASSIGN      reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    AMPCAREQ        reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    PLUSPLUS        reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    MINUSMIN        reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    EQUAL           reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    COLONEQ         reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    DDD             reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    PIPE            reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    RBRACK          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    RIGHT_ANGLE     reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    RBRACE          reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    COLON           reduce using rule 229 (PExprNoParen -> FuncLiteral .)
    RIGHT_RIGHT     reduce using rule 229 (PExprNoParen -> FuncLiteral .)


state 10

    (264) Prec2Expr_ -> Prec3Expr_ .
    (258) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (259) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (261) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (262) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (263) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSEQ          reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSEQ         reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    TIMESEQ         reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    MODEQ           reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    OREQ            reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    AMPEQ           reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    CAREQ           reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    AMPCAREQ        reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSPLUS        reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSMIN        reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    OROR            reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    SEMICOL         reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    EQUAL           reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    COLONEQ         reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    COMMA           reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    LBRACE          reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACE          reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    RPAREN          reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    COLON           reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACK          reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    DDD             reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    PIPE            reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 264 (Prec2Expr_ -> Prec3Expr_ .)
    EQEQ            shift and go to state 80
    NOTEQ           shift and go to state 83
    LEQ             shift and go to state 79
    GEQ             shift and go to state 78
    GREAT           shift and go to state 82
    LESS            shift and go to state 81


state 11

    (226) PExprNoParen -> ConvType . LEFT_ANGLE Expr OComma RIGHT_ANGLE

    LEFT_ANGLE      shift and go to state 84


state 12

    (206) NonDeclStmt -> IfStmt .

    SEMICOL         reduce using rule 206 (NonDeclStmt -> IfStmt .)


state 13

    (269) Expr -> Chexpr .

    PLUSEQ          reduce using rule 269 (Expr -> Chexpr .)
    MINUSEQ         reduce using rule 269 (Expr -> Chexpr .)
    TIMESEQ         reduce using rule 269 (Expr -> Chexpr .)
    DIVIDEEQ        reduce using rule 269 (Expr -> Chexpr .)
    MODEQ           reduce using rule 269 (Expr -> Chexpr .)
    OREQ            reduce using rule 269 (Expr -> Chexpr .)
    AMPEQ           reduce using rule 269 (Expr -> Chexpr .)
    CAREQ           reduce using rule 269 (Expr -> Chexpr .)
    SHL_ASSIGN      reduce using rule 269 (Expr -> Chexpr .)
    SHR_ASSIGN      reduce using rule 269 (Expr -> Chexpr .)
    AMPCAREQ        reduce using rule 269 (Expr -> Chexpr .)
    PLUSPLUS        reduce using rule 269 (Expr -> Chexpr .)
    MINUSMIN        reduce using rule 269 (Expr -> Chexpr .)
    OROR            reduce using rule 269 (Expr -> Chexpr .)
    SEMICOL         reduce using rule 269 (Expr -> Chexpr .)
    EQUAL           reduce using rule 269 (Expr -> Chexpr .)
    COLONEQ         reduce using rule 269 (Expr -> Chexpr .)
    COMMA           reduce using rule 269 (Expr -> Chexpr .)
    LBRACE          reduce using rule 269 (Expr -> Chexpr .)
    RPAREN          reduce using rule 269 (Expr -> Chexpr .)
    RBRACK          reduce using rule 269 (Expr -> Chexpr .)
    COLON           reduce using rule 269 (Expr -> Chexpr .)
    RIGHT_RIGHT     reduce using rule 269 (Expr -> Chexpr .)
    RIGHT_ANGLE     reduce using rule 269 (Expr -> Chexpr .)
    DDD             reduce using rule 269 (Expr -> Chexpr .)
    RBRACE          reduce using rule 269 (Expr -> Chexpr .)
    PIPE            reduce using rule 269 (Expr -> Chexpr .)


state 14

    (208) NonDeclStmt -> FALLTHROUGH .

    SEMICOL         reduce using rule 208 (NonDeclStmt -> FALLTHROUGH .)


state 15

    (97) OtherType -> InterfaceType .

    EQUAL           reduce using rule 97 (OtherType -> InterfaceType .)
    SEMICOL         reduce using rule 97 (OtherType -> InterfaceType .)
    RPAREN          reduce using rule 97 (OtherType -> InterfaceType .)
    LBRACE          reduce using rule 97 (OtherType -> InterfaceType .)
    LEFT_ANGLE      reduce using rule 97 (OtherType -> InterfaceType .)
    LEFT_LEFT       reduce using rule 97 (OtherType -> InterfaceType .)
    DDD             reduce using rule 97 (OtherType -> InterfaceType .)
    COMMA           reduce using rule 97 (OtherType -> InterfaceType .)
    OR_RIGHT        reduce using rule 97 (OtherType -> InterfaceType .)
    RBRACE          reduce using rule 97 (OtherType -> InterfaceType .)
    COLON           reduce using rule 97 (OtherType -> InterfaceType .)
    COLONEQ         reduce using rule 97 (OtherType -> InterfaceType .)
    INTEGER         reduce using rule 97 (OtherType -> InterfaceType .)
    FLOAT           reduce using rule 97 (OtherType -> InterfaceType .)
    STRING          reduce using rule 97 (OtherType -> InterfaceType .)


state 16

    (207) NonDeclStmt -> LabelName . COLON Stmt

    COLON           shift and go to state 85


state 17

    (252) Prec4Expr_ -> Prec5Expr_ .
    (245) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (247) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (248) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (249) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (250) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (251) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    MINUS           reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    XOR             reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    OR              reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    EQEQ            reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    NOTEQ           reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    LEQ             reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    GEQ             reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    GREAT           reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    LESS            reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    AMPAMP          reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    OROR            reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    SEMICOL         reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    LBRACE          reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    COMMA           reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    EQUAL           reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    COLONEQ         reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACE          reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    RPAREN          reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    COLON           reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSEQ          reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSEQ         reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    TIMESEQ         reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    MODEQ           reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    OREQ            reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    AMPEQ           reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    CAREQ           reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    AMPCAREQ        reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSPLUS        reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSMIN        reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    PIPE            reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACK          reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    DDD             reduce using rule 252 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 18

    (9) Import -> IMPORT . ImportStmt
    (10) Import -> IMPORT . LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> IMPORT . LPAREN RPAREN
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    LPAREN          shift and go to state 95
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 94
    DOT             shift and go to state 97

    ImportHere                     shift and go to state 93
    ImportStmt                     shift and go to state 96

state 19

    (271) Chexpr -> LMINUS . IDENTIFIER
    (101) ChannelType -> LMINUS . CHAN NewType

    IDENTIFIER      shift and go to state 98
    CHAN            shift and go to state 99


state 20

    (266) Expr -> Prec2Expr_ .
    (265) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    PLUSEQ          reduce using rule 266 (Expr -> Prec2Expr_ .)
    MINUSEQ         reduce using rule 266 (Expr -> Prec2Expr_ .)
    TIMESEQ         reduce using rule 266 (Expr -> Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 266 (Expr -> Prec2Expr_ .)
    MODEQ           reduce using rule 266 (Expr -> Prec2Expr_ .)
    OREQ            reduce using rule 266 (Expr -> Prec2Expr_ .)
    AMPEQ           reduce using rule 266 (Expr -> Prec2Expr_ .)
    CAREQ           reduce using rule 266 (Expr -> Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 266 (Expr -> Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 266 (Expr -> Prec2Expr_ .)
    AMPCAREQ        reduce using rule 266 (Expr -> Prec2Expr_ .)
    PLUSPLUS        reduce using rule 266 (Expr -> Prec2Expr_ .)
    MINUSMIN        reduce using rule 266 (Expr -> Prec2Expr_ .)
    OROR            reduce using rule 266 (Expr -> Prec2Expr_ .)
    SEMICOL         reduce using rule 266 (Expr -> Prec2Expr_ .)
    EQUAL           reduce using rule 266 (Expr -> Prec2Expr_ .)
    COLONEQ         reduce using rule 266 (Expr -> Prec2Expr_ .)
    COMMA           reduce using rule 266 (Expr -> Prec2Expr_ .)
    LBRACE          reduce using rule 266 (Expr -> Prec2Expr_ .)
    RPAREN          reduce using rule 266 (Expr -> Prec2Expr_ .)
    RBRACK          reduce using rule 266 (Expr -> Prec2Expr_ .)
    COLON           reduce using rule 266 (Expr -> Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 266 (Expr -> Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 266 (Expr -> Prec2Expr_ .)
    DDD             reduce using rule 266 (Expr -> Prec2Expr_ .)
    RBRACE          reduce using rule 266 (Expr -> Prec2Expr_ .)
    PIPE            reduce using rule 266 (Expr -> Prec2Expr_ .)
    AMPAMP          shift and go to state 100


state 21

    (158) FuncLiteral -> FuncLiteralDecl . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 101


state 22

    (165) Literal -> INTEGER .

    DOT             reduce using rule 165 (Literal -> INTEGER .)
    LBRACK          reduce using rule 165 (Literal -> INTEGER .)
    LEFT_LEFT       reduce using rule 165 (Literal -> INTEGER .)
    LPAREN          reduce using rule 165 (Literal -> INTEGER .)
    DIVIDE          reduce using rule 165 (Literal -> INTEGER .)
    MOD             reduce using rule 165 (Literal -> INTEGER .)
    SHL             reduce using rule 165 (Literal -> INTEGER .)
    SHR             reduce using rule 165 (Literal -> INTEGER .)
    AMPERS          reduce using rule 165 (Literal -> INTEGER .)
    AMPCAR          reduce using rule 165 (Literal -> INTEGER .)
    TIMES           reduce using rule 165 (Literal -> INTEGER .)
    PLUS            reduce using rule 165 (Literal -> INTEGER .)
    MINUS           reduce using rule 165 (Literal -> INTEGER .)
    XOR             reduce using rule 165 (Literal -> INTEGER .)
    OR              reduce using rule 165 (Literal -> INTEGER .)
    EQEQ            reduce using rule 165 (Literal -> INTEGER .)
    NOTEQ           reduce using rule 165 (Literal -> INTEGER .)
    LEQ             reduce using rule 165 (Literal -> INTEGER .)
    GEQ             reduce using rule 165 (Literal -> INTEGER .)
    GREAT           reduce using rule 165 (Literal -> INTEGER .)
    LESS            reduce using rule 165 (Literal -> INTEGER .)
    AMPAMP          reduce using rule 165 (Literal -> INTEGER .)
    PLUSEQ          reduce using rule 165 (Literal -> INTEGER .)
    MINUSEQ         reduce using rule 165 (Literal -> INTEGER .)
    TIMESEQ         reduce using rule 165 (Literal -> INTEGER .)
    DIVIDEEQ        reduce using rule 165 (Literal -> INTEGER .)
    MODEQ           reduce using rule 165 (Literal -> INTEGER .)
    OREQ            reduce using rule 165 (Literal -> INTEGER .)
    AMPEQ           reduce using rule 165 (Literal -> INTEGER .)
    CAREQ           reduce using rule 165 (Literal -> INTEGER .)
    SHL_ASSIGN      reduce using rule 165 (Literal -> INTEGER .)
    SHR_ASSIGN      reduce using rule 165 (Literal -> INTEGER .)
    AMPCAREQ        reduce using rule 165 (Literal -> INTEGER .)
    PLUSPLUS        reduce using rule 165 (Literal -> INTEGER .)
    MINUSMIN        reduce using rule 165 (Literal -> INTEGER .)
    OROR            reduce using rule 165 (Literal -> INTEGER .)
    SEMICOL         reduce using rule 165 (Literal -> INTEGER .)
    EQUAL           reduce using rule 165 (Literal -> INTEGER .)
    COLONEQ         reduce using rule 165 (Literal -> INTEGER .)
    COMMA           reduce using rule 165 (Literal -> INTEGER .)
    LBRACE          reduce using rule 165 (Literal -> INTEGER .)
    PIPE            reduce using rule 165 (Literal -> INTEGER .)
    RBRACK          reduce using rule 165 (Literal -> INTEGER .)
    RPAREN          reduce using rule 165 (Literal -> INTEGER .)
    RIGHT_ANGLE     reduce using rule 165 (Literal -> INTEGER .)
    RBRACE          reduce using rule 165 (Literal -> INTEGER .)
    COLON           reduce using rule 165 (Literal -> INTEGER .)
    RIGHT_RIGHT     reduce using rule 165 (Literal -> INTEGER .)
    DDD             reduce using rule 165 (Literal -> INTEGER .)


state 23

    (25) CommonDecl -> VAR . VarDecl
    (26) CommonDecl -> VAR . LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> VAR . LPAREN RPAREN
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (177) DeclNameList -> . DeclName
    (178) DeclNameList -> . DeclNameList COMMA DeclName
    (189) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 105
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    VarDecl                        shift and go to state 104
    DeclNameList                   shift and go to state 106

state 24

    (53) SimpleStmt -> ExprList . EQUAL ExprList
    (54) SimpleStmt -> ExprList . COLONEQ ExprList
    (160) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 109
    COLONEQ         shift and go to state 108
    COMMA           shift and go to state 107


state 25

    (212) NonDeclStmt -> RETURN . OExprList
    (155) OExprList -> .
    (156) OExprList -> . ExprList
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 155 (OExprList -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 110
    OExprList                      shift and go to state 111
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 26

    (21) CommonDecl -> CONSTANT . ConstDecl
    (22) CommonDecl -> CONSTANT . LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> CONSTANT . LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> CONSTANT . LPAREN RPAREN
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (177) DeclNameList -> . DeclName
    (178) DeclNameList -> . DeclNameList COMMA DeclName
    (189) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    ConstDecl                      shift and go to state 117
    DeclNameList                   shift and go to state 116

state 27

    (274) UExpr -> AMPERS . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 120
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 28

    (257) Prec3Expr_ -> Prec4Expr_ .
    (253) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (256) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    NOTEQ           reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    LEQ             reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    GEQ             reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    GREAT           reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    LESS            reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    AMPAMP          reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSEQ          reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSEQ         reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    TIMESEQ         reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    MODEQ           reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    OREQ            reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    AMPEQ           reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    CAREQ           reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    AMPCAREQ        reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSPLUS        reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSMIN        reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    OROR            reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    SEMICOL         reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    EQUAL           reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    COLONEQ         reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    COMMA           reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    LBRACE          reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    COLON           reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    PIPE            reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACK          reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    RPAREN          reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACE          reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    DDD             reduce using rule 257 (Prec3Expr_ -> Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 29

    (18) Declaration -> CommonDecl .

    SEMICOL         reduce using rule 18 (Declaration -> CommonDecl .)


state 30

    (278) UExpr -> MINUS . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 126
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 31

    (167) Literal -> STRING .

    DOT             reduce using rule 167 (Literal -> STRING .)
    LBRACK          reduce using rule 167 (Literal -> STRING .)
    LEFT_LEFT       reduce using rule 167 (Literal -> STRING .)
    LPAREN          reduce using rule 167 (Literal -> STRING .)
    DIVIDE          reduce using rule 167 (Literal -> STRING .)
    MOD             reduce using rule 167 (Literal -> STRING .)
    SHL             reduce using rule 167 (Literal -> STRING .)
    SHR             reduce using rule 167 (Literal -> STRING .)
    AMPERS          reduce using rule 167 (Literal -> STRING .)
    AMPCAR          reduce using rule 167 (Literal -> STRING .)
    TIMES           reduce using rule 167 (Literal -> STRING .)
    PLUS            reduce using rule 167 (Literal -> STRING .)
    MINUS           reduce using rule 167 (Literal -> STRING .)
    XOR             reduce using rule 167 (Literal -> STRING .)
    OR              reduce using rule 167 (Literal -> STRING .)
    EQEQ            reduce using rule 167 (Literal -> STRING .)
    NOTEQ           reduce using rule 167 (Literal -> STRING .)
    LEQ             reduce using rule 167 (Literal -> STRING .)
    GEQ             reduce using rule 167 (Literal -> STRING .)
    GREAT           reduce using rule 167 (Literal -> STRING .)
    LESS            reduce using rule 167 (Literal -> STRING .)
    AMPAMP          reduce using rule 167 (Literal -> STRING .)
    PLUSEQ          reduce using rule 167 (Literal -> STRING .)
    MINUSEQ         reduce using rule 167 (Literal -> STRING .)
    TIMESEQ         reduce using rule 167 (Literal -> STRING .)
    DIVIDEEQ        reduce using rule 167 (Literal -> STRING .)
    MODEQ           reduce using rule 167 (Literal -> STRING .)
    OREQ            reduce using rule 167 (Literal -> STRING .)
    AMPEQ           reduce using rule 167 (Literal -> STRING .)
    CAREQ           reduce using rule 167 (Literal -> STRING .)
    SHL_ASSIGN      reduce using rule 167 (Literal -> STRING .)
    SHR_ASSIGN      reduce using rule 167 (Literal -> STRING .)
    AMPCAREQ        reduce using rule 167 (Literal -> STRING .)
    PLUSPLUS        reduce using rule 167 (Literal -> STRING .)
    MINUSMIN        reduce using rule 167 (Literal -> STRING .)
    OROR            reduce using rule 167 (Literal -> STRING .)
    SEMICOL         reduce using rule 167 (Literal -> STRING .)
    EQUAL           reduce using rule 167 (Literal -> STRING .)
    COLONEQ         reduce using rule 167 (Literal -> STRING .)
    COMMA           reduce using rule 167 (Literal -> STRING .)
    LBRACE          reduce using rule 167 (Literal -> STRING .)
    PIPE            reduce using rule 167 (Literal -> STRING .)
    RBRACK          reduce using rule 167 (Literal -> STRING .)
    RPAREN          reduce using rule 167 (Literal -> STRING .)
    RIGHT_ANGLE     reduce using rule 167 (Literal -> STRING .)
    RBRACE          reduce using rule 167 (Literal -> STRING .)
    COLON           reduce using rule 167 (Literal -> STRING .)
    RIGHT_RIGHT     reduce using rule 167 (Literal -> STRING .)
    DDD             reduce using rule 167 (Literal -> STRING .)


state 32

    (19) Declaration -> FuncDecl .

    SEMICOL         reduce using rule 19 (Declaration -> FuncDecl .)


state 33

    (272) Arrayexp -> OtherType . LBRACE ExprList RBRACE
    (233) ConvType -> OtherType .
    (234) CompType -> OtherType .

    LBRACE          shift and go to state 127
    LEFT_ANGLE      reduce using rule 233 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 234 (CompType -> OtherType .)


state 34

    (133) LabelName -> NewName .

    COLON           reduce using rule 133 (LabelName -> NewName .)


state 35

    (98) OtherType -> ChannelType .

    EQUAL           reduce using rule 98 (OtherType -> ChannelType .)
    SEMICOL         reduce using rule 98 (OtherType -> ChannelType .)
    RPAREN          reduce using rule 98 (OtherType -> ChannelType .)
    LBRACE          reduce using rule 98 (OtherType -> ChannelType .)
    LEFT_ANGLE      reduce using rule 98 (OtherType -> ChannelType .)
    LEFT_LEFT       reduce using rule 98 (OtherType -> ChannelType .)
    DDD             reduce using rule 98 (OtherType -> ChannelType .)
    COMMA           reduce using rule 98 (OtherType -> ChannelType .)
    OR_RIGHT        reduce using rule 98 (OtherType -> ChannelType .)
    RBRACE          reduce using rule 98 (OtherType -> ChannelType .)
    COLON           reduce using rule 98 (OtherType -> ChannelType .)
    COLONEQ         reduce using rule 98 (OtherType -> ChannelType .)
    INTEGER         reduce using rule 98 (OtherType -> ChannelType .)
    FLOAT           reduce using rule 98 (OtherType -> ChannelType .)
    STRING          reduce using rule 98 (OtherType -> ChannelType .)


state 36

    (106) FuncDecl -> FUNCTION . funcmarker FuncDecl_ FuncBody
    (110) FuncType -> FUNCTION . ArgList FuncRes
    (107) funcmarker -> .
    (111) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (112) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    IDENTIFIER      reduce using rule 107 (funcmarker -> .)
    LEFT_OR         reduce using rule 107 (funcmarker -> .)
    LPAREN          shift and go to state 128

    ArgList                        shift and go to state 129
    funcmarker                     shift and go to state 130

state 37

    (75) ForStmt -> FOR . ForBody
    (74) ForBody -> . ForHeader formarker LoopBody revmarker
    (71) ForHeader -> . OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (72) ForHeader -> . OSimpleStmt
    (73) ForHeader -> . RangeStmt
    (149) OSimpleStmt -> .
    (150) OSimpleStmt -> . SimpleStmt
    (68) RangeStmt -> . ExprList EQUAL RANGE Expr
    (69) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (70) RangeStmt -> . RANGE Expr
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 149 (OSimpleStmt -> .)
    LBRACE          reduce using rule 149 (OSimpleStmt -> .)
    RANGE           shift and go to state 135
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    ForBody                        shift and go to state 134
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 131
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    ForHeader                      shift and go to state 137
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 138
    PseudoCall                     shift and go to state 38
    RangeStmt                      shift and go to state 132
    ExprList                       shift and go to state 133
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 38

    (225) PExprNoParen -> PseudoCall .

    DOT             reduce using rule 225 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 225 (PExprNoParen -> PseudoCall .)
    LPAREN          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    DIVIDE          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    MOD             reduce using rule 225 (PExprNoParen -> PseudoCall .)
    SHL             reduce using rule 225 (PExprNoParen -> PseudoCall .)
    SHR             reduce using rule 225 (PExprNoParen -> PseudoCall .)
    AMPERS          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    AMPCAR          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    TIMES           reduce using rule 225 (PExprNoParen -> PseudoCall .)
    PLUS            reduce using rule 225 (PExprNoParen -> PseudoCall .)
    MINUS           reduce using rule 225 (PExprNoParen -> PseudoCall .)
    XOR             reduce using rule 225 (PExprNoParen -> PseudoCall .)
    OR              reduce using rule 225 (PExprNoParen -> PseudoCall .)
    EQEQ            reduce using rule 225 (PExprNoParen -> PseudoCall .)
    NOTEQ           reduce using rule 225 (PExprNoParen -> PseudoCall .)
    LEQ             reduce using rule 225 (PExprNoParen -> PseudoCall .)
    GEQ             reduce using rule 225 (PExprNoParen -> PseudoCall .)
    GREAT           reduce using rule 225 (PExprNoParen -> PseudoCall .)
    LESS            reduce using rule 225 (PExprNoParen -> PseudoCall .)
    AMPAMP          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    OROR            reduce using rule 225 (PExprNoParen -> PseudoCall .)
    COMMA           reduce using rule 225 (PExprNoParen -> PseudoCall .)
    SEMICOL         reduce using rule 225 (PExprNoParen -> PseudoCall .)
    RPAREN          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    LBRACE          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    PLUSEQ          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    MINUSEQ         reduce using rule 225 (PExprNoParen -> PseudoCall .)
    TIMESEQ         reduce using rule 225 (PExprNoParen -> PseudoCall .)
    DIVIDEEQ        reduce using rule 225 (PExprNoParen -> PseudoCall .)
    MODEQ           reduce using rule 225 (PExprNoParen -> PseudoCall .)
    OREQ            reduce using rule 225 (PExprNoParen -> PseudoCall .)
    AMPEQ           reduce using rule 225 (PExprNoParen -> PseudoCall .)
    CAREQ           reduce using rule 225 (PExprNoParen -> PseudoCall .)
    SHL_ASSIGN      reduce using rule 225 (PExprNoParen -> PseudoCall .)
    SHR_ASSIGN      reduce using rule 225 (PExprNoParen -> PseudoCall .)
    AMPCAREQ        reduce using rule 225 (PExprNoParen -> PseudoCall .)
    PLUSPLUS        reduce using rule 225 (PExprNoParen -> PseudoCall .)
    MINUSMIN        reduce using rule 225 (PExprNoParen -> PseudoCall .)
    EQUAL           reduce using rule 225 (PExprNoParen -> PseudoCall .)
    COLONEQ         reduce using rule 225 (PExprNoParen -> PseudoCall .)
    DDD             reduce using rule 225 (PExprNoParen -> PseudoCall .)
    PIPE            reduce using rule 225 (PExprNoParen -> PseudoCall .)
    RBRACK          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    RIGHT_ANGLE     reduce using rule 225 (PExprNoParen -> PseudoCall .)
    RBRACE          reduce using rule 225 (PExprNoParen -> PseudoCall .)
    COLON           reduce using rule 225 (PExprNoParen -> PseudoCall .)
    RIGHT_RIGHT     reduce using rule 225 (PExprNoParen -> PseudoCall .)


state 39

    (104) InterfaceType -> INTERFACE . LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> INTERFACE . LBRACE RBRACE

    LBRACE          shift and go to state 139


state 40

    (217) PExprNoParen -> Literal .

    DOT             reduce using rule 217 (PExprNoParen -> Literal .)
    LBRACK          reduce using rule 217 (PExprNoParen -> Literal .)
    LEFT_LEFT       reduce using rule 217 (PExprNoParen -> Literal .)
    LPAREN          reduce using rule 217 (PExprNoParen -> Literal .)
    DIVIDE          reduce using rule 217 (PExprNoParen -> Literal .)
    MOD             reduce using rule 217 (PExprNoParen -> Literal .)
    SHL             reduce using rule 217 (PExprNoParen -> Literal .)
    SHR             reduce using rule 217 (PExprNoParen -> Literal .)
    AMPERS          reduce using rule 217 (PExprNoParen -> Literal .)
    AMPCAR          reduce using rule 217 (PExprNoParen -> Literal .)
    TIMES           reduce using rule 217 (PExprNoParen -> Literal .)
    PLUS            reduce using rule 217 (PExprNoParen -> Literal .)
    MINUS           reduce using rule 217 (PExprNoParen -> Literal .)
    XOR             reduce using rule 217 (PExprNoParen -> Literal .)
    OR              reduce using rule 217 (PExprNoParen -> Literal .)
    EQEQ            reduce using rule 217 (PExprNoParen -> Literal .)
    NOTEQ           reduce using rule 217 (PExprNoParen -> Literal .)
    LEQ             reduce using rule 217 (PExprNoParen -> Literal .)
    GEQ             reduce using rule 217 (PExprNoParen -> Literal .)
    GREAT           reduce using rule 217 (PExprNoParen -> Literal .)
    LESS            reduce using rule 217 (PExprNoParen -> Literal .)
    AMPAMP          reduce using rule 217 (PExprNoParen -> Literal .)
    OROR            reduce using rule 217 (PExprNoParen -> Literal .)
    COMMA           reduce using rule 217 (PExprNoParen -> Literal .)
    SEMICOL         reduce using rule 217 (PExprNoParen -> Literal .)
    RPAREN          reduce using rule 217 (PExprNoParen -> Literal .)
    LBRACE          reduce using rule 217 (PExprNoParen -> Literal .)
    PLUSEQ          reduce using rule 217 (PExprNoParen -> Literal .)
    MINUSEQ         reduce using rule 217 (PExprNoParen -> Literal .)
    TIMESEQ         reduce using rule 217 (PExprNoParen -> Literal .)
    DIVIDEEQ        reduce using rule 217 (PExprNoParen -> Literal .)
    MODEQ           reduce using rule 217 (PExprNoParen -> Literal .)
    OREQ            reduce using rule 217 (PExprNoParen -> Literal .)
    AMPEQ           reduce using rule 217 (PExprNoParen -> Literal .)
    CAREQ           reduce using rule 217 (PExprNoParen -> Literal .)
    SHL_ASSIGN      reduce using rule 217 (PExprNoParen -> Literal .)
    SHR_ASSIGN      reduce using rule 217 (PExprNoParen -> Literal .)
    AMPCAREQ        reduce using rule 217 (PExprNoParen -> Literal .)
    PLUSPLUS        reduce using rule 217 (PExprNoParen -> Literal .)
    MINUSMIN        reduce using rule 217 (PExprNoParen -> Literal .)
    EQUAL           reduce using rule 217 (PExprNoParen -> Literal .)
    COLONEQ         reduce using rule 217 (PExprNoParen -> Literal .)
    DDD             reduce using rule 217 (PExprNoParen -> Literal .)
    PIPE            reduce using rule 217 (PExprNoParen -> Literal .)
    RBRACK          reduce using rule 217 (PExprNoParen -> Literal .)
    RIGHT_ANGLE     reduce using rule 217 (PExprNoParen -> Literal .)
    RBRACE          reduce using rule 217 (PExprNoParen -> Literal .)
    COLON           reduce using rule 217 (PExprNoParen -> Literal .)
    RIGHT_RIGHT     reduce using rule 217 (PExprNoParen -> Literal .)


state 41

    (244) Prec5Expr_ -> UExpr .

    DIVIDE          reduce using rule 244 (Prec5Expr_ -> UExpr .)
    MOD             reduce using rule 244 (Prec5Expr_ -> UExpr .)
    SHL             reduce using rule 244 (Prec5Expr_ -> UExpr .)
    SHR             reduce using rule 244 (Prec5Expr_ -> UExpr .)
    AMPERS          reduce using rule 244 (Prec5Expr_ -> UExpr .)
    AMPCAR          reduce using rule 244 (Prec5Expr_ -> UExpr .)
    TIMES           reduce using rule 244 (Prec5Expr_ -> UExpr .)
    PLUS            reduce using rule 244 (Prec5Expr_ -> UExpr .)
    MINUS           reduce using rule 244 (Prec5Expr_ -> UExpr .)
    XOR             reduce using rule 244 (Prec5Expr_ -> UExpr .)
    OR              reduce using rule 244 (Prec5Expr_ -> UExpr .)
    EQEQ            reduce using rule 244 (Prec5Expr_ -> UExpr .)
    NOTEQ           reduce using rule 244 (Prec5Expr_ -> UExpr .)
    LEQ             reduce using rule 244 (Prec5Expr_ -> UExpr .)
    GEQ             reduce using rule 244 (Prec5Expr_ -> UExpr .)
    GREAT           reduce using rule 244 (Prec5Expr_ -> UExpr .)
    LESS            reduce using rule 244 (Prec5Expr_ -> UExpr .)
    AMPAMP          reduce using rule 244 (Prec5Expr_ -> UExpr .)
    PLUSEQ          reduce using rule 244 (Prec5Expr_ -> UExpr .)
    MINUSEQ         reduce using rule 244 (Prec5Expr_ -> UExpr .)
    TIMESEQ         reduce using rule 244 (Prec5Expr_ -> UExpr .)
    DIVIDEEQ        reduce using rule 244 (Prec5Expr_ -> UExpr .)
    MODEQ           reduce using rule 244 (Prec5Expr_ -> UExpr .)
    OREQ            reduce using rule 244 (Prec5Expr_ -> UExpr .)
    AMPEQ           reduce using rule 244 (Prec5Expr_ -> UExpr .)
    CAREQ           reduce using rule 244 (Prec5Expr_ -> UExpr .)
    SHL_ASSIGN      reduce using rule 244 (Prec5Expr_ -> UExpr .)
    SHR_ASSIGN      reduce using rule 244 (Prec5Expr_ -> UExpr .)
    AMPCAREQ        reduce using rule 244 (Prec5Expr_ -> UExpr .)
    PLUSPLUS        reduce using rule 244 (Prec5Expr_ -> UExpr .)
    MINUSMIN        reduce using rule 244 (Prec5Expr_ -> UExpr .)
    OROR            reduce using rule 244 (Prec5Expr_ -> UExpr .)
    SEMICOL         reduce using rule 244 (Prec5Expr_ -> UExpr .)
    EQUAL           reduce using rule 244 (Prec5Expr_ -> UExpr .)
    COLONEQ         reduce using rule 244 (Prec5Expr_ -> UExpr .)
    COMMA           reduce using rule 244 (Prec5Expr_ -> UExpr .)
    LBRACE          reduce using rule 244 (Prec5Expr_ -> UExpr .)
    PIPE            reduce using rule 244 (Prec5Expr_ -> UExpr .)
    RBRACK          reduce using rule 244 (Prec5Expr_ -> UExpr .)
    RPAREN          reduce using rule 244 (Prec5Expr_ -> UExpr .)
    RIGHT_ANGLE     reduce using rule 244 (Prec5Expr_ -> UExpr .)
    RBRACE          reduce using rule 244 (Prec5Expr_ -> UExpr .)
    COLON           reduce using rule 244 (Prec5Expr_ -> UExpr .)
    RIGHT_RIGHT     reduce using rule 244 (Prec5Expr_ -> UExpr .)
    DDD             reduce using rule 244 (Prec5Expr_ -> UExpr .)


state 42

    (230) PExprNoParen -> ForCompExpr .

    DOT             reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    LBRACK          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    LEFT_LEFT       reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    LPAREN          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    DIVIDE          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    MOD             reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    SHL             reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    SHR             reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    AMPERS          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    AMPCAR          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    TIMES           reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    PLUS            reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    MINUS           reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    XOR             reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    OR              reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    EQEQ            reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    NOTEQ           reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    LEQ             reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    GEQ             reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    GREAT           reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    LESS            reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    AMPAMP          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    OROR            reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    COMMA           reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    SEMICOL         reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    RPAREN          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    LBRACE          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    PLUSEQ          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    MINUSEQ         reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    TIMESEQ         reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    DIVIDEEQ        reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    MODEQ           reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    OREQ            reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    AMPEQ           reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    CAREQ           reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    SHL_ASSIGN      reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    SHR_ASSIGN      reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    AMPCAREQ        reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    PLUSPLUS        reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    MINUSMIN        reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    EQUAL           reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    COLONEQ         reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    DDD             reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    PIPE            reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    RBRACK          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    RIGHT_ANGLE     reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    RBRACE          reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    COLON           reduce using rule 230 (PExprNoParen -> ForCompExpr .)
    RIGHT_RIGHT     reduce using rule 230 (PExprNoParen -> ForCompExpr .)


state 43

    (205) NonDeclStmt -> SwitchStmt .

    SEMICOL         reduce using rule 205 (NonDeclStmt -> SwitchStmt .)


state 44

    (95) OtherType -> LBRACK . OExpr RBRACK NType
    (280) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (153) OExpr -> .
    (154) OExpr -> . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 153 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 141
    PExpr                          shift and go to state 60

state 45

    (210) NonDeclStmt -> CONTINUE . ONewName
    (151) ONewName -> .
    (152) ONewName -> . NewName
    (134) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 151 (ONewName -> .)
    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 142
    ONewName                       shift and go to state 144

state 46

    (275) UExpr -> NOT . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 145
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 47

    (268) Expr -> CONSTANTS .

    PLUSEQ          reduce using rule 268 (Expr -> CONSTANTS .)
    MINUSEQ         reduce using rule 268 (Expr -> CONSTANTS .)
    TIMESEQ         reduce using rule 268 (Expr -> CONSTANTS .)
    DIVIDEEQ        reduce using rule 268 (Expr -> CONSTANTS .)
    MODEQ           reduce using rule 268 (Expr -> CONSTANTS .)
    OREQ            reduce using rule 268 (Expr -> CONSTANTS .)
    AMPEQ           reduce using rule 268 (Expr -> CONSTANTS .)
    CAREQ           reduce using rule 268 (Expr -> CONSTANTS .)
    SHL_ASSIGN      reduce using rule 268 (Expr -> CONSTANTS .)
    SHR_ASSIGN      reduce using rule 268 (Expr -> CONSTANTS .)
    AMPCAREQ        reduce using rule 268 (Expr -> CONSTANTS .)
    PLUSPLUS        reduce using rule 268 (Expr -> CONSTANTS .)
    MINUSMIN        reduce using rule 268 (Expr -> CONSTANTS .)
    OROR            reduce using rule 268 (Expr -> CONSTANTS .)
    SEMICOL         reduce using rule 268 (Expr -> CONSTANTS .)
    EQUAL           reduce using rule 268 (Expr -> CONSTANTS .)
    COLONEQ         reduce using rule 268 (Expr -> CONSTANTS .)
    COMMA           reduce using rule 268 (Expr -> CONSTANTS .)
    LBRACE          reduce using rule 268 (Expr -> CONSTANTS .)
    RPAREN          reduce using rule 268 (Expr -> CONSTANTS .)
    RBRACK          reduce using rule 268 (Expr -> CONSTANTS .)
    COLON           reduce using rule 268 (Expr -> CONSTANTS .)
    RIGHT_RIGHT     reduce using rule 268 (Expr -> CONSTANTS .)
    RIGHT_ANGLE     reduce using rule 268 (Expr -> CONSTANTS .)
    DDD             reduce using rule 268 (Expr -> CONSTANTS .)
    RBRACE          reduce using rule 268 (Expr -> CONSTANTS .)
    PIPE            reduce using rule 268 (Expr -> CONSTANTS .)


state 48

    (215) PExpr -> PExprNoParen .

    DOT             reduce using rule 215 (PExpr -> PExprNoParen .)
    LBRACK          reduce using rule 215 (PExpr -> PExprNoParen .)
    LEFT_LEFT       reduce using rule 215 (PExpr -> PExprNoParen .)
    LPAREN          reduce using rule 215 (PExpr -> PExprNoParen .)
    DIVIDE          reduce using rule 215 (PExpr -> PExprNoParen .)
    MOD             reduce using rule 215 (PExpr -> PExprNoParen .)
    SHL             reduce using rule 215 (PExpr -> PExprNoParen .)
    SHR             reduce using rule 215 (PExpr -> PExprNoParen .)
    AMPERS          reduce using rule 215 (PExpr -> PExprNoParen .)
    AMPCAR          reduce using rule 215 (PExpr -> PExprNoParen .)
    TIMES           reduce using rule 215 (PExpr -> PExprNoParen .)
    PLUS            reduce using rule 215 (PExpr -> PExprNoParen .)
    MINUS           reduce using rule 215 (PExpr -> PExprNoParen .)
    XOR             reduce using rule 215 (PExpr -> PExprNoParen .)
    OR              reduce using rule 215 (PExpr -> PExprNoParen .)
    EQEQ            reduce using rule 215 (PExpr -> PExprNoParen .)
    NOTEQ           reduce using rule 215 (PExpr -> PExprNoParen .)
    LEQ             reduce using rule 215 (PExpr -> PExprNoParen .)
    GEQ             reduce using rule 215 (PExpr -> PExprNoParen .)
    GREAT           reduce using rule 215 (PExpr -> PExprNoParen .)
    LESS            reduce using rule 215 (PExpr -> PExprNoParen .)
    AMPAMP          reduce using rule 215 (PExpr -> PExprNoParen .)
    OROR            reduce using rule 215 (PExpr -> PExprNoParen .)
    COMMA           reduce using rule 215 (PExpr -> PExprNoParen .)
    SEMICOL         reduce using rule 215 (PExpr -> PExprNoParen .)
    RPAREN          reduce using rule 215 (PExpr -> PExprNoParen .)
    LBRACE          reduce using rule 215 (PExpr -> PExprNoParen .)
    PLUSEQ          reduce using rule 215 (PExpr -> PExprNoParen .)
    MINUSEQ         reduce using rule 215 (PExpr -> PExprNoParen .)
    TIMESEQ         reduce using rule 215 (PExpr -> PExprNoParen .)
    DIVIDEEQ        reduce using rule 215 (PExpr -> PExprNoParen .)
    MODEQ           reduce using rule 215 (PExpr -> PExprNoParen .)
    OREQ            reduce using rule 215 (PExpr -> PExprNoParen .)
    AMPEQ           reduce using rule 215 (PExpr -> PExprNoParen .)
    CAREQ           reduce using rule 215 (PExpr -> PExprNoParen .)
    SHL_ASSIGN      reduce using rule 215 (PExpr -> PExprNoParen .)
    SHR_ASSIGN      reduce using rule 215 (PExpr -> PExprNoParen .)
    AMPCAREQ        reduce using rule 215 (PExpr -> PExprNoParen .)
    PLUSPLUS        reduce using rule 215 (PExpr -> PExprNoParen .)
    MINUSMIN        reduce using rule 215 (PExpr -> PExprNoParen .)
    EQUAL           reduce using rule 215 (PExpr -> PExprNoParen .)
    COLONEQ         reduce using rule 215 (PExpr -> PExprNoParen .)
    RBRACE          reduce using rule 215 (PExpr -> PExprNoParen .)
    PIPE            reduce using rule 215 (PExpr -> PExprNoParen .)
    RBRACK          reduce using rule 215 (PExpr -> PExprNoParen .)
    RIGHT_ANGLE     reduce using rule 215 (PExpr -> PExprNoParen .)
    COLON           reduce using rule 215 (PExpr -> PExprNoParen .)
    RIGHT_RIGHT     reduce using rule 215 (PExpr -> PExprNoParen .)
    DDD             reduce using rule 215 (PExpr -> PExprNoParen .)


state 49

    (99) ChannelType -> CHAN . NewType
    (100) ChannelType -> CHAN . LMINUS NewType
    (231) NewType -> . TYPE

    LMINUS          shift and go to state 146
    TYPE            shift and go to state 61

    NewType                        shift and go to state 147

state 50

    (7) Imports -> Import . SEMICOL

    SEMICOL         shift and go to state 148


state 51

    (243) SwitchStmt -> SWITCH . IfHeader LBRACE CaseBlockList RBRACE
    (78) IfHeader -> . OSimpleStmt
    (79) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (149) OSimpleStmt -> .
    (150) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 149 (OSimpleStmt -> .)
    LBRACE          reduce using rule 149 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 149
    Prec3Expr_                     shift and go to state 10
    IfHeader                       shift and go to state 150
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    PExpr                          shift and go to state 60

state 52

    (169) DeclList -> Declaration . SEMICOL

    SEMICOL         shift and go to state 151


state 53

    (277) UExpr -> PLUS . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 152
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 54

    (134) NewName -> IDENTIFIER .
    (190) Name -> IDENTIFIER .

    COLON           reduce using rule 134 (NewName -> IDENTIFIER .)
    DOT             reduce using rule 190 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 190 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 190 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 190 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 190 (Name -> IDENTIFIER .)
    MOD             reduce using rule 190 (Name -> IDENTIFIER .)
    SHL             reduce using rule 190 (Name -> IDENTIFIER .)
    SHR             reduce using rule 190 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 190 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 190 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 190 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 190 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 190 (Name -> IDENTIFIER .)
    XOR             reduce using rule 190 (Name -> IDENTIFIER .)
    OR              reduce using rule 190 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 190 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 190 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 190 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 190 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 190 (Name -> IDENTIFIER .)
    LESS            reduce using rule 190 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 190 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 190 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 190 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 190 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 190 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 190 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 190 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 190 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 190 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 190 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 190 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 190 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 190 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 190 (Name -> IDENTIFIER .)
    OROR            reduce using rule 190 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 190 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 190 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 190 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 190 (Name -> IDENTIFIER .)


state 55

    (227) PExprNoParen -> CompType . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LEFT_LEFT       shift and go to state 153


state 56

    (96) OtherType -> StructType .

    EQUAL           reduce using rule 96 (OtherType -> StructType .)
    SEMICOL         reduce using rule 96 (OtherType -> StructType .)
    RPAREN          reduce using rule 96 (OtherType -> StructType .)
    LBRACE          reduce using rule 96 (OtherType -> StructType .)
    LEFT_ANGLE      reduce using rule 96 (OtherType -> StructType .)
    LEFT_LEFT       reduce using rule 96 (OtherType -> StructType .)
    DDD             reduce using rule 96 (OtherType -> StructType .)
    COMMA           reduce using rule 96 (OtherType -> StructType .)
    OR_RIGHT        reduce using rule 96 (OtherType -> StructType .)
    RBRACE          reduce using rule 96 (OtherType -> StructType .)
    COLON           reduce using rule 96 (OtherType -> StructType .)
    COLONEQ         reduce using rule 96 (OtherType -> StructType .)
    INTEGER         reduce using rule 96 (OtherType -> StructType .)
    FLOAT           reduce using rule 96 (OtherType -> StructType .)
    STRING          reduce using rule 96 (OtherType -> StructType .)


state 57

    (3) SourceFile -> cmtlist PackageClause cmtlist DeclList . cmtlist
    (170) DeclList -> DeclList . cmtlist Declaration SEMICOL
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    $end            reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 154

state 58

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports . cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist Imports . cmtlist
    (8) Imports -> Imports . cmtlist Import SEMICOL
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    IMPORT          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    $end            reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 155

state 59

    (209) NonDeclStmt -> BREAK . ONewName
    (151) ONewName -> .
    (152) ONewName -> . NewName
    (134) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 151 (ONewName -> .)
    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 142
    ONewName                       shift and go to state 156

state 60

    (273) UExpr -> PExpr .
    (219) PExprNoParen -> PExpr . DOT IDENTIFIER
    (220) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> PExpr . DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (223) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (228) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (281) PseudoCall -> PExpr . LPAREN RPAREN
    (282) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN

    DIVIDE          reduce using rule 273 (UExpr -> PExpr .)
    MOD             reduce using rule 273 (UExpr -> PExpr .)
    SHL             reduce using rule 273 (UExpr -> PExpr .)
    SHR             reduce using rule 273 (UExpr -> PExpr .)
    AMPERS          reduce using rule 273 (UExpr -> PExpr .)
    AMPCAR          reduce using rule 273 (UExpr -> PExpr .)
    TIMES           reduce using rule 273 (UExpr -> PExpr .)
    PLUS            reduce using rule 273 (UExpr -> PExpr .)
    MINUS           reduce using rule 273 (UExpr -> PExpr .)
    XOR             reduce using rule 273 (UExpr -> PExpr .)
    OR              reduce using rule 273 (UExpr -> PExpr .)
    EQEQ            reduce using rule 273 (UExpr -> PExpr .)
    NOTEQ           reduce using rule 273 (UExpr -> PExpr .)
    LEQ             reduce using rule 273 (UExpr -> PExpr .)
    GEQ             reduce using rule 273 (UExpr -> PExpr .)
    GREAT           reduce using rule 273 (UExpr -> PExpr .)
    LESS            reduce using rule 273 (UExpr -> PExpr .)
    AMPAMP          reduce using rule 273 (UExpr -> PExpr .)
    PLUSEQ          reduce using rule 273 (UExpr -> PExpr .)
    MINUSEQ         reduce using rule 273 (UExpr -> PExpr .)
    TIMESEQ         reduce using rule 273 (UExpr -> PExpr .)
    DIVIDEEQ        reduce using rule 273 (UExpr -> PExpr .)
    MODEQ           reduce using rule 273 (UExpr -> PExpr .)
    OREQ            reduce using rule 273 (UExpr -> PExpr .)
    AMPEQ           reduce using rule 273 (UExpr -> PExpr .)
    CAREQ           reduce using rule 273 (UExpr -> PExpr .)
    SHL_ASSIGN      reduce using rule 273 (UExpr -> PExpr .)
    SHR_ASSIGN      reduce using rule 273 (UExpr -> PExpr .)
    AMPCAREQ        reduce using rule 273 (UExpr -> PExpr .)
    PLUSPLUS        reduce using rule 273 (UExpr -> PExpr .)
    MINUSMIN        reduce using rule 273 (UExpr -> PExpr .)
    OROR            reduce using rule 273 (UExpr -> PExpr .)
    SEMICOL         reduce using rule 273 (UExpr -> PExpr .)
    EQUAL           reduce using rule 273 (UExpr -> PExpr .)
    COLONEQ         reduce using rule 273 (UExpr -> PExpr .)
    COMMA           reduce using rule 273 (UExpr -> PExpr .)
    LBRACE          reduce using rule 273 (UExpr -> PExpr .)
    PIPE            reduce using rule 273 (UExpr -> PExpr .)
    RBRACK          reduce using rule 273 (UExpr -> PExpr .)
    RPAREN          reduce using rule 273 (UExpr -> PExpr .)
    RIGHT_ANGLE     reduce using rule 273 (UExpr -> PExpr .)
    RBRACE          reduce using rule 273 (UExpr -> PExpr .)
    COLON           reduce using rule 273 (UExpr -> PExpr .)
    RIGHT_RIGHT     reduce using rule 273 (UExpr -> PExpr .)
    DDD             reduce using rule 273 (UExpr -> PExpr .)
    DOT             shift and go to state 160
    LBRACK          shift and go to state 157
    LEFT_LEFT       shift and go to state 159
    LPAREN          shift and go to state 158


state 61

    (231) NewType -> TYPE .

    LPAREN          reduce using rule 231 (NewType -> TYPE .)
    IDENTIFIER      reduce using rule 231 (NewType -> TYPE .)
    COMMA           reduce using rule 231 (NewType -> TYPE .)
    LBRACE          reduce using rule 231 (NewType -> TYPE .)
    SEMICOL         reduce using rule 231 (NewType -> TYPE .)
    RPAREN          reduce using rule 231 (NewType -> TYPE .)
    OR_RIGHT        reduce using rule 231 (NewType -> TYPE .)
    INTEGER         reduce using rule 231 (NewType -> TYPE .)
    FLOAT           reduce using rule 231 (NewType -> TYPE .)
    STRING          reduce using rule 231 (NewType -> TYPE .)
    RBRACE          reduce using rule 231 (NewType -> TYPE .)
    LEFT_ANGLE      reduce using rule 231 (NewType -> TYPE .)
    EQUAL           reduce using rule 231 (NewType -> TYPE .)
    DDD             reduce using rule 231 (NewType -> TYPE .)
    COLON           reduce using rule 231 (NewType -> TYPE .)
    COLONEQ         reduce using rule 231 (NewType -> TYPE .)
    LEFT_LEFT       reduce using rule 231 (NewType -> TYPE .)


state 62

    (232) ConvType -> FuncType .
    (157) FuncLiteralDecl -> FuncType .

    LEFT_ANGLE      reduce using rule 232 (ConvType -> FuncType .)
    LBRACE          reduce using rule 157 (FuncLiteralDecl -> FuncType .)


state 63

    (203) NonDeclStmt -> SimpleStmt .

    SEMICOL         reduce using rule 203 (NonDeclStmt -> SimpleStmt .)


state 64

    (204) NonDeclStmt -> ForStmt .

    SEMICOL         reduce using rule 204 (NonDeclStmt -> ForStmt .)


state 65

    (28) CommonDecl -> NewType . TypeDecl
    (29) CommonDecl -> NewType . LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> NewType . LPAREN RPAREN
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    LPAREN          shift and go to state 162
    IDENTIFIER      shift and go to state 164

    TypeDecl                       shift and go to state 161
    TypeDeclName                   shift and go to state 163

state 66

    (211) NonDeclStmt -> GOTO . NewName
    (134) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 165

state 67

    (270) Expr -> Arrayexp .

    PLUSEQ          reduce using rule 270 (Expr -> Arrayexp .)
    MINUSEQ         reduce using rule 270 (Expr -> Arrayexp .)
    TIMESEQ         reduce using rule 270 (Expr -> Arrayexp .)
    DIVIDEEQ        reduce using rule 270 (Expr -> Arrayexp .)
    MODEQ           reduce using rule 270 (Expr -> Arrayexp .)
    OREQ            reduce using rule 270 (Expr -> Arrayexp .)
    AMPEQ           reduce using rule 270 (Expr -> Arrayexp .)
    CAREQ           reduce using rule 270 (Expr -> Arrayexp .)
    SHL_ASSIGN      reduce using rule 270 (Expr -> Arrayexp .)
    SHR_ASSIGN      reduce using rule 270 (Expr -> Arrayexp .)
    AMPCAREQ        reduce using rule 270 (Expr -> Arrayexp .)
    PLUSPLUS        reduce using rule 270 (Expr -> Arrayexp .)
    MINUSMIN        reduce using rule 270 (Expr -> Arrayexp .)
    OROR            reduce using rule 270 (Expr -> Arrayexp .)
    SEMICOL         reduce using rule 270 (Expr -> Arrayexp .)
    EQUAL           reduce using rule 270 (Expr -> Arrayexp .)
    COLONEQ         reduce using rule 270 (Expr -> Arrayexp .)
    COMMA           reduce using rule 270 (Expr -> Arrayexp .)
    LBRACE          reduce using rule 270 (Expr -> Arrayexp .)
    RPAREN          reduce using rule 270 (Expr -> Arrayexp .)
    RBRACK          reduce using rule 270 (Expr -> Arrayexp .)
    COLON           reduce using rule 270 (Expr -> Arrayexp .)
    RIGHT_RIGHT     reduce using rule 270 (Expr -> Arrayexp .)
    RIGHT_ANGLE     reduce using rule 270 (Expr -> Arrayexp .)
    DDD             reduce using rule 270 (Expr -> Arrayexp .)
    RBRACE          reduce using rule 270 (Expr -> Arrayexp .)
    PIPE            reduce using rule 270 (Expr -> Arrayexp .)


state 68

    (218) PExprNoParen -> Name .

    DOT             reduce using rule 218 (PExprNoParen -> Name .)
    LBRACK          reduce using rule 218 (PExprNoParen -> Name .)
    LEFT_LEFT       reduce using rule 218 (PExprNoParen -> Name .)
    LPAREN          reduce using rule 218 (PExprNoParen -> Name .)
    DIVIDE          reduce using rule 218 (PExprNoParen -> Name .)
    MOD             reduce using rule 218 (PExprNoParen -> Name .)
    SHL             reduce using rule 218 (PExprNoParen -> Name .)
    SHR             reduce using rule 218 (PExprNoParen -> Name .)
    AMPERS          reduce using rule 218 (PExprNoParen -> Name .)
    AMPCAR          reduce using rule 218 (PExprNoParen -> Name .)
    TIMES           reduce using rule 218 (PExprNoParen -> Name .)
    PLUS            reduce using rule 218 (PExprNoParen -> Name .)
    MINUS           reduce using rule 218 (PExprNoParen -> Name .)
    XOR             reduce using rule 218 (PExprNoParen -> Name .)
    OR              reduce using rule 218 (PExprNoParen -> Name .)
    EQEQ            reduce using rule 218 (PExprNoParen -> Name .)
    NOTEQ           reduce using rule 218 (PExprNoParen -> Name .)
    LEQ             reduce using rule 218 (PExprNoParen -> Name .)
    GEQ             reduce using rule 218 (PExprNoParen -> Name .)
    GREAT           reduce using rule 218 (PExprNoParen -> Name .)
    LESS            reduce using rule 218 (PExprNoParen -> Name .)
    AMPAMP          reduce using rule 218 (PExprNoParen -> Name .)
    OROR            reduce using rule 218 (PExprNoParen -> Name .)
    COMMA           reduce using rule 218 (PExprNoParen -> Name .)
    SEMICOL         reduce using rule 218 (PExprNoParen -> Name .)
    RPAREN          reduce using rule 218 (PExprNoParen -> Name .)
    LBRACE          reduce using rule 218 (PExprNoParen -> Name .)
    PLUSEQ          reduce using rule 218 (PExprNoParen -> Name .)
    MINUSEQ         reduce using rule 218 (PExprNoParen -> Name .)
    TIMESEQ         reduce using rule 218 (PExprNoParen -> Name .)
    DIVIDEEQ        reduce using rule 218 (PExprNoParen -> Name .)
    MODEQ           reduce using rule 218 (PExprNoParen -> Name .)
    OREQ            reduce using rule 218 (PExprNoParen -> Name .)
    AMPEQ           reduce using rule 218 (PExprNoParen -> Name .)
    CAREQ           reduce using rule 218 (PExprNoParen -> Name .)
    SHL_ASSIGN      reduce using rule 218 (PExprNoParen -> Name .)
    SHR_ASSIGN      reduce using rule 218 (PExprNoParen -> Name .)
    AMPCAREQ        reduce using rule 218 (PExprNoParen -> Name .)
    PLUSPLUS        reduce using rule 218 (PExprNoParen -> Name .)
    MINUSMIN        reduce using rule 218 (PExprNoParen -> Name .)
    EQUAL           reduce using rule 218 (PExprNoParen -> Name .)
    COLONEQ         reduce using rule 218 (PExprNoParen -> Name .)
    DDD             reduce using rule 218 (PExprNoParen -> Name .)
    PIPE            reduce using rule 218 (PExprNoParen -> Name .)
    RBRACK          reduce using rule 218 (PExprNoParen -> Name .)
    RIGHT_ANGLE     reduce using rule 218 (PExprNoParen -> Name .)
    RBRACE          reduce using rule 218 (PExprNoParen -> Name .)
    COLON           reduce using rule 218 (PExprNoParen -> Name .)
    RIGHT_RIGHT     reduce using rule 218 (PExprNoParen -> Name .)


state 69

    (20) Declaration -> NonDeclStmt .

    SEMICOL         reduce using rule 20 (Declaration -> NonDeclStmt .)


state 70

    (41) SimpleStmt -> Expr .
    (42) SimpleStmt -> Expr . PLUSEQ Expr
    (43) SimpleStmt -> Expr . MINUSEQ Expr
    (44) SimpleStmt -> Expr . TIMESEQ Expr
    (45) SimpleStmt -> Expr . DIVIDEEQ Expr
    (46) SimpleStmt -> Expr . MODEQ Expr
    (47) SimpleStmt -> Expr . OREQ Expr
    (48) SimpleStmt -> Expr . AMPEQ Expr
    (49) SimpleStmt -> Expr . CAREQ Expr
    (50) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (51) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (52) SimpleStmt -> Expr . AMPCAREQ Expr
    (55) SimpleStmt -> Expr . PLUSPLUS
    (56) SimpleStmt -> Expr . MINUSMIN
    (267) Expr -> Expr . OROR Prec2Expr_
    (159) ExprList -> Expr .

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 169
    MINUSEQ         shift and go to state 173
    TIMESEQ         shift and go to state 168
    DIVIDEEQ        shift and go to state 179
    MODEQ           shift and go to state 170
    OREQ            shift and go to state 172
    AMPEQ           shift and go to state 175
    CAREQ           shift and go to state 167
    SHL_ASSIGN      shift and go to state 177
    SHR_ASSIGN      shift and go to state 171
    AMPCAREQ        shift and go to state 176
    PLUSPLUS        shift and go to state 178
    MINUSMIN        shift and go to state 174
    OROR            shift and go to state 166
    EQUAL           reduce using rule 159 (ExprList -> Expr .)
    COLONEQ         reduce using rule 159 (ExprList -> Expr .)
    COMMA           reduce using rule 159 (ExprList -> Expr .)


state 71

    (279) UExpr -> XOR . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 180
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 72

    (276) UExpr -> TIMES . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 181
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 73

    (216) PExpr -> LPAREN . ExprOrType RPAREN
    (240) ExprOrType -> . Expr
    (241) ExprOrType -> . NonExprType
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (92) NonExprType -> . FuncType
    (93) NonExprType -> . OtherType
    (94) NonExprType -> . TIMES NonExprType
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 183
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 74

    (80) IfStmt -> IF . IfHeader ifmarker LoopBody revmarker ElseIfList
    (78) IfHeader -> . OSimpleStmt
    (79) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (149) OSimpleStmt -> .
    (150) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 149 (OSimpleStmt -> .)
    LBRACE          reduce using rule 149 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 149
    Prec3Expr_                     shift and go to state 10
    IfHeader                       shift and go to state 188
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    PExpr                          shift and go to state 60

state 75

    (102) StructType -> STRUCT . LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> STRUCT . LBRACE RBRACE

    LBRACE          shift and go to state 189


state 76

    (166) Literal -> FLOAT .

    DOT             reduce using rule 166 (Literal -> FLOAT .)
    LBRACK          reduce using rule 166 (Literal -> FLOAT .)
    LEFT_LEFT       reduce using rule 166 (Literal -> FLOAT .)
    LPAREN          reduce using rule 166 (Literal -> FLOAT .)
    DIVIDE          reduce using rule 166 (Literal -> FLOAT .)
    MOD             reduce using rule 166 (Literal -> FLOAT .)
    SHL             reduce using rule 166 (Literal -> FLOAT .)
    SHR             reduce using rule 166 (Literal -> FLOAT .)
    AMPERS          reduce using rule 166 (Literal -> FLOAT .)
    AMPCAR          reduce using rule 166 (Literal -> FLOAT .)
    TIMES           reduce using rule 166 (Literal -> FLOAT .)
    PLUS            reduce using rule 166 (Literal -> FLOAT .)
    MINUS           reduce using rule 166 (Literal -> FLOAT .)
    XOR             reduce using rule 166 (Literal -> FLOAT .)
    OR              reduce using rule 166 (Literal -> FLOAT .)
    EQEQ            reduce using rule 166 (Literal -> FLOAT .)
    NOTEQ           reduce using rule 166 (Literal -> FLOAT .)
    LEQ             reduce using rule 166 (Literal -> FLOAT .)
    GEQ             reduce using rule 166 (Literal -> FLOAT .)
    GREAT           reduce using rule 166 (Literal -> FLOAT .)
    LESS            reduce using rule 166 (Literal -> FLOAT .)
    AMPAMP          reduce using rule 166 (Literal -> FLOAT .)
    PLUSEQ          reduce using rule 166 (Literal -> FLOAT .)
    MINUSEQ         reduce using rule 166 (Literal -> FLOAT .)
    TIMESEQ         reduce using rule 166 (Literal -> FLOAT .)
    DIVIDEEQ        reduce using rule 166 (Literal -> FLOAT .)
    MODEQ           reduce using rule 166 (Literal -> FLOAT .)
    OREQ            reduce using rule 166 (Literal -> FLOAT .)
    AMPEQ           reduce using rule 166 (Literal -> FLOAT .)
    CAREQ           reduce using rule 166 (Literal -> FLOAT .)
    SHL_ASSIGN      reduce using rule 166 (Literal -> FLOAT .)
    SHR_ASSIGN      reduce using rule 166 (Literal -> FLOAT .)
    AMPCAREQ        reduce using rule 166 (Literal -> FLOAT .)
    PLUSPLUS        reduce using rule 166 (Literal -> FLOAT .)
    MINUSMIN        reduce using rule 166 (Literal -> FLOAT .)
    OROR            reduce using rule 166 (Literal -> FLOAT .)
    SEMICOL         reduce using rule 166 (Literal -> FLOAT .)
    EQUAL           reduce using rule 166 (Literal -> FLOAT .)
    COLONEQ         reduce using rule 166 (Literal -> FLOAT .)
    COMMA           reduce using rule 166 (Literal -> FLOAT .)
    LBRACE          reduce using rule 166 (Literal -> FLOAT .)
    PIPE            reduce using rule 166 (Literal -> FLOAT .)
    RBRACK          reduce using rule 166 (Literal -> FLOAT .)
    RPAREN          reduce using rule 166 (Literal -> FLOAT .)
    RIGHT_ANGLE     reduce using rule 166 (Literal -> FLOAT .)
    RBRACE          reduce using rule 166 (Literal -> FLOAT .)
    COLON           reduce using rule 166 (Literal -> FLOAT .)
    RIGHT_RIGHT     reduce using rule 166 (Literal -> FLOAT .)
    DDD             reduce using rule 166 (Literal -> FLOAT .)


state 77

    (6) PackageClause -> PACKAGE IDENTIFIER SEMICOL .

    COMMENT         reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IMPORT          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANT        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    VAR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FUNCTION        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FALLTHROUGH     reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    BREAK           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONTINUE        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    GOTO            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    RETURN          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TYPE            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FOR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    SWITCH          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IF              reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANTS       reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IDENTIFIER      reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LMINUS          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LBRACK          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRUCT          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTERFACE       reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CHAN            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    AMPERS          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    NOT             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TIMES           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    PLUS            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MINUS           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    XOR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LPAREN          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTEGER         reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FLOAT           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRING          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    $end            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)


state 78

    (261) Prec3Expr_ -> Prec3Expr_ GEQ . Prec4Expr_
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 190
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 79

    (260) Prec3Expr_ -> Prec3Expr_ LEQ . Prec4Expr_
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 191
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 80

    (258) Prec3Expr_ -> Prec3Expr_ EQEQ . Prec4Expr_
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 192
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 81

    (263) Prec3Expr_ -> Prec3Expr_ LESS . Prec4Expr_
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 193
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 82

    (262) Prec3Expr_ -> Prec3Expr_ GREAT . Prec4Expr_
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 194
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 83

    (259) Prec3Expr_ -> Prec3Expr_ NOTEQ . Prec4Expr_
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 195
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 84

    (226) PExprNoParen -> ConvType LEFT_ANGLE . Expr OComma RIGHT_ANGLE
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 196
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 85

    (207) NonDeclStmt -> LabelName COLON . Stmt
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 197
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 86

    (248) Prec5Expr_ -> Prec5Expr_ SHR . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 202
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 87

    (245) Prec5Expr_ -> Prec5Expr_ DIVIDE . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 203
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 88

    (250) Prec5Expr_ -> Prec5Expr_ AMPCAR . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 204
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 89

    (249) Prec5Expr_ -> Prec5Expr_ AMPERS . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 205
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 90

    (251) Prec5Expr_ -> Prec5Expr_ TIMES . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 206
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 91

    (247) Prec5Expr_ -> Prec5Expr_ SHL . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 207
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 92

    (246) Prec5Expr_ -> Prec5Expr_ MOD . UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 208
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 93

    (12) ImportStmt -> ImportHere . STRING

    STRING          shift and go to state 209


state 94

    (16) ImportHere -> IDENTIFIER .

    STRING          reduce using rule 16 (ImportHere -> IDENTIFIER .)


state 95

    (10) Import -> IMPORT LPAREN . ImportStmtList OSemi RPAREN
    (11) Import -> IMPORT LPAREN . RPAREN
    (13) ImportStmtList -> . ImportStmt
    (14) ImportStmtList -> . ImportStmtList SEMICOL ImportStmt
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    RPAREN          shift and go to state 210
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 94
    DOT             shift and go to state 97

    ImportHere                     shift and go to state 93
    ImportStmt                     shift and go to state 212
    ImportStmtList                 shift and go to state 211

state 96

    (9) Import -> IMPORT ImportStmt .

    SEMICOL         reduce using rule 9 (Import -> IMPORT ImportStmt .)


state 97

    (17) ImportHere -> DOT .

    STRING          reduce using rule 17 (ImportHere -> DOT .)


state 98

    (271) Chexpr -> LMINUS IDENTIFIER .

    OROR            reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    RBRACE          reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    COMMA           reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    COLON           reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    LBRACE          reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    RBRACK          reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    PLUSEQ          reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    MINUSEQ         reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    TIMESEQ         reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    DIVIDEEQ        reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    MODEQ           reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    OREQ            reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    AMPEQ           reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    CAREQ           reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    AMPCAREQ        reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    PLUSPLUS        reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    MINUSMIN        reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    SEMICOL         reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    EQUAL           reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    COLONEQ         reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    DDD             reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    RPAREN          reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    PIPE            reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 271 (Chexpr -> LMINUS IDENTIFIER .)


state 99

    (101) ChannelType -> LMINUS CHAN . NewType
    (231) NewType -> . TYPE

    TYPE            shift and go to state 61

    NewType                        shift and go to state 213

state 100

    (265) Prec2Expr_ -> Prec2Expr_ AMPAMP . Prec3Expr_
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 214
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 101

    (158) FuncLiteral -> FuncLiteralDecl LBRACE . cmtlist StmtList cmtlist RBRACE
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    LBRACE          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    SEMICOL         reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 215

state 102

    (189) DeclName -> IDENTIFIER .

    EQUAL           reduce using rule 189 (DeclName -> IDENTIFIER .)
    COMMA           reduce using rule 189 (DeclName -> IDENTIFIER .)
    LPAREN          reduce using rule 189 (DeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 189 (DeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 189 (DeclName -> IDENTIFIER .)
    TIMES           reduce using rule 189 (DeclName -> IDENTIFIER .)
    TYPE            reduce using rule 189 (DeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 189 (DeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 189 (DeclName -> IDENTIFIER .)
    CHAN            reduce using rule 189 (DeclName -> IDENTIFIER .)
    LMINUS          reduce using rule 189 (DeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 189 (DeclName -> IDENTIFIER .)
    SEMICOL         reduce using rule 189 (DeclName -> IDENTIFIER .)
    RPAREN          reduce using rule 189 (DeclName -> IDENTIFIER .)


state 103

    (177) DeclNameList -> DeclName .

    EQUAL           reduce using rule 177 (DeclNameList -> DeclName .)
    COMMA           reduce using rule 177 (DeclNameList -> DeclName .)
    LPAREN          reduce using rule 177 (DeclNameList -> DeclName .)
    FUNCTION        reduce using rule 177 (DeclNameList -> DeclName .)
    LBRACK          reduce using rule 177 (DeclNameList -> DeclName .)
    TIMES           reduce using rule 177 (DeclNameList -> DeclName .)
    TYPE            reduce using rule 177 (DeclNameList -> DeclName .)
    STRUCT          reduce using rule 177 (DeclNameList -> DeclName .)
    INTERFACE       reduce using rule 177 (DeclNameList -> DeclName .)
    CHAN            reduce using rule 177 (DeclNameList -> DeclName .)
    LMINUS          reduce using rule 177 (DeclNameList -> DeclName .)
    IDENTIFIER      reduce using rule 177 (DeclNameList -> DeclName .)
    SEMICOL         reduce using rule 177 (DeclNameList -> DeclName .)
    RPAREN          reduce using rule 177 (DeclNameList -> DeclName .)


state 104

    (25) CommonDecl -> VAR VarDecl .

    SEMICOL         reduce using rule 25 (CommonDecl -> VAR VarDecl .)


state 105

    (26) CommonDecl -> VAR LPAREN . VarDeclList OSemi RPAREN
    (27) CommonDecl -> VAR LPAREN . RPAREN
    (171) VarDeclList -> . VarDecl
    (172) VarDeclList -> . VarDeclList SEMICOL VarDecl
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (177) DeclNameList -> . DeclName
    (178) DeclNameList -> . DeclNameList COMMA DeclName
    (189) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 216
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    VarDecl                        shift and go to state 217
    VarDeclList                    shift and go to state 218
    DeclNameList                   shift and go to state 106

state 106

    (31) VarDecl -> DeclNameList . NType
    (32) VarDecl -> DeclNameList . NType EQUAL ExprList
    (33) VarDecl -> DeclNameList . EQUAL ExprList
    (178) DeclNameList -> DeclNameList . COMMA DeclName
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    EQUAL           shift and go to state 220
    COMMA           shift and go to state 226
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    NewType                        shift and go to state 222
    FuncType                       shift and go to state 219
    NType                          shift and go to state 228
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    Name                           shift and go to state 227

state 107

    (160) ExprList -> ExprList COMMA . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 231
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 108

    (54) SimpleStmt -> ExprList COLONEQ . ExprList
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 232
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 109

    (53) SimpleStmt -> ExprList EQUAL . ExprList
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 233
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 110

    (156) OExprList -> ExprList .
    (160) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 156 (OExprList -> ExprList .)
    COMMA           shift and go to state 107


state 111

    (212) NonDeclStmt -> RETURN OExprList .

    SEMICOL         reduce using rule 212 (NonDeclStmt -> RETURN OExprList .)


state 112

    (110) FuncType -> FUNCTION . ArgList FuncRes
    (111) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (112) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 128

    ArgList                        shift and go to state 129

state 113

    (190) Name -> IDENTIFIER .

    DOT             reduce using rule 190 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 190 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 190 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 190 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 190 (Name -> IDENTIFIER .)
    MOD             reduce using rule 190 (Name -> IDENTIFIER .)
    SHL             reduce using rule 190 (Name -> IDENTIFIER .)
    SHR             reduce using rule 190 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 190 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 190 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 190 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 190 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 190 (Name -> IDENTIFIER .)
    XOR             reduce using rule 190 (Name -> IDENTIFIER .)
    OR              reduce using rule 190 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 190 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 190 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 190 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 190 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 190 (Name -> IDENTIFIER .)
    LESS            reduce using rule 190 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 190 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 190 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 190 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 190 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 190 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 190 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 190 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 190 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 190 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 190 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 190 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 190 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 190 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 190 (Name -> IDENTIFIER .)
    OROR            reduce using rule 190 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 190 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 190 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 190 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 190 (Name -> IDENTIFIER .)
    LBRACE          reduce using rule 190 (Name -> IDENTIFIER .)
    PIPE            reduce using rule 190 (Name -> IDENTIFIER .)
    RBRACK          reduce using rule 190 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 190 (Name -> IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 190 (Name -> IDENTIFIER .)
    RBRACE          reduce using rule 190 (Name -> IDENTIFIER .)
    COLON           reduce using rule 190 (Name -> IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 190 (Name -> IDENTIFIER .)
    DDD             reduce using rule 190 (Name -> IDENTIFIER .)
    INTEGER         reduce using rule 190 (Name -> IDENTIFIER .)
    FLOAT           reduce using rule 190 (Name -> IDENTIFIER .)
    STRING          reduce using rule 190 (Name -> IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 190 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 190 (Name -> IDENTIFIER .)


state 114

    (159) ExprList -> Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 159 (ExprList -> Expr .)
    SEMICOL         reduce using rule 159 (ExprList -> Expr .)
    LBRACE          reduce using rule 159 (ExprList -> Expr .)
    RPAREN          reduce using rule 159 (ExprList -> Expr .)
    EQUAL           reduce using rule 159 (ExprList -> Expr .)
    COLONEQ         reduce using rule 159 (ExprList -> Expr .)
    RBRACE          reduce using rule 159 (ExprList -> Expr .)
    OROR            shift and go to state 166


state 115

    (22) CommonDecl -> CONSTANT LPAREN . ConstDecl OSemi RPAREN
    (23) CommonDecl -> CONSTANT LPAREN . ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> CONSTANT LPAREN . RPAREN
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (177) DeclNameList -> . DeclName
    (178) DeclNameList -> . DeclNameList COMMA DeclName
    (189) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 234
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    ConstDecl                      shift and go to state 235
    DeclNameList                   shift and go to state 116

state 116

    (34) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (35) ConstDecl -> DeclNameList . NType
    (36) ConstDecl -> DeclNameList . EQUAL ExprList
    (178) DeclNameList -> DeclNameList . COMMA DeclName
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    EQUAL           shift and go to state 236
    COMMA           shift and go to state 226
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    NewType                        shift and go to state 222
    FuncType                       shift and go to state 219
    NType                          shift and go to state 237
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    Name                           shift and go to state 227

state 117

    (21) CommonDecl -> CONSTANT ConstDecl .

    SEMICOL         reduce using rule 21 (CommonDecl -> CONSTANT ConstDecl .)


state 118

    (233) ConvType -> OtherType .
    (234) CompType -> OtherType .

    LEFT_ANGLE      reduce using rule 233 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 234 (CompType -> OtherType .)


state 119

    (101) ChannelType -> LMINUS . CHAN NewType

    CHAN            shift and go to state 99


state 120

    (274) UExpr -> AMPERS UExpr .

    DIVIDE          reduce using rule 274 (UExpr -> AMPERS UExpr .)
    MOD             reduce using rule 274 (UExpr -> AMPERS UExpr .)
    SHL             reduce using rule 274 (UExpr -> AMPERS UExpr .)
    SHR             reduce using rule 274 (UExpr -> AMPERS UExpr .)
    AMPERS          reduce using rule 274 (UExpr -> AMPERS UExpr .)
    AMPCAR          reduce using rule 274 (UExpr -> AMPERS UExpr .)
    TIMES           reduce using rule 274 (UExpr -> AMPERS UExpr .)
    PLUS            reduce using rule 274 (UExpr -> AMPERS UExpr .)
    MINUS           reduce using rule 274 (UExpr -> AMPERS UExpr .)
    XOR             reduce using rule 274 (UExpr -> AMPERS UExpr .)
    OR              reduce using rule 274 (UExpr -> AMPERS UExpr .)
    EQEQ            reduce using rule 274 (UExpr -> AMPERS UExpr .)
    NOTEQ           reduce using rule 274 (UExpr -> AMPERS UExpr .)
    LEQ             reduce using rule 274 (UExpr -> AMPERS UExpr .)
    GEQ             reduce using rule 274 (UExpr -> AMPERS UExpr .)
    GREAT           reduce using rule 274 (UExpr -> AMPERS UExpr .)
    LESS            reduce using rule 274 (UExpr -> AMPERS UExpr .)
    AMPAMP          reduce using rule 274 (UExpr -> AMPERS UExpr .)
    PLUSEQ          reduce using rule 274 (UExpr -> AMPERS UExpr .)
    MINUSEQ         reduce using rule 274 (UExpr -> AMPERS UExpr .)
    TIMESEQ         reduce using rule 274 (UExpr -> AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 274 (UExpr -> AMPERS UExpr .)
    MODEQ           reduce using rule 274 (UExpr -> AMPERS UExpr .)
    OREQ            reduce using rule 274 (UExpr -> AMPERS UExpr .)
    AMPEQ           reduce using rule 274 (UExpr -> AMPERS UExpr .)
    CAREQ           reduce using rule 274 (UExpr -> AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 274 (UExpr -> AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 274 (UExpr -> AMPERS UExpr .)
    AMPCAREQ        reduce using rule 274 (UExpr -> AMPERS UExpr .)
    PLUSPLUS        reduce using rule 274 (UExpr -> AMPERS UExpr .)
    MINUSMIN        reduce using rule 274 (UExpr -> AMPERS UExpr .)
    OROR            reduce using rule 274 (UExpr -> AMPERS UExpr .)
    SEMICOL         reduce using rule 274 (UExpr -> AMPERS UExpr .)
    EQUAL           reduce using rule 274 (UExpr -> AMPERS UExpr .)
    COLONEQ         reduce using rule 274 (UExpr -> AMPERS UExpr .)
    COMMA           reduce using rule 274 (UExpr -> AMPERS UExpr .)
    LBRACE          reduce using rule 274 (UExpr -> AMPERS UExpr .)
    PIPE            reduce using rule 274 (UExpr -> AMPERS UExpr .)
    RBRACK          reduce using rule 274 (UExpr -> AMPERS UExpr .)
    RPAREN          reduce using rule 274 (UExpr -> AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 274 (UExpr -> AMPERS UExpr .)
    RBRACE          reduce using rule 274 (UExpr -> AMPERS UExpr .)
    COLON           reduce using rule 274 (UExpr -> AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 274 (UExpr -> AMPERS UExpr .)
    DDD             reduce using rule 274 (UExpr -> AMPERS UExpr .)


state 121

    (280) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (95) OtherType -> LBRACK . OExpr RBRACK NType
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (153) OExpr -> .
    (154) OExpr -> . Expr
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    RBRACK          reduce using rule 153 (OExpr -> .)
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 238
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 141
    PExpr                          shift and go to state 60

state 122

    (255) Prec4Expr_ -> Prec4Expr_ XOR . Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 239
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 123

    (256) Prec4Expr_ -> Prec4Expr_ OR . Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 240
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 124

    (253) Prec4Expr_ -> Prec4Expr_ PLUS . Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 241
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 125

    (254) Prec4Expr_ -> Prec4Expr_ MINUS . Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 242
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 126

    (278) UExpr -> MINUS UExpr .

    DIVIDE          reduce using rule 278 (UExpr -> MINUS UExpr .)
    MOD             reduce using rule 278 (UExpr -> MINUS UExpr .)
    SHL             reduce using rule 278 (UExpr -> MINUS UExpr .)
    SHR             reduce using rule 278 (UExpr -> MINUS UExpr .)
    AMPERS          reduce using rule 278 (UExpr -> MINUS UExpr .)
    AMPCAR          reduce using rule 278 (UExpr -> MINUS UExpr .)
    TIMES           reduce using rule 278 (UExpr -> MINUS UExpr .)
    PLUS            reduce using rule 278 (UExpr -> MINUS UExpr .)
    MINUS           reduce using rule 278 (UExpr -> MINUS UExpr .)
    XOR             reduce using rule 278 (UExpr -> MINUS UExpr .)
    OR              reduce using rule 278 (UExpr -> MINUS UExpr .)
    EQEQ            reduce using rule 278 (UExpr -> MINUS UExpr .)
    NOTEQ           reduce using rule 278 (UExpr -> MINUS UExpr .)
    LEQ             reduce using rule 278 (UExpr -> MINUS UExpr .)
    GEQ             reduce using rule 278 (UExpr -> MINUS UExpr .)
    GREAT           reduce using rule 278 (UExpr -> MINUS UExpr .)
    LESS            reduce using rule 278 (UExpr -> MINUS UExpr .)
    AMPAMP          reduce using rule 278 (UExpr -> MINUS UExpr .)
    PLUSEQ          reduce using rule 278 (UExpr -> MINUS UExpr .)
    MINUSEQ         reduce using rule 278 (UExpr -> MINUS UExpr .)
    TIMESEQ         reduce using rule 278 (UExpr -> MINUS UExpr .)
    DIVIDEEQ        reduce using rule 278 (UExpr -> MINUS UExpr .)
    MODEQ           reduce using rule 278 (UExpr -> MINUS UExpr .)
    OREQ            reduce using rule 278 (UExpr -> MINUS UExpr .)
    AMPEQ           reduce using rule 278 (UExpr -> MINUS UExpr .)
    CAREQ           reduce using rule 278 (UExpr -> MINUS UExpr .)
    SHL_ASSIGN      reduce using rule 278 (UExpr -> MINUS UExpr .)
    SHR_ASSIGN      reduce using rule 278 (UExpr -> MINUS UExpr .)
    AMPCAREQ        reduce using rule 278 (UExpr -> MINUS UExpr .)
    PLUSPLUS        reduce using rule 278 (UExpr -> MINUS UExpr .)
    MINUSMIN        reduce using rule 278 (UExpr -> MINUS UExpr .)
    OROR            reduce using rule 278 (UExpr -> MINUS UExpr .)
    SEMICOL         reduce using rule 278 (UExpr -> MINUS UExpr .)
    EQUAL           reduce using rule 278 (UExpr -> MINUS UExpr .)
    COLONEQ         reduce using rule 278 (UExpr -> MINUS UExpr .)
    COMMA           reduce using rule 278 (UExpr -> MINUS UExpr .)
    LBRACE          reduce using rule 278 (UExpr -> MINUS UExpr .)
    PIPE            reduce using rule 278 (UExpr -> MINUS UExpr .)
    RBRACK          reduce using rule 278 (UExpr -> MINUS UExpr .)
    RPAREN          reduce using rule 278 (UExpr -> MINUS UExpr .)
    RIGHT_ANGLE     reduce using rule 278 (UExpr -> MINUS UExpr .)
    RBRACE          reduce using rule 278 (UExpr -> MINUS UExpr .)
    COLON           reduce using rule 278 (UExpr -> MINUS UExpr .)
    RIGHT_RIGHT     reduce using rule 278 (UExpr -> MINUS UExpr .)
    DDD             reduce using rule 278 (UExpr -> MINUS UExpr .)


state 127

    (272) Arrayexp -> OtherType LBRACE . ExprList RBRACE
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 243
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 128

    (111) ArgList -> LPAREN . OArgTypeListOComma RPAREN
    (197) OArgTypeListOComma -> .
    (198) OArgTypeListOComma -> . ArgTypeList OComma
    (195) ArgTypeList -> . ArgType
    (196) ArgTypeList -> . ArgTypeList COMMA ArgType
    (191) ArgType -> . NameOrType
    (192) ArgType -> . IDENTIFIER NameOrType
    (193) ArgType -> . IDENTIFIER DotDotDot
    (194) ArgType -> . DotDotDot
    (242) NameOrType -> . NType
    (213) DotDotDot -> . DDD
    (214) DotDotDot -> . DDD NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    RPAREN          reduce using rule 197 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 219
    ArgTypeList                    shift and go to state 244
    PtrType                        shift and go to state 221
    ArgType                        shift and go to state 245
    NewType                        shift and go to state 222
    OArgTypeListOComma             shift and go to state 246
    DotDotDot                      shift and go to state 247
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NType                          shift and go to state 250
    DotName                        shift and go to state 223

state 129

    (110) FuncType -> FUNCTION ArgList . FuncRes
    (112) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (116) FuncRes -> .
    (117) FuncRes -> . FuncRetType
    (118) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (136) FuncRetType -> . FuncType
    (137) FuncRetType -> . OtherType
    (138) FuncRetType -> . PtrType
    (139) FuncRetType -> . DotName
    (140) FuncRetType -> . myType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (141) myType -> . NewType
    (142) myType -> . myType COMMA NewType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER
    (231) NewType -> . TYPE

    LPAREN          shift and go to state 252
    LEFT_ANGLE      reduce using rule 116 (FuncRes -> .)
    LBRACE          reduce using rule 116 (FuncRes -> .)
    RPAREN          reduce using rule 116 (FuncRes -> .)
    EQUAL           reduce using rule 116 (FuncRes -> .)
    SEMICOL         reduce using rule 116 (FuncRes -> .)
    COMMA           reduce using rule 116 (FuncRes -> .)
    DDD             reduce using rule 116 (FuncRes -> .)
    COLON           reduce using rule 116 (FuncRes -> .)
    COLONEQ         reduce using rule 116 (FuncRes -> .)
    OR_RIGHT        reduce using rule 116 (FuncRes -> .)
    LEFT_LEFT       reduce using rule 116 (FuncRes -> .)
    INTEGER         reduce using rule 116 (FuncRes -> .)
    FLOAT           reduce using rule 116 (FuncRes -> .)
    STRING          reduce using rule 116 (FuncRes -> .)
    RBRACE          reduce using rule 116 (FuncRes -> .)
    LEFT_OR         shift and go to state 259
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113
    TYPE            shift and go to state 61

    StructType                     shift and go to state 56
    DotName                        shift and go to state 260
    Name                           shift and go to state 227
    FuncType                       shift and go to state 253
    OtherType                      shift and go to state 257
    InterfaceType                  shift and go to state 15
    FuncRes                        shift and go to state 258
    myType                         shift and go to state 254
    PtrType                        shift and go to state 255
    ChannelType                    shift and go to state 35
    FuncRetType                    shift and go to state 261
    NewType                        shift and go to state 256

state 130

    (106) FuncDecl -> FUNCTION funcmarker . FuncDecl_ FuncBody
    (108) FuncDecl_ -> . IDENTIFIER ArgList FuncRes
    (109) FuncDecl_ -> . LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 264
    LEFT_OR         shift and go to state 263

    FuncDecl_                      shift and go to state 262

state 131

    (71) ForHeader -> OSimpleStmt . SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (72) ForHeader -> OSimpleStmt .

    SEMICOL         shift and go to state 265
    LBRACE          reduce using rule 72 (ForHeader -> OSimpleStmt .)


state 132

    (73) ForHeader -> RangeStmt .

    LBRACE          reduce using rule 73 (ForHeader -> RangeStmt .)


state 133

    (68) RangeStmt -> ExprList . EQUAL RANGE Expr
    (69) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (53) SimpleStmt -> ExprList . EQUAL ExprList
    (54) SimpleStmt -> ExprList . COLONEQ ExprList
    (160) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 266
    COLONEQ         shift and go to state 267
    COMMA           shift and go to state 107


state 134

    (75) ForStmt -> FOR ForBody .

    SEMICOL         reduce using rule 75 (ForStmt -> FOR ForBody .)


state 135

    (70) RangeStmt -> RANGE . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 268
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 136

    (150) OSimpleStmt -> SimpleStmt .

    LBRACE          reduce using rule 150 (OSimpleStmt -> SimpleStmt .)
    SEMICOL         reduce using rule 150 (OSimpleStmt -> SimpleStmt .)


state 137

    (74) ForBody -> ForHeader . formarker LoopBody revmarker
    (76) formarker -> .

    LBRACE          reduce using rule 76 (formarker -> .)

    formarker                      shift and go to state 269

state 138

    (41) SimpleStmt -> Expr .
    (42) SimpleStmt -> Expr . PLUSEQ Expr
    (43) SimpleStmt -> Expr . MINUSEQ Expr
    (44) SimpleStmt -> Expr . TIMESEQ Expr
    (45) SimpleStmt -> Expr . DIVIDEEQ Expr
    (46) SimpleStmt -> Expr . MODEQ Expr
    (47) SimpleStmt -> Expr . OREQ Expr
    (48) SimpleStmt -> Expr . AMPEQ Expr
    (49) SimpleStmt -> Expr . CAREQ Expr
    (50) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (51) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (52) SimpleStmt -> Expr . AMPCAREQ Expr
    (55) SimpleStmt -> Expr . PLUSPLUS
    (56) SimpleStmt -> Expr . MINUSMIN
    (159) ExprList -> Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 169
    MINUSEQ         shift and go to state 173
    TIMESEQ         shift and go to state 168
    DIVIDEEQ        shift and go to state 179
    MODEQ           shift and go to state 170
    OREQ            shift and go to state 172
    AMPEQ           shift and go to state 175
    CAREQ           shift and go to state 167
    SHL_ASSIGN      shift and go to state 177
    SHR_ASSIGN      shift and go to state 171
    AMPCAREQ        shift and go to state 176
    PLUSPLUS        shift and go to state 178
    MINUSMIN        shift and go to state 174
    EQUAL           reduce using rule 159 (ExprList -> Expr .)
    COLONEQ         reduce using rule 159 (ExprList -> Expr .)
    COMMA           reduce using rule 159 (ExprList -> Expr .)
    OROR            shift and go to state 166


state 139

    (104) InterfaceType -> INTERFACE LBRACE . InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> INTERFACE LBRACE . RBRACE
    (121) InterfaceDeclList -> . InterfaceDecl
    (122) InterfaceDeclList -> . InterfaceDeclList SEMICOL InterfaceDecl
    (129) InterfaceDecl -> . NewName InDecl
    (130) InterfaceDecl -> . IDENTIFIER
    (131) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (134) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 270
    IDENTIFIER      shift and go to state 275
    LPAREN          shift and go to state 274

    InterfaceDecl                  shift and go to state 271
    NewName                        shift and go to state 273
    InterfaceDeclList              shift and go to state 272

state 140

    (280) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (154) OExpr -> Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    PIPE            shift and go to state 276
    RBRACK          reduce using rule 154 (OExpr -> Expr .)
    OROR            shift and go to state 166


state 141

    (95) OtherType -> LBRACK OExpr . RBRACK NType

    RBRACK          shift and go to state 277


state 142

    (152) ONewName -> NewName .

    SEMICOL         reduce using rule 152 (ONewName -> NewName .)


state 143

    (134) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 134 (NewName -> IDENTIFIER .)
    COMMA           reduce using rule 134 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 134 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 134 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 134 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 134 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 134 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 134 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 134 (NewName -> IDENTIFIER .)
    CHAN            reduce using rule 134 (NewName -> IDENTIFIER .)
    LMINUS          reduce using rule 134 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 134 (NewName -> IDENTIFIER .)


state 144

    (210) NonDeclStmt -> CONTINUE ONewName .

    SEMICOL         reduce using rule 210 (NonDeclStmt -> CONTINUE ONewName .)


state 145

    (275) UExpr -> NOT UExpr .

    DIVIDE          reduce using rule 275 (UExpr -> NOT UExpr .)
    MOD             reduce using rule 275 (UExpr -> NOT UExpr .)
    SHL             reduce using rule 275 (UExpr -> NOT UExpr .)
    SHR             reduce using rule 275 (UExpr -> NOT UExpr .)
    AMPERS          reduce using rule 275 (UExpr -> NOT UExpr .)
    AMPCAR          reduce using rule 275 (UExpr -> NOT UExpr .)
    TIMES           reduce using rule 275 (UExpr -> NOT UExpr .)
    PLUS            reduce using rule 275 (UExpr -> NOT UExpr .)
    MINUS           reduce using rule 275 (UExpr -> NOT UExpr .)
    XOR             reduce using rule 275 (UExpr -> NOT UExpr .)
    OR              reduce using rule 275 (UExpr -> NOT UExpr .)
    EQEQ            reduce using rule 275 (UExpr -> NOT UExpr .)
    NOTEQ           reduce using rule 275 (UExpr -> NOT UExpr .)
    LEQ             reduce using rule 275 (UExpr -> NOT UExpr .)
    GEQ             reduce using rule 275 (UExpr -> NOT UExpr .)
    GREAT           reduce using rule 275 (UExpr -> NOT UExpr .)
    LESS            reduce using rule 275 (UExpr -> NOT UExpr .)
    AMPAMP          reduce using rule 275 (UExpr -> NOT UExpr .)
    PLUSEQ          reduce using rule 275 (UExpr -> NOT UExpr .)
    MINUSEQ         reduce using rule 275 (UExpr -> NOT UExpr .)
    TIMESEQ         reduce using rule 275 (UExpr -> NOT UExpr .)
    DIVIDEEQ        reduce using rule 275 (UExpr -> NOT UExpr .)
    MODEQ           reduce using rule 275 (UExpr -> NOT UExpr .)
    OREQ            reduce using rule 275 (UExpr -> NOT UExpr .)
    AMPEQ           reduce using rule 275 (UExpr -> NOT UExpr .)
    CAREQ           reduce using rule 275 (UExpr -> NOT UExpr .)
    SHL_ASSIGN      reduce using rule 275 (UExpr -> NOT UExpr .)
    SHR_ASSIGN      reduce using rule 275 (UExpr -> NOT UExpr .)
    AMPCAREQ        reduce using rule 275 (UExpr -> NOT UExpr .)
    PLUSPLUS        reduce using rule 275 (UExpr -> NOT UExpr .)
    MINUSMIN        reduce using rule 275 (UExpr -> NOT UExpr .)
    OROR            reduce using rule 275 (UExpr -> NOT UExpr .)
    SEMICOL         reduce using rule 275 (UExpr -> NOT UExpr .)
    EQUAL           reduce using rule 275 (UExpr -> NOT UExpr .)
    COLONEQ         reduce using rule 275 (UExpr -> NOT UExpr .)
    COMMA           reduce using rule 275 (UExpr -> NOT UExpr .)
    LBRACE          reduce using rule 275 (UExpr -> NOT UExpr .)
    PIPE            reduce using rule 275 (UExpr -> NOT UExpr .)
    RBRACK          reduce using rule 275 (UExpr -> NOT UExpr .)
    RPAREN          reduce using rule 275 (UExpr -> NOT UExpr .)
    RIGHT_ANGLE     reduce using rule 275 (UExpr -> NOT UExpr .)
    RBRACE          reduce using rule 275 (UExpr -> NOT UExpr .)
    COLON           reduce using rule 275 (UExpr -> NOT UExpr .)
    RIGHT_RIGHT     reduce using rule 275 (UExpr -> NOT UExpr .)
    DDD             reduce using rule 275 (UExpr -> NOT UExpr .)


state 146

    (100) ChannelType -> CHAN LMINUS . NewType
    (231) NewType -> . TYPE

    TYPE            shift and go to state 61

    NewType                        shift and go to state 278

state 147

    (99) ChannelType -> CHAN NewType .

    LBRACE          reduce using rule 99 (ChannelType -> CHAN NewType .)
    LEFT_ANGLE      reduce using rule 99 (ChannelType -> CHAN NewType .)
    LEFT_LEFT       reduce using rule 99 (ChannelType -> CHAN NewType .)
    COMMA           reduce using rule 99 (ChannelType -> CHAN NewType .)
    RPAREN          reduce using rule 99 (ChannelType -> CHAN NewType .)
    SEMICOL         reduce using rule 99 (ChannelType -> CHAN NewType .)
    DDD             reduce using rule 99 (ChannelType -> CHAN NewType .)
    OR_RIGHT        reduce using rule 99 (ChannelType -> CHAN NewType .)
    EQUAL           reduce using rule 99 (ChannelType -> CHAN NewType .)
    COLON           reduce using rule 99 (ChannelType -> CHAN NewType .)
    COLONEQ         reduce using rule 99 (ChannelType -> CHAN NewType .)
    INTEGER         reduce using rule 99 (ChannelType -> CHAN NewType .)
    FLOAT           reduce using rule 99 (ChannelType -> CHAN NewType .)
    STRING          reduce using rule 99 (ChannelType -> CHAN NewType .)
    RBRACE          reduce using rule 99 (ChannelType -> CHAN NewType .)


state 148

    (7) Imports -> Import SEMICOL .

    COMMENT         reduce using rule 7 (Imports -> Import SEMICOL .)
    IMPORT          reduce using rule 7 (Imports -> Import SEMICOL .)
    CONSTANT        reduce using rule 7 (Imports -> Import SEMICOL .)
    VAR             reduce using rule 7 (Imports -> Import SEMICOL .)
    FUNCTION        reduce using rule 7 (Imports -> Import SEMICOL .)
    FALLTHROUGH     reduce using rule 7 (Imports -> Import SEMICOL .)
    BREAK           reduce using rule 7 (Imports -> Import SEMICOL .)
    CONTINUE        reduce using rule 7 (Imports -> Import SEMICOL .)
    GOTO            reduce using rule 7 (Imports -> Import SEMICOL .)
    RETURN          reduce using rule 7 (Imports -> Import SEMICOL .)
    TYPE            reduce using rule 7 (Imports -> Import SEMICOL .)
    FOR             reduce using rule 7 (Imports -> Import SEMICOL .)
    SWITCH          reduce using rule 7 (Imports -> Import SEMICOL .)
    IF              reduce using rule 7 (Imports -> Import SEMICOL .)
    CONSTANTS       reduce using rule 7 (Imports -> Import SEMICOL .)
    IDENTIFIER      reduce using rule 7 (Imports -> Import SEMICOL .)
    LMINUS          reduce using rule 7 (Imports -> Import SEMICOL .)
    LBRACK          reduce using rule 7 (Imports -> Import SEMICOL .)
    STRUCT          reduce using rule 7 (Imports -> Import SEMICOL .)
    INTERFACE       reduce using rule 7 (Imports -> Import SEMICOL .)
    CHAN            reduce using rule 7 (Imports -> Import SEMICOL .)
    AMPERS          reduce using rule 7 (Imports -> Import SEMICOL .)
    NOT             reduce using rule 7 (Imports -> Import SEMICOL .)
    TIMES           reduce using rule 7 (Imports -> Import SEMICOL .)
    PLUS            reduce using rule 7 (Imports -> Import SEMICOL .)
    MINUS           reduce using rule 7 (Imports -> Import SEMICOL .)
    XOR             reduce using rule 7 (Imports -> Import SEMICOL .)
    LPAREN          reduce using rule 7 (Imports -> Import SEMICOL .)
    INTEGER         reduce using rule 7 (Imports -> Import SEMICOL .)
    FLOAT           reduce using rule 7 (Imports -> Import SEMICOL .)
    STRING          reduce using rule 7 (Imports -> Import SEMICOL .)
    $end            reduce using rule 7 (Imports -> Import SEMICOL .)


state 149

    (78) IfHeader -> OSimpleStmt .
    (79) IfHeader -> OSimpleStmt . SEMICOL OSimpleStmt

    LBRACE          reduce using rule 78 (IfHeader -> OSimpleStmt .)
    SEMICOL         shift and go to state 279


state 150

    (243) SwitchStmt -> SWITCH IfHeader . LBRACE CaseBlockList RBRACE

    LBRACE          shift and go to state 280


state 151

    (169) DeclList -> Declaration SEMICOL .

    COMMENT         reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    CONSTANT        reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    VAR             reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    FUNCTION        reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    BREAK           reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    CONTINUE        reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    GOTO            reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    RETURN          reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    TYPE            reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    FOR             reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    SWITCH          reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    IF              reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    CONSTANTS       reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    LMINUS          reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    LBRACK          reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    STRUCT          reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    INTERFACE       reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    CHAN            reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    AMPERS          reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    NOT             reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    TIMES           reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    PLUS            reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    MINUS           reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    XOR             reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    LPAREN          reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    INTEGER         reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    FLOAT           reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    STRING          reduce using rule 169 (DeclList -> Declaration SEMICOL .)
    $end            reduce using rule 169 (DeclList -> Declaration SEMICOL .)


state 152

    (277) UExpr -> PLUS UExpr .

    DIVIDE          reduce using rule 277 (UExpr -> PLUS UExpr .)
    MOD             reduce using rule 277 (UExpr -> PLUS UExpr .)
    SHL             reduce using rule 277 (UExpr -> PLUS UExpr .)
    SHR             reduce using rule 277 (UExpr -> PLUS UExpr .)
    AMPERS          reduce using rule 277 (UExpr -> PLUS UExpr .)
    AMPCAR          reduce using rule 277 (UExpr -> PLUS UExpr .)
    TIMES           reduce using rule 277 (UExpr -> PLUS UExpr .)
    PLUS            reduce using rule 277 (UExpr -> PLUS UExpr .)
    MINUS           reduce using rule 277 (UExpr -> PLUS UExpr .)
    XOR             reduce using rule 277 (UExpr -> PLUS UExpr .)
    OR              reduce using rule 277 (UExpr -> PLUS UExpr .)
    EQEQ            reduce using rule 277 (UExpr -> PLUS UExpr .)
    NOTEQ           reduce using rule 277 (UExpr -> PLUS UExpr .)
    LEQ             reduce using rule 277 (UExpr -> PLUS UExpr .)
    GEQ             reduce using rule 277 (UExpr -> PLUS UExpr .)
    GREAT           reduce using rule 277 (UExpr -> PLUS UExpr .)
    LESS            reduce using rule 277 (UExpr -> PLUS UExpr .)
    AMPAMP          reduce using rule 277 (UExpr -> PLUS UExpr .)
    PLUSEQ          reduce using rule 277 (UExpr -> PLUS UExpr .)
    MINUSEQ         reduce using rule 277 (UExpr -> PLUS UExpr .)
    TIMESEQ         reduce using rule 277 (UExpr -> PLUS UExpr .)
    DIVIDEEQ        reduce using rule 277 (UExpr -> PLUS UExpr .)
    MODEQ           reduce using rule 277 (UExpr -> PLUS UExpr .)
    OREQ            reduce using rule 277 (UExpr -> PLUS UExpr .)
    AMPEQ           reduce using rule 277 (UExpr -> PLUS UExpr .)
    CAREQ           reduce using rule 277 (UExpr -> PLUS UExpr .)
    SHL_ASSIGN      reduce using rule 277 (UExpr -> PLUS UExpr .)
    SHR_ASSIGN      reduce using rule 277 (UExpr -> PLUS UExpr .)
    AMPCAREQ        reduce using rule 277 (UExpr -> PLUS UExpr .)
    PLUSPLUS        reduce using rule 277 (UExpr -> PLUS UExpr .)
    MINUSMIN        reduce using rule 277 (UExpr -> PLUS UExpr .)
    OROR            reduce using rule 277 (UExpr -> PLUS UExpr .)
    SEMICOL         reduce using rule 277 (UExpr -> PLUS UExpr .)
    EQUAL           reduce using rule 277 (UExpr -> PLUS UExpr .)
    COLONEQ         reduce using rule 277 (UExpr -> PLUS UExpr .)
    COMMA           reduce using rule 277 (UExpr -> PLUS UExpr .)
    LBRACE          reduce using rule 277 (UExpr -> PLUS UExpr .)
    PIPE            reduce using rule 277 (UExpr -> PLUS UExpr .)
    RBRACK          reduce using rule 277 (UExpr -> PLUS UExpr .)
    RPAREN          reduce using rule 277 (UExpr -> PLUS UExpr .)
    RIGHT_ANGLE     reduce using rule 277 (UExpr -> PLUS UExpr .)
    RBRACE          reduce using rule 277 (UExpr -> PLUS UExpr .)
    COLON           reduce using rule 277 (UExpr -> PLUS UExpr .)
    RIGHT_RIGHT     reduce using rule 277 (UExpr -> PLUS UExpr .)
    DDD             reduce using rule 277 (UExpr -> PLUS UExpr .)


state 153

    (227) PExprNoParen -> CompType LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (187) BracedKeyvalList -> .
    (188) BracedKeyvalList -> . KeyvalList OComma
    (183) KeyvalList -> . Keyval
    (184) KeyvalList -> . BareCompLitExpr
    (185) KeyvalList -> . KeyvalList COMMA Keyval
    (186) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (235) Keyval -> . Expr COLON CompLitExpr
    (236) BareCompLitExpr -> . Expr
    (237) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 187 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 284
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 281
    BareCompLitExpr                shift and go to state 286
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 282

state 154

    (3) SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist .
    (170) DeclList -> DeclList cmtlist . Declaration SEMICOL
    (285) cmtlist -> cmtlist . COMMENT
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (106) FuncDecl -> . FUNCTION funcmarker FuncDecl_ FuncBody
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 3 (SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist .)
    COMMENT         shift and go to state 4
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 287
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 155

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist . DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist .
    (8) Imports -> Imports cmtlist . Import SEMICOL
    (285) cmtlist -> cmtlist . COMMENT
    (169) DeclList -> . Declaration SEMICOL
    (170) DeclList -> . DeclList cmtlist Declaration SEMICOL
    (9) Import -> . IMPORT ImportStmt
    (10) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> . IMPORT LPAREN RPAREN
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (106) FuncDecl -> . FUNCTION funcmarker FuncDecl_ FuncBody
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 4 (SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist .)
    COMMENT         shift and go to state 4
    IMPORT          shift and go to state 18
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    NewType                        shift and go to state 65
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    IfStmt                         shift and go to state 12
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 52
    ChannelType                    shift and go to state 35
    Import                         shift and go to state 288
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    DeclList                       shift and go to state 289
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 156

    (209) NonDeclStmt -> BREAK ONewName .

    SEMICOL         reduce using rule 209 (NonDeclStmt -> BREAK ONewName .)


state 157

    (222) PExprNoParen -> PExpr LBRACK . Expr RBRACK
    (223) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr COLON OExpr RBRACK
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (153) OExpr -> .
    (154) OExpr -> . Expr
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    COLON           reduce using rule 153 (OExpr -> .)
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 290
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 291
    PExpr                          shift and go to state 60

state 158

    (281) PseudoCall -> PExpr LPAREN . RPAREN
    (282) PseudoCall -> PExpr LPAREN . ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> PExpr LPAREN . ExprOrTypeList DDD OComma RPAREN
    (161) ExprOrTypeList -> . ExprOrType
    (162) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (240) ExprOrType -> . Expr
    (241) ExprOrType -> . NonExprType
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (92) NonExprType -> . FuncType
    (93) NonExprType -> . OtherType
    (94) NonExprType -> . TIMES NonExprType
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (157) FuncLiteralDecl -> . FuncType

    RPAREN          shift and go to state 294
    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    ExprOrTypeList                 shift and go to state 292
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 293
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 159

    (228) PExprNoParen -> PExpr LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (187) BracedKeyvalList -> .
    (188) BracedKeyvalList -> . KeyvalList OComma
    (183) KeyvalList -> . Keyval
    (184) KeyvalList -> . BareCompLitExpr
    (185) KeyvalList -> . KeyvalList COMMA Keyval
    (186) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (235) Keyval -> . Expr COLON CompLitExpr
    (236) BareCompLitExpr -> . Expr
    (237) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 187 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 284
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 281
    BareCompLitExpr                shift and go to state 286
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 295

state 160

    (219) PExprNoParen -> PExpr DOT . IDENTIFIER
    (220) PExprNoParen -> PExpr DOT . LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> PExpr DOT . LPAREN NewType RPAREN

    IDENTIFIER      shift and go to state 297
    LPAREN          shift and go to state 296


state 161

    (28) CommonDecl -> NewType TypeDecl .

    SEMICOL         reduce using rule 28 (CommonDecl -> NewType TypeDecl .)


state 162

    (29) CommonDecl -> NewType LPAREN . TypeDeclList OSemi RPAREN
    (30) CommonDecl -> NewType LPAREN . RPAREN
    (175) TypeDeclList -> . TypeDecl
    (176) TypeDeclList -> . TypeDeclList SEMICOL TypeDecl
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    RPAREN          shift and go to state 298
    IDENTIFIER      shift and go to state 164

    TypeDecl                       shift and go to state 300
    TypeDeclList                   shift and go to state 299
    TypeDeclName                   shift and go to state 163

state 163

    (40) TypeDecl -> TypeDeclName . NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 301
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 164

    (39) TypeDeclName -> IDENTIFIER .

    LPAREN          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    TIMES           reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    TYPE            reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    CHAN            reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    LMINUS          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 39 (TypeDeclName -> IDENTIFIER .)


state 165

    (211) NonDeclStmt -> GOTO NewName .

    SEMICOL         reduce using rule 211 (NonDeclStmt -> GOTO NewName .)


state 166

    (267) Expr -> Expr OROR . Prec2Expr_
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (157) FuncLiteralDecl -> . FuncType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 302
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 167

    (49) SimpleStmt -> Expr CAREQ . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 303
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 168

    (44) SimpleStmt -> Expr TIMESEQ . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 304
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 169

    (42) SimpleStmt -> Expr PLUSEQ . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 305
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 170

    (46) SimpleStmt -> Expr MODEQ . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 306
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 171

    (51) SimpleStmt -> Expr SHR_ASSIGN . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 307
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 172

    (47) SimpleStmt -> Expr OREQ . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 308
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 173

    (43) SimpleStmt -> Expr MINUSEQ . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 309
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 174

    (56) SimpleStmt -> Expr MINUSMIN .

    SEMICOL         reduce using rule 56 (SimpleStmt -> Expr MINUSMIN .)
    LBRACE          reduce using rule 56 (SimpleStmt -> Expr MINUSMIN .)


state 175

    (48) SimpleStmt -> Expr AMPEQ . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 310
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 176

    (52) SimpleStmt -> Expr AMPCAREQ . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 311
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 177

    (50) SimpleStmt -> Expr SHL_ASSIGN . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 312
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 178

    (55) SimpleStmt -> Expr PLUSPLUS .

    SEMICOL         reduce using rule 55 (SimpleStmt -> Expr PLUSPLUS .)
    LBRACE          reduce using rule 55 (SimpleStmt -> Expr PLUSPLUS .)


state 179

    (45) SimpleStmt -> Expr DIVIDEEQ . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 313
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 180

    (279) UExpr -> XOR UExpr .

    DIVIDE          reduce using rule 279 (UExpr -> XOR UExpr .)
    MOD             reduce using rule 279 (UExpr -> XOR UExpr .)
    SHL             reduce using rule 279 (UExpr -> XOR UExpr .)
    SHR             reduce using rule 279 (UExpr -> XOR UExpr .)
    AMPERS          reduce using rule 279 (UExpr -> XOR UExpr .)
    AMPCAR          reduce using rule 279 (UExpr -> XOR UExpr .)
    TIMES           reduce using rule 279 (UExpr -> XOR UExpr .)
    PLUS            reduce using rule 279 (UExpr -> XOR UExpr .)
    MINUS           reduce using rule 279 (UExpr -> XOR UExpr .)
    XOR             reduce using rule 279 (UExpr -> XOR UExpr .)
    OR              reduce using rule 279 (UExpr -> XOR UExpr .)
    EQEQ            reduce using rule 279 (UExpr -> XOR UExpr .)
    NOTEQ           reduce using rule 279 (UExpr -> XOR UExpr .)
    LEQ             reduce using rule 279 (UExpr -> XOR UExpr .)
    GEQ             reduce using rule 279 (UExpr -> XOR UExpr .)
    GREAT           reduce using rule 279 (UExpr -> XOR UExpr .)
    LESS            reduce using rule 279 (UExpr -> XOR UExpr .)
    AMPAMP          reduce using rule 279 (UExpr -> XOR UExpr .)
    PLUSEQ          reduce using rule 279 (UExpr -> XOR UExpr .)
    MINUSEQ         reduce using rule 279 (UExpr -> XOR UExpr .)
    TIMESEQ         reduce using rule 279 (UExpr -> XOR UExpr .)
    DIVIDEEQ        reduce using rule 279 (UExpr -> XOR UExpr .)
    MODEQ           reduce using rule 279 (UExpr -> XOR UExpr .)
    OREQ            reduce using rule 279 (UExpr -> XOR UExpr .)
    AMPEQ           reduce using rule 279 (UExpr -> XOR UExpr .)
    CAREQ           reduce using rule 279 (UExpr -> XOR UExpr .)
    SHL_ASSIGN      reduce using rule 279 (UExpr -> XOR UExpr .)
    SHR_ASSIGN      reduce using rule 279 (UExpr -> XOR UExpr .)
    AMPCAREQ        reduce using rule 279 (UExpr -> XOR UExpr .)
    PLUSPLUS        reduce using rule 279 (UExpr -> XOR UExpr .)
    MINUSMIN        reduce using rule 279 (UExpr -> XOR UExpr .)
    OROR            reduce using rule 279 (UExpr -> XOR UExpr .)
    SEMICOL         reduce using rule 279 (UExpr -> XOR UExpr .)
    EQUAL           reduce using rule 279 (UExpr -> XOR UExpr .)
    COLONEQ         reduce using rule 279 (UExpr -> XOR UExpr .)
    COMMA           reduce using rule 279 (UExpr -> XOR UExpr .)
    LBRACE          reduce using rule 279 (UExpr -> XOR UExpr .)
    PIPE            reduce using rule 279 (UExpr -> XOR UExpr .)
    RBRACK          reduce using rule 279 (UExpr -> XOR UExpr .)
    RPAREN          reduce using rule 279 (UExpr -> XOR UExpr .)
    RIGHT_ANGLE     reduce using rule 279 (UExpr -> XOR UExpr .)
    RBRACE          reduce using rule 279 (UExpr -> XOR UExpr .)
    COLON           reduce using rule 279 (UExpr -> XOR UExpr .)
    RIGHT_RIGHT     reduce using rule 279 (UExpr -> XOR UExpr .)
    DDD             reduce using rule 279 (UExpr -> XOR UExpr .)


state 181

    (276) UExpr -> TIMES UExpr .

    DIVIDE          reduce using rule 276 (UExpr -> TIMES UExpr .)
    MOD             reduce using rule 276 (UExpr -> TIMES UExpr .)
    SHL             reduce using rule 276 (UExpr -> TIMES UExpr .)
    SHR             reduce using rule 276 (UExpr -> TIMES UExpr .)
    AMPERS          reduce using rule 276 (UExpr -> TIMES UExpr .)
    AMPCAR          reduce using rule 276 (UExpr -> TIMES UExpr .)
    TIMES           reduce using rule 276 (UExpr -> TIMES UExpr .)
    PLUS            reduce using rule 276 (UExpr -> TIMES UExpr .)
    MINUS           reduce using rule 276 (UExpr -> TIMES UExpr .)
    XOR             reduce using rule 276 (UExpr -> TIMES UExpr .)
    OR              reduce using rule 276 (UExpr -> TIMES UExpr .)
    EQEQ            reduce using rule 276 (UExpr -> TIMES UExpr .)
    NOTEQ           reduce using rule 276 (UExpr -> TIMES UExpr .)
    LEQ             reduce using rule 276 (UExpr -> TIMES UExpr .)
    GEQ             reduce using rule 276 (UExpr -> TIMES UExpr .)
    GREAT           reduce using rule 276 (UExpr -> TIMES UExpr .)
    LESS            reduce using rule 276 (UExpr -> TIMES UExpr .)
    AMPAMP          reduce using rule 276 (UExpr -> TIMES UExpr .)
    PLUSEQ          reduce using rule 276 (UExpr -> TIMES UExpr .)
    MINUSEQ         reduce using rule 276 (UExpr -> TIMES UExpr .)
    TIMESEQ         reduce using rule 276 (UExpr -> TIMES UExpr .)
    DIVIDEEQ        reduce using rule 276 (UExpr -> TIMES UExpr .)
    MODEQ           reduce using rule 276 (UExpr -> TIMES UExpr .)
    OREQ            reduce using rule 276 (UExpr -> TIMES UExpr .)
    AMPEQ           reduce using rule 276 (UExpr -> TIMES UExpr .)
    CAREQ           reduce using rule 276 (UExpr -> TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 276 (UExpr -> TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 276 (UExpr -> TIMES UExpr .)
    AMPCAREQ        reduce using rule 276 (UExpr -> TIMES UExpr .)
    PLUSPLUS        reduce using rule 276 (UExpr -> TIMES UExpr .)
    MINUSMIN        reduce using rule 276 (UExpr -> TIMES UExpr .)
    OROR            reduce using rule 276 (UExpr -> TIMES UExpr .)
    SEMICOL         reduce using rule 276 (UExpr -> TIMES UExpr .)
    EQUAL           reduce using rule 276 (UExpr -> TIMES UExpr .)
    COLONEQ         reduce using rule 276 (UExpr -> TIMES UExpr .)
    COMMA           reduce using rule 276 (UExpr -> TIMES UExpr .)
    LBRACE          reduce using rule 276 (UExpr -> TIMES UExpr .)
    PIPE            reduce using rule 276 (UExpr -> TIMES UExpr .)
    RBRACK          reduce using rule 276 (UExpr -> TIMES UExpr .)
    RPAREN          reduce using rule 276 (UExpr -> TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 276 (UExpr -> TIMES UExpr .)
    RBRACE          reduce using rule 276 (UExpr -> TIMES UExpr .)
    COLON           reduce using rule 276 (UExpr -> TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 276 (UExpr -> TIMES UExpr .)
    DDD             reduce using rule 276 (UExpr -> TIMES UExpr .)


state 182

    (92) NonExprType -> FuncType .
    (232) ConvType -> FuncType .
    (157) FuncLiteralDecl -> FuncType .

    COLON           reduce using rule 92 (NonExprType -> FuncType .)
    EQUAL           reduce using rule 92 (NonExprType -> FuncType .)
    COLONEQ         reduce using rule 92 (NonExprType -> FuncType .)
    COMMA           reduce using rule 92 (NonExprType -> FuncType .)
    DDD             reduce using rule 92 (NonExprType -> FuncType .)
    RPAREN          reduce using rule 92 (NonExprType -> FuncType .)
    LEFT_ANGLE      reduce using rule 232 (ConvType -> FuncType .)
    LBRACE          reduce using rule 157 (FuncLiteralDecl -> FuncType .)


state 183

    (216) PExpr -> LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 314


state 184

    (241) ExprOrType -> NonExprType .

    DDD             reduce using rule 241 (ExprOrType -> NonExprType .)
    COMMA           reduce using rule 241 (ExprOrType -> NonExprType .)
    RPAREN          reduce using rule 241 (ExprOrType -> NonExprType .)
    COLON           reduce using rule 241 (ExprOrType -> NonExprType .)
    EQUAL           reduce using rule 241 (ExprOrType -> NonExprType .)
    COLONEQ         reduce using rule 241 (ExprOrType -> NonExprType .)


state 185

    (93) NonExprType -> OtherType .
    (272) Arrayexp -> OtherType . LBRACE ExprList RBRACE
    (233) ConvType -> OtherType .
    (234) CompType -> OtherType .

    COLON           reduce using rule 93 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 93 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 93 (NonExprType -> OtherType .)
    COMMA           reduce using rule 93 (NonExprType -> OtherType .)
    DDD             reduce using rule 93 (NonExprType -> OtherType .)
    RPAREN          reduce using rule 93 (NonExprType -> OtherType .)
    LBRACE          shift and go to state 127
    LEFT_ANGLE      reduce using rule 233 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 234 (CompType -> OtherType .)


state 186

    (240) ExprOrType -> Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    DDD             reduce using rule 240 (ExprOrType -> Expr .)
    COMMA           reduce using rule 240 (ExprOrType -> Expr .)
    RPAREN          reduce using rule 240 (ExprOrType -> Expr .)
    COLON           reduce using rule 240 (ExprOrType -> Expr .)
    EQUAL           reduce using rule 240 (ExprOrType -> Expr .)
    COLONEQ         reduce using rule 240 (ExprOrType -> Expr .)
    OROR            shift and go to state 166


state 187

    (94) NonExprType -> TIMES . NonExprType
    (276) UExpr -> TIMES . UExpr
    (92) NonExprType -> . FuncType
    (93) NonExprType -> . OtherType
    (94) NonExprType -> . TIMES NonExprType
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (157) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 187
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    LPAREN          shift and go to state 73
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    NonExprType                    shift and go to state 315
    OtherType                      shift and go to state 316
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 181
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 188

    (80) IfStmt -> IF IfHeader . ifmarker LoopBody revmarker ElseIfList
    (77) ifmarker -> .

    LBRACE          reduce using rule 77 (ifmarker -> .)

    ifmarker                       shift and go to state 317

state 189

    (102) StructType -> STRUCT LBRACE . StructDeclList OSemi RBRACE
    (103) StructType -> STRUCT LBRACE . RBRACE
    (119) StructDeclList -> . StructDecl
    (120) StructDeclList -> . StructDeclList SEMICOL StructDecl
    (123) StructDecl -> . NewNameList NType OLiteral
    (124) StructDecl -> . Embed OLiteral
    (125) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (126) StructDecl -> . TIMES Embed OLiteral
    (127) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (128) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (181) NewNameList -> . NewName
    (182) NewNameList -> . NewNameList COMMA NewName
    (168) Embed -> . IDENTIFIER
    (134) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 326
    LPAREN          shift and go to state 321
    TIMES           shift and go to state 320
    IDENTIFIER      shift and go to state 324

    NewName                        shift and go to state 318
    StructDecl                     shift and go to state 319
    NewNameList                    shift and go to state 322
    StructDeclList                 shift and go to state 323
    Embed                          shift and go to state 325

state 190

    (261) Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .
    (253) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (256) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LEQ             reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GEQ             reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GREAT           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LESS            reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MODEQ           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OREQ            reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    CAREQ           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OROR            reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    EQUAL           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COMMA           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LBRACE          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLON           reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PIPE            reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACK          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RPAREN          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACE          reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DDD             reduce using rule 261 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 191

    (260) Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .
    (253) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (256) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LEQ             reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GEQ             reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GREAT           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LESS            reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MODEQ           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OREQ            reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    CAREQ           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OROR            reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    EQUAL           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COMMA           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LBRACE          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLON           reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PIPE            reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACK          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RPAREN          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACE          reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DDD             reduce using rule 260 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 192

    (258) Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .
    (253) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (256) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LEQ             reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GEQ             reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GREAT           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LESS            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MODEQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OREQ            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    CAREQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OROR            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    EQUAL           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COMMA           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LBRACE          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLON           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PIPE            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACK          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RPAREN          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACE          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DDD             reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 193

    (263) Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .
    (253) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (256) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    NOTEQ           reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LEQ             reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GEQ             reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GREAT           reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LESS            reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPAMP          reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSEQ          reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSEQ         reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    TIMESEQ         reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MODEQ           reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OREQ            reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPEQ           reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    CAREQ           reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPCAREQ        reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSPLUS        reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSMIN        reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OROR            reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SEMICOL         reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    EQUAL           reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLONEQ         reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COMMA           reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LBRACE          reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLON           reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PIPE            reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACK          reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RPAREN          reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACE          reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DDD             reduce using rule 263 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 194

    (262) Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .
    (253) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (256) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    NOTEQ           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LEQ             reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GEQ             reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GREAT           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LESS            reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPAMP          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSEQ          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSEQ         reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    TIMESEQ         reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MODEQ           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OREQ            reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPEQ           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    CAREQ           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPCAREQ        reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSPLUS        reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSMIN        reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OROR            reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SEMICOL         reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    EQUAL           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLONEQ         reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COMMA           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LBRACE          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLON           reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PIPE            reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACK          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RPAREN          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACE          reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DDD             reduce using rule 262 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 195

    (259) Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .
    (253) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (254) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (255) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (256) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LEQ             reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GEQ             reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GREAT           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LESS            reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MODEQ           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OREQ            reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    CAREQ           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OROR            reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    EQUAL           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COMMA           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LBRACE          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLON           reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PIPE            reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACK          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RPAREN          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACE          reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DDD             reduce using rule 259 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 196

    (226) PExprNoParen -> ConvType LEFT_ANGLE Expr . OComma RIGHT_ANGLE
    (267) Expr -> Expr . OROR Prec2Expr_
    (145) OComma -> .
    (146) OComma -> . COMMA

    OROR            shift and go to state 166
    RIGHT_ANGLE     reduce using rule 145 (OComma -> .)
    COMMA           shift and go to state 328

    OComma                         shift and go to state 327

state 197

    (207) NonDeclStmt -> LabelName COLON Stmt .

    SEMICOL         reduce using rule 207 (NonDeclStmt -> LabelName COLON Stmt .)


state 198

    (200) Stmt -> CompoundStmt .

    SEMICOL         reduce using rule 200 (Stmt -> CompoundStmt .)


state 199

    (201) Stmt -> CommonDecl .

    SEMICOL         reduce using rule 201 (Stmt -> CommonDecl .)


state 200

    (61) CompoundStmt -> LBRACE . compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (62) compundmarker -> .

    COMMENT         reduce using rule 62 (compundmarker -> .)
    LBRACE          reduce using rule 62 (compundmarker -> .)
    CONSTANT        reduce using rule 62 (compundmarker -> .)
    VAR             reduce using rule 62 (compundmarker -> .)
    FALLTHROUGH     reduce using rule 62 (compundmarker -> .)
    BREAK           reduce using rule 62 (compundmarker -> .)
    CONTINUE        reduce using rule 62 (compundmarker -> .)
    GOTO            reduce using rule 62 (compundmarker -> .)
    RETURN          reduce using rule 62 (compundmarker -> .)
    TYPE            reduce using rule 62 (compundmarker -> .)
    FOR             reduce using rule 62 (compundmarker -> .)
    SWITCH          reduce using rule 62 (compundmarker -> .)
    IF              reduce using rule 62 (compundmarker -> .)
    CONSTANTS       reduce using rule 62 (compundmarker -> .)
    IDENTIFIER      reduce using rule 62 (compundmarker -> .)
    LMINUS          reduce using rule 62 (compundmarker -> .)
    LBRACK          reduce using rule 62 (compundmarker -> .)
    STRUCT          reduce using rule 62 (compundmarker -> .)
    INTERFACE       reduce using rule 62 (compundmarker -> .)
    CHAN            reduce using rule 62 (compundmarker -> .)
    AMPERS          reduce using rule 62 (compundmarker -> .)
    NOT             reduce using rule 62 (compundmarker -> .)
    TIMES           reduce using rule 62 (compundmarker -> .)
    PLUS            reduce using rule 62 (compundmarker -> .)
    MINUS           reduce using rule 62 (compundmarker -> .)
    XOR             reduce using rule 62 (compundmarker -> .)
    LPAREN          reduce using rule 62 (compundmarker -> .)
    INTEGER         reduce using rule 62 (compundmarker -> .)
    FLOAT           reduce using rule 62 (compundmarker -> .)
    STRING          reduce using rule 62 (compundmarker -> .)
    FUNCTION        reduce using rule 62 (compundmarker -> .)
    SEMICOL         reduce using rule 62 (compundmarker -> .)

    compundmarker                  shift and go to state 329

state 201

    (202) Stmt -> NonDeclStmt .

    SEMICOL         reduce using rule 202 (Stmt -> NonDeclStmt .)


state 202

    (248) Prec5Expr_ -> Prec5Expr_ SHR UExpr .

    DIVIDE          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MOD             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPERS          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAR          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMES           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUS            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUS           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    XOR             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OR              reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQEQ            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    NOTEQ           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LEQ             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GEQ             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GREAT           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LESS            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPAMP          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSEQ          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSEQ         reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMESEQ         reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DIVIDEEQ        reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MODEQ           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OREQ            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPEQ           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    CAREQ           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL_ASSIGN      reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR_ASSIGN      reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAREQ        reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSPLUS        reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSMIN        reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OROR            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SEMICOL         reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQUAL           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLONEQ         reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COMMA           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LBRACE          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PIPE            reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACK          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RPAREN          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_ANGLE     reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACE          reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLON           reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_RIGHT     reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DDD             reduce using rule 248 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)


state 203

    (245) Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .

    DIVIDE          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MOD             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPERS          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAR          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMES           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUS            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUS           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    XOR             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OR              reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQEQ            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    NOTEQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LEQ             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GEQ             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GREAT           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LESS            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPAMP          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSEQ          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSEQ         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMESEQ         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DIVIDEEQ        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MODEQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OREQ            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPEQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    CAREQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL_ASSIGN      reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR_ASSIGN      reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAREQ        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSPLUS        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSMIN        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OROR            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SEMICOL         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQUAL           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLONEQ         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COMMA           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LBRACE          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PIPE            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACK          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RPAREN          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_ANGLE     reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACE          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLON           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_RIGHT     reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DDD             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)


state 204

    (250) Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .

    DIVIDE          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MOD             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPERS          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAR          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMES           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUS            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUS           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    XOR             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OR              reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQEQ            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    NOTEQ           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LEQ             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GEQ             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GREAT           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LESS            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPAMP          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSEQ          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSEQ         reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMESEQ         reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DIVIDEEQ        reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MODEQ           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OREQ            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPEQ           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    CAREQ           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL_ASSIGN      reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR_ASSIGN      reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAREQ        reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSPLUS        reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSMIN        reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OROR            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SEMICOL         reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQUAL           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLONEQ         reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COMMA           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LBRACE          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PIPE            reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACK          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RPAREN          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_ANGLE     reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACE          reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLON           reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_RIGHT     reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DDD             reduce using rule 250 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)


state 205

    (249) Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .

    DIVIDE          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MOD             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPERS          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAR          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMES           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUS            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUS           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    XOR             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OR              reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQEQ            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    NOTEQ           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LEQ             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GEQ             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GREAT           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LESS            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPAMP          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSEQ          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSEQ         reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMESEQ         reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MODEQ           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OREQ            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPEQ           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    CAREQ           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAREQ        reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSPLUS        reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSMIN        reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OROR            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SEMICOL         reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQUAL           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLONEQ         reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COMMA           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LBRACE          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PIPE            reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACK          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RPAREN          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACE          reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLON           reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DDD             reduce using rule 249 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)


state 206

    (251) Prec5Expr_ -> Prec5Expr_ TIMES UExpr .

    DIVIDE          reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MOD             reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL             reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR             reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPERS          reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAR          reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMES           reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUS            reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUS           reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    XOR             reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OR              reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQEQ            reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    NOTEQ           reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LEQ             reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GEQ             reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GREAT           reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LESS            reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPAMP          reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSEQ          reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSEQ         reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMESEQ         reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DIVIDEEQ        reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MODEQ           reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OREQ            reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPEQ           reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    CAREQ           reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAREQ        reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSPLUS        reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSMIN        reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OROR            reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SEMICOL         reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQUAL           reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLONEQ         reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COMMA           reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LBRACE          reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PIPE            reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACK          reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RPAREN          reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACE          reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLON           reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DDD             reduce using rule 251 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)


state 207

    (247) Prec5Expr_ -> Prec5Expr_ SHL UExpr .

    DIVIDE          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MOD             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPERS          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAR          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMES           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUS            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUS           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    XOR             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OR              reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQEQ            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    NOTEQ           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LEQ             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GEQ             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GREAT           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LESS            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPAMP          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSEQ          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSEQ         reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMESEQ         reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DIVIDEEQ        reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MODEQ           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OREQ            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPEQ           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    CAREQ           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL_ASSIGN      reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR_ASSIGN      reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAREQ        reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSPLUS        reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSMIN        reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OROR            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SEMICOL         reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQUAL           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLONEQ         reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COMMA           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LBRACE          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PIPE            reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACK          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RPAREN          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_ANGLE     reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACE          reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLON           reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_RIGHT     reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DDD             reduce using rule 247 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)


state 208

    (246) Prec5Expr_ -> Prec5Expr_ MOD UExpr .

    DIVIDE          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MOD             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPERS          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAR          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMES           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUS            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUS           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    XOR             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OR              reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQEQ            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    NOTEQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LEQ             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GEQ             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GREAT           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LESS            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPAMP          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSEQ          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSEQ         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMESEQ         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DIVIDEEQ        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MODEQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OREQ            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPEQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    CAREQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL_ASSIGN      reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR_ASSIGN      reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAREQ        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSPLUS        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSMIN        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OROR            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SEMICOL         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQUAL           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLONEQ         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COMMA           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LBRACE          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PIPE            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACK          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RPAREN          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_ANGLE     reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACE          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLON           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_RIGHT     reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DDD             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)


state 209

    (12) ImportStmt -> ImportHere STRING .

    SEMICOL         reduce using rule 12 (ImportStmt -> ImportHere STRING .)
    RPAREN          reduce using rule 12 (ImportStmt -> ImportHere STRING .)


state 210

    (11) Import -> IMPORT LPAREN RPAREN .

    SEMICOL         reduce using rule 11 (Import -> IMPORT LPAREN RPAREN .)


state 211

    (10) Import -> IMPORT LPAREN ImportStmtList . OSemi RPAREN
    (14) ImportStmtList -> ImportStmtList . SEMICOL ImportStmt
    (147) OSemi -> .
    (148) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 330
    RPAREN          reduce using rule 147 (OSemi -> .)

    OSemi                          shift and go to state 331

state 212

    (13) ImportStmtList -> ImportStmt .

    SEMICOL         reduce using rule 13 (ImportStmtList -> ImportStmt .)
    RPAREN          reduce using rule 13 (ImportStmtList -> ImportStmt .)


state 213

    (101) ChannelType -> LMINUS CHAN NewType .

    LBRACE          reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    LEFT_ANGLE      reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    LEFT_LEFT       reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    COMMA           reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    RPAREN          reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    SEMICOL         reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    DDD             reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    OR_RIGHT        reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    EQUAL           reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    COLON           reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    COLONEQ         reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    INTEGER         reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    FLOAT           reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    STRING          reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)
    RBRACE          reduce using rule 101 (ChannelType -> LMINUS CHAN NewType .)


state 214

    (265) Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .
    (258) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (259) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (261) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (262) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (263) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSEQ          reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSEQ         reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    TIMESEQ         reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MODEQ           reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OREQ            reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPEQ           reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    CAREQ           reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPCAREQ        reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSPLUS        reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSMIN        reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OROR            reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SEMICOL         reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQUAL           reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLONEQ         reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COMMA           reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    LBRACE          reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACE          reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RPAREN          reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLON           reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACK          reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DDD             reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PIPE            reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 265 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQEQ            shift and go to state 80
    NOTEQ           shift and go to state 83
    LEQ             shift and go to state 79
    GEQ             shift and go to state 78
    GREAT           shift and go to state 82
    LESS            shift and go to state 81


state 215

    (158) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist . StmtList cmtlist RBRACE
    (285) cmtlist -> cmtlist . COMMENT
    (179) StmtList -> . Stmt SEMICOL
    (180) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    NewName                        shift and go to state 34
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 333
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 332
    NewType                        shift and go to state 65
    NonDeclStmt                    shift and go to state 201
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    Prec4Expr_                     shift and go to state 28
    CompoundStmt                   shift and go to state 198

state 216

    (27) CommonDecl -> VAR LPAREN RPAREN .

    SEMICOL         reduce using rule 27 (CommonDecl -> VAR LPAREN RPAREN .)


state 217

    (171) VarDeclList -> VarDecl .

    SEMICOL         reduce using rule 171 (VarDeclList -> VarDecl .)
    RPAREN          reduce using rule 171 (VarDeclList -> VarDecl .)


state 218

    (26) CommonDecl -> VAR LPAREN VarDeclList . OSemi RPAREN
    (172) VarDeclList -> VarDeclList . SEMICOL VarDecl
    (147) OSemi -> .
    (148) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 334
    RPAREN          reduce using rule 147 (OSemi -> .)

    OSemi                          shift and go to state 335

state 219

    (86) NType -> FuncType .

    COMMA           reduce using rule 86 (NType -> FuncType .)
    OR_RIGHT        reduce using rule 86 (NType -> FuncType .)
    INTEGER         reduce using rule 86 (NType -> FuncType .)
    FLOAT           reduce using rule 86 (NType -> FuncType .)
    STRING          reduce using rule 86 (NType -> FuncType .)
    SEMICOL         reduce using rule 86 (NType -> FuncType .)
    RBRACE          reduce using rule 86 (NType -> FuncType .)
    RPAREN          reduce using rule 86 (NType -> FuncType .)
    EQUAL           reduce using rule 86 (NType -> FuncType .)
    LEFT_ANGLE      reduce using rule 86 (NType -> FuncType .)
    LBRACE          reduce using rule 86 (NType -> FuncType .)
    DDD             reduce using rule 86 (NType -> FuncType .)
    COLON           reduce using rule 86 (NType -> FuncType .)
    COLONEQ         reduce using rule 86 (NType -> FuncType .)
    LEFT_LEFT       reduce using rule 86 (NType -> FuncType .)


state 220

    (33) VarDecl -> DeclNameList EQUAL . ExprList
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 336
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 221

    (88) NType -> PtrType .

    COMMA           reduce using rule 88 (NType -> PtrType .)
    OR_RIGHT        reduce using rule 88 (NType -> PtrType .)
    INTEGER         reduce using rule 88 (NType -> PtrType .)
    FLOAT           reduce using rule 88 (NType -> PtrType .)
    STRING          reduce using rule 88 (NType -> PtrType .)
    SEMICOL         reduce using rule 88 (NType -> PtrType .)
    RBRACE          reduce using rule 88 (NType -> PtrType .)
    RPAREN          reduce using rule 88 (NType -> PtrType .)
    EQUAL           reduce using rule 88 (NType -> PtrType .)
    LEFT_ANGLE      reduce using rule 88 (NType -> PtrType .)
    LBRACE          reduce using rule 88 (NType -> PtrType .)
    DDD             reduce using rule 88 (NType -> PtrType .)
    COLON           reduce using rule 88 (NType -> PtrType .)
    COLONEQ         reduce using rule 88 (NType -> PtrType .)
    LEFT_LEFT       reduce using rule 88 (NType -> PtrType .)


state 222

    (91) NType -> NewType .

    COMMA           reduce using rule 91 (NType -> NewType .)
    OR_RIGHT        reduce using rule 91 (NType -> NewType .)
    INTEGER         reduce using rule 91 (NType -> NewType .)
    FLOAT           reduce using rule 91 (NType -> NewType .)
    STRING          reduce using rule 91 (NType -> NewType .)
    SEMICOL         reduce using rule 91 (NType -> NewType .)
    RBRACE          reduce using rule 91 (NType -> NewType .)
    RPAREN          reduce using rule 91 (NType -> NewType .)
    EQUAL           reduce using rule 91 (NType -> NewType .)
    LEFT_ANGLE      reduce using rule 91 (NType -> NewType .)
    LBRACE          reduce using rule 91 (NType -> NewType .)
    DDD             reduce using rule 91 (NType -> NewType .)
    COLON           reduce using rule 91 (NType -> NewType .)
    COLONEQ         reduce using rule 91 (NType -> NewType .)
    LEFT_LEFT       reduce using rule 91 (NType -> NewType .)


state 223

    (89) NType -> DotName .

    COMMA           reduce using rule 89 (NType -> DotName .)
    OR_RIGHT        reduce using rule 89 (NType -> DotName .)
    INTEGER         reduce using rule 89 (NType -> DotName .)
    FLOAT           reduce using rule 89 (NType -> DotName .)
    STRING          reduce using rule 89 (NType -> DotName .)
    SEMICOL         reduce using rule 89 (NType -> DotName .)
    RBRACE          reduce using rule 89 (NType -> DotName .)
    RPAREN          reduce using rule 89 (NType -> DotName .)
    EQUAL           reduce using rule 89 (NType -> DotName .)
    LEFT_ANGLE      reduce using rule 89 (NType -> DotName .)
    LBRACE          reduce using rule 89 (NType -> DotName .)
    DDD             reduce using rule 89 (NType -> DotName .)
    COLON           reduce using rule 89 (NType -> DotName .)
    COLONEQ         reduce using rule 89 (NType -> DotName .)
    LEFT_LEFT       reduce using rule 89 (NType -> DotName .)


state 224

    (135) PtrType -> TIMES . NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 337
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 225

    (87) NType -> OtherType .

    COMMA           reduce using rule 87 (NType -> OtherType .)
    OR_RIGHT        reduce using rule 87 (NType -> OtherType .)
    INTEGER         reduce using rule 87 (NType -> OtherType .)
    FLOAT           reduce using rule 87 (NType -> OtherType .)
    STRING          reduce using rule 87 (NType -> OtherType .)
    SEMICOL         reduce using rule 87 (NType -> OtherType .)
    RBRACE          reduce using rule 87 (NType -> OtherType .)
    RPAREN          reduce using rule 87 (NType -> OtherType .)
    EQUAL           reduce using rule 87 (NType -> OtherType .)
    LEFT_ANGLE      reduce using rule 87 (NType -> OtherType .)
    LBRACE          reduce using rule 87 (NType -> OtherType .)
    DDD             reduce using rule 87 (NType -> OtherType .)
    COLON           reduce using rule 87 (NType -> OtherType .)
    COLONEQ         reduce using rule 87 (NType -> OtherType .)
    LEFT_LEFT       reduce using rule 87 (NType -> OtherType .)


state 226

    (178) DeclNameList -> DeclNameList COMMA . DeclName
    (189) DeclName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 338

state 227

    (143) DotName -> Name .
    (144) DotName -> Name . DOT IDENTIFIER

    COMMA           reduce using rule 143 (DotName -> Name .)
    RPAREN          reduce using rule 143 (DotName -> Name .)
    OR_RIGHT        reduce using rule 143 (DotName -> Name .)
    EQUAL           reduce using rule 143 (DotName -> Name .)
    SEMICOL         reduce using rule 143 (DotName -> Name .)
    RBRACE          reduce using rule 143 (DotName -> Name .)
    LBRACE          reduce using rule 143 (DotName -> Name .)
    LEFT_ANGLE      reduce using rule 143 (DotName -> Name .)
    DDD             reduce using rule 143 (DotName -> Name .)
    COLON           reduce using rule 143 (DotName -> Name .)
    COLONEQ         reduce using rule 143 (DotName -> Name .)
    LEFT_LEFT       reduce using rule 143 (DotName -> Name .)
    INTEGER         reduce using rule 143 (DotName -> Name .)
    FLOAT           reduce using rule 143 (DotName -> Name .)
    STRING          reduce using rule 143 (DotName -> Name .)
    DOT             shift and go to state 339


state 228

    (31) VarDecl -> DeclNameList NType .
    (32) VarDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 31 (VarDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 31 (VarDecl -> DeclNameList NType .)
    EQUAL           shift and go to state 340


state 229

    (90) NType -> LPAREN . NType RPAREN
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 341
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 230

    (95) OtherType -> LBRACK . OExpr RBRACK NType
    (153) OExpr -> .
    (154) OExpr -> . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 153 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 342
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 141
    PExpr                          shift and go to state 60

state 231

    (160) ExprList -> ExprList COMMA Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 160 (ExprList -> ExprList COMMA Expr .)
    SEMICOL         reduce using rule 160 (ExprList -> ExprList COMMA Expr .)
    LBRACE          reduce using rule 160 (ExprList -> ExprList COMMA Expr .)
    EQUAL           reduce using rule 160 (ExprList -> ExprList COMMA Expr .)
    COLONEQ         reduce using rule 160 (ExprList -> ExprList COMMA Expr .)
    RPAREN          reduce using rule 160 (ExprList -> ExprList COMMA Expr .)
    RBRACE          reduce using rule 160 (ExprList -> ExprList COMMA Expr .)
    OROR            shift and go to state 166


state 232

    (54) SimpleStmt -> ExprList COLONEQ ExprList .
    (160) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 54 (SimpleStmt -> ExprList COLONEQ ExprList .)
    LBRACE          reduce using rule 54 (SimpleStmt -> ExprList COLONEQ ExprList .)
    COMMA           shift and go to state 107


state 233

    (53) SimpleStmt -> ExprList EQUAL ExprList .
    (160) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 53 (SimpleStmt -> ExprList EQUAL ExprList .)
    LBRACE          reduce using rule 53 (SimpleStmt -> ExprList EQUAL ExprList .)
    COMMA           shift and go to state 107


state 234

    (24) CommonDecl -> CONSTANT LPAREN RPAREN .

    SEMICOL         reduce using rule 24 (CommonDecl -> CONSTANT LPAREN RPAREN .)


state 235

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl . OSemi RPAREN
    (23) CommonDecl -> CONSTANT LPAREN ConstDecl . SEMICOL ConstDeclList OSemi RPAREN
    (147) OSemi -> .
    (148) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 344
    RPAREN          reduce using rule 147 (OSemi -> .)

    OSemi                          shift and go to state 343

state 236

    (36) ConstDecl -> DeclNameList EQUAL . ExprList
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 345
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 237

    (34) ConstDecl -> DeclNameList NType . EQUAL ExprList
    (35) ConstDecl -> DeclNameList NType .

    EQUAL           shift and go to state 346
    SEMICOL         reduce using rule 35 (ConstDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 35 (ConstDecl -> DeclNameList NType .)


state 238

    (280) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (267) Expr -> Expr . OROR Prec2Expr_
    (154) OExpr -> Expr .

    PIPE            shift and go to state 276
    OROR            shift and go to state 166
    RBRACK          reduce using rule 154 (OExpr -> Expr .)


state 239

    (255) Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .
    (245) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (247) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (248) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (249) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (250) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (251) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUS           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    XOR             reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OR              reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQEQ            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    NOTEQ           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LEQ             reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GEQ             reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GREAT           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LESS            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPAMP          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OROR            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SEMICOL         reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LBRACE          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COMMA           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQUAL           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLONEQ         reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACE          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RPAREN          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLON           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSEQ          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSEQ         reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    TIMESEQ         reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MODEQ           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OREQ            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPEQ           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    CAREQ           reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSMIN        reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PIPE            reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACK          reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DDD             reduce using rule 255 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 240

    (256) Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .
    (245) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (247) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (248) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (249) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (250) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (251) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUS           reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    XOR             reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OR              reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQEQ            reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    NOTEQ           reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LEQ             reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GEQ             reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GREAT           reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LESS            reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPAMP          reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OROR            reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SEMICOL         reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LBRACE          reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COMMA           reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQUAL           reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLONEQ         reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACE          reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RPAREN          reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLON           reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSEQ          reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSEQ         reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    TIMESEQ         reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MODEQ           reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OREQ            reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPEQ           reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    CAREQ           reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSMIN        reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PIPE            reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACK          reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DDD             reduce using rule 256 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 241

    (253) Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .
    (245) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (247) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (248) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (249) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (250) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (251) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUS           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    XOR             reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OR              reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQEQ            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    NOTEQ           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LEQ             reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GEQ             reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GREAT           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LESS            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPAMP          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OROR            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SEMICOL         reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LBRACE          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COMMA           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQUAL           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLONEQ         reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACE          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RPAREN          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLON           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MODEQ           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OREQ            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPEQ           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    CAREQ           reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PIPE            reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACK          reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DDD             reduce using rule 253 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 242

    (254) Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .
    (245) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (247) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (248) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (249) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (250) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (251) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUS           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    XOR             reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OR              reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQEQ            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    NOTEQ           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LEQ             reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GEQ             reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GREAT           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LESS            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPAMP          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OROR            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SEMICOL         reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LBRACE          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COMMA           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQUAL           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLONEQ         reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACE          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RPAREN          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLON           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MODEQ           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OREQ            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPEQ           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    CAREQ           reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PIPE            reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACK          reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DDD             reduce using rule 254 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 243

    (272) Arrayexp -> OtherType LBRACE ExprList . RBRACE
    (160) ExprList -> ExprList . COMMA Expr

    RBRACE          shift and go to state 347
    COMMA           shift and go to state 107


state 244

    (198) OArgTypeListOComma -> ArgTypeList . OComma
    (196) ArgTypeList -> ArgTypeList . COMMA ArgType
    (145) OComma -> .
    (146) OComma -> . COMMA

    COMMA           shift and go to state 348
    RPAREN          reduce using rule 145 (OComma -> .)
    OR_RIGHT        reduce using rule 145 (OComma -> .)

    OComma                         shift and go to state 349

state 245

    (195) ArgTypeList -> ArgType .

    COMMA           reduce using rule 195 (ArgTypeList -> ArgType .)
    OR_RIGHT        reduce using rule 195 (ArgTypeList -> ArgType .)
    RPAREN          reduce using rule 195 (ArgTypeList -> ArgType .)


state 246

    (111) ArgList -> LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 350


state 247

    (194) ArgType -> DotDotDot .

    COMMA           reduce using rule 194 (ArgType -> DotDotDot .)
    RPAREN          reduce using rule 194 (ArgType -> DotDotDot .)
    OR_RIGHT        reduce using rule 194 (ArgType -> DotDotDot .)


state 248

    (191) ArgType -> NameOrType .

    COMMA           reduce using rule 191 (ArgType -> NameOrType .)
    RPAREN          reduce using rule 191 (ArgType -> NameOrType .)
    OR_RIGHT        reduce using rule 191 (ArgType -> NameOrType .)


state 249

    (192) ArgType -> IDENTIFIER . NameOrType
    (193) ArgType -> IDENTIFIER . DotDotDot
    (190) Name -> IDENTIFIER .
    (242) NameOrType -> . NType
    (213) DotDotDot -> . DDD
    (214) DotDotDot -> . DDD NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    DOT             reduce using rule 190 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 190 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 190 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 190 (Name -> IDENTIFIER .)
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NewType                        shift and go to state 222
    DotDotDot                      shift and go to state 351
    NType                          shift and go to state 250
    NameOrType                     shift and go to state 352
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    FuncType                       shift and go to state 219

state 250

    (242) NameOrType -> NType .

    COMMA           reduce using rule 242 (NameOrType -> NType .)
    RPAREN          reduce using rule 242 (NameOrType -> NType .)
    OR_RIGHT        reduce using rule 242 (NameOrType -> NType .)


state 251

    (213) DotDotDot -> DDD .
    (214) DotDotDot -> DDD . NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    COMMA           reduce using rule 213 (DotDotDot -> DDD .)
    OR_RIGHT        reduce using rule 213 (DotDotDot -> DDD .)
    RPAREN          reduce using rule 213 (DotDotDot -> DDD .)
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 353
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 252

    (112) ArgList -> ArgList LPAREN . OArgTypeListOComma RPAREN
    (197) OArgTypeListOComma -> .
    (198) OArgTypeListOComma -> . ArgTypeList OComma
    (195) ArgTypeList -> . ArgType
    (196) ArgTypeList -> . ArgTypeList COMMA ArgType
    (191) ArgType -> . NameOrType
    (192) ArgType -> . IDENTIFIER NameOrType
    (193) ArgType -> . IDENTIFIER DotDotDot
    (194) ArgType -> . DotDotDot
    (242) NameOrType -> . NType
    (213) DotDotDot -> . DDD
    (214) DotDotDot -> . DDD NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    RPAREN          reduce using rule 197 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 219
    ArgTypeList                    shift and go to state 244
    PtrType                        shift and go to state 221
    ArgType                        shift and go to state 245
    NewType                        shift and go to state 222
    OArgTypeListOComma             shift and go to state 354
    DotDotDot                      shift and go to state 247
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NType                          shift and go to state 250
    DotName                        shift and go to state 223

state 253

    (136) FuncRetType -> FuncType .

    SEMICOL         reduce using rule 136 (FuncRetType -> FuncType .)
    RBRACE          reduce using rule 136 (FuncRetType -> FuncType .)
    LEFT_ANGLE      reduce using rule 136 (FuncRetType -> FuncType .)
    LBRACE          reduce using rule 136 (FuncRetType -> FuncType .)
    RPAREN          reduce using rule 136 (FuncRetType -> FuncType .)
    EQUAL           reduce using rule 136 (FuncRetType -> FuncType .)
    COMMA           reduce using rule 136 (FuncRetType -> FuncType .)
    DDD             reduce using rule 136 (FuncRetType -> FuncType .)
    COLON           reduce using rule 136 (FuncRetType -> FuncType .)
    COLONEQ         reduce using rule 136 (FuncRetType -> FuncType .)
    OR_RIGHT        reduce using rule 136 (FuncRetType -> FuncType .)
    LEFT_LEFT       reduce using rule 136 (FuncRetType -> FuncType .)
    INTEGER         reduce using rule 136 (FuncRetType -> FuncType .)
    FLOAT           reduce using rule 136 (FuncRetType -> FuncType .)
    STRING          reduce using rule 136 (FuncRetType -> FuncType .)


state 254

    (140) FuncRetType -> myType .
    (142) myType -> myType . COMMA NewType

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOL         reduce using rule 140 (FuncRetType -> myType .)
    RBRACE          reduce using rule 140 (FuncRetType -> myType .)
    LEFT_ANGLE      reduce using rule 140 (FuncRetType -> myType .)
    LBRACE          reduce using rule 140 (FuncRetType -> myType .)
    RPAREN          reduce using rule 140 (FuncRetType -> myType .)
    EQUAL           reduce using rule 140 (FuncRetType -> myType .)
    DDD             reduce using rule 140 (FuncRetType -> myType .)
    COLON           reduce using rule 140 (FuncRetType -> myType .)
    COLONEQ         reduce using rule 140 (FuncRetType -> myType .)
    OR_RIGHT        reduce using rule 140 (FuncRetType -> myType .)
    LEFT_LEFT       reduce using rule 140 (FuncRetType -> myType .)
    INTEGER         reduce using rule 140 (FuncRetType -> myType .)
    FLOAT           reduce using rule 140 (FuncRetType -> myType .)
    STRING          reduce using rule 140 (FuncRetType -> myType .)
    COMMA           shift and go to state 355

  ! COMMA           [ reduce using rule 140 (FuncRetType -> myType .) ]


state 255

    (138) FuncRetType -> PtrType .

    SEMICOL         reduce using rule 138 (FuncRetType -> PtrType .)
    RBRACE          reduce using rule 138 (FuncRetType -> PtrType .)
    LEFT_ANGLE      reduce using rule 138 (FuncRetType -> PtrType .)
    LBRACE          reduce using rule 138 (FuncRetType -> PtrType .)
    RPAREN          reduce using rule 138 (FuncRetType -> PtrType .)
    EQUAL           reduce using rule 138 (FuncRetType -> PtrType .)
    COMMA           reduce using rule 138 (FuncRetType -> PtrType .)
    DDD             reduce using rule 138 (FuncRetType -> PtrType .)
    COLON           reduce using rule 138 (FuncRetType -> PtrType .)
    COLONEQ         reduce using rule 138 (FuncRetType -> PtrType .)
    OR_RIGHT        reduce using rule 138 (FuncRetType -> PtrType .)
    LEFT_LEFT       reduce using rule 138 (FuncRetType -> PtrType .)
    INTEGER         reduce using rule 138 (FuncRetType -> PtrType .)
    FLOAT           reduce using rule 138 (FuncRetType -> PtrType .)
    STRING          reduce using rule 138 (FuncRetType -> PtrType .)


state 256

    (141) myType -> NewType .

    COMMA           reduce using rule 141 (myType -> NewType .)
    SEMICOL         reduce using rule 141 (myType -> NewType .)
    RBRACE          reduce using rule 141 (myType -> NewType .)
    LBRACE          reduce using rule 141 (myType -> NewType .)
    LEFT_ANGLE      reduce using rule 141 (myType -> NewType .)
    RPAREN          reduce using rule 141 (myType -> NewType .)
    EQUAL           reduce using rule 141 (myType -> NewType .)
    DDD             reduce using rule 141 (myType -> NewType .)
    COLON           reduce using rule 141 (myType -> NewType .)
    COLONEQ         reduce using rule 141 (myType -> NewType .)
    OR_RIGHT        reduce using rule 141 (myType -> NewType .)
    LEFT_LEFT       reduce using rule 141 (myType -> NewType .)
    INTEGER         reduce using rule 141 (myType -> NewType .)
    FLOAT           reduce using rule 141 (myType -> NewType .)
    STRING          reduce using rule 141 (myType -> NewType .)


state 257

    (137) FuncRetType -> OtherType .

    SEMICOL         reduce using rule 137 (FuncRetType -> OtherType .)
    RBRACE          reduce using rule 137 (FuncRetType -> OtherType .)
    LEFT_ANGLE      reduce using rule 137 (FuncRetType -> OtherType .)
    LBRACE          reduce using rule 137 (FuncRetType -> OtherType .)
    RPAREN          reduce using rule 137 (FuncRetType -> OtherType .)
    EQUAL           reduce using rule 137 (FuncRetType -> OtherType .)
    COMMA           reduce using rule 137 (FuncRetType -> OtherType .)
    DDD             reduce using rule 137 (FuncRetType -> OtherType .)
    COLON           reduce using rule 137 (FuncRetType -> OtherType .)
    COLONEQ         reduce using rule 137 (FuncRetType -> OtherType .)
    OR_RIGHT        reduce using rule 137 (FuncRetType -> OtherType .)
    LEFT_LEFT       reduce using rule 137 (FuncRetType -> OtherType .)
    INTEGER         reduce using rule 137 (FuncRetType -> OtherType .)
    FLOAT           reduce using rule 137 (FuncRetType -> OtherType .)
    STRING          reduce using rule 137 (FuncRetType -> OtherType .)


state 258

    (110) FuncType -> FUNCTION ArgList FuncRes .

    LEFT_ANGLE      reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    LBRACE          reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    COLON           reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    EQUAL           reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    COLONEQ         reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    COMMA           reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    RPAREN          reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    SEMICOL         reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    INTEGER         reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    FLOAT           reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    STRING          reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACE          reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    DDD             reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    OR_RIGHT        reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)
    LEFT_LEFT       reduce using rule 110 (FuncType -> FUNCTION ArgList FuncRes .)


state 259

    (118) FuncRes -> LEFT_OR . OArgTypeListOComma OR_RIGHT
    (197) OArgTypeListOComma -> .
    (198) OArgTypeListOComma -> . ArgTypeList OComma
    (195) ArgTypeList -> . ArgType
    (196) ArgTypeList -> . ArgTypeList COMMA ArgType
    (191) ArgType -> . NameOrType
    (192) ArgType -> . IDENTIFIER NameOrType
    (193) ArgType -> . IDENTIFIER DotDotDot
    (194) ArgType -> . DotDotDot
    (242) NameOrType -> . NType
    (213) DotDotDot -> . DDD
    (214) DotDotDot -> . DDD NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 197 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 219
    ArgTypeList                    shift and go to state 244
    PtrType                        shift and go to state 221
    ArgType                        shift and go to state 245
    NewType                        shift and go to state 222
    OArgTypeListOComma             shift and go to state 356
    DotDotDot                      shift and go to state 247
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NType                          shift and go to state 250
    DotName                        shift and go to state 223

state 260

    (139) FuncRetType -> DotName .

    SEMICOL         reduce using rule 139 (FuncRetType -> DotName .)
    RBRACE          reduce using rule 139 (FuncRetType -> DotName .)
    LEFT_ANGLE      reduce using rule 139 (FuncRetType -> DotName .)
    LBRACE          reduce using rule 139 (FuncRetType -> DotName .)
    RPAREN          reduce using rule 139 (FuncRetType -> DotName .)
    EQUAL           reduce using rule 139 (FuncRetType -> DotName .)
    COMMA           reduce using rule 139 (FuncRetType -> DotName .)
    DDD             reduce using rule 139 (FuncRetType -> DotName .)
    COLON           reduce using rule 139 (FuncRetType -> DotName .)
    COLONEQ         reduce using rule 139 (FuncRetType -> DotName .)
    OR_RIGHT        reduce using rule 139 (FuncRetType -> DotName .)
    LEFT_LEFT       reduce using rule 139 (FuncRetType -> DotName .)
    INTEGER         reduce using rule 139 (FuncRetType -> DotName .)
    FLOAT           reduce using rule 139 (FuncRetType -> DotName .)
    STRING          reduce using rule 139 (FuncRetType -> DotName .)


state 261

    (117) FuncRes -> FuncRetType .

    LBRACE          reduce using rule 117 (FuncRes -> FuncRetType .)
    SEMICOL         reduce using rule 117 (FuncRes -> FuncRetType .)
    RBRACE          reduce using rule 117 (FuncRes -> FuncRetType .)
    LEFT_ANGLE      reduce using rule 117 (FuncRes -> FuncRetType .)
    RPAREN          reduce using rule 117 (FuncRes -> FuncRetType .)
    EQUAL           reduce using rule 117 (FuncRes -> FuncRetType .)
    COMMA           reduce using rule 117 (FuncRes -> FuncRetType .)
    DDD             reduce using rule 117 (FuncRes -> FuncRetType .)
    COLON           reduce using rule 117 (FuncRes -> FuncRetType .)
    COLONEQ         reduce using rule 117 (FuncRes -> FuncRetType .)
    OR_RIGHT        reduce using rule 117 (FuncRes -> FuncRetType .)
    LEFT_LEFT       reduce using rule 117 (FuncRes -> FuncRetType .)
    INTEGER         reduce using rule 117 (FuncRes -> FuncRetType .)
    FLOAT           reduce using rule 117 (FuncRes -> FuncRetType .)
    STRING          reduce using rule 117 (FuncRes -> FuncRetType .)


state 262

    (106) FuncDecl -> FUNCTION funcmarker FuncDecl_ . FuncBody
    (113) FuncBody -> .
    (114) FuncBody -> . LBRACE cmtlist StmtList cmtlist funcrevmarker RBRACE

    SEMICOL         reduce using rule 113 (FuncBody -> .)
    LBRACE          shift and go to state 357

    FuncBody                       shift and go to state 358

state 263

    (109) FuncDecl_ -> LEFT_OR . OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (197) OArgTypeListOComma -> .
    (198) OArgTypeListOComma -> . ArgTypeList OComma
    (195) ArgTypeList -> . ArgType
    (196) ArgTypeList -> . ArgTypeList COMMA ArgType
    (191) ArgType -> . NameOrType
    (192) ArgType -> . IDENTIFIER NameOrType
    (193) ArgType -> . IDENTIFIER DotDotDot
    (194) ArgType -> . DotDotDot
    (242) NameOrType -> . NType
    (213) DotDotDot -> . DDD
    (214) DotDotDot -> . DDD NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 197 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 219
    ArgTypeList                    shift and go to state 244
    PtrType                        shift and go to state 221
    ArgType                        shift and go to state 245
    NewType                        shift and go to state 222
    OArgTypeListOComma             shift and go to state 359
    DotDotDot                      shift and go to state 247
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NType                          shift and go to state 250
    DotName                        shift and go to state 223

state 264

    (108) FuncDecl_ -> IDENTIFIER . ArgList FuncRes
    (111) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (112) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 128

    ArgList                        shift and go to state 360

state 265

    (71) ForHeader -> OSimpleStmt SEMICOL . OSimpleStmt SEMICOL OSimpleStmt
    (149) OSimpleStmt -> .
    (150) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 149 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 361
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 266

    (68) RangeStmt -> ExprList EQUAL . RANGE Expr
    (53) SimpleStmt -> ExprList EQUAL . ExprList
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 362
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 233
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 267

    (69) RangeStmt -> ExprList COLONEQ . RANGE Expr
    (54) SimpleStmt -> ExprList COLONEQ . ExprList
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 363
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 232
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 268

    (70) RangeStmt -> RANGE Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 70 (RangeStmt -> RANGE Expr .)
    LBRACE          reduce using rule 70 (RangeStmt -> RANGE Expr .)
    OROR            shift and go to state 166


state 269

    (74) ForBody -> ForHeader formarker . LoopBody revmarker
    (67) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 364

    LoopBody                       shift and go to state 365

state 270

    (105) InterfaceType -> INTERFACE LBRACE RBRACE .

    COMMA           reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RPAREN          reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LBRACE          reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLON           reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    EQUAL           reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLONEQ         reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    SEMICOL         reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    DDD             reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    INTEGER         reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    FLOAT           reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    STRING          reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACE          reduce using rule 105 (InterfaceType -> INTERFACE LBRACE RBRACE .)


state 271

    (121) InterfaceDeclList -> InterfaceDecl .

    SEMICOL         reduce using rule 121 (InterfaceDeclList -> InterfaceDecl .)
    RBRACE          reduce using rule 121 (InterfaceDeclList -> InterfaceDecl .)


state 272

    (104) InterfaceType -> INTERFACE LBRACE InterfaceDeclList . OSemi RBRACE
    (122) InterfaceDeclList -> InterfaceDeclList . SEMICOL InterfaceDecl
    (147) OSemi -> .
    (148) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 366
    RBRACE          reduce using rule 147 (OSemi -> .)

    OSemi                          shift and go to state 367

state 273

    (129) InterfaceDecl -> NewName . InDecl
    (132) InDecl -> . LPAREN OArgTypeListOComma RPAREN FuncRes

    LPAREN          shift and go to state 368

    InDecl                         shift and go to state 369

state 274

    (131) InterfaceDecl -> LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 370


state 275

    (130) InterfaceDecl -> IDENTIFIER .
    (134) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 130 (InterfaceDecl -> IDENTIFIER .)
    RBRACE          reduce using rule 130 (InterfaceDecl -> IDENTIFIER .)
    LPAREN          reduce using rule 134 (NewName -> IDENTIFIER .)


state 276

    (280) ForCompExpr -> LBRACK Expr PIPE . RangeStmt RBRACK
    (68) RangeStmt -> . ExprList EQUAL RANGE Expr
    (69) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (70) RangeStmt -> . RANGE Expr
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 135
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    RangeStmt                      shift and go to state 371
    ExprList                       shift and go to state 372
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 277

    (95) OtherType -> LBRACK OExpr RBRACK . NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 373
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 278

    (100) ChannelType -> CHAN LMINUS NewType .

    LBRACE          reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    LEFT_ANGLE      reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    LEFT_LEFT       reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    COMMA           reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    RPAREN          reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    SEMICOL         reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    DDD             reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    OR_RIGHT        reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    EQUAL           reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    COLON           reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    COLONEQ         reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    INTEGER         reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    FLOAT           reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    STRING          reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)
    RBRACE          reduce using rule 100 (ChannelType -> CHAN LMINUS NewType .)


state 279

    (79) IfHeader -> OSimpleStmt SEMICOL . OSimpleStmt
    (149) OSimpleStmt -> .
    (150) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    LBRACE          reduce using rule 149 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 374
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 280

    (243) SwitchStmt -> SWITCH IfHeader LBRACE . CaseBlockList RBRACE
    (65) CaseBlockList -> .
    (66) CaseBlockList -> . CaseBlockList CaseBlock

    RBRACE          reduce using rule 65 (CaseBlockList -> .)
    CASE            reduce using rule 65 (CaseBlockList -> .)
    DEFAULT         reduce using rule 65 (CaseBlockList -> .)

    CaseBlockList                  shift and go to state 375

state 281

    (183) KeyvalList -> Keyval .

    COMMA           reduce using rule 183 (KeyvalList -> Keyval .)
    RIGHT_RIGHT     reduce using rule 183 (KeyvalList -> Keyval .)


state 282

    (227) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 376


state 283

    (235) Keyval -> Expr . COLON CompLitExpr
    (236) BareCompLitExpr -> Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 377
    COMMA           reduce using rule 236 (BareCompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 236 (BareCompLitExpr -> Expr .)
    OROR            shift and go to state 166


state 284

    (237) BareCompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (187) BracedKeyvalList -> .
    (188) BracedKeyvalList -> . KeyvalList OComma
    (183) KeyvalList -> . Keyval
    (184) KeyvalList -> . BareCompLitExpr
    (185) KeyvalList -> . KeyvalList COMMA Keyval
    (186) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (235) Keyval -> . Expr COLON CompLitExpr
    (236) BareCompLitExpr -> . Expr
    (237) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 187 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 284
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 281
    BareCompLitExpr                shift and go to state 286
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 378

state 285

    (188) BracedKeyvalList -> KeyvalList . OComma
    (185) KeyvalList -> KeyvalList . COMMA Keyval
    (186) KeyvalList -> KeyvalList . COMMA BareCompLitExpr
    (145) OComma -> .
    (146) OComma -> . COMMA

    COMMA           shift and go to state 379
    RIGHT_RIGHT     reduce using rule 145 (OComma -> .)

    OComma                         shift and go to state 380

state 286

    (184) KeyvalList -> BareCompLitExpr .

    COMMA           reduce using rule 184 (KeyvalList -> BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 184 (KeyvalList -> BareCompLitExpr .)


state 287

    (170) DeclList -> DeclList cmtlist Declaration . SEMICOL

    SEMICOL         shift and go to state 381


state 288

    (8) Imports -> Imports cmtlist Import . SEMICOL

    SEMICOL         shift and go to state 382


state 289

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList . cmtlist
    (170) DeclList -> DeclList . cmtlist Declaration SEMICOL
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    $end            reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 383

state 290

    (222) PExprNoParen -> PExpr LBRACK Expr . RBRACK
    (267) Expr -> Expr . OROR Prec2Expr_
    (154) OExpr -> Expr .

    RBRACK          shift and go to state 384
    OROR            shift and go to state 166
    COLON           reduce using rule 154 (OExpr -> Expr .)


state 291

    (223) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr RBRACK
    (224) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr COLON OExpr RBRACK

    COLON           shift and go to state 385


state 292

    (282) PseudoCall -> PExpr LPAREN ExprOrTypeList . OComma RPAREN
    (283) PseudoCall -> PExpr LPAREN ExprOrTypeList . DDD OComma RPAREN
    (162) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType
    (145) OComma -> .
    (146) OComma -> . COMMA

    DDD             shift and go to state 388
    COMMA           shift and go to state 387
    RPAREN          reduce using rule 145 (OComma -> .)

    OComma                         shift and go to state 386

state 293

    (161) ExprOrTypeList -> ExprOrType .

    COLON           reduce using rule 161 (ExprOrTypeList -> ExprOrType .)
    EQUAL           reduce using rule 161 (ExprOrTypeList -> ExprOrType .)
    COLONEQ         reduce using rule 161 (ExprOrTypeList -> ExprOrType .)
    COMMA           reduce using rule 161 (ExprOrTypeList -> ExprOrType .)
    DDD             reduce using rule 161 (ExprOrTypeList -> ExprOrType .)
    RPAREN          reduce using rule 161 (ExprOrTypeList -> ExprOrType .)


state 294

    (281) PseudoCall -> PExpr LPAREN RPAREN .

    DOT             reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACK          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEFT_LEFT       reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    LPAREN          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDE          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    MOD             reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL             reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR             reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPERS          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAR          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMES           reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUS            reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUS           reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    XOR             reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    OR              reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQEQ            reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    NOTEQ           reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEQ             reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    GEQ             reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    GREAT           reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    LESS            reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPAMP          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    OROR            reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    SEMICOL         reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACE          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSEQ          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSEQ         reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMESEQ         reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDEEQ        reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    MODEQ           reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    OREQ            reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPEQ           reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    CAREQ           reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAREQ        reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSMIN        reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQUAL           reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLONEQ         reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    COMMA           reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    PIPE            reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACK          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    RPAREN          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_ANGLE     reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACE          reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLON           reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_RIGHT     reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)
    DDD             reduce using rule 281 (PseudoCall -> PExpr LPAREN RPAREN .)


state 295

    (228) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 389


state 296

    (220) PExprNoParen -> PExpr DOT LPAREN . ExprOrType RPAREN
    (221) PExprNoParen -> PExpr DOT LPAREN . NewType RPAREN
    (240) ExprOrType -> . Expr
    (241) ExprOrType -> . NonExprType
    (231) NewType -> . TYPE
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (92) NonExprType -> . FuncType
    (93) NonExprType -> . OtherType
    (94) NonExprType -> . TIMES NonExprType
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (157) FuncLiteralDecl -> . FuncType

    TYPE            shift and go to state 61
    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    NewType                        shift and go to state 390
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 391
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 297

    (219) PExprNoParen -> PExpr DOT IDENTIFIER .

    DOT             reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACK          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LPAREN          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDE          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MOD             reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL             reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR             reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPERS          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAR          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMES           reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUS            reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUS           reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    XOR             reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OR              reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQEQ            reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    NOTEQ           reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEQ             reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GEQ             reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GREAT           reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LESS            reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPAMP          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OROR            reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COMMA           reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SEMICOL         reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RPAREN          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACE          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MODEQ           reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OREQ            reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPEQ           reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    CAREQ           reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAREQ        reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQUAL           reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLONEQ         reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DDD             reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PIPE            reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACK          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACE          reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLON           reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 219 (PExprNoParen -> PExpr DOT IDENTIFIER .)


state 298

    (30) CommonDecl -> NewType LPAREN RPAREN .

    SEMICOL         reduce using rule 30 (CommonDecl -> NewType LPAREN RPAREN .)


state 299

    (29) CommonDecl -> NewType LPAREN TypeDeclList . OSemi RPAREN
    (176) TypeDeclList -> TypeDeclList . SEMICOL TypeDecl
    (147) OSemi -> .
    (148) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 392
    RPAREN          reduce using rule 147 (OSemi -> .)

    OSemi                          shift and go to state 393

state 300

    (175) TypeDeclList -> TypeDecl .

    SEMICOL         reduce using rule 175 (TypeDeclList -> TypeDecl .)
    RPAREN          reduce using rule 175 (TypeDeclList -> TypeDecl .)


state 301

    (40) TypeDecl -> TypeDeclName NType .

    SEMICOL         reduce using rule 40 (TypeDecl -> TypeDeclName NType .)
    RPAREN          reduce using rule 40 (TypeDecl -> TypeDeclName NType .)


state 302

    (267) Expr -> Expr OROR Prec2Expr_ .
    (265) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    PLUSEQ          reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSEQ         reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    TIMESEQ         reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    MODEQ           reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    OREQ            reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    AMPEQ           reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    CAREQ           reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    AMPCAREQ        reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSPLUS        reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSMIN        reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    OROR            reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    SEMICOL         reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    EQUAL           reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    COLONEQ         reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    COMMA           reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    LBRACE          reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    RPAREN          reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACK          reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    COLON           reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    DDD             reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACE          reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    PIPE            reduce using rule 267 (Expr -> Expr OROR Prec2Expr_ .)
    AMPAMP          shift and go to state 100


state 303

    (49) SimpleStmt -> Expr CAREQ Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 49 (SimpleStmt -> Expr CAREQ Expr .)
    LBRACE          reduce using rule 49 (SimpleStmt -> Expr CAREQ Expr .)
    OROR            shift and go to state 166


state 304

    (44) SimpleStmt -> Expr TIMESEQ Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 44 (SimpleStmt -> Expr TIMESEQ Expr .)
    LBRACE          reduce using rule 44 (SimpleStmt -> Expr TIMESEQ Expr .)
    OROR            shift and go to state 166


state 305

    (42) SimpleStmt -> Expr PLUSEQ Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 42 (SimpleStmt -> Expr PLUSEQ Expr .)
    LBRACE          reduce using rule 42 (SimpleStmt -> Expr PLUSEQ Expr .)
    OROR            shift and go to state 166


state 306

    (46) SimpleStmt -> Expr MODEQ Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 46 (SimpleStmt -> Expr MODEQ Expr .)
    LBRACE          reduce using rule 46 (SimpleStmt -> Expr MODEQ Expr .)
    OROR            shift and go to state 166


state 307

    (51) SimpleStmt -> Expr SHR_ASSIGN Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 51 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    LBRACE          reduce using rule 51 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    OROR            shift and go to state 166


state 308

    (47) SimpleStmt -> Expr OREQ Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 47 (SimpleStmt -> Expr OREQ Expr .)
    LBRACE          reduce using rule 47 (SimpleStmt -> Expr OREQ Expr .)
    OROR            shift and go to state 166


state 309

    (43) SimpleStmt -> Expr MINUSEQ Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 43 (SimpleStmt -> Expr MINUSEQ Expr .)
    LBRACE          reduce using rule 43 (SimpleStmt -> Expr MINUSEQ Expr .)
    OROR            shift and go to state 166


state 310

    (48) SimpleStmt -> Expr AMPEQ Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 48 (SimpleStmt -> Expr AMPEQ Expr .)
    LBRACE          reduce using rule 48 (SimpleStmt -> Expr AMPEQ Expr .)
    OROR            shift and go to state 166


state 311

    (52) SimpleStmt -> Expr AMPCAREQ Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 52 (SimpleStmt -> Expr AMPCAREQ Expr .)
    LBRACE          reduce using rule 52 (SimpleStmt -> Expr AMPCAREQ Expr .)
    OROR            shift and go to state 166


state 312

    (50) SimpleStmt -> Expr SHL_ASSIGN Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 50 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    LBRACE          reduce using rule 50 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    OROR            shift and go to state 166


state 313

    (45) SimpleStmt -> Expr DIVIDEEQ Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 45 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    LBRACE          reduce using rule 45 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    OROR            shift and go to state 166


state 314

    (216) PExpr -> LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 216 (PExpr -> LPAREN ExprOrType RPAREN .)


state 315

    (94) NonExprType -> TIMES NonExprType .

    COLON           reduce using rule 94 (NonExprType -> TIMES NonExprType .)
    EQUAL           reduce using rule 94 (NonExprType -> TIMES NonExprType .)
    COLONEQ         reduce using rule 94 (NonExprType -> TIMES NonExprType .)
    COMMA           reduce using rule 94 (NonExprType -> TIMES NonExprType .)
    DDD             reduce using rule 94 (NonExprType -> TIMES NonExprType .)
    RPAREN          reduce using rule 94 (NonExprType -> TIMES NonExprType .)


state 316

    (93) NonExprType -> OtherType .
    (233) ConvType -> OtherType .
    (234) CompType -> OtherType .

    RPAREN          reduce using rule 93 (NonExprType -> OtherType .)
    DDD             reduce using rule 93 (NonExprType -> OtherType .)
    COMMA           reduce using rule 93 (NonExprType -> OtherType .)
    COLON           reduce using rule 93 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 93 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 93 (NonExprType -> OtherType .)
    LEFT_ANGLE      reduce using rule 233 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 234 (CompType -> OtherType .)


state 317

    (80) IfStmt -> IF IfHeader ifmarker . LoopBody revmarker ElseIfList
    (67) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 364

    LoopBody                       shift and go to state 394

state 318

    (181) NewNameList -> NewName .

    COMMA           reduce using rule 181 (NewNameList -> NewName .)
    LPAREN          reduce using rule 181 (NewNameList -> NewName .)
    FUNCTION        reduce using rule 181 (NewNameList -> NewName .)
    LBRACK          reduce using rule 181 (NewNameList -> NewName .)
    TIMES           reduce using rule 181 (NewNameList -> NewName .)
    TYPE            reduce using rule 181 (NewNameList -> NewName .)
    STRUCT          reduce using rule 181 (NewNameList -> NewName .)
    INTERFACE       reduce using rule 181 (NewNameList -> NewName .)
    CHAN            reduce using rule 181 (NewNameList -> NewName .)
    LMINUS          reduce using rule 181 (NewNameList -> NewName .)
    IDENTIFIER      reduce using rule 181 (NewNameList -> NewName .)


state 319

    (119) StructDeclList -> StructDecl .

    SEMICOL         reduce using rule 119 (StructDeclList -> StructDecl .)
    RBRACE          reduce using rule 119 (StructDeclList -> StructDecl .)


state 320

    (126) StructDecl -> TIMES . Embed OLiteral
    (128) StructDecl -> TIMES . LPAREN Embed RPAREN OLiteral
    (168) Embed -> . IDENTIFIER

    LPAREN          shift and go to state 395
    IDENTIFIER      shift and go to state 397

    Embed                          shift and go to state 396

state 321

    (125) StructDecl -> LPAREN . Embed RPAREN OLiteral
    (127) StructDecl -> LPAREN . TIMES Embed RPAREN OLiteral
    (168) Embed -> . IDENTIFIER

    TIMES           shift and go to state 398
    IDENTIFIER      shift and go to state 397

    Embed                          shift and go to state 399

state 322

    (123) StructDecl -> NewNameList . NType OLiteral
    (182) NewNameList -> NewNameList . COMMA NewName
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    COMMA           shift and go to state 400
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 401
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 323

    (102) StructType -> STRUCT LBRACE StructDeclList . OSemi RBRACE
    (120) StructDeclList -> StructDeclList . SEMICOL StructDecl
    (147) OSemi -> .
    (148) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 402
    RBRACE          reduce using rule 147 (OSemi -> .)

    OSemi                          shift and go to state 403

state 324

    (168) Embed -> IDENTIFIER .
    (134) NewName -> IDENTIFIER .

    INTEGER         reduce using rule 168 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 168 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 168 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 168 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 168 (Embed -> IDENTIFIER .)
    COMMA           reduce using rule 134 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 134 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 134 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 134 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 134 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 134 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 134 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 134 (NewName -> IDENTIFIER .)
    CHAN            reduce using rule 134 (NewName -> IDENTIFIER .)
    LMINUS          reduce using rule 134 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 134 (NewName -> IDENTIFIER .)


state 325

    (124) StructDecl -> Embed . OLiteral
    (163) OLiteral -> .
    (164) OLiteral -> . Literal
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING

    SEMICOL         reduce using rule 163 (OLiteral -> .)
    RBRACE          reduce using rule 163 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 405
    Literal                        shift and go to state 404

state 326

    (103) StructType -> STRUCT LBRACE RBRACE .

    LBRACE          reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    COMMA           reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    INTEGER         reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    FLOAT           reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    STRING          reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    SEMICOL         reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACE          reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    RPAREN          reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    DDD             reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    COLON           reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    EQUAL           reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)
    COLONEQ         reduce using rule 103 (StructType -> STRUCT LBRACE RBRACE .)


state 327

    (226) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma . RIGHT_ANGLE

    RIGHT_ANGLE     shift and go to state 406


state 328

    (146) OComma -> COMMA .

    RIGHT_ANGLE     reduce using rule 146 (OComma -> COMMA .)
    RPAREN          reduce using rule 146 (OComma -> COMMA .)


state 329

    (61) CompoundStmt -> LBRACE compundmarker . cmtlist StmtList cmtlist revmarker RBRACE
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    LBRACE          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    SEMICOL         reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 407

state 330

    (14) ImportStmtList -> ImportStmtList SEMICOL . ImportStmt
    (148) OSemi -> SEMICOL .
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    RPAREN          reduce using rule 148 (OSemi -> SEMICOL .)
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 94
    DOT             shift and go to state 97

    ImportStmt                     shift and go to state 408
    ImportHere                     shift and go to state 93

state 331

    (10) Import -> IMPORT LPAREN ImportStmtList OSemi . RPAREN

    RPAREN          shift and go to state 409


state 332

    (179) StmtList -> Stmt . SEMICOL

    SEMICOL         shift and go to state 410


state 333

    (158) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList . cmtlist RBRACE
    (180) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 284 (cmtlist -> .)
    COMMENT         reduce using rule 284 (cmtlist -> .)
    LBRACE          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    SEMICOL         reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 411

state 334

    (172) VarDeclList -> VarDeclList SEMICOL . VarDecl
    (148) OSemi -> SEMICOL .
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (177) DeclNameList -> . DeclName
    (178) DeclNameList -> . DeclNameList COMMA DeclName
    (189) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 148 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    VarDecl                        shift and go to state 412
    DeclNameList                   shift and go to state 106

state 335

    (26) CommonDecl -> VAR LPAREN VarDeclList OSemi . RPAREN

    RPAREN          shift and go to state 413


state 336

    (33) VarDecl -> DeclNameList EQUAL ExprList .
    (160) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 33 (VarDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 33 (VarDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 107


state 337

    (135) PtrType -> TIMES NType .

    SEMICOL         reduce using rule 135 (PtrType -> TIMES NType .)
    RPAREN          reduce using rule 135 (PtrType -> TIMES NType .)
    COMMA           reduce using rule 135 (PtrType -> TIMES NType .)
    RBRACE          reduce using rule 135 (PtrType -> TIMES NType .)
    LBRACE          reduce using rule 135 (PtrType -> TIMES NType .)
    OR_RIGHT        reduce using rule 135 (PtrType -> TIMES NType .)
    EQUAL           reduce using rule 135 (PtrType -> TIMES NType .)
    LEFT_ANGLE      reduce using rule 135 (PtrType -> TIMES NType .)
    DDD             reduce using rule 135 (PtrType -> TIMES NType .)
    COLON           reduce using rule 135 (PtrType -> TIMES NType .)
    COLONEQ         reduce using rule 135 (PtrType -> TIMES NType .)
    LEFT_LEFT       reduce using rule 135 (PtrType -> TIMES NType .)
    INTEGER         reduce using rule 135 (PtrType -> TIMES NType .)
    FLOAT           reduce using rule 135 (PtrType -> TIMES NType .)
    STRING          reduce using rule 135 (PtrType -> TIMES NType .)


state 338

    (178) DeclNameList -> DeclNameList COMMA DeclName .

    EQUAL           reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    COMMA           reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    LPAREN          reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    FUNCTION        reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    LBRACK          reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    TIMES           reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    TYPE            reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    STRUCT          reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    INTERFACE       reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    CHAN            reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    LMINUS          reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    IDENTIFIER      reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    SEMICOL         reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)
    RPAREN          reduce using rule 178 (DeclNameList -> DeclNameList COMMA DeclName .)


state 339

    (144) DotName -> Name DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 414


state 340

    (32) VarDecl -> DeclNameList NType EQUAL . ExprList
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 415
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 341

    (90) NType -> LPAREN NType . RPAREN

    RPAREN          shift and go to state 416


state 342

    (154) OExpr -> Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 154 (OExpr -> Expr .)
    COLON           reduce using rule 154 (OExpr -> Expr .)
    OROR            shift and go to state 166


state 343

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi . RPAREN

    RPAREN          shift and go to state 417


state 344

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL . ConstDeclList OSemi RPAREN
    (148) OSemi -> SEMICOL .
    (173) ConstDeclList -> . ConstDecl1
    (174) ConstDeclList -> . ConstDeclList SEMICOL ConstDecl1
    (37) ConstDecl1 -> . ConstDecl
    (38) ConstDecl1 -> . DeclNameList
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (177) DeclNameList -> . DeclName
    (178) DeclNameList -> . DeclNameList COMMA DeclName
    (189) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 148 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 102

    ConstDecl1                     shift and go to state 420
    DeclName                       shift and go to state 103
    ConstDecl                      shift and go to state 421
    ConstDeclList                  shift and go to state 418
    DeclNameList                   shift and go to state 419

state 345

    (36) ConstDecl -> DeclNameList EQUAL ExprList .
    (160) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 36 (ConstDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 36 (ConstDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 107


state 346

    (34) ConstDecl -> DeclNameList NType EQUAL . ExprList
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 422
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 347

    (272) Arrayexp -> OtherType LBRACE ExprList RBRACE .

    COLON           reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    OROR            reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COMMA           reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RIGHT_RIGHT     reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    EQUAL           reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COLONEQ         reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RPAREN          reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SEMICOL         reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    LBRACE          reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RBRACK          reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PLUSEQ          reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MINUSEQ         reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    TIMESEQ         reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    DIVIDEEQ        reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MODEQ           reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    OREQ            reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    AMPEQ           reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    CAREQ           reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SHL_ASSIGN      reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SHR_ASSIGN      reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    AMPCAREQ        reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PLUSPLUS        reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MINUSMIN        reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PIPE            reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    DDD             reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RBRACE          reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RIGHT_ANGLE     reduce using rule 272 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)


state 348

    (196) ArgTypeList -> ArgTypeList COMMA . ArgType
    (146) OComma -> COMMA .
    (191) ArgType -> . NameOrType
    (192) ArgType -> . IDENTIFIER NameOrType
    (193) ArgType -> . IDENTIFIER DotDotDot
    (194) ArgType -> . DotDotDot
    (242) NameOrType -> . NType
    (213) DotDotDot -> . DDD
    (214) DotDotDot -> . DDD NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    RPAREN          reduce using rule 146 (OComma -> COMMA .)
    OR_RIGHT        reduce using rule 146 (OComma -> COMMA .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    StructType                     shift and go to state 56
    DotName                        shift and go to state 223
    Name                           shift and go to state 227
    NewType                        shift and go to state 222
    DotDotDot                      shift and go to state 247
    NType                          shift and go to state 250
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    ArgType                        shift and go to state 423
    FuncType                       shift and go to state 219

state 349

    (198) OArgTypeListOComma -> ArgTypeList OComma .

    RPAREN          reduce using rule 198 (OArgTypeListOComma -> ArgTypeList OComma .)
    OR_RIGHT        reduce using rule 198 (OArgTypeListOComma -> ArgTypeList OComma .)


state 350

    (111) ArgList -> LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    CHAN            reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LMINUS          reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 111 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)


state 351

    (193) ArgType -> IDENTIFIER DotDotDot .

    COMMA           reduce using rule 193 (ArgType -> IDENTIFIER DotDotDot .)
    RPAREN          reduce using rule 193 (ArgType -> IDENTIFIER DotDotDot .)
    OR_RIGHT        reduce using rule 193 (ArgType -> IDENTIFIER DotDotDot .)


state 352

    (192) ArgType -> IDENTIFIER NameOrType .

    COMMA           reduce using rule 192 (ArgType -> IDENTIFIER NameOrType .)
    RPAREN          reduce using rule 192 (ArgType -> IDENTIFIER NameOrType .)
    OR_RIGHT        reduce using rule 192 (ArgType -> IDENTIFIER NameOrType .)


state 353

    (214) DotDotDot -> DDD NType .

    COMMA           reduce using rule 214 (DotDotDot -> DDD NType .)
    OR_RIGHT        reduce using rule 214 (DotDotDot -> DDD NType .)
    RPAREN          reduce using rule 214 (DotDotDot -> DDD NType .)


state 354

    (112) ArgList -> ArgList LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 424


state 355

    (142) myType -> myType COMMA . NewType
    (231) NewType -> . TYPE

    TYPE            shift and go to state 61

    NewType                        shift and go to state 425

state 356

    (118) FuncRes -> LEFT_OR OArgTypeListOComma . OR_RIGHT

    OR_RIGHT        shift and go to state 426


state 357

    (114) FuncBody -> LBRACE . cmtlist StmtList cmtlist funcrevmarker RBRACE
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    LBRACE          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    SEMICOL         reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 427

state 358

    (106) FuncDecl -> FUNCTION funcmarker FuncDecl_ FuncBody .

    SEMICOL         reduce using rule 106 (FuncDecl -> FUNCTION funcmarker FuncDecl_ FuncBody .)


state 359

    (109) FuncDecl_ -> LEFT_OR OArgTypeListOComma . OR_RIGHT IDENTIFIER ArgList FuncRes

    OR_RIGHT        shift and go to state 428


state 360

    (108) FuncDecl_ -> IDENTIFIER ArgList . FuncRes
    (112) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (116) FuncRes -> .
    (117) FuncRes -> . FuncRetType
    (118) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (136) FuncRetType -> . FuncType
    (137) FuncRetType -> . OtherType
    (138) FuncRetType -> . PtrType
    (139) FuncRetType -> . DotName
    (140) FuncRetType -> . myType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (141) myType -> . NewType
    (142) myType -> . myType COMMA NewType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER
    (231) NewType -> . TYPE

    LPAREN          shift and go to state 252
    LBRACE          reduce using rule 116 (FuncRes -> .)
    SEMICOL         reduce using rule 116 (FuncRes -> .)
    LEFT_OR         shift and go to state 259
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113
    TYPE            shift and go to state 61

    StructType                     shift and go to state 56
    DotName                        shift and go to state 260
    Name                           shift and go to state 227
    FuncType                       shift and go to state 253
    OtherType                      shift and go to state 257
    InterfaceType                  shift and go to state 15
    FuncRes                        shift and go to state 429
    myType                         shift and go to state 254
    PtrType                        shift and go to state 255
    ChannelType                    shift and go to state 35
    FuncRetType                    shift and go to state 261
    NewType                        shift and go to state 256

state 361

    (71) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt . SEMICOL OSimpleStmt

    SEMICOL         shift and go to state 430


state 362

    (68) RangeStmt -> ExprList EQUAL RANGE . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 431
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 363

    (69) RangeStmt -> ExprList COLONEQ RANGE . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 432
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 364

    (67) LoopBody -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    LBRACE          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    SEMICOL         reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 433

state 365

    (74) ForBody -> ForHeader formarker LoopBody . revmarker
    (63) revmarker -> .

    SEMICOL         reduce using rule 63 (revmarker -> .)

    revmarker                      shift and go to state 434

state 366

    (122) InterfaceDeclList -> InterfaceDeclList SEMICOL . InterfaceDecl
    (148) OSemi -> SEMICOL .
    (129) InterfaceDecl -> . NewName InDecl
    (130) InterfaceDecl -> . IDENTIFIER
    (131) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (134) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 148 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 275
    LPAREN          shift and go to state 274

    InterfaceDecl                  shift and go to state 435
    NewName                        shift and go to state 273

state 367

    (104) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi . RBRACE

    RBRACE          shift and go to state 436


state 368

    (132) InDecl -> LPAREN . OArgTypeListOComma RPAREN FuncRes
    (197) OArgTypeListOComma -> .
    (198) OArgTypeListOComma -> . ArgTypeList OComma
    (195) ArgTypeList -> . ArgType
    (196) ArgTypeList -> . ArgTypeList COMMA ArgType
    (191) ArgType -> . NameOrType
    (192) ArgType -> . IDENTIFIER NameOrType
    (193) ArgType -> . IDENTIFIER DotDotDot
    (194) ArgType -> . DotDotDot
    (242) NameOrType -> . NType
    (213) DotDotDot -> . DDD
    (214) DotDotDot -> . DDD NType
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    RPAREN          reduce using rule 197 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 219
    ArgTypeList                    shift and go to state 244
    PtrType                        shift and go to state 221
    ArgType                        shift and go to state 245
    NewType                        shift and go to state 222
    OArgTypeListOComma             shift and go to state 437
    DotDotDot                      shift and go to state 247
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NType                          shift and go to state 250
    DotName                        shift and go to state 223

state 369

    (129) InterfaceDecl -> NewName InDecl .

    SEMICOL         reduce using rule 129 (InterfaceDecl -> NewName InDecl .)
    RBRACE          reduce using rule 129 (InterfaceDecl -> NewName InDecl .)


state 370

    (131) InterfaceDecl -> LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 438


state 371

    (280) ForCompExpr -> LBRACK Expr PIPE RangeStmt . RBRACK

    RBRACK          shift and go to state 439


state 372

    (68) RangeStmt -> ExprList . EQUAL RANGE Expr
    (69) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (160) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 440
    COLONEQ         shift and go to state 441
    COMMA           shift and go to state 107


state 373

    (95) OtherType -> LBRACK OExpr RBRACK NType .

    EQUAL           reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    SEMICOL         reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    RPAREN          reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    LBRACE          reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_ANGLE      reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_LEFT       reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    DDD             reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    COMMA           reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    OR_RIGHT        reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACE          reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLON           reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLONEQ         reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    INTEGER         reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    FLOAT           reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)
    STRING          reduce using rule 95 (OtherType -> LBRACK OExpr RBRACK NType .)


state 374

    (79) IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 79 (IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .)


state 375

    (243) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList . RBRACE
    (66) CaseBlockList -> CaseBlockList . CaseBlock
    (64) CaseBlock -> . Case StmtList
    (57) Case -> . CASE ExprOrTypeList COLON
    (58) Case -> . CASE ExprOrTypeList EQUAL Expr COLON
    (59) Case -> . CASE ExprOrTypeList COLONEQ Expr COLON
    (60) Case -> . DEFAULT COLON

    RBRACE          shift and go to state 444
    CASE            shift and go to state 443
    DEFAULT         shift and go to state 445

    Case                           shift and go to state 442
    CaseBlock                      shift and go to state 446

state 376

    (227) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 227 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 377

    (235) Keyval -> Expr COLON . CompLitExpr
    (238) CompLitExpr -> . Expr
    (239) CompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    LEFT_LEFT       shift and go to state 449
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 448
    PseudoCall                     shift and go to state 38
    CompLitExpr                    shift and go to state 447
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 378

    (237) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 450


state 379

    (185) KeyvalList -> KeyvalList COMMA . Keyval
    (186) KeyvalList -> KeyvalList COMMA . BareCompLitExpr
    (146) OComma -> COMMA .
    (235) Keyval -> . Expr COLON CompLitExpr
    (236) BareCompLitExpr -> . Expr
    (237) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 146 (OComma -> COMMA .)
    LEFT_LEFT       shift and go to state 284
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 451
    BareCompLitExpr                shift and go to state 452
    PExpr                          shift and go to state 60

state 380

    (188) BracedKeyvalList -> KeyvalList OComma .

    RIGHT_RIGHT     reduce using rule 188 (BracedKeyvalList -> KeyvalList OComma .)


state 381

    (170) DeclList -> DeclList cmtlist Declaration SEMICOL .

    COMMENT         reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANT        reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    VAR             reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FUNCTION        reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    BREAK           reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONTINUE        reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    GOTO            reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    RETURN          reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TYPE            reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FOR             reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    SWITCH          reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IF              reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANTS       reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LMINUS          reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LBRACK          reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRUCT          reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTERFACE       reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CHAN            reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    AMPERS          reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    NOT             reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TIMES           reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    PLUS            reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    MINUS           reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    XOR             reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LPAREN          reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTEGER         reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FLOAT           reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRING          reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    $end            reduce using rule 170 (DeclList -> DeclList cmtlist Declaration SEMICOL .)


state 382

    (8) Imports -> Imports cmtlist Import SEMICOL .

    COMMENT         reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IMPORT          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANT        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    VAR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FUNCTION        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FALLTHROUGH     reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    BREAK           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONTINUE        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    GOTO            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    RETURN          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    TYPE            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FOR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    SWITCH          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IF              reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANTS       reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IDENTIFIER      reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LMINUS          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LBRACK          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    STRUCT          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    INTERFACE       reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CHAN            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    AMPERS          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    NOT             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    TIMES           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    PLUS            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    MINUS           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    XOR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LPAREN          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    INTEGER         reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FLOAT           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    STRING          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    $end            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)


state 383

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .
    (170) DeclList -> DeclList cmtlist . Declaration SEMICOL
    (285) cmtlist -> cmtlist . COMMENT
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (106) FuncDecl -> . FUNCTION funcmarker FuncDecl_ FuncBody
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 2 (SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .)
    COMMENT         shift and go to state 4
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    NewType                        shift and go to state 65
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    IfStmt                         shift and go to state 12
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 287
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 384

    (222) PExprNoParen -> PExpr LBRACK Expr RBRACK .

    DOT             reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACK          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEFT_LEFT       reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LPAREN          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDE          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MOD             reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL             reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR             reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPERS          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAR          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMES           reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUS            reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUS           reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    XOR             reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OR              reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQEQ            reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    NOTEQ           reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEQ             reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GEQ             reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GREAT           reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LESS            reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPAMP          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OROR            reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COMMA           reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SEMICOL         reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RPAREN          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACE          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSEQ          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSEQ         reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMESEQ         reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDEEQ        reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MODEQ           reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OREQ            reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPEQ           reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    CAREQ           reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAREQ        reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSPLUS        reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSMIN        reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQUAL           reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLONEQ         reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DDD             reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PIPE            reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACK          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_ANGLE     reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACE          reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLON           reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_RIGHT     reduce using rule 222 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)


state 385

    (223) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr RBRACK
    (224) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr COLON OExpr RBRACK
    (153) OExpr -> .
    (154) OExpr -> . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 153 (OExpr -> .)
    COLON           reduce using rule 153 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 342
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 453
    PExpr                          shift and go to state 60

state 386

    (282) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma . RPAREN

    RPAREN          shift and go to state 454


state 387

    (162) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (146) OComma -> COMMA .
    (240) ExprOrType -> . Expr
    (241) ExprOrType -> . NonExprType
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (92) NonExprType -> . FuncType
    (93) NonExprType -> . OtherType
    (94) NonExprType -> . TIMES NonExprType
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (157) FuncLiteralDecl -> . FuncType

    RPAREN          reduce using rule 146 (OComma -> COMMA .)
    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 455
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 388

    (283) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD . OComma RPAREN
    (145) OComma -> .
    (146) OComma -> . COMMA

    RPAREN          reduce using rule 145 (OComma -> .)
    COMMA           shift and go to state 328

    OComma                         shift and go to state 456

state 389

    (228) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 228 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 390

    (221) PExprNoParen -> PExpr DOT LPAREN NewType . RPAREN

    RPAREN          shift and go to state 457


state 391

    (220) PExprNoParen -> PExpr DOT LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 458


state 392

    (176) TypeDeclList -> TypeDeclList SEMICOL . TypeDecl
    (148) OSemi -> SEMICOL .
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    RPAREN          reduce using rule 148 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 164

    TypeDeclName                   shift and go to state 163
    TypeDecl                       shift and go to state 459

state 393

    (29) CommonDecl -> NewType LPAREN TypeDeclList OSemi . RPAREN

    RPAREN          shift and go to state 460


state 394

    (80) IfStmt -> IF IfHeader ifmarker LoopBody . revmarker ElseIfList
    (63) revmarker -> .

    ELSE            reduce using rule 63 (revmarker -> .)
    SEMICOL         reduce using rule 63 (revmarker -> .)

    revmarker                      shift and go to state 461

state 395

    (128) StructDecl -> TIMES LPAREN . Embed RPAREN OLiteral
    (168) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 397

    Embed                          shift and go to state 462

state 396

    (126) StructDecl -> TIMES Embed . OLiteral
    (163) OLiteral -> .
    (164) OLiteral -> . Literal
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING

    SEMICOL         reduce using rule 163 (OLiteral -> .)
    RBRACE          reduce using rule 163 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 463
    Literal                        shift and go to state 404

state 397

    (168) Embed -> IDENTIFIER .

    RPAREN          reduce using rule 168 (Embed -> IDENTIFIER .)
    INTEGER         reduce using rule 168 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 168 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 168 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 168 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 168 (Embed -> IDENTIFIER .)


state 398

    (127) StructDecl -> LPAREN TIMES . Embed RPAREN OLiteral
    (168) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 397

    Embed                          shift and go to state 464

state 399

    (125) StructDecl -> LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 465


state 400

    (182) NewNameList -> NewNameList COMMA . NewName
    (134) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 466

state 401

    (123) StructDecl -> NewNameList NType . OLiteral
    (163) OLiteral -> .
    (164) OLiteral -> . Literal
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING

    SEMICOL         reduce using rule 163 (OLiteral -> .)
    RBRACE          reduce using rule 163 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    Literal                        shift and go to state 404
    OLiteral                       shift and go to state 467

state 402

    (120) StructDeclList -> StructDeclList SEMICOL . StructDecl
    (148) OSemi -> SEMICOL .
    (123) StructDecl -> . NewNameList NType OLiteral
    (124) StructDecl -> . Embed OLiteral
    (125) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (126) StructDecl -> . TIMES Embed OLiteral
    (127) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (128) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (181) NewNameList -> . NewName
    (182) NewNameList -> . NewNameList COMMA NewName
    (168) Embed -> . IDENTIFIER
    (134) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 148 (OSemi -> SEMICOL .)
    LPAREN          shift and go to state 321
    TIMES           shift and go to state 320
    IDENTIFIER      shift and go to state 324

    NewName                        shift and go to state 318
    StructDecl                     shift and go to state 468
    NewNameList                    shift and go to state 322
    Embed                          shift and go to state 325

state 403

    (102) StructType -> STRUCT LBRACE StructDeclList OSemi . RBRACE

    RBRACE          shift and go to state 469


state 404

    (164) OLiteral -> Literal .

    SEMICOL         reduce using rule 164 (OLiteral -> Literal .)
    RBRACE          reduce using rule 164 (OLiteral -> Literal .)


state 405

    (124) StructDecl -> Embed OLiteral .

    SEMICOL         reduce using rule 124 (StructDecl -> Embed OLiteral .)
    RBRACE          reduce using rule 124 (StructDecl -> Embed OLiteral .)


state 406

    (226) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .

    DOT             reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACK          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEFT_LEFT       reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LPAREN          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDE          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MOD             reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL             reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR             reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPERS          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAR          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMES           reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUS            reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUS           reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    XOR             reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OR              reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQEQ            reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    NOTEQ           reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEQ             reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GEQ             reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GREAT           reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LESS            reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPAMP          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OROR            reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COMMA           reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SEMICOL         reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RPAREN          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACE          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSEQ          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSEQ         reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMESEQ         reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDEEQ        reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MODEQ           reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OREQ            reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPEQ           reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    CAREQ           reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL_ASSIGN      reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR_ASSIGN      reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAREQ        reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSPLUS        reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSMIN        reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQUAL           reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLONEQ         reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DDD             reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PIPE            reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACK          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_ANGLE     reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACE          reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLON           reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_RIGHT     reduce using rule 226 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)


state 407

    (61) CompoundStmt -> LBRACE compundmarker cmtlist . StmtList cmtlist revmarker RBRACE
    (285) cmtlist -> cmtlist . COMMENT
    (179) StmtList -> . Stmt SEMICOL
    (180) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 470
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 332
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 408

    (14) ImportStmtList -> ImportStmtList SEMICOL ImportStmt .

    SEMICOL         reduce using rule 14 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)
    RPAREN          reduce using rule 14 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)


state 409

    (10) Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .

    SEMICOL         reduce using rule 10 (Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .)


state 410

    (179) StmtList -> Stmt SEMICOL .

    RBRACE          reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    COMMENT         reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    LBRACE          reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    CONSTANT        reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    VAR             reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    BREAK           reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    CONTINUE        reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    GOTO            reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    RETURN          reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    TYPE            reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    FOR             reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    SWITCH          reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    IF              reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    CONSTANTS       reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    LMINUS          reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    LBRACK          reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    STRUCT          reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    INTERFACE       reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    CHAN            reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    AMPERS          reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    NOT             reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    TIMES           reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    PLUS            reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    MINUS           reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    XOR             reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    LPAREN          reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    INTEGER         reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    FLOAT           reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    STRING          reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    FUNCTION        reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    SEMICOL         reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    CASE            reduce using rule 179 (StmtList -> Stmt SEMICOL .)
    DEFAULT         reduce using rule 179 (StmtList -> Stmt SEMICOL .)


state 411

    (158) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist . RBRACE
    (180) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (285) cmtlist -> cmtlist . COMMENT
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 472
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    NewName                        shift and go to state 34
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 471
    NewType                        shift and go to state 65
    NonDeclStmt                    shift and go to state 201
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    Prec4Expr_                     shift and go to state 28
    CompoundStmt                   shift and go to state 198

state 412

    (172) VarDeclList -> VarDeclList SEMICOL VarDecl .

    SEMICOL         reduce using rule 172 (VarDeclList -> VarDeclList SEMICOL VarDecl .)
    RPAREN          reduce using rule 172 (VarDeclList -> VarDeclList SEMICOL VarDecl .)


state 413

    (26) CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 26 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)


state 414

    (144) DotName -> Name DOT IDENTIFIER .

    COMMA           reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    RPAREN          reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    OR_RIGHT        reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    EQUAL           reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    SEMICOL         reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    RBRACE          reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    LBRACE          reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    DDD             reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    COLON           reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    COLONEQ         reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    INTEGER         reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    FLOAT           reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)
    STRING          reduce using rule 144 (DotName -> Name DOT IDENTIFIER .)


state 415

    (32) VarDecl -> DeclNameList NType EQUAL ExprList .
    (160) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 32 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 32 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 107


state 416

    (90) NType -> LPAREN NType RPAREN .

    COMMA           reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    OR_RIGHT        reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    INTEGER         reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    FLOAT           reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    STRING          reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    SEMICOL         reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    RBRACE          reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    RPAREN          reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    EQUAL           reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    LEFT_ANGLE      reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    LBRACE          reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    DDD             reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    COLON           reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    COLONEQ         reduce using rule 90 (NType -> LPAREN NType RPAREN .)
    LEFT_LEFT       reduce using rule 90 (NType -> LPAREN NType RPAREN .)


state 417

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .

    SEMICOL         reduce using rule 22 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)


state 418

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList . OSemi RPAREN
    (174) ConstDeclList -> ConstDeclList . SEMICOL ConstDecl1
    (147) OSemi -> .
    (148) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 474
    RPAREN          reduce using rule 147 (OSemi -> .)

    OSemi                          shift and go to state 473

state 419

    (38) ConstDecl1 -> DeclNameList .
    (34) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (35) ConstDecl -> DeclNameList . NType
    (36) ConstDecl -> DeclNameList . EQUAL ExprList
    (178) DeclNameList -> DeclNameList . COMMA DeclName
    (86) NType -> . FuncType
    (87) NType -> . OtherType
    (88) NType -> . PtrType
    (89) NType -> . DotName
    (90) NType -> . LPAREN NType RPAREN
    (91) NType -> . NewType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (231) NewType -> . TYPE
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 38 (ConstDecl1 -> DeclNameList .)
    RPAREN          reduce using rule 38 (ConstDecl1 -> DeclNameList .)
    EQUAL           shift and go to state 236
    COMMA           shift and go to state 226
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    NewType                        shift and go to state 222
    FuncType                       shift and go to state 219
    NType                          shift and go to state 237
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    Name                           shift and go to state 227

state 420

    (173) ConstDeclList -> ConstDecl1 .

    SEMICOL         reduce using rule 173 (ConstDeclList -> ConstDecl1 .)
    RPAREN          reduce using rule 173 (ConstDeclList -> ConstDecl1 .)


state 421

    (37) ConstDecl1 -> ConstDecl .

    SEMICOL         reduce using rule 37 (ConstDecl1 -> ConstDecl .)
    RPAREN          reduce using rule 37 (ConstDecl1 -> ConstDecl .)


state 422

    (34) ConstDecl -> DeclNameList NType EQUAL ExprList .
    (160) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 34 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 34 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 107


state 423

    (196) ArgTypeList -> ArgTypeList COMMA ArgType .

    COMMA           reduce using rule 196 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    OR_RIGHT        reduce using rule 196 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    RPAREN          reduce using rule 196 (ArgTypeList -> ArgTypeList COMMA ArgType .)


state 424

    (112) ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    CHAN            reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LMINUS          reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 112 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)


state 425

    (142) myType -> myType COMMA NewType .

    COMMA           reduce using rule 142 (myType -> myType COMMA NewType .)
    SEMICOL         reduce using rule 142 (myType -> myType COMMA NewType .)
    RBRACE          reduce using rule 142 (myType -> myType COMMA NewType .)
    LBRACE          reduce using rule 142 (myType -> myType COMMA NewType .)
    LEFT_ANGLE      reduce using rule 142 (myType -> myType COMMA NewType .)
    RPAREN          reduce using rule 142 (myType -> myType COMMA NewType .)
    EQUAL           reduce using rule 142 (myType -> myType COMMA NewType .)
    DDD             reduce using rule 142 (myType -> myType COMMA NewType .)
    COLON           reduce using rule 142 (myType -> myType COMMA NewType .)
    COLONEQ         reduce using rule 142 (myType -> myType COMMA NewType .)
    OR_RIGHT        reduce using rule 142 (myType -> myType COMMA NewType .)
    LEFT_LEFT       reduce using rule 142 (myType -> myType COMMA NewType .)
    INTEGER         reduce using rule 142 (myType -> myType COMMA NewType .)
    FLOAT           reduce using rule 142 (myType -> myType COMMA NewType .)
    STRING          reduce using rule 142 (myType -> myType COMMA NewType .)


state 426

    (118) FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .

    LBRACE          reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    SEMICOL         reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACE          reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_ANGLE      reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RPAREN          reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    EQUAL           reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COMMA           reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    DDD             reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLON           reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLONEQ         reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    OR_RIGHT        reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_LEFT       reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    INTEGER         reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    FLOAT           reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    STRING          reduce using rule 118 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)


state 427

    (114) FuncBody -> LBRACE cmtlist . StmtList cmtlist funcrevmarker RBRACE
    (285) cmtlist -> cmtlist . COMMENT
    (179) StmtList -> . Stmt SEMICOL
    (180) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 475
    CommonDecl                     shift and go to state 199
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 332
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ConvType                       shift and go to state 11
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 428

    (109) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT . IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 476


state 429

    (108) FuncDecl_ -> IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 108 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 108 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)


state 430

    (71) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL . OSimpleStmt
    (149) OSimpleStmt -> .
    (150) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    LBRACE          reduce using rule 149 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 477
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 431

    (68) RangeStmt -> ExprList EQUAL RANGE Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 68 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    LBRACE          reduce using rule 68 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    OROR            shift and go to state 166


state 432

    (69) RangeStmt -> ExprList COLONEQ RANGE Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 69 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    LBRACE          reduce using rule 69 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    OROR            shift and go to state 166


state 433

    (67) LoopBody -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (285) cmtlist -> cmtlist . COMMENT
    (179) StmtList -> . Stmt SEMICOL
    (180) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 478
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 332
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 434

    (74) ForBody -> ForHeader formarker LoopBody revmarker .

    SEMICOL         reduce using rule 74 (ForBody -> ForHeader formarker LoopBody revmarker .)


state 435

    (122) InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .

    SEMICOL         reduce using rule 122 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)
    RBRACE          reduce using rule 122 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)


state 436

    (104) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .

    COMMA           reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LBRACE          reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLON           reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    DDD             reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    STRING          reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 104 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)


state 437

    (132) InDecl -> LPAREN OArgTypeListOComma . RPAREN FuncRes

    RPAREN          shift and go to state 479


state 438

    (131) InterfaceDecl -> LPAREN IDENTIFIER RPAREN .

    SEMICOL         reduce using rule 131 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)
    RBRACE          reduce using rule 131 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)


state 439

    (280) ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .

    DOT             reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACK          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEFT_LEFT       reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LPAREN          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDE          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MOD             reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL             reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR             reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPERS          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAR          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMES           reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUS            reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUS           reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    XOR             reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OR              reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQEQ            reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    NOTEQ           reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEQ             reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GEQ             reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GREAT           reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LESS            reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPAMP          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OROR            reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACE          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACK          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SEMICOL         reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RPAREN          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSEQ          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSEQ         reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMESEQ         reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDEEQ        reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MODEQ           reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OREQ            reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPEQ           reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    CAREQ           reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL_ASSIGN      reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR_ASSIGN      reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAREQ        reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSPLUS        reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSMIN        reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQUAL           reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLONEQ         reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COMMA           reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PIPE            reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_ANGLE     reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACE          reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLON           reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_RIGHT     reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DDD             reduce using rule 280 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)


state 440

    (68) RangeStmt -> ExprList EQUAL . RANGE Expr

    RANGE           shift and go to state 362


state 441

    (69) RangeStmt -> ExprList COLONEQ . RANGE Expr

    RANGE           shift and go to state 363


state 442

    (64) CaseBlock -> Case . StmtList
    (179) StmtList -> . Stmt SEMICOL
    (180) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 480
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 332
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 443

    (57) Case -> CASE . ExprOrTypeList COLON
    (58) Case -> CASE . ExprOrTypeList EQUAL Expr COLON
    (59) Case -> CASE . ExprOrTypeList COLONEQ Expr COLON
    (161) ExprOrTypeList -> . ExprOrType
    (162) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (240) ExprOrType -> . Expr
    (241) ExprOrType -> . NonExprType
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (92) NonExprType -> . FuncType
    (93) NonExprType -> . OtherType
    (94) NonExprType -> . TIMES NonExprType
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    ExprOrTypeList                 shift and go to state 481
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 293
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 444

    (243) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .

    SEMICOL         reduce using rule 243 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)


state 445

    (60) Case -> DEFAULT . COLON

    COLON           shift and go to state 482


state 446

    (66) CaseBlockList -> CaseBlockList CaseBlock .

    RBRACE          reduce using rule 66 (CaseBlockList -> CaseBlockList CaseBlock .)
    CASE            reduce using rule 66 (CaseBlockList -> CaseBlockList CaseBlock .)
    DEFAULT         reduce using rule 66 (CaseBlockList -> CaseBlockList CaseBlock .)


state 447

    (235) Keyval -> Expr COLON CompLitExpr .

    COMMA           reduce using rule 235 (Keyval -> Expr COLON CompLitExpr .)
    RIGHT_RIGHT     reduce using rule 235 (Keyval -> Expr COLON CompLitExpr .)


state 448

    (238) CompLitExpr -> Expr .
    (267) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 238 (CompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 238 (CompLitExpr -> Expr .)
    OROR            shift and go to state 166


state 449

    (239) CompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (187) BracedKeyvalList -> .
    (188) BracedKeyvalList -> . KeyvalList OComma
    (183) KeyvalList -> . Keyval
    (184) KeyvalList -> . BareCompLitExpr
    (185) KeyvalList -> . KeyvalList COMMA Keyval
    (186) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (235) Keyval -> . Expr COLON CompLitExpr
    (236) BareCompLitExpr -> . Expr
    (237) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 187 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 284
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 281
    BareCompLitExpr                shift and go to state 286
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 483

state 450

    (237) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 237 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 237 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 451

    (185) KeyvalList -> KeyvalList COMMA Keyval .

    COMMA           reduce using rule 185 (KeyvalList -> KeyvalList COMMA Keyval .)
    RIGHT_RIGHT     reduce using rule 185 (KeyvalList -> KeyvalList COMMA Keyval .)


state 452

    (186) KeyvalList -> KeyvalList COMMA BareCompLitExpr .

    COMMA           reduce using rule 186 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 186 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)


state 453

    (223) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . RBRACK
    (224) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . COLON OExpr RBRACK

    RBRACK          shift and go to state 484
    COLON           shift and go to state 485


state 454

    (282) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .

    DOT             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACK          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEFT_LEFT       reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LPAREN          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDE          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MOD             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPERS          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAR          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMES           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUS            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUS           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    XOR             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OR              reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQEQ            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    NOTEQ           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEQ             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GEQ             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GREAT           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LESS            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPAMP          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OROR            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SEMICOL         reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACE          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSEQ          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSEQ         reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMESEQ         reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDEEQ        reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MODEQ           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OREQ            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPEQ           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    CAREQ           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAREQ        reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSPLUS        reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSMIN        reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQUAL           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLONEQ         reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COMMA           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PIPE            reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACK          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RPAREN          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACE          reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLON           reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DDD             reduce using rule 282 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)


state 455

    (162) ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .

    COLON           reduce using rule 162 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    EQUAL           reduce using rule 162 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLONEQ         reduce using rule 162 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COMMA           reduce using rule 162 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    DDD             reduce using rule 162 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    RPAREN          reduce using rule 162 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)


state 456

    (283) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma . RPAREN

    RPAREN          shift and go to state 486


state 457

    (221) PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .

    DOT             reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LBRACK          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LEFT_LEFT       reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LPAREN          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DIVIDE          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MOD             reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHL             reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHR             reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPERS          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPCAR          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    TIMES           reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUS            reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUS           reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    XOR             reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OR              reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    EQEQ            reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    NOTEQ           reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LEQ             reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    GEQ             reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    GREAT           reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LESS            reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPAMP          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OROR            reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COMMA           reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SEMICOL         reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RPAREN          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LBRACE          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUSEQ          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUSEQ         reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    TIMESEQ         reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DIVIDEEQ        reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MODEQ           reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OREQ            reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPEQ           reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    CAREQ           reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHL_ASSIGN      reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHR_ASSIGN      reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPCAREQ        reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUSPLUS        reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUSMIN        reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    EQUAL           reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COLONEQ         reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DDD             reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PIPE            reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RBRACK          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RIGHT_ANGLE     reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RBRACE          reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COLON           reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RIGHT_RIGHT     reduce using rule 221 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)


state 458

    (220) PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 220 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)


state 459

    (176) TypeDeclList -> TypeDeclList SEMICOL TypeDecl .

    SEMICOL         reduce using rule 176 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)
    RPAREN          reduce using rule 176 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)


state 460

    (29) CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 29 (CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN .)


state 461

    (80) IfStmt -> IF IfHeader ifmarker LoopBody revmarker . ElseIfList
    (82) ElseIfList -> .
    (83) ElseIfList -> . ElseIf ElseIfList
    (84) ElseIfList -> . Else
    (81) ElseIf -> . ELSE IF IfHeader ifmarker LoopBody revmarker
    (85) Else -> . ELSE CompoundStmt

    SEMICOL         reduce using rule 82 (ElseIfList -> .)
    ELSE            shift and go to state 488

    ElseIfList                     shift and go to state 487
    ElseIf                         shift and go to state 489
    Else                           shift and go to state 490

state 462

    (128) StructDecl -> TIMES LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 491


state 463

    (126) StructDecl -> TIMES Embed OLiteral .

    SEMICOL         reduce using rule 126 (StructDecl -> TIMES Embed OLiteral .)
    RBRACE          reduce using rule 126 (StructDecl -> TIMES Embed OLiteral .)


state 464

    (127) StructDecl -> LPAREN TIMES Embed . RPAREN OLiteral

    RPAREN          shift and go to state 492


state 465

    (125) StructDecl -> LPAREN Embed RPAREN . OLiteral
    (163) OLiteral -> .
    (164) OLiteral -> . Literal
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING

    SEMICOL         reduce using rule 163 (OLiteral -> .)
    RBRACE          reduce using rule 163 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 493
    Literal                        shift and go to state 404

state 466

    (182) NewNameList -> NewNameList COMMA NewName .

    COMMA           reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)
    LPAREN          reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)
    FUNCTION        reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)
    LBRACK          reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)
    TIMES           reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)
    TYPE            reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)
    STRUCT          reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)
    INTERFACE       reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)
    CHAN            reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)
    LMINUS          reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)
    IDENTIFIER      reduce using rule 182 (NewNameList -> NewNameList COMMA NewName .)


state 467

    (123) StructDecl -> NewNameList NType OLiteral .

    SEMICOL         reduce using rule 123 (StructDecl -> NewNameList NType OLiteral .)
    RBRACE          reduce using rule 123 (StructDecl -> NewNameList NType OLiteral .)


state 468

    (120) StructDeclList -> StructDeclList SEMICOL StructDecl .

    SEMICOL         reduce using rule 120 (StructDeclList -> StructDeclList SEMICOL StructDecl .)
    RBRACE          reduce using rule 120 (StructDeclList -> StructDeclList SEMICOL StructDecl .)


state 469

    (102) StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .

    LBRACE          reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COMMA           reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    STRING          reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    DDD             reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLON           reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 102 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)


state 470

    (61) CompoundStmt -> LBRACE compundmarker cmtlist StmtList . cmtlist revmarker RBRACE
    (180) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    LBRACE          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    RBRACE          reduce using rule 284 (cmtlist -> .)
    SEMICOL         reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 494

state 471

    (180) StmtList -> StmtList cmtlist Stmt . SEMICOL

    SEMICOL         shift and go to state 495


state 472

    (158) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .

    DOT             reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACK          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEFT_LEFT       reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LPAREN          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDE          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MOD             reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL             reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR             reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPERS          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAR          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMES           reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUS            reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUS           reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    XOR             reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OR              reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQEQ            reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    NOTEQ           reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEQ             reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GEQ             reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GREAT           reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LESS            reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPAMP          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSEQ          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSEQ         reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMESEQ         reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDEEQ        reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MODEQ           reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OREQ            reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPEQ           reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    CAREQ           reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL_ASSIGN      reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR_ASSIGN      reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAREQ        reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSPLUS        reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSMIN        reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OROR            reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SEMICOL         reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQUAL           reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLONEQ         reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COMMA           reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACE          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PIPE            reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACK          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RPAREN          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_ANGLE     reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACE          reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLON           reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_RIGHT     reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DDD             reduce using rule 158 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)


state 473

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi . RPAREN

    RPAREN          shift and go to state 496


state 474

    (174) ConstDeclList -> ConstDeclList SEMICOL . ConstDecl1
    (148) OSemi -> SEMICOL .
    (37) ConstDecl1 -> . ConstDecl
    (38) ConstDecl1 -> . DeclNameList
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (177) DeclNameList -> . DeclName
    (178) DeclNameList -> . DeclNameList COMMA DeclName
    (189) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 148 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 102

    ConstDecl1                     shift and go to state 497
    DeclName                       shift and go to state 103
    DeclNameList                   shift and go to state 419
    ConstDecl                      shift and go to state 421

state 475

    (114) FuncBody -> LBRACE cmtlist StmtList . cmtlist funcrevmarker RBRACE
    (180) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 284 (cmtlist -> .)
    LBRACE          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    RBRACE          reduce using rule 284 (cmtlist -> .)
    SEMICOL         reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 498

state 476

    (109) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER . ArgList FuncRes
    (111) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (112) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 128

    ArgList                        shift and go to state 499

state 477

    (71) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 71 (ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .)


state 478

    (67) LoopBody -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (180) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 284 (cmtlist -> .)
    COMMENT         reduce using rule 284 (cmtlist -> .)
    LBRACE          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    SEMICOL         reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 500

state 479

    (132) InDecl -> LPAREN OArgTypeListOComma RPAREN . FuncRes
    (116) FuncRes -> .
    (117) FuncRes -> . FuncRetType
    (118) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (136) FuncRetType -> . FuncType
    (137) FuncRetType -> . OtherType
    (138) FuncRetType -> . PtrType
    (139) FuncRetType -> . DotName
    (140) FuncRetType -> . myType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (141) myType -> . NewType
    (142) myType -> . myType COMMA NewType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER
    (231) NewType -> . TYPE

    SEMICOL         reduce using rule 116 (FuncRes -> .)
    RBRACE          reduce using rule 116 (FuncRes -> .)
    LEFT_OR         shift and go to state 259
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113
    TYPE            shift and go to state 61

    StructType                     shift and go to state 56
    DotName                        shift and go to state 260
    Name                           shift and go to state 227
    FuncType                       shift and go to state 253
    OtherType                      shift and go to state 257
    InterfaceType                  shift and go to state 15
    myType                         shift and go to state 254
    PtrType                        shift and go to state 255
    ChannelType                    shift and go to state 35
    FuncRes                        shift and go to state 501
    FuncRetType                    shift and go to state 261
    NewType                        shift and go to state 256

state 480

    (64) CaseBlock -> Case StmtList .
    (180) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (284) cmtlist -> .
    (285) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 64 (CaseBlock -> Case StmtList .)
    CASE            reduce using rule 64 (CaseBlock -> Case StmtList .)
    DEFAULT         reduce using rule 64 (CaseBlock -> Case StmtList .)
    COMMENT         reduce using rule 284 (cmtlist -> .)
    LBRACE          reduce using rule 284 (cmtlist -> .)
    CONSTANT        reduce using rule 284 (cmtlist -> .)
    VAR             reduce using rule 284 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 284 (cmtlist -> .)
    BREAK           reduce using rule 284 (cmtlist -> .)
    CONTINUE        reduce using rule 284 (cmtlist -> .)
    GOTO            reduce using rule 284 (cmtlist -> .)
    RETURN          reduce using rule 284 (cmtlist -> .)
    TYPE            reduce using rule 284 (cmtlist -> .)
    FOR             reduce using rule 284 (cmtlist -> .)
    SWITCH          reduce using rule 284 (cmtlist -> .)
    IF              reduce using rule 284 (cmtlist -> .)
    CONSTANTS       reduce using rule 284 (cmtlist -> .)
    IDENTIFIER      reduce using rule 284 (cmtlist -> .)
    LMINUS          reduce using rule 284 (cmtlist -> .)
    LBRACK          reduce using rule 284 (cmtlist -> .)
    STRUCT          reduce using rule 284 (cmtlist -> .)
    INTERFACE       reduce using rule 284 (cmtlist -> .)
    CHAN            reduce using rule 284 (cmtlist -> .)
    AMPERS          reduce using rule 284 (cmtlist -> .)
    NOT             reduce using rule 284 (cmtlist -> .)
    TIMES           reduce using rule 284 (cmtlist -> .)
    PLUS            reduce using rule 284 (cmtlist -> .)
    MINUS           reduce using rule 284 (cmtlist -> .)
    XOR             reduce using rule 284 (cmtlist -> .)
    LPAREN          reduce using rule 284 (cmtlist -> .)
    INTEGER         reduce using rule 284 (cmtlist -> .)
    FLOAT           reduce using rule 284 (cmtlist -> .)
    STRING          reduce using rule 284 (cmtlist -> .)
    FUNCTION        reduce using rule 284 (cmtlist -> .)
    SEMICOL         reduce using rule 284 (cmtlist -> .)

    cmtlist                        shift and go to state 502

state 481

    (57) Case -> CASE ExprOrTypeList . COLON
    (58) Case -> CASE ExprOrTypeList . EQUAL Expr COLON
    (59) Case -> CASE ExprOrTypeList . COLONEQ Expr COLON
    (162) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType

    COLON           shift and go to state 505
    EQUAL           shift and go to state 503
    COLONEQ         shift and go to state 504
    COMMA           shift and go to state 506


state 482

    (60) Case -> DEFAULT COLON .

    LBRACE          reduce using rule 60 (Case -> DEFAULT COLON .)
    CONSTANT        reduce using rule 60 (Case -> DEFAULT COLON .)
    VAR             reduce using rule 60 (Case -> DEFAULT COLON .)
    FALLTHROUGH     reduce using rule 60 (Case -> DEFAULT COLON .)
    BREAK           reduce using rule 60 (Case -> DEFAULT COLON .)
    CONTINUE        reduce using rule 60 (Case -> DEFAULT COLON .)
    GOTO            reduce using rule 60 (Case -> DEFAULT COLON .)
    RETURN          reduce using rule 60 (Case -> DEFAULT COLON .)
    TYPE            reduce using rule 60 (Case -> DEFAULT COLON .)
    FOR             reduce using rule 60 (Case -> DEFAULT COLON .)
    SWITCH          reduce using rule 60 (Case -> DEFAULT COLON .)
    IF              reduce using rule 60 (Case -> DEFAULT COLON .)
    CONSTANTS       reduce using rule 60 (Case -> DEFAULT COLON .)
    IDENTIFIER      reduce using rule 60 (Case -> DEFAULT COLON .)
    LMINUS          reduce using rule 60 (Case -> DEFAULT COLON .)
    LBRACK          reduce using rule 60 (Case -> DEFAULT COLON .)
    STRUCT          reduce using rule 60 (Case -> DEFAULT COLON .)
    INTERFACE       reduce using rule 60 (Case -> DEFAULT COLON .)
    CHAN            reduce using rule 60 (Case -> DEFAULT COLON .)
    AMPERS          reduce using rule 60 (Case -> DEFAULT COLON .)
    NOT             reduce using rule 60 (Case -> DEFAULT COLON .)
    TIMES           reduce using rule 60 (Case -> DEFAULT COLON .)
    PLUS            reduce using rule 60 (Case -> DEFAULT COLON .)
    MINUS           reduce using rule 60 (Case -> DEFAULT COLON .)
    XOR             reduce using rule 60 (Case -> DEFAULT COLON .)
    LPAREN          reduce using rule 60 (Case -> DEFAULT COLON .)
    INTEGER         reduce using rule 60 (Case -> DEFAULT COLON .)
    FLOAT           reduce using rule 60 (Case -> DEFAULT COLON .)
    STRING          reduce using rule 60 (Case -> DEFAULT COLON .)
    FUNCTION        reduce using rule 60 (Case -> DEFAULT COLON .)
    SEMICOL         reduce using rule 60 (Case -> DEFAULT COLON .)


state 483

    (239) CompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 507


state 484

    (223) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 223 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)


state 485

    (224) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON . OExpr RBRACK
    (153) OExpr -> .
    (154) OExpr -> . Expr
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 153 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 342
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 508
    PExpr                          shift and go to state 60

state 486

    (283) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .

    DOT             reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACK          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEFT_LEFT       reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LPAREN          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDE          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MOD             reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL             reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR             reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPERS          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAR          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMES           reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUS            reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUS           reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    XOR             reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OR              reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQEQ            reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    NOTEQ           reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEQ             reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GEQ             reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GREAT           reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LESS            reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPAMP          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OROR            reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SEMICOL         reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACE          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSEQ          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSEQ         reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMESEQ         reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDEEQ        reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MODEQ           reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OREQ            reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPEQ           reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    CAREQ           reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAREQ        reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSPLUS        reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSMIN        reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQUAL           reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLONEQ         reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COMMA           reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PIPE            reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACK          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RPAREN          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACE          reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLON           reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DDD             reduce using rule 283 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)


state 487

    (80) IfStmt -> IF IfHeader ifmarker LoopBody revmarker ElseIfList .

    SEMICOL         reduce using rule 80 (IfStmt -> IF IfHeader ifmarker LoopBody revmarker ElseIfList .)


state 488

    (81) ElseIf -> ELSE . IF IfHeader ifmarker LoopBody revmarker
    (85) Else -> ELSE . CompoundStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE

    IF              shift and go to state 510
    LBRACE          shift and go to state 200

    CompoundStmt                   shift and go to state 509

state 489

    (83) ElseIfList -> ElseIf . ElseIfList
    (82) ElseIfList -> .
    (83) ElseIfList -> . ElseIf ElseIfList
    (84) ElseIfList -> . Else
    (81) ElseIf -> . ELSE IF IfHeader ifmarker LoopBody revmarker
    (85) Else -> . ELSE CompoundStmt

    SEMICOL         reduce using rule 82 (ElseIfList -> .)
    ELSE            shift and go to state 488

    ElseIfList                     shift and go to state 511
    ElseIf                         shift and go to state 489
    Else                           shift and go to state 490

state 490

    (84) ElseIfList -> Else .

    SEMICOL         reduce using rule 84 (ElseIfList -> Else .)


state 491

    (128) StructDecl -> TIMES LPAREN Embed RPAREN . OLiteral
    (163) OLiteral -> .
    (164) OLiteral -> . Literal
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING

    SEMICOL         reduce using rule 163 (OLiteral -> .)
    RBRACE          reduce using rule 163 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 512
    Literal                        shift and go to state 404

state 492

    (127) StructDecl -> LPAREN TIMES Embed RPAREN . OLiteral
    (163) OLiteral -> .
    (164) OLiteral -> . Literal
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING

    SEMICOL         reduce using rule 163 (OLiteral -> .)
    RBRACE          reduce using rule 163 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 513
    Literal                        shift and go to state 404

state 493

    (125) StructDecl -> LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 125 (StructDecl -> LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 125 (StructDecl -> LPAREN Embed RPAREN OLiteral .)


state 494

    (61) CompoundStmt -> LBRACE compundmarker cmtlist StmtList cmtlist . revmarker RBRACE
    (180) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (285) cmtlist -> cmtlist . COMMENT
    (63) revmarker -> .
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    RBRACE          reduce using rule 63 (revmarker -> .)
    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 471
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    revmarker                      shift and go to state 514
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 495

    (180) StmtList -> StmtList cmtlist Stmt SEMICOL .

    RBRACE          reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    COMMENT         reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACE          reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANT        reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    VAR             reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    BREAK           reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONTINUE        reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    GOTO            reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    RETURN          reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TYPE            reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FOR             reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SWITCH          reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IF              reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANTS       reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LMINUS          reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACK          reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRUCT          reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTERFACE       reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CHAN            reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    AMPERS          reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    NOT             reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TIMES           reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    PLUS            reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    MINUS           reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    XOR             reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LPAREN          reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTEGER         reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FLOAT           reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRING          reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FUNCTION        reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SEMICOL         reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CASE            reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    DEFAULT         reduce using rule 180 (StmtList -> StmtList cmtlist Stmt SEMICOL .)


state 496

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 23 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)


state 497

    (174) ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .

    SEMICOL         reduce using rule 174 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)
    RPAREN          reduce using rule 174 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)


state 498

    (114) FuncBody -> LBRACE cmtlist StmtList cmtlist . funcrevmarker RBRACE
    (180) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (285) cmtlist -> cmtlist . COMMENT
    (115) funcrevmarker -> .
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    RBRACE          reduce using rule 115 (funcrevmarker -> .)
    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    funcrevmarker                  shift and go to state 515
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 471
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ConvType                       shift and go to state 11
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 499

    (109) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList . FuncRes
    (112) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (116) FuncRes -> .
    (117) FuncRes -> . FuncRetType
    (118) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (136) FuncRetType -> . FuncType
    (137) FuncRetType -> . OtherType
    (138) FuncRetType -> . PtrType
    (139) FuncRetType -> . DotName
    (140) FuncRetType -> . myType
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (135) PtrType -> . TIMES NType
    (143) DotName -> . Name
    (144) DotName -> . Name DOT IDENTIFIER
    (141) myType -> . NewType
    (142) myType -> . myType COMMA NewType
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (190) Name -> . IDENTIFIER
    (231) NewType -> . TYPE

    LPAREN          shift and go to state 252
    LBRACE          reduce using rule 116 (FuncRes -> .)
    SEMICOL         reduce using rule 116 (FuncRes -> .)
    LEFT_OR         shift and go to state 259
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113
    TYPE            shift and go to state 61

    StructType                     shift and go to state 56
    DotName                        shift and go to state 260
    Name                           shift and go to state 227
    FuncType                       shift and go to state 253
    OtherType                      shift and go to state 257
    InterfaceType                  shift and go to state 15
    FuncRes                        shift and go to state 516
    myType                         shift and go to state 254
    PtrType                        shift and go to state 255
    ChannelType                    shift and go to state 35
    FuncRetType                    shift and go to state 261
    NewType                        shift and go to state 256

state 500

    (67) LoopBody -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (180) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (285) cmtlist -> cmtlist . COMMENT
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 517
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 471
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 501

    (132) InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .

    SEMICOL         reduce using rule 132 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)
    RBRACE          reduce using rule 132 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)


state 502

    (180) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (285) cmtlist -> cmtlist . COMMENT
    (199) Stmt -> .
    (200) Stmt -> . CompoundStmt
    (201) Stmt -> . CommonDecl
    (202) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (203) NonDeclStmt -> . SimpleStmt
    (204) NonDeclStmt -> . ForStmt
    (205) NonDeclStmt -> . SwitchStmt
    (206) NonDeclStmt -> . IfStmt
    (207) NonDeclStmt -> . LabelName COLON Stmt
    (208) NonDeclStmt -> . FALLTHROUGH
    (209) NonDeclStmt -> . BREAK ONewName
    (210) NonDeclStmt -> . CONTINUE ONewName
    (211) NonDeclStmt -> . GOTO NewName
    (212) NonDeclStmt -> . RETURN OExprList
    (231) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (243) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (80) IfStmt -> . IF IfHeader ifmarker LoopBody revmarker ElseIfList
    (133) LabelName -> . NewName
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (134) NewName -> . IDENTIFIER
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 199 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 471
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 503

    (58) Case -> CASE ExprOrTypeList EQUAL . Expr COLON
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 518
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 504

    (59) Case -> CASE ExprOrTypeList COLONEQ . Expr COLON
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 519
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 505

    (57) Case -> CASE ExprOrTypeList COLON .

    LBRACE          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANT        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    VAR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FALLTHROUGH     reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    BREAK           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONTINUE        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    GOTO            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    RETURN          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    TYPE            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FOR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    SWITCH          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    IF              reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANTS       reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    IDENTIFIER      reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LMINUS          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LBRACK          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    STRUCT          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    INTERFACE       reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CHAN            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    AMPERS          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    NOT             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    TIMES           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    PLUS            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    MINUS           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    XOR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LPAREN          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    INTEGER         reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FLOAT           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    STRING          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FUNCTION        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    SEMICOL         reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)


state 506

    (162) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (240) ExprOrType -> . Expr
    (241) ExprOrType -> . NonExprType
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (92) NonExprType -> . FuncType
    (93) NonExprType -> . OtherType
    (94) NonExprType -> . TIMES NonExprType
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (157) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 455
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 507

    (239) CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 239 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 239 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 508

    (224) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr . RBRACK

    RBRACK          shift and go to state 520


state 509

    (85) Else -> ELSE CompoundStmt .

    SEMICOL         reduce using rule 85 (Else -> ELSE CompoundStmt .)


state 510

    (81) ElseIf -> ELSE IF . IfHeader ifmarker LoopBody revmarker
    (78) IfHeader -> . OSimpleStmt
    (79) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (149) OSimpleStmt -> .
    (150) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (266) Expr -> . Prec2Expr_
    (267) Expr -> . Expr OROR Prec2Expr_
    (268) Expr -> . CONSTANTS
    (269) Expr -> . Chexpr
    (270) Expr -> . Arrayexp
    (159) ExprList -> . Expr
    (160) ExprList -> . ExprList COMMA Expr
    (264) Prec2Expr_ -> . Prec3Expr_
    (265) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (271) Chexpr -> . LMINUS IDENTIFIER
    (272) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (257) Prec3Expr_ -> . Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (259) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (260) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (261) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (262) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (263) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) OtherType -> . LBRACK OExpr RBRACK NType
    (96) OtherType -> . StructType
    (97) OtherType -> . InterfaceType
    (98) OtherType -> . ChannelType
    (252) Prec4Expr_ -> . Prec5Expr_
    (253) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (254) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (255) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (256) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (102) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (103) StructType -> . STRUCT LBRACE RBRACE
    (104) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (105) InterfaceType -> . INTERFACE LBRACE RBRACE
    (99) ChannelType -> . CHAN NewType
    (100) ChannelType -> . CHAN LMINUS NewType
    (101) ChannelType -> . LMINUS CHAN NewType
    (244) Prec5Expr_ -> . UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (247) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (248) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (249) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (250) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (251) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (273) UExpr -> . PExpr
    (274) UExpr -> . AMPERS UExpr
    (275) UExpr -> . NOT UExpr
    (276) UExpr -> . TIMES UExpr
    (277) UExpr -> . PLUS UExpr
    (278) UExpr -> . MINUS UExpr
    (279) UExpr -> . XOR UExpr
    (215) PExpr -> . PExprNoParen
    (216) PExpr -> . LPAREN ExprOrType RPAREN
    (217) PExprNoParen -> . Literal
    (218) PExprNoParen -> . Name
    (219) PExprNoParen -> . PExpr DOT IDENTIFIER
    (220) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (221) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (222) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (223) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (224) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (225) PExprNoParen -> . PseudoCall
    (226) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (227) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (228) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (229) PExprNoParen -> . FuncLiteral
    (230) PExprNoParen -> . ForCompExpr
    (165) Literal -> . INTEGER
    (166) Literal -> . FLOAT
    (167) Literal -> . STRING
    (190) Name -> . IDENTIFIER
    (281) PseudoCall -> . PExpr LPAREN RPAREN
    (282) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (283) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (232) ConvType -> . FuncType
    (233) ConvType -> . OtherType
    (234) CompType -> . OtherType
    (158) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (280) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (110) FuncType -> . FUNCTION ArgList FuncRes
    (157) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 149 (OSimpleStmt -> .)
    LBRACE          reduce using rule 149 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 149
    Prec3Expr_                     shift and go to state 10
    IfHeader                       shift and go to state 521
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    PExpr                          shift and go to state 60

state 511

    (83) ElseIfList -> ElseIf ElseIfList .

    SEMICOL         reduce using rule 83 (ElseIfList -> ElseIf ElseIfList .)


state 512

    (128) StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 128 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 128 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)


state 513

    (127) StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 127 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 127 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)


state 514

    (61) CompoundStmt -> LBRACE compundmarker cmtlist StmtList cmtlist revmarker . RBRACE

    RBRACE          shift and go to state 522


state 515

    (114) FuncBody -> LBRACE cmtlist StmtList cmtlist funcrevmarker . RBRACE

    RBRACE          shift and go to state 523


state 516

    (109) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 109 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 109 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)


state 517

    (67) LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .

    ELSE            reduce using rule 67 (LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)
    SEMICOL         reduce using rule 67 (LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 518

    (58) Case -> CASE ExprOrTypeList EQUAL Expr . COLON
    (267) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 524
    OROR            shift and go to state 166


state 519

    (59) Case -> CASE ExprOrTypeList COLONEQ Expr . COLON
    (267) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 525
    OROR            shift and go to state 166


state 520

    (224) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 224 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)


state 521

    (81) ElseIf -> ELSE IF IfHeader . ifmarker LoopBody revmarker
    (77) ifmarker -> .

    LBRACE          reduce using rule 77 (ifmarker -> .)

    ifmarker                       shift and go to state 526

state 522

    (61) CompoundStmt -> LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE .

    SEMICOL         reduce using rule 61 (CompoundStmt -> LBRACE compundmarker cmtlist StmtList cmtlist revmarker RBRACE .)


state 523

    (114) FuncBody -> LBRACE cmtlist StmtList cmtlist funcrevmarker RBRACE .

    SEMICOL         reduce using rule 114 (FuncBody -> LBRACE cmtlist StmtList cmtlist funcrevmarker RBRACE .)


state 524

    (58) Case -> CASE ExprOrTypeList EQUAL Expr COLON .

    LBRACE          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANT        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    VAR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FALLTHROUGH     reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    BREAK           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONTINUE        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    GOTO            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    RETURN          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TYPE            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FOR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SWITCH          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IF              reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANTS       reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IDENTIFIER      reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LMINUS          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LBRACK          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRUCT          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTERFACE       reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CHAN            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    AMPERS          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    NOT             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TIMES           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    PLUS            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MINUS           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    XOR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LPAREN          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTEGER         reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FLOAT           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRING          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FUNCTION        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SEMICOL         reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)


state 525

    (59) Case -> CASE ExprOrTypeList COLONEQ Expr COLON .

    LBRACE          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANT        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    VAR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FALLTHROUGH     reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    BREAK           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONTINUE        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    GOTO            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    RETURN          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TYPE            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FOR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SWITCH          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IF              reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANTS       reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IDENTIFIER      reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LMINUS          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LBRACK          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRUCT          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTERFACE       reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CHAN            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    AMPERS          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    NOT             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TIMES           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    PLUS            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MINUS           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    XOR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LPAREN          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTEGER         reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FLOAT           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRING          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FUNCTION        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SEMICOL         reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)


state 526

    (81) ElseIf -> ELSE IF IfHeader ifmarker . LoopBody revmarker
    (67) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 364

    LoopBody                       shift and go to state 527

state 527

    (81) ElseIf -> ELSE IF IfHeader ifmarker LoopBody . revmarker
    (63) revmarker -> .

    ELSE            reduce using rule 63 (revmarker -> .)
    SEMICOL         reduce using rule 63 (revmarker -> .)

    revmarker                      shift and go to state 528

state 528

    (81) ElseIf -> ELSE IF IfHeader ifmarker LoopBody revmarker .

    ELSE            reduce using rule 81 (ElseIf -> ELSE IF IfHeader ifmarker LoopBody revmarker .)
    SEMICOL         reduce using rule 81 (ElseIf -> ELSE IF IfHeader ifmarker LoopBody revmarker .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 254 resolved as shift
