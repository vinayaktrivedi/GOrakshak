Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
Rule 3     SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist
Rule 4     SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist
Rule 5     SourceFile -> cmtlist PackageClause cmtlist
Rule 6     PackageClause -> PACKAGE IDENTIFIER SEMICOL
Rule 7     Imports -> Import SEMICOL
Rule 8     Imports -> Imports cmtlist Import SEMICOL
Rule 9     Import -> IMPORT ImportStmt
Rule 10    Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN
Rule 11    Import -> IMPORT LPAREN RPAREN
Rule 12    ImportStmt -> ImportHere STRING
Rule 13    ImportStmtList -> ImportStmt
Rule 14    ImportStmtList -> ImportStmtList SEMICOL ImportStmt
Rule 15    ImportHere -> <empty>
Rule 16    ImportHere -> IDENTIFIER
Rule 17    ImportHere -> DOT
Rule 18    Declaration -> CommonDecl
Rule 19    Declaration -> FuncDecl
Rule 20    Declaration -> NonDeclStmt
Rule 21    CommonDecl -> CONSTANT ConstDecl
Rule 22    CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN
Rule 23    CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
Rule 24    CommonDecl -> CONSTANT LPAREN RPAREN
Rule 25    CommonDecl -> VAR VarDecl
Rule 26    CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN
Rule 27    CommonDecl -> VAR LPAREN RPAREN
Rule 28    CommonDecl -> NewType TypeDecl
Rule 29    CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN
Rule 30    CommonDecl -> NewType LPAREN RPAREN
Rule 31    VarDecl -> DeclNameList NType
Rule 32    VarDecl -> DeclNameList NType EQUAL ExprList
Rule 33    VarDecl -> DeclNameList EQUAL ExprList
Rule 34    ConstDecl -> DeclNameList NType EQUAL ExprList
Rule 35    ConstDecl -> DeclNameList NType
Rule 36    ConstDecl -> DeclNameList EQUAL ExprList
Rule 37    ConstDecl1 -> ConstDecl
Rule 38    ConstDecl1 -> DeclNameList
Rule 39    TypeDeclName -> IDENTIFIER
Rule 40    TypeDecl -> TypeDeclName NType
Rule 41    SimpleStmt -> Expr
Rule 42    SimpleStmt -> Expr PLUSEQ Expr
Rule 43    SimpleStmt -> Expr MINUSEQ Expr
Rule 44    SimpleStmt -> Expr TIMESEQ Expr
Rule 45    SimpleStmt -> Expr DIVIDEEQ Expr
Rule 46    SimpleStmt -> Expr MODEQ Expr
Rule 47    SimpleStmt -> Expr OREQ Expr
Rule 48    SimpleStmt -> Expr AMPEQ Expr
Rule 49    SimpleStmt -> Expr CAREQ Expr
Rule 50    SimpleStmt -> Expr SHL_ASSIGN Expr
Rule 51    SimpleStmt -> Expr SHR_ASSIGN Expr
Rule 52    SimpleStmt -> Expr AMPCAREQ Expr
Rule 53    SimpleStmt -> ExprList EQUAL ExprList
Rule 54    SimpleStmt -> ExprList COLONEQ ExprList
Rule 55    SimpleStmt -> Expr PLUSPLUS
Rule 56    SimpleStmt -> Expr MINUSMIN
Rule 57    Case -> CASE ExprOrTypeList COLON
Rule 58    Case -> CASE ExprOrTypeList EQUAL Expr COLON
Rule 59    Case -> CASE ExprOrTypeList COLONEQ Expr COLON
Rule 60    Case -> DEFAULT COLON
Rule 61    CompoundStmt -> LBRACE marker1 cmtlist StmtList cmtlist RBRACE
Rule 62    CaseBlock -> Case StmtList
Rule 63    CaseBlockList -> <empty>
Rule 64    CaseBlockList -> CaseBlockList CaseBlock
Rule 65    LoopBody -> LBRACE marker1 cmtlist StmtList cmtlist revmarker1 RBRACE
Rule 66    marker1 -> <empty>
Rule 67    revmarker1 -> <empty>
Rule 68    RangeStmt -> ExprList EQUAL RANGE Expr
Rule 69    RangeStmt -> ExprList COLONEQ RANGE Expr
Rule 70    RangeStmt -> RANGE Expr
Rule 71    ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
Rule 72    ForHeader -> OSimpleStmt
Rule 73    ForHeader -> RangeStmt
Rule 74    ForBody -> ForHeader LoopBody
Rule 75    ForStmt -> FOR ForBody
Rule 76    IfHeader -> OSimpleStmt
Rule 77    IfHeader -> OSimpleStmt SEMICOL OSimpleStmt
Rule 78    IfStmt -> IF IfHeader LoopBody ElseIfList
Rule 79    ElseIf -> ELSE IF IfHeader LoopBody
Rule 80    ElseIfList -> <empty>
Rule 81    ElseIfList -> ElseIf ElseIfList
Rule 82    ElseIfList -> Else
Rule 83    Else -> ELSE CompoundStmt
Rule 84    NType -> FuncType
Rule 85    NType -> OtherType
Rule 86    NType -> PtrType
Rule 87    NType -> DotName
Rule 88    NType -> LPAREN NType RPAREN
Rule 89    NType -> NewType
Rule 90    NonExprType -> FuncType
Rule 91    NonExprType -> OtherType
Rule 92    NonExprType -> TIMES NonExprType
Rule 93    OtherType -> LBRACK OExpr RBRACK NType
Rule 94    OtherType -> StructType
Rule 95    OtherType -> InterfaceType
Rule 96    OtherType -> ChannelType
Rule 97    ChannelType -> CHAN NewType
Rule 98    ChannelType -> CHAN LMINUS NewType
Rule 99    ChannelType -> LMINUS CHAN NewType
Rule 100   StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE
Rule 101   StructType -> STRUCT LBRACE RBRACE
Rule 102   InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
Rule 103   InterfaceType -> INTERFACE LBRACE RBRACE
Rule 104   FuncDecl -> FUNCTION marker2 FuncDecl_ FuncBody
Rule 105   marker2 -> <empty>
Rule 106   FuncDecl_ -> IDENTIFIER ArgList FuncRes
Rule 107   FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
Rule 108   FuncType -> FUNCTION ArgList FuncRes
Rule 109   ArgList -> LPAREN OArgTypeListOComma RPAREN
Rule 110   ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN
Rule 111   FuncBody -> <empty>
Rule 112   FuncBody -> LBRACE cmtlist StmtList cmtlist revmarker1 RBRACE
Rule 113   FuncRes -> <empty>
Rule 114   FuncRes -> FuncRetType
Rule 115   FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT
Rule 116   StructDeclList -> StructDecl
Rule 117   StructDeclList -> StructDeclList SEMICOL StructDecl
Rule 118   InterfaceDeclList -> InterfaceDecl
Rule 119   InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl
Rule 120   StructDecl -> NewNameList NType OLiteral
Rule 121   StructDecl -> Embed OLiteral
Rule 122   StructDecl -> LPAREN Embed RPAREN OLiteral
Rule 123   StructDecl -> TIMES Embed OLiteral
Rule 124   StructDecl -> LPAREN TIMES Embed RPAREN OLiteral
Rule 125   StructDecl -> TIMES LPAREN Embed RPAREN OLiteral
Rule 126   InterfaceDecl -> NewName InDecl
Rule 127   InterfaceDecl -> IDENTIFIER
Rule 128   InterfaceDecl -> LPAREN IDENTIFIER RPAREN
Rule 129   InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes
Rule 130   LabelName -> NewName
Rule 131   NewName -> IDENTIFIER
Rule 132   PtrType -> TIMES NType
Rule 133   FuncRetType -> FuncType
Rule 134   FuncRetType -> OtherType
Rule 135   FuncRetType -> PtrType
Rule 136   FuncRetType -> DotName
Rule 137   FuncRetType -> NewType
Rule 138   DotName -> Name
Rule 139   DotName -> Name DOT IDENTIFIER
Rule 140   OComma -> <empty>
Rule 141   OComma -> COMMA
Rule 142   OSemi -> <empty>
Rule 143   OSemi -> SEMICOL
Rule 144   OSimpleStmt -> <empty>
Rule 145   OSimpleStmt -> SimpleStmt
Rule 146   ONewName -> <empty>
Rule 147   ONewName -> NewName
Rule 148   OExpr -> <empty>
Rule 149   OExpr -> Expr
Rule 150   OExprList -> <empty>
Rule 151   OExprList -> ExprList
Rule 152   FuncLiteralDecl -> FuncType
Rule 153   FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
Rule 154   ExprList -> Expr
Rule 155   ExprList -> ExprList COMMA Expr
Rule 156   ExprOrTypeList -> ExprOrType
Rule 157   ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType
Rule 158   OLiteral -> <empty>
Rule 159   OLiteral -> Literal
Rule 160   Literal -> INTEGER
Rule 161   Literal -> FLOAT
Rule 162   Literal -> STRING
Rule 163   Embed -> IDENTIFIER
Rule 164   DeclList -> Declaration SEMICOL
Rule 165   DeclList -> DeclList cmtlist Declaration SEMICOL
Rule 166   VarDeclList -> VarDecl
Rule 167   VarDeclList -> VarDeclList SEMICOL VarDecl
Rule 168   ConstDeclList -> ConstDecl1
Rule 169   ConstDeclList -> ConstDeclList SEMICOL ConstDecl1
Rule 170   TypeDeclList -> TypeDecl
Rule 171   TypeDeclList -> TypeDeclList SEMICOL TypeDecl
Rule 172   DeclNameList -> DeclName
Rule 173   DeclNameList -> DeclNameList COMMA DeclName
Rule 174   StmtList -> Stmt SEMICOL
Rule 175   StmtList -> StmtList cmtlist Stmt SEMICOL
Rule 176   NewNameList -> NewName
Rule 177   NewNameList -> NewNameList COMMA NewName
Rule 178   KeyvalList -> Keyval
Rule 179   KeyvalList -> BareCompLitExpr
Rule 180   KeyvalList -> KeyvalList COMMA Keyval
Rule 181   KeyvalList -> KeyvalList COMMA BareCompLitExpr
Rule 182   BracedKeyvalList -> <empty>
Rule 183   BracedKeyvalList -> KeyvalList OComma
Rule 184   DeclName -> IDENTIFIER
Rule 185   Name -> IDENTIFIER
Rule 186   ArgType -> NameOrType
Rule 187   ArgType -> IDENTIFIER NameOrType
Rule 188   ArgType -> IDENTIFIER DotDotDot
Rule 189   ArgType -> DotDotDot
Rule 190   ArgTypeList -> ArgType
Rule 191   ArgTypeList -> ArgTypeList COMMA ArgType
Rule 192   OArgTypeListOComma -> <empty>
Rule 193   OArgTypeListOComma -> ArgTypeList OComma
Rule 194   Stmt -> <empty>
Rule 195   Stmt -> CompoundStmt
Rule 196   Stmt -> CommonDecl
Rule 197   Stmt -> NonDeclStmt
Rule 198   NonDeclStmt -> SimpleStmt
Rule 199   NonDeclStmt -> ForStmt
Rule 200   NonDeclStmt -> SwitchStmt
Rule 201   NonDeclStmt -> IfStmt
Rule 202   NonDeclStmt -> LabelName COLON Stmt
Rule 203   NonDeclStmt -> FALLTHROUGH
Rule 204   NonDeclStmt -> BREAK ONewName
Rule 205   NonDeclStmt -> CONTINUE ONewName
Rule 206   NonDeclStmt -> GOTO NewName
Rule 207   NonDeclStmt -> RETURN OExprList
Rule 208   DotDotDot -> DDD
Rule 209   DotDotDot -> DDD NType
Rule 210   PExpr -> PExprNoParen
Rule 211   PExpr -> LPAREN ExprOrType RPAREN
Rule 212   PExprNoParen -> Literal
Rule 213   PExprNoParen -> Name
Rule 214   PExprNoParen -> PExpr DOT IDENTIFIER
Rule 215   PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN
Rule 216   PExprNoParen -> PExpr DOT LPAREN NewType RPAREN
Rule 217   PExprNoParen -> PExpr LBRACK Expr RBRACK
Rule 218   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK
Rule 219   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
Rule 220   PExprNoParen -> PseudoCall
Rule 221   PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
Rule 222   PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 223   PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 224   PExprNoParen -> FuncLiteral
Rule 225   PExprNoParen -> ForCompExpr
Rule 226   NewType -> TYPE
Rule 227   ConvType -> FuncType
Rule 228   ConvType -> OtherType
Rule 229   CompType -> OtherType
Rule 230   Keyval -> Expr COLON CompLitExpr
Rule 231   BareCompLitExpr -> Expr
Rule 232   BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 233   CompLitExpr -> Expr
Rule 234   CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 235   ExprOrType -> Expr
Rule 236   ExprOrType -> NonExprType
Rule 237   NameOrType -> NType
Rule 238   SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE
Rule 239   Prec5Expr_ -> UExpr
Rule 240   Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr
Rule 241   Prec5Expr_ -> Prec5Expr_ MOD UExpr
Rule 242   Prec5Expr_ -> Prec5Expr_ SHL UExpr
Rule 243   Prec5Expr_ -> Prec5Expr_ SHR UExpr
Rule 244   Prec5Expr_ -> Prec5Expr_ AMPERS UExpr
Rule 245   Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr
Rule 246   Prec5Expr_ -> Prec5Expr_ TIMES UExpr
Rule 247   Prec4Expr_ -> Prec5Expr_
Rule 248   Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_
Rule 249   Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_
Rule 250   Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_
Rule 251   Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_
Rule 252   Prec3Expr_ -> Prec4Expr_
Rule 253   Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_
Rule 254   Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_
Rule 255   Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_
Rule 256   Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_
Rule 257   Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_
Rule 258   Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_
Rule 259   Prec2Expr_ -> Prec3Expr_
Rule 260   Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_
Rule 261   Expr -> Prec2Expr_
Rule 262   Expr -> Expr OROR Prec2Expr_
Rule 263   Expr -> CONSTANTS
Rule 264   Expr -> Chexpr
Rule 265   Expr -> Arrayexp
Rule 266   Chexpr -> LMINUS IDENTIFIER
Rule 267   Arrayexp -> OtherType LBRACE ExprList RBRACE
Rule 268   UExpr -> PExpr
Rule 269   UExpr -> AMPERS UExpr
Rule 270   UExpr -> NOT UExpr
Rule 271   UExpr -> TIMES UExpr
Rule 272   UExpr -> PLUS UExpr
Rule 273   UExpr -> MINUS UExpr
Rule 274   UExpr -> XOR UExpr
Rule 275   ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK
Rule 276   PseudoCall -> PExpr LPAREN RPAREN
Rule 277   PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN
Rule 278   PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
Rule 279   cmtlist -> <empty>
Rule 280   cmtlist -> cmtlist COMMENT

Terminals, with rules where they appear

AMPAMP               : 260
AMPCAR               : 245
AMPCAREQ             : 52
AMPEQ                : 48
AMPERS               : 244 269
BREAK                : 204
CAREQ                : 49
CASE                 : 57 58 59
CHAN                 : 97 98 99
COLON                : 57 58 59 60 202 218 219 219 230
COLONEQ              : 54 59 69
COMMA                : 141 155 157 173 177 180 181 191
COMMENT              : 280
CONSTANT             : 21 22 23 24
CONSTANTS            : 263
CONTINUE             : 205
DDD                  : 208 209 278
DEFAULT              : 60
DIVIDE               : 240
DIVIDEEQ             : 45
DOT                  : 17 139 214 215 216
ELSE                 : 79 83
EQEQ                 : 253
EQUAL                : 32 33 34 36 53 58 68
FALLTHROUGH          : 203
FLOAT                : 161
FOR                  : 75
FUNCTION             : 104 108
GEQ                  : 256
GOTO                 : 206
GREAT                : 257
IDENTIFIER           : 6 16 39 106 107 127 128 131 139 163 184 185 187 188 214 266
IF                   : 78 79
IMPORT               : 9 10 11
INTEGER              : 160
INTERFACE            : 102 103
LBRACE               : 61 65 100 101 102 103 112 153 238 267
LBRACK               : 93 217 218 219 275
LEFT_ANGLE           : 221
LEFT_LEFT            : 222 223 232 234
LEFT_OR              : 107 115
LEQ                  : 255
LESS                 : 258
LMINUS               : 98 99 266
LPAREN               : 10 11 22 23 24 26 27 29 30 88 109 110 122 124 125 128 129 211 215 216 276 277 278
MINUS                : 249 273
MINUSEQ              : 43
MINUSMIN             : 56
MOD                  : 241
MODEQ                : 46
NOT                  : 270
NOTEQ                : 254
OR                   : 251
OREQ                 : 47
OROR                 : 262
OR_RIGHT             : 107 115
PACKAGE              : 6
PIPE                 : 275
PLUS                 : 248 272
PLUSEQ               : 42
PLUSPLUS             : 55
RANGE                : 68 69 70
RBRACE               : 61 65 100 101 102 103 112 153 238 267
RBRACK               : 93 217 218 219 275
RETURN               : 207
RIGHT_ANGLE          : 221
RIGHT_RIGHT          : 222 223 232 234
RPAREN               : 10 11 22 23 24 26 27 29 30 88 109 110 122 124 125 128 129 211 215 216 276 277 278
SEMICOL              : 6 7 8 14 23 71 71 77 117 119 143 164 165 167 169 171 174 175
SHL                  : 242
SHL_ASSIGN           : 50
SHR                  : 243
SHR_ASSIGN           : 51
STRING               : 12 162
STRUCT               : 100 101
SWITCH               : 238
TIMES                : 92 123 124 125 132 246 271
TIMESEQ              : 44
TYPE                 : 226
VAR                  : 25 26 27
XOR                  : 250 274
error                : 

Nonterminals, with rules where they appear

ArgList              : 106 107 108 110
ArgType              : 190 191
ArgTypeList          : 191 193
Arrayexp             : 265
BareCompLitExpr      : 179 181
BracedKeyvalList     : 222 223 232 234
Case                 : 62
CaseBlock            : 64
CaseBlockList        : 64 238
ChannelType          : 96
Chexpr               : 264
CommonDecl           : 18 196
CompLitExpr          : 230
CompType             : 222
CompoundStmt         : 83 195
ConstDecl            : 21 22 23 37
ConstDecl1           : 168 169
ConstDeclList        : 23 169
ConvType             : 221
DeclList             : 2 3 165
DeclName             : 172 173
DeclNameList         : 31 32 33 34 35 36 38 173
Declaration          : 164 165
DotDotDot            : 188 189
DotName              : 87 136
Else                 : 82
ElseIf               : 81
ElseIfList           : 78 81
Embed                : 121 122 123 124 125
Expr                 : 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 55 56 58 59 68 69 70 149 154 155 217 221 230 231 233 235 262 275
ExprList             : 32 33 34 36 53 53 54 54 68 69 151 155 267
ExprOrType           : 156 157 211 215
ExprOrTypeList       : 57 58 59 157 277 278
ForBody              : 75
ForCompExpr          : 225
ForHeader            : 74
ForStmt              : 199
FuncBody             : 104
FuncDecl             : 19
FuncDecl_            : 104
FuncLiteral          : 224
FuncLiteralDecl      : 153
FuncRes              : 106 107 108 129
FuncRetType          : 114
FuncType             : 84 90 133 152 227
IfHeader             : 78 79 238
IfStmt               : 201
Import               : 7 8
ImportHere           : 12
ImportStmt           : 9 13 14
ImportStmtList       : 10 14
Imports              : 2 4 8
InDecl               : 126
InterfaceDecl        : 118 119
InterfaceDeclList    : 102 119
InterfaceType        : 95
Keyval               : 178 180
KeyvalList           : 180 181 183
LabelName            : 202
Literal              : 159 212
LoopBody             : 74 78 79
NType                : 31 32 34 35 40 88 93 120 132 209 237
Name                 : 138 139 213
NameOrType           : 186 187
NewName              : 126 130 147 176 177 206
NewNameList          : 120 177
NewType              : 28 29 30 89 97 98 99 137 216
NonDeclStmt          : 20 197
NonExprType          : 92 236
OArgTypeListOComma   : 107 109 110 115 129
OComma               : 183 193 221 277 278
OExpr                : 93 218 218 219 219 219
OExprList            : 207
OLiteral             : 120 121 122 123 124 125
ONewName             : 204 205
OSemi                : 10 22 23 26 29 100 102
OSimpleStmt          : 71 71 71 72 76 77 77
OtherType            : 85 91 134 228 229 267
PExpr                : 214 215 216 217 218 219 223 268 276 277 278
PExprNoParen         : 210
PackageClause        : 2 3 4 5
Prec2Expr_           : 260 261 262
Prec3Expr_           : 253 254 255 256 257 258 259 260
Prec4Expr_           : 248 249 250 251 252 253 254 255 256 257 258
Prec5Expr_           : 240 241 242 243 244 245 246 247 248 249 250 251
PseudoCall           : 220
PtrType              : 86 135
RangeStmt            : 73 275
SimpleStmt           : 145 198
SourceFile           : 1
Stmt                 : 174 175 202
StmtList             : 61 62 65 112 153 175
StructDecl           : 116 117
StructDeclList       : 100 117
StructType           : 94
SwitchStmt           : 200
TypeDecl             : 28 170 171
TypeDeclList         : 29 171
TypeDeclName         : 40
UExpr                : 239 240 241 242 243 244 245 246 269 270 271 272 273 274
VarDecl              : 25 166 167
VarDeclList          : 26 167
cmtlist              : 2 2 2 2 3 3 3 4 4 4 5 5 8 61 61 65 65 112 112 153 153 165 175 280
marker1              : 61 65
marker2              : 104
revmarker1           : 65 112
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (2) SourceFile -> . cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> . cmtlist PackageClause cmtlist DeclList cmtlist
    (4) SourceFile -> . cmtlist PackageClause cmtlist Imports cmtlist
    (5) SourceFile -> . cmtlist PackageClause cmtlist
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    PACKAGE         reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 1
    SourceFile                     shift and go to state 2
    start                          shift and go to state 3

state 1

    (2) SourceFile -> cmtlist . PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist . PackageClause cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist . PackageClause cmtlist Imports cmtlist
    (5) SourceFile -> cmtlist . PackageClause cmtlist
    (280) cmtlist -> cmtlist . COMMENT
    (6) PackageClause -> . PACKAGE IDENTIFIER SEMICOL

    COMMENT         shift and go to state 4
    PACKAGE         shift and go to state 6

    PackageClause                  shift and go to state 5

state 2

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 3

    (0) S' -> start .



state 4

    (280) cmtlist -> cmtlist COMMENT .

    COMMENT         reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    LBRACE          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    CONSTANT        reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    VAR             reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    FALLTHROUGH     reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    BREAK           reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    CONTINUE        reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    GOTO            reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    RETURN          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    TYPE            reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    FOR             reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    SWITCH          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    IF              reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    CONSTANTS       reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    IDENTIFIER      reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    LMINUS          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    LBRACK          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    STRUCT          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    INTERFACE       reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    CHAN            reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    AMPERS          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    NOT             reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    TIMES           reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    PLUS            reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    MINUS           reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    XOR             reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    LPAREN          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    INTEGER         reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    FLOAT           reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    STRING          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    FUNCTION        reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    SEMICOL         reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    IMPORT          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    $end            reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    RBRACE          reduce using rule 280 (cmtlist -> cmtlist COMMENT .)
    PACKAGE         reduce using rule 280 (cmtlist -> cmtlist COMMENT .)


state 5

    (2) SourceFile -> cmtlist PackageClause . cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist PackageClause . cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause . cmtlist Imports cmtlist
    (5) SourceFile -> cmtlist PackageClause . cmtlist
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    IMPORT          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    $end            reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 7

state 6

    (6) PackageClause -> PACKAGE . IDENTIFIER SEMICOL

    IDENTIFIER      shift and go to state 8


state 7

    (2) SourceFile -> cmtlist PackageClause cmtlist . Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist PackageClause cmtlist . DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist . Imports cmtlist
    (5) SourceFile -> cmtlist PackageClause cmtlist .
    (280) cmtlist -> cmtlist . COMMENT
    (7) Imports -> . Import SEMICOL
    (8) Imports -> . Imports cmtlist Import SEMICOL
    (164) DeclList -> . Declaration SEMICOL
    (165) DeclList -> . DeclList cmtlist Declaration SEMICOL
    (9) Import -> . IMPORT ImportStmt
    (10) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> . IMPORT LPAREN RPAREN
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (104) FuncDecl -> . FUNCTION marker2 FuncDecl_ FuncBody
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 5 (SourceFile -> cmtlist PackageClause cmtlist .)
    COMMENT         shift and go to state 4
    IMPORT          shift and go to state 18
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    NewType                        shift and go to state 65
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    IfStmt                         shift and go to state 12
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 52
    ChannelType                    shift and go to state 35
    Import                         shift and go to state 50
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    DeclList                       shift and go to state 57
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Imports                        shift and go to state 58
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 8

    (6) PackageClause -> PACKAGE IDENTIFIER . SEMICOL

    SEMICOL         shift and go to state 77


state 9

    (224) PExprNoParen -> FuncLiteral .

    DOT             reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    LBRACK          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    LEFT_LEFT       reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    LPAREN          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    DIVIDE          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    MOD             reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    SHL             reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    SHR             reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    AMPERS          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    AMPCAR          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    TIMES           reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    PLUS            reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    MINUS           reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    XOR             reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    OR              reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    EQEQ            reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    NOTEQ           reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    LEQ             reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    GEQ             reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    GREAT           reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    LESS            reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    AMPAMP          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    OROR            reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    COMMA           reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    SEMICOL         reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    RPAREN          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    LBRACE          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    DDD             reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    PLUSEQ          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    MINUSEQ         reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    TIMESEQ         reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    DIVIDEEQ        reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    MODEQ           reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    OREQ            reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    AMPEQ           reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    CAREQ           reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    SHL_ASSIGN      reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    SHR_ASSIGN      reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    AMPCAREQ        reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    PLUSPLUS        reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    MINUSMIN        reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    EQUAL           reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    COLONEQ         reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    PIPE            reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    RBRACK          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    RIGHT_ANGLE     reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    RBRACE          reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    COLON           reduce using rule 224 (PExprNoParen -> FuncLiteral .)
    RIGHT_RIGHT     reduce using rule 224 (PExprNoParen -> FuncLiteral .)


state 10

    (259) Prec2Expr_ -> Prec3Expr_ .
    (253) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (254) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (256) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (257) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (258) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    OROR            reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    SEMICOL         reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    LBRACE          reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    EQUAL           reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    COLONEQ         reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    COMMA           reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACE          reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    RPAREN          reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    COLON           reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSEQ          reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSEQ         reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    TIMESEQ         reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    MODEQ           reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    OREQ            reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    AMPEQ           reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    CAREQ           reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    AMPCAREQ        reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSPLUS        reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSMIN        reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    DDD             reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACK          reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    PIPE            reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 259 (Prec2Expr_ -> Prec3Expr_ .)
    EQEQ            shift and go to state 80
    NOTEQ           shift and go to state 83
    LEQ             shift and go to state 79
    GEQ             shift and go to state 78
    GREAT           shift and go to state 82
    LESS            shift and go to state 81


state 11

    (221) PExprNoParen -> ConvType . LEFT_ANGLE Expr OComma RIGHT_ANGLE

    LEFT_ANGLE      shift and go to state 84


state 12

    (201) NonDeclStmt -> IfStmt .

    SEMICOL         reduce using rule 201 (NonDeclStmt -> IfStmt .)


state 13

    (264) Expr -> Chexpr .

    OROR            reduce using rule 264 (Expr -> Chexpr .)
    COLON           reduce using rule 264 (Expr -> Chexpr .)
    EQUAL           reduce using rule 264 (Expr -> Chexpr .)
    COLONEQ         reduce using rule 264 (Expr -> Chexpr .)
    COMMA           reduce using rule 264 (Expr -> Chexpr .)
    SEMICOL         reduce using rule 264 (Expr -> Chexpr .)
    LBRACE          reduce using rule 264 (Expr -> Chexpr .)
    RPAREN          reduce using rule 264 (Expr -> Chexpr .)
    RIGHT_RIGHT     reduce using rule 264 (Expr -> Chexpr .)
    PLUSEQ          reduce using rule 264 (Expr -> Chexpr .)
    MINUSEQ         reduce using rule 264 (Expr -> Chexpr .)
    TIMESEQ         reduce using rule 264 (Expr -> Chexpr .)
    DIVIDEEQ        reduce using rule 264 (Expr -> Chexpr .)
    MODEQ           reduce using rule 264 (Expr -> Chexpr .)
    OREQ            reduce using rule 264 (Expr -> Chexpr .)
    AMPEQ           reduce using rule 264 (Expr -> Chexpr .)
    CAREQ           reduce using rule 264 (Expr -> Chexpr .)
    SHL_ASSIGN      reduce using rule 264 (Expr -> Chexpr .)
    SHR_ASSIGN      reduce using rule 264 (Expr -> Chexpr .)
    AMPCAREQ        reduce using rule 264 (Expr -> Chexpr .)
    PLUSPLUS        reduce using rule 264 (Expr -> Chexpr .)
    MINUSMIN        reduce using rule 264 (Expr -> Chexpr .)
    RBRACK          reduce using rule 264 (Expr -> Chexpr .)
    RIGHT_ANGLE     reduce using rule 264 (Expr -> Chexpr .)
    DDD             reduce using rule 264 (Expr -> Chexpr .)
    RBRACE          reduce using rule 264 (Expr -> Chexpr .)
    PIPE            reduce using rule 264 (Expr -> Chexpr .)


state 14

    (203) NonDeclStmt -> FALLTHROUGH .

    SEMICOL         reduce using rule 203 (NonDeclStmt -> FALLTHROUGH .)


state 15

    (95) OtherType -> InterfaceType .

    EQUAL           reduce using rule 95 (OtherType -> InterfaceType .)
    SEMICOL         reduce using rule 95 (OtherType -> InterfaceType .)
    RPAREN          reduce using rule 95 (OtherType -> InterfaceType .)
    LBRACE          reduce using rule 95 (OtherType -> InterfaceType .)
    DDD             reduce using rule 95 (OtherType -> InterfaceType .)
    COMMA           reduce using rule 95 (OtherType -> InterfaceType .)
    LEFT_ANGLE      reduce using rule 95 (OtherType -> InterfaceType .)
    LEFT_LEFT       reduce using rule 95 (OtherType -> InterfaceType .)
    OR_RIGHT        reduce using rule 95 (OtherType -> InterfaceType .)
    COLON           reduce using rule 95 (OtherType -> InterfaceType .)
    COLONEQ         reduce using rule 95 (OtherType -> InterfaceType .)
    RBRACE          reduce using rule 95 (OtherType -> InterfaceType .)
    INTEGER         reduce using rule 95 (OtherType -> InterfaceType .)
    FLOAT           reduce using rule 95 (OtherType -> InterfaceType .)
    STRING          reduce using rule 95 (OtherType -> InterfaceType .)


state 16

    (202) NonDeclStmt -> LabelName . COLON Stmt

    COLON           shift and go to state 85


state 17

    (247) Prec4Expr_ -> Prec5Expr_ .
    (240) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (241) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (242) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (243) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (244) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (245) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    MINUS           reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    XOR             reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    OR              reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    EQEQ            reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    NOTEQ           reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    LEQ             reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    GEQ             reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    GREAT           reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    LESS            reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    AMPAMP          reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    OROR            reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    SEMICOL         reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    LBRACE          reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    COMMA           reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    EQUAL           reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    COLONEQ         reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACE          reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    RPAREN          reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSEQ          reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSEQ         reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    TIMESEQ         reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    MODEQ           reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    OREQ            reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    AMPEQ           reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    CAREQ           reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    AMPCAREQ        reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSPLUS        reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSMIN        reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    COLON           reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    PIPE            reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACK          reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    DDD             reduce using rule 247 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 18

    (9) Import -> IMPORT . ImportStmt
    (10) Import -> IMPORT . LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> IMPORT . LPAREN RPAREN
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    LPAREN          shift and go to state 95
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 94
    DOT             shift and go to state 97

    ImportHere                     shift and go to state 93
    ImportStmt                     shift and go to state 96

state 19

    (266) Chexpr -> LMINUS . IDENTIFIER
    (99) ChannelType -> LMINUS . CHAN NewType

    IDENTIFIER      shift and go to state 98
    CHAN            shift and go to state 99


state 20

    (261) Expr -> Prec2Expr_ .
    (260) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    OROR            reduce using rule 261 (Expr -> Prec2Expr_ .)
    COLON           reduce using rule 261 (Expr -> Prec2Expr_ .)
    EQUAL           reduce using rule 261 (Expr -> Prec2Expr_ .)
    COLONEQ         reduce using rule 261 (Expr -> Prec2Expr_ .)
    COMMA           reduce using rule 261 (Expr -> Prec2Expr_ .)
    SEMICOL         reduce using rule 261 (Expr -> Prec2Expr_ .)
    LBRACE          reduce using rule 261 (Expr -> Prec2Expr_ .)
    RPAREN          reduce using rule 261 (Expr -> Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 261 (Expr -> Prec2Expr_ .)
    PLUSEQ          reduce using rule 261 (Expr -> Prec2Expr_ .)
    MINUSEQ         reduce using rule 261 (Expr -> Prec2Expr_ .)
    TIMESEQ         reduce using rule 261 (Expr -> Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 261 (Expr -> Prec2Expr_ .)
    MODEQ           reduce using rule 261 (Expr -> Prec2Expr_ .)
    OREQ            reduce using rule 261 (Expr -> Prec2Expr_ .)
    AMPEQ           reduce using rule 261 (Expr -> Prec2Expr_ .)
    CAREQ           reduce using rule 261 (Expr -> Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 261 (Expr -> Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 261 (Expr -> Prec2Expr_ .)
    AMPCAREQ        reduce using rule 261 (Expr -> Prec2Expr_ .)
    PLUSPLUS        reduce using rule 261 (Expr -> Prec2Expr_ .)
    MINUSMIN        reduce using rule 261 (Expr -> Prec2Expr_ .)
    RBRACK          reduce using rule 261 (Expr -> Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 261 (Expr -> Prec2Expr_ .)
    DDD             reduce using rule 261 (Expr -> Prec2Expr_ .)
    RBRACE          reduce using rule 261 (Expr -> Prec2Expr_ .)
    PIPE            reduce using rule 261 (Expr -> Prec2Expr_ .)
    AMPAMP          shift and go to state 100


state 21

    (153) FuncLiteral -> FuncLiteralDecl . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 101


state 22

    (160) Literal -> INTEGER .

    DOT             reduce using rule 160 (Literal -> INTEGER .)
    LBRACK          reduce using rule 160 (Literal -> INTEGER .)
    LEFT_LEFT       reduce using rule 160 (Literal -> INTEGER .)
    LPAREN          reduce using rule 160 (Literal -> INTEGER .)
    DIVIDE          reduce using rule 160 (Literal -> INTEGER .)
    MOD             reduce using rule 160 (Literal -> INTEGER .)
    SHL             reduce using rule 160 (Literal -> INTEGER .)
    SHR             reduce using rule 160 (Literal -> INTEGER .)
    AMPERS          reduce using rule 160 (Literal -> INTEGER .)
    AMPCAR          reduce using rule 160 (Literal -> INTEGER .)
    TIMES           reduce using rule 160 (Literal -> INTEGER .)
    PLUS            reduce using rule 160 (Literal -> INTEGER .)
    MINUS           reduce using rule 160 (Literal -> INTEGER .)
    XOR             reduce using rule 160 (Literal -> INTEGER .)
    OR              reduce using rule 160 (Literal -> INTEGER .)
    EQEQ            reduce using rule 160 (Literal -> INTEGER .)
    NOTEQ           reduce using rule 160 (Literal -> INTEGER .)
    LEQ             reduce using rule 160 (Literal -> INTEGER .)
    GEQ             reduce using rule 160 (Literal -> INTEGER .)
    GREAT           reduce using rule 160 (Literal -> INTEGER .)
    LESS            reduce using rule 160 (Literal -> INTEGER .)
    AMPAMP          reduce using rule 160 (Literal -> INTEGER .)
    PLUSEQ          reduce using rule 160 (Literal -> INTEGER .)
    MINUSEQ         reduce using rule 160 (Literal -> INTEGER .)
    TIMESEQ         reduce using rule 160 (Literal -> INTEGER .)
    DIVIDEEQ        reduce using rule 160 (Literal -> INTEGER .)
    MODEQ           reduce using rule 160 (Literal -> INTEGER .)
    OREQ            reduce using rule 160 (Literal -> INTEGER .)
    AMPEQ           reduce using rule 160 (Literal -> INTEGER .)
    CAREQ           reduce using rule 160 (Literal -> INTEGER .)
    SHL_ASSIGN      reduce using rule 160 (Literal -> INTEGER .)
    SHR_ASSIGN      reduce using rule 160 (Literal -> INTEGER .)
    AMPCAREQ        reduce using rule 160 (Literal -> INTEGER .)
    PLUSPLUS        reduce using rule 160 (Literal -> INTEGER .)
    MINUSMIN        reduce using rule 160 (Literal -> INTEGER .)
    OROR            reduce using rule 160 (Literal -> INTEGER .)
    SEMICOL         reduce using rule 160 (Literal -> INTEGER .)
    EQUAL           reduce using rule 160 (Literal -> INTEGER .)
    COLONEQ         reduce using rule 160 (Literal -> INTEGER .)
    COMMA           reduce using rule 160 (Literal -> INTEGER .)
    LBRACE          reduce using rule 160 (Literal -> INTEGER .)
    PIPE            reduce using rule 160 (Literal -> INTEGER .)
    RBRACK          reduce using rule 160 (Literal -> INTEGER .)
    RPAREN          reduce using rule 160 (Literal -> INTEGER .)
    RIGHT_ANGLE     reduce using rule 160 (Literal -> INTEGER .)
    RBRACE          reduce using rule 160 (Literal -> INTEGER .)
    COLON           reduce using rule 160 (Literal -> INTEGER .)
    RIGHT_RIGHT     reduce using rule 160 (Literal -> INTEGER .)
    DDD             reduce using rule 160 (Literal -> INTEGER .)


state 23

    (25) CommonDecl -> VAR . VarDecl
    (26) CommonDecl -> VAR . LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> VAR . LPAREN RPAREN
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (172) DeclNameList -> . DeclName
    (173) DeclNameList -> . DeclNameList COMMA DeclName
    (184) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 105
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    VarDecl                        shift and go to state 104
    DeclNameList                   shift and go to state 106

state 24

    (53) SimpleStmt -> ExprList . EQUAL ExprList
    (54) SimpleStmt -> ExprList . COLONEQ ExprList
    (155) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 109
    COLONEQ         shift and go to state 108
    COMMA           shift and go to state 107


state 25

    (207) NonDeclStmt -> RETURN . OExprList
    (150) OExprList -> .
    (151) OExprList -> . ExprList
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 150 (OExprList -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 110
    OExprList                      shift and go to state 111
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 26

    (21) CommonDecl -> CONSTANT . ConstDecl
    (22) CommonDecl -> CONSTANT . LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> CONSTANT . LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> CONSTANT . LPAREN RPAREN
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (172) DeclNameList -> . DeclName
    (173) DeclNameList -> . DeclNameList COMMA DeclName
    (184) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    ConstDecl                      shift and go to state 117
    DeclNameList                   shift and go to state 116

state 27

    (269) UExpr -> AMPERS . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 120
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 28

    (252) Prec3Expr_ -> Prec4Expr_ .
    (248) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (250) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (251) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    NOTEQ           reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    LEQ             reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    GEQ             reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    GREAT           reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    LESS            reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    AMPAMP          reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSEQ          reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSEQ         reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    TIMESEQ         reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    MODEQ           reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    OREQ            reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    AMPEQ           reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    CAREQ           reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    AMPCAREQ        reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSPLUS        reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSMIN        reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    OROR            reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    SEMICOL         reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    EQUAL           reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    COLONEQ         reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    COMMA           reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    LBRACE          reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACK          reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    PIPE            reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    RPAREN          reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACE          reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    COLON           reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    DDD             reduce using rule 252 (Prec3Expr_ -> Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 29

    (18) Declaration -> CommonDecl .

    SEMICOL         reduce using rule 18 (Declaration -> CommonDecl .)


state 30

    (273) UExpr -> MINUS . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 126
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 31

    (162) Literal -> STRING .

    DOT             reduce using rule 162 (Literal -> STRING .)
    LBRACK          reduce using rule 162 (Literal -> STRING .)
    LEFT_LEFT       reduce using rule 162 (Literal -> STRING .)
    LPAREN          reduce using rule 162 (Literal -> STRING .)
    DIVIDE          reduce using rule 162 (Literal -> STRING .)
    MOD             reduce using rule 162 (Literal -> STRING .)
    SHL             reduce using rule 162 (Literal -> STRING .)
    SHR             reduce using rule 162 (Literal -> STRING .)
    AMPERS          reduce using rule 162 (Literal -> STRING .)
    AMPCAR          reduce using rule 162 (Literal -> STRING .)
    TIMES           reduce using rule 162 (Literal -> STRING .)
    PLUS            reduce using rule 162 (Literal -> STRING .)
    MINUS           reduce using rule 162 (Literal -> STRING .)
    XOR             reduce using rule 162 (Literal -> STRING .)
    OR              reduce using rule 162 (Literal -> STRING .)
    EQEQ            reduce using rule 162 (Literal -> STRING .)
    NOTEQ           reduce using rule 162 (Literal -> STRING .)
    LEQ             reduce using rule 162 (Literal -> STRING .)
    GEQ             reduce using rule 162 (Literal -> STRING .)
    GREAT           reduce using rule 162 (Literal -> STRING .)
    LESS            reduce using rule 162 (Literal -> STRING .)
    AMPAMP          reduce using rule 162 (Literal -> STRING .)
    PLUSEQ          reduce using rule 162 (Literal -> STRING .)
    MINUSEQ         reduce using rule 162 (Literal -> STRING .)
    TIMESEQ         reduce using rule 162 (Literal -> STRING .)
    DIVIDEEQ        reduce using rule 162 (Literal -> STRING .)
    MODEQ           reduce using rule 162 (Literal -> STRING .)
    OREQ            reduce using rule 162 (Literal -> STRING .)
    AMPEQ           reduce using rule 162 (Literal -> STRING .)
    CAREQ           reduce using rule 162 (Literal -> STRING .)
    SHL_ASSIGN      reduce using rule 162 (Literal -> STRING .)
    SHR_ASSIGN      reduce using rule 162 (Literal -> STRING .)
    AMPCAREQ        reduce using rule 162 (Literal -> STRING .)
    PLUSPLUS        reduce using rule 162 (Literal -> STRING .)
    MINUSMIN        reduce using rule 162 (Literal -> STRING .)
    OROR            reduce using rule 162 (Literal -> STRING .)
    SEMICOL         reduce using rule 162 (Literal -> STRING .)
    EQUAL           reduce using rule 162 (Literal -> STRING .)
    COLONEQ         reduce using rule 162 (Literal -> STRING .)
    COMMA           reduce using rule 162 (Literal -> STRING .)
    LBRACE          reduce using rule 162 (Literal -> STRING .)
    PIPE            reduce using rule 162 (Literal -> STRING .)
    RBRACK          reduce using rule 162 (Literal -> STRING .)
    RPAREN          reduce using rule 162 (Literal -> STRING .)
    RIGHT_ANGLE     reduce using rule 162 (Literal -> STRING .)
    RBRACE          reduce using rule 162 (Literal -> STRING .)
    COLON           reduce using rule 162 (Literal -> STRING .)
    RIGHT_RIGHT     reduce using rule 162 (Literal -> STRING .)
    DDD             reduce using rule 162 (Literal -> STRING .)


state 32

    (19) Declaration -> FuncDecl .

    SEMICOL         reduce using rule 19 (Declaration -> FuncDecl .)


state 33

    (267) Arrayexp -> OtherType . LBRACE ExprList RBRACE
    (228) ConvType -> OtherType .
    (229) CompType -> OtherType .

    LBRACE          shift and go to state 127
    LEFT_ANGLE      reduce using rule 228 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 229 (CompType -> OtherType .)


state 34

    (130) LabelName -> NewName .

    COLON           reduce using rule 130 (LabelName -> NewName .)


state 35

    (96) OtherType -> ChannelType .

    EQUAL           reduce using rule 96 (OtherType -> ChannelType .)
    SEMICOL         reduce using rule 96 (OtherType -> ChannelType .)
    RPAREN          reduce using rule 96 (OtherType -> ChannelType .)
    LBRACE          reduce using rule 96 (OtherType -> ChannelType .)
    DDD             reduce using rule 96 (OtherType -> ChannelType .)
    COMMA           reduce using rule 96 (OtherType -> ChannelType .)
    LEFT_ANGLE      reduce using rule 96 (OtherType -> ChannelType .)
    LEFT_LEFT       reduce using rule 96 (OtherType -> ChannelType .)
    OR_RIGHT        reduce using rule 96 (OtherType -> ChannelType .)
    COLON           reduce using rule 96 (OtherType -> ChannelType .)
    COLONEQ         reduce using rule 96 (OtherType -> ChannelType .)
    RBRACE          reduce using rule 96 (OtherType -> ChannelType .)
    INTEGER         reduce using rule 96 (OtherType -> ChannelType .)
    FLOAT           reduce using rule 96 (OtherType -> ChannelType .)
    STRING          reduce using rule 96 (OtherType -> ChannelType .)


state 36

    (104) FuncDecl -> FUNCTION . marker2 FuncDecl_ FuncBody
    (108) FuncType -> FUNCTION . ArgList FuncRes
    (105) marker2 -> .
    (109) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (110) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    IDENTIFIER      reduce using rule 105 (marker2 -> .)
    LEFT_OR         reduce using rule 105 (marker2 -> .)
    LPAREN          shift and go to state 128

    ArgList                        shift and go to state 129
    marker2                        shift and go to state 130

state 37

    (75) ForStmt -> FOR . ForBody
    (74) ForBody -> . ForHeader LoopBody
    (71) ForHeader -> . OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (72) ForHeader -> . OSimpleStmt
    (73) ForHeader -> . RangeStmt
    (144) OSimpleStmt -> .
    (145) OSimpleStmt -> . SimpleStmt
    (68) RangeStmt -> . ExprList EQUAL RANGE Expr
    (69) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (70) RangeStmt -> . RANGE Expr
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 144 (OSimpleStmt -> .)
    LBRACE          reduce using rule 144 (OSimpleStmt -> .)
    RANGE           shift and go to state 135
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    ForBody                        shift and go to state 134
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 131
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    ForHeader                      shift and go to state 137
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 138
    PseudoCall                     shift and go to state 38
    RangeStmt                      shift and go to state 132
    ExprList                       shift and go to state 133
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 38

    (220) PExprNoParen -> PseudoCall .

    DOT             reduce using rule 220 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 220 (PExprNoParen -> PseudoCall .)
    LPAREN          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    DIVIDE          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    MOD             reduce using rule 220 (PExprNoParen -> PseudoCall .)
    SHL             reduce using rule 220 (PExprNoParen -> PseudoCall .)
    SHR             reduce using rule 220 (PExprNoParen -> PseudoCall .)
    AMPERS          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    AMPCAR          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    TIMES           reduce using rule 220 (PExprNoParen -> PseudoCall .)
    PLUS            reduce using rule 220 (PExprNoParen -> PseudoCall .)
    MINUS           reduce using rule 220 (PExprNoParen -> PseudoCall .)
    XOR             reduce using rule 220 (PExprNoParen -> PseudoCall .)
    OR              reduce using rule 220 (PExprNoParen -> PseudoCall .)
    EQEQ            reduce using rule 220 (PExprNoParen -> PseudoCall .)
    NOTEQ           reduce using rule 220 (PExprNoParen -> PseudoCall .)
    LEQ             reduce using rule 220 (PExprNoParen -> PseudoCall .)
    GEQ             reduce using rule 220 (PExprNoParen -> PseudoCall .)
    GREAT           reduce using rule 220 (PExprNoParen -> PseudoCall .)
    LESS            reduce using rule 220 (PExprNoParen -> PseudoCall .)
    AMPAMP          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    OROR            reduce using rule 220 (PExprNoParen -> PseudoCall .)
    COMMA           reduce using rule 220 (PExprNoParen -> PseudoCall .)
    SEMICOL         reduce using rule 220 (PExprNoParen -> PseudoCall .)
    RPAREN          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    LBRACE          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    DDD             reduce using rule 220 (PExprNoParen -> PseudoCall .)
    PLUSEQ          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    MINUSEQ         reduce using rule 220 (PExprNoParen -> PseudoCall .)
    TIMESEQ         reduce using rule 220 (PExprNoParen -> PseudoCall .)
    DIVIDEEQ        reduce using rule 220 (PExprNoParen -> PseudoCall .)
    MODEQ           reduce using rule 220 (PExprNoParen -> PseudoCall .)
    OREQ            reduce using rule 220 (PExprNoParen -> PseudoCall .)
    AMPEQ           reduce using rule 220 (PExprNoParen -> PseudoCall .)
    CAREQ           reduce using rule 220 (PExprNoParen -> PseudoCall .)
    SHL_ASSIGN      reduce using rule 220 (PExprNoParen -> PseudoCall .)
    SHR_ASSIGN      reduce using rule 220 (PExprNoParen -> PseudoCall .)
    AMPCAREQ        reduce using rule 220 (PExprNoParen -> PseudoCall .)
    PLUSPLUS        reduce using rule 220 (PExprNoParen -> PseudoCall .)
    MINUSMIN        reduce using rule 220 (PExprNoParen -> PseudoCall .)
    EQUAL           reduce using rule 220 (PExprNoParen -> PseudoCall .)
    COLONEQ         reduce using rule 220 (PExprNoParen -> PseudoCall .)
    PIPE            reduce using rule 220 (PExprNoParen -> PseudoCall .)
    RBRACK          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    RIGHT_ANGLE     reduce using rule 220 (PExprNoParen -> PseudoCall .)
    RBRACE          reduce using rule 220 (PExprNoParen -> PseudoCall .)
    COLON           reduce using rule 220 (PExprNoParen -> PseudoCall .)
    RIGHT_RIGHT     reduce using rule 220 (PExprNoParen -> PseudoCall .)


state 39

    (102) InterfaceType -> INTERFACE . LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> INTERFACE . LBRACE RBRACE

    LBRACE          shift and go to state 139


state 40

    (212) PExprNoParen -> Literal .

    DOT             reduce using rule 212 (PExprNoParen -> Literal .)
    LBRACK          reduce using rule 212 (PExprNoParen -> Literal .)
    LEFT_LEFT       reduce using rule 212 (PExprNoParen -> Literal .)
    LPAREN          reduce using rule 212 (PExprNoParen -> Literal .)
    DIVIDE          reduce using rule 212 (PExprNoParen -> Literal .)
    MOD             reduce using rule 212 (PExprNoParen -> Literal .)
    SHL             reduce using rule 212 (PExprNoParen -> Literal .)
    SHR             reduce using rule 212 (PExprNoParen -> Literal .)
    AMPERS          reduce using rule 212 (PExprNoParen -> Literal .)
    AMPCAR          reduce using rule 212 (PExprNoParen -> Literal .)
    TIMES           reduce using rule 212 (PExprNoParen -> Literal .)
    PLUS            reduce using rule 212 (PExprNoParen -> Literal .)
    MINUS           reduce using rule 212 (PExprNoParen -> Literal .)
    XOR             reduce using rule 212 (PExprNoParen -> Literal .)
    OR              reduce using rule 212 (PExprNoParen -> Literal .)
    EQEQ            reduce using rule 212 (PExprNoParen -> Literal .)
    NOTEQ           reduce using rule 212 (PExprNoParen -> Literal .)
    LEQ             reduce using rule 212 (PExprNoParen -> Literal .)
    GEQ             reduce using rule 212 (PExprNoParen -> Literal .)
    GREAT           reduce using rule 212 (PExprNoParen -> Literal .)
    LESS            reduce using rule 212 (PExprNoParen -> Literal .)
    AMPAMP          reduce using rule 212 (PExprNoParen -> Literal .)
    OROR            reduce using rule 212 (PExprNoParen -> Literal .)
    COMMA           reduce using rule 212 (PExprNoParen -> Literal .)
    SEMICOL         reduce using rule 212 (PExprNoParen -> Literal .)
    RPAREN          reduce using rule 212 (PExprNoParen -> Literal .)
    LBRACE          reduce using rule 212 (PExprNoParen -> Literal .)
    DDD             reduce using rule 212 (PExprNoParen -> Literal .)
    PLUSEQ          reduce using rule 212 (PExprNoParen -> Literal .)
    MINUSEQ         reduce using rule 212 (PExprNoParen -> Literal .)
    TIMESEQ         reduce using rule 212 (PExprNoParen -> Literal .)
    DIVIDEEQ        reduce using rule 212 (PExprNoParen -> Literal .)
    MODEQ           reduce using rule 212 (PExprNoParen -> Literal .)
    OREQ            reduce using rule 212 (PExprNoParen -> Literal .)
    AMPEQ           reduce using rule 212 (PExprNoParen -> Literal .)
    CAREQ           reduce using rule 212 (PExprNoParen -> Literal .)
    SHL_ASSIGN      reduce using rule 212 (PExprNoParen -> Literal .)
    SHR_ASSIGN      reduce using rule 212 (PExprNoParen -> Literal .)
    AMPCAREQ        reduce using rule 212 (PExprNoParen -> Literal .)
    PLUSPLUS        reduce using rule 212 (PExprNoParen -> Literal .)
    MINUSMIN        reduce using rule 212 (PExprNoParen -> Literal .)
    EQUAL           reduce using rule 212 (PExprNoParen -> Literal .)
    COLONEQ         reduce using rule 212 (PExprNoParen -> Literal .)
    PIPE            reduce using rule 212 (PExprNoParen -> Literal .)
    RBRACK          reduce using rule 212 (PExprNoParen -> Literal .)
    RIGHT_ANGLE     reduce using rule 212 (PExprNoParen -> Literal .)
    RBRACE          reduce using rule 212 (PExprNoParen -> Literal .)
    COLON           reduce using rule 212 (PExprNoParen -> Literal .)
    RIGHT_RIGHT     reduce using rule 212 (PExprNoParen -> Literal .)


state 41

    (239) Prec5Expr_ -> UExpr .

    DIVIDE          reduce using rule 239 (Prec5Expr_ -> UExpr .)
    MOD             reduce using rule 239 (Prec5Expr_ -> UExpr .)
    SHL             reduce using rule 239 (Prec5Expr_ -> UExpr .)
    SHR             reduce using rule 239 (Prec5Expr_ -> UExpr .)
    AMPERS          reduce using rule 239 (Prec5Expr_ -> UExpr .)
    AMPCAR          reduce using rule 239 (Prec5Expr_ -> UExpr .)
    TIMES           reduce using rule 239 (Prec5Expr_ -> UExpr .)
    PLUS            reduce using rule 239 (Prec5Expr_ -> UExpr .)
    MINUS           reduce using rule 239 (Prec5Expr_ -> UExpr .)
    XOR             reduce using rule 239 (Prec5Expr_ -> UExpr .)
    OR              reduce using rule 239 (Prec5Expr_ -> UExpr .)
    EQEQ            reduce using rule 239 (Prec5Expr_ -> UExpr .)
    NOTEQ           reduce using rule 239 (Prec5Expr_ -> UExpr .)
    LEQ             reduce using rule 239 (Prec5Expr_ -> UExpr .)
    GEQ             reduce using rule 239 (Prec5Expr_ -> UExpr .)
    GREAT           reduce using rule 239 (Prec5Expr_ -> UExpr .)
    LESS            reduce using rule 239 (Prec5Expr_ -> UExpr .)
    AMPAMP          reduce using rule 239 (Prec5Expr_ -> UExpr .)
    OROR            reduce using rule 239 (Prec5Expr_ -> UExpr .)
    COMMA           reduce using rule 239 (Prec5Expr_ -> UExpr .)
    RIGHT_RIGHT     reduce using rule 239 (Prec5Expr_ -> UExpr .)
    PLUSEQ          reduce using rule 239 (Prec5Expr_ -> UExpr .)
    MINUSEQ         reduce using rule 239 (Prec5Expr_ -> UExpr .)
    TIMESEQ         reduce using rule 239 (Prec5Expr_ -> UExpr .)
    DIVIDEEQ        reduce using rule 239 (Prec5Expr_ -> UExpr .)
    MODEQ           reduce using rule 239 (Prec5Expr_ -> UExpr .)
    OREQ            reduce using rule 239 (Prec5Expr_ -> UExpr .)
    AMPEQ           reduce using rule 239 (Prec5Expr_ -> UExpr .)
    CAREQ           reduce using rule 239 (Prec5Expr_ -> UExpr .)
    SHL_ASSIGN      reduce using rule 239 (Prec5Expr_ -> UExpr .)
    SHR_ASSIGN      reduce using rule 239 (Prec5Expr_ -> UExpr .)
    AMPCAREQ        reduce using rule 239 (Prec5Expr_ -> UExpr .)
    PLUSPLUS        reduce using rule 239 (Prec5Expr_ -> UExpr .)
    MINUSMIN        reduce using rule 239 (Prec5Expr_ -> UExpr .)
    SEMICOL         reduce using rule 239 (Prec5Expr_ -> UExpr .)
    EQUAL           reduce using rule 239 (Prec5Expr_ -> UExpr .)
    COLONEQ         reduce using rule 239 (Prec5Expr_ -> UExpr .)
    LBRACE          reduce using rule 239 (Prec5Expr_ -> UExpr .)
    PIPE            reduce using rule 239 (Prec5Expr_ -> UExpr .)
    RBRACK          reduce using rule 239 (Prec5Expr_ -> UExpr .)
    RPAREN          reduce using rule 239 (Prec5Expr_ -> UExpr .)
    RIGHT_ANGLE     reduce using rule 239 (Prec5Expr_ -> UExpr .)
    RBRACE          reduce using rule 239 (Prec5Expr_ -> UExpr .)
    COLON           reduce using rule 239 (Prec5Expr_ -> UExpr .)
    DDD             reduce using rule 239 (Prec5Expr_ -> UExpr .)


state 42

    (225) PExprNoParen -> ForCompExpr .

    DOT             reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    LBRACK          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    LEFT_LEFT       reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    LPAREN          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    DIVIDE          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    MOD             reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    SHL             reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    SHR             reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    AMPERS          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    AMPCAR          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    TIMES           reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    PLUS            reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    MINUS           reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    XOR             reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    OR              reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    EQEQ            reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    NOTEQ           reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    LEQ             reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    GEQ             reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    GREAT           reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    LESS            reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    AMPAMP          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    OROR            reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    COMMA           reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    SEMICOL         reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    RPAREN          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    LBRACE          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    DDD             reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    PLUSEQ          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    MINUSEQ         reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    TIMESEQ         reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    DIVIDEEQ        reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    MODEQ           reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    OREQ            reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    AMPEQ           reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    CAREQ           reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    SHL_ASSIGN      reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    SHR_ASSIGN      reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    AMPCAREQ        reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    PLUSPLUS        reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    MINUSMIN        reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    EQUAL           reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    COLONEQ         reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    PIPE            reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    RBRACK          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    RIGHT_ANGLE     reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    RBRACE          reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    COLON           reduce using rule 225 (PExprNoParen -> ForCompExpr .)
    RIGHT_RIGHT     reduce using rule 225 (PExprNoParen -> ForCompExpr .)


state 43

    (200) NonDeclStmt -> SwitchStmt .

    SEMICOL         reduce using rule 200 (NonDeclStmt -> SwitchStmt .)


state 44

    (93) OtherType -> LBRACK . OExpr RBRACK NType
    (275) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (148) OExpr -> .
    (149) OExpr -> . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 148 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 141
    PExpr                          shift and go to state 60

state 45

    (205) NonDeclStmt -> CONTINUE . ONewName
    (146) ONewName -> .
    (147) ONewName -> . NewName
    (131) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 146 (ONewName -> .)
    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 142
    ONewName                       shift and go to state 144

state 46

    (270) UExpr -> NOT . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 145
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 47

    (263) Expr -> CONSTANTS .

    OROR            reduce using rule 263 (Expr -> CONSTANTS .)
    COLON           reduce using rule 263 (Expr -> CONSTANTS .)
    EQUAL           reduce using rule 263 (Expr -> CONSTANTS .)
    COLONEQ         reduce using rule 263 (Expr -> CONSTANTS .)
    COMMA           reduce using rule 263 (Expr -> CONSTANTS .)
    SEMICOL         reduce using rule 263 (Expr -> CONSTANTS .)
    LBRACE          reduce using rule 263 (Expr -> CONSTANTS .)
    RPAREN          reduce using rule 263 (Expr -> CONSTANTS .)
    RIGHT_RIGHT     reduce using rule 263 (Expr -> CONSTANTS .)
    PLUSEQ          reduce using rule 263 (Expr -> CONSTANTS .)
    MINUSEQ         reduce using rule 263 (Expr -> CONSTANTS .)
    TIMESEQ         reduce using rule 263 (Expr -> CONSTANTS .)
    DIVIDEEQ        reduce using rule 263 (Expr -> CONSTANTS .)
    MODEQ           reduce using rule 263 (Expr -> CONSTANTS .)
    OREQ            reduce using rule 263 (Expr -> CONSTANTS .)
    AMPEQ           reduce using rule 263 (Expr -> CONSTANTS .)
    CAREQ           reduce using rule 263 (Expr -> CONSTANTS .)
    SHL_ASSIGN      reduce using rule 263 (Expr -> CONSTANTS .)
    SHR_ASSIGN      reduce using rule 263 (Expr -> CONSTANTS .)
    AMPCAREQ        reduce using rule 263 (Expr -> CONSTANTS .)
    PLUSPLUS        reduce using rule 263 (Expr -> CONSTANTS .)
    MINUSMIN        reduce using rule 263 (Expr -> CONSTANTS .)
    RBRACK          reduce using rule 263 (Expr -> CONSTANTS .)
    RIGHT_ANGLE     reduce using rule 263 (Expr -> CONSTANTS .)
    DDD             reduce using rule 263 (Expr -> CONSTANTS .)
    RBRACE          reduce using rule 263 (Expr -> CONSTANTS .)
    PIPE            reduce using rule 263 (Expr -> CONSTANTS .)


state 48

    (210) PExpr -> PExprNoParen .

    DOT             reduce using rule 210 (PExpr -> PExprNoParen .)
    LBRACK          reduce using rule 210 (PExpr -> PExprNoParen .)
    LEFT_LEFT       reduce using rule 210 (PExpr -> PExprNoParen .)
    LPAREN          reduce using rule 210 (PExpr -> PExprNoParen .)
    DIVIDE          reduce using rule 210 (PExpr -> PExprNoParen .)
    MOD             reduce using rule 210 (PExpr -> PExprNoParen .)
    SHL             reduce using rule 210 (PExpr -> PExprNoParen .)
    SHR             reduce using rule 210 (PExpr -> PExprNoParen .)
    AMPERS          reduce using rule 210 (PExpr -> PExprNoParen .)
    AMPCAR          reduce using rule 210 (PExpr -> PExprNoParen .)
    TIMES           reduce using rule 210 (PExpr -> PExprNoParen .)
    PLUS            reduce using rule 210 (PExpr -> PExprNoParen .)
    MINUS           reduce using rule 210 (PExpr -> PExprNoParen .)
    XOR             reduce using rule 210 (PExpr -> PExprNoParen .)
    OR              reduce using rule 210 (PExpr -> PExprNoParen .)
    EQEQ            reduce using rule 210 (PExpr -> PExprNoParen .)
    NOTEQ           reduce using rule 210 (PExpr -> PExprNoParen .)
    LEQ             reduce using rule 210 (PExpr -> PExprNoParen .)
    GEQ             reduce using rule 210 (PExpr -> PExprNoParen .)
    GREAT           reduce using rule 210 (PExpr -> PExprNoParen .)
    LESS            reduce using rule 210 (PExpr -> PExprNoParen .)
    AMPAMP          reduce using rule 210 (PExpr -> PExprNoParen .)
    OROR            reduce using rule 210 (PExpr -> PExprNoParen .)
    COMMA           reduce using rule 210 (PExpr -> PExprNoParen .)
    SEMICOL         reduce using rule 210 (PExpr -> PExprNoParen .)
    RPAREN          reduce using rule 210 (PExpr -> PExprNoParen .)
    RBRACK          reduce using rule 210 (PExpr -> PExprNoParen .)
    LBRACE          reduce using rule 210 (PExpr -> PExprNoParen .)
    PLUSEQ          reduce using rule 210 (PExpr -> PExprNoParen .)
    MINUSEQ         reduce using rule 210 (PExpr -> PExprNoParen .)
    TIMESEQ         reduce using rule 210 (PExpr -> PExprNoParen .)
    DIVIDEEQ        reduce using rule 210 (PExpr -> PExprNoParen .)
    MODEQ           reduce using rule 210 (PExpr -> PExprNoParen .)
    OREQ            reduce using rule 210 (PExpr -> PExprNoParen .)
    AMPEQ           reduce using rule 210 (PExpr -> PExprNoParen .)
    CAREQ           reduce using rule 210 (PExpr -> PExprNoParen .)
    SHL_ASSIGN      reduce using rule 210 (PExpr -> PExprNoParen .)
    SHR_ASSIGN      reduce using rule 210 (PExpr -> PExprNoParen .)
    AMPCAREQ        reduce using rule 210 (PExpr -> PExprNoParen .)
    PLUSPLUS        reduce using rule 210 (PExpr -> PExprNoParen .)
    MINUSMIN        reduce using rule 210 (PExpr -> PExprNoParen .)
    EQUAL           reduce using rule 210 (PExpr -> PExprNoParen .)
    COLONEQ         reduce using rule 210 (PExpr -> PExprNoParen .)
    RBRACE          reduce using rule 210 (PExpr -> PExprNoParen .)
    PIPE            reduce using rule 210 (PExpr -> PExprNoParen .)
    RIGHT_ANGLE     reduce using rule 210 (PExpr -> PExprNoParen .)
    COLON           reduce using rule 210 (PExpr -> PExprNoParen .)
    RIGHT_RIGHT     reduce using rule 210 (PExpr -> PExprNoParen .)
    DDD             reduce using rule 210 (PExpr -> PExprNoParen .)


state 49

    (97) ChannelType -> CHAN . NewType
    (98) ChannelType -> CHAN . LMINUS NewType
    (226) NewType -> . TYPE

    LMINUS          shift and go to state 146
    TYPE            shift and go to state 61

    NewType                        shift and go to state 147

state 50

    (7) Imports -> Import . SEMICOL

    SEMICOL         shift and go to state 148


state 51

    (238) SwitchStmt -> SWITCH . IfHeader LBRACE CaseBlockList RBRACE
    (76) IfHeader -> . OSimpleStmt
    (77) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (144) OSimpleStmt -> .
    (145) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 144 (OSimpleStmt -> .)
    LBRACE          reduce using rule 144 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 149
    Prec3Expr_                     shift and go to state 10
    IfHeader                       shift and go to state 150
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    PExpr                          shift and go to state 60

state 52

    (164) DeclList -> Declaration . SEMICOL

    SEMICOL         shift and go to state 151


state 53

    (272) UExpr -> PLUS . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 152
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 54

    (131) NewName -> IDENTIFIER .
    (185) Name -> IDENTIFIER .

    COLON           reduce using rule 131 (NewName -> IDENTIFIER .)
    DOT             reduce using rule 185 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 185 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 185 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 185 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 185 (Name -> IDENTIFIER .)
    MOD             reduce using rule 185 (Name -> IDENTIFIER .)
    SHL             reduce using rule 185 (Name -> IDENTIFIER .)
    SHR             reduce using rule 185 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 185 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 185 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 185 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 185 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 185 (Name -> IDENTIFIER .)
    XOR             reduce using rule 185 (Name -> IDENTIFIER .)
    OR              reduce using rule 185 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 185 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 185 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 185 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 185 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 185 (Name -> IDENTIFIER .)
    LESS            reduce using rule 185 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 185 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 185 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 185 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 185 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 185 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 185 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 185 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 185 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 185 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 185 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 185 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 185 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 185 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 185 (Name -> IDENTIFIER .)
    OROR            reduce using rule 185 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 185 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 185 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 185 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 185 (Name -> IDENTIFIER .)


state 55

    (222) PExprNoParen -> CompType . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LEFT_LEFT       shift and go to state 153


state 56

    (94) OtherType -> StructType .

    EQUAL           reduce using rule 94 (OtherType -> StructType .)
    SEMICOL         reduce using rule 94 (OtherType -> StructType .)
    RPAREN          reduce using rule 94 (OtherType -> StructType .)
    LBRACE          reduce using rule 94 (OtherType -> StructType .)
    DDD             reduce using rule 94 (OtherType -> StructType .)
    COMMA           reduce using rule 94 (OtherType -> StructType .)
    LEFT_ANGLE      reduce using rule 94 (OtherType -> StructType .)
    LEFT_LEFT       reduce using rule 94 (OtherType -> StructType .)
    OR_RIGHT        reduce using rule 94 (OtherType -> StructType .)
    COLON           reduce using rule 94 (OtherType -> StructType .)
    COLONEQ         reduce using rule 94 (OtherType -> StructType .)
    RBRACE          reduce using rule 94 (OtherType -> StructType .)
    INTEGER         reduce using rule 94 (OtherType -> StructType .)
    FLOAT           reduce using rule 94 (OtherType -> StructType .)
    STRING          reduce using rule 94 (OtherType -> StructType .)


state 57

    (3) SourceFile -> cmtlist PackageClause cmtlist DeclList . cmtlist
    (165) DeclList -> DeclList . cmtlist Declaration SEMICOL
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    $end            reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 154

state 58

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports . cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist Imports . cmtlist
    (8) Imports -> Imports . cmtlist Import SEMICOL
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    IMPORT          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    $end            reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 155

state 59

    (204) NonDeclStmt -> BREAK . ONewName
    (146) ONewName -> .
    (147) ONewName -> . NewName
    (131) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 146 (ONewName -> .)
    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 142
    ONewName                       shift and go to state 156

state 60

    (268) UExpr -> PExpr .
    (214) PExprNoParen -> PExpr . DOT IDENTIFIER
    (215) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> PExpr . DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (218) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (223) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (276) PseudoCall -> PExpr . LPAREN RPAREN
    (277) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN

    DIVIDE          reduce using rule 268 (UExpr -> PExpr .)
    MOD             reduce using rule 268 (UExpr -> PExpr .)
    SHL             reduce using rule 268 (UExpr -> PExpr .)
    SHR             reduce using rule 268 (UExpr -> PExpr .)
    AMPERS          reduce using rule 268 (UExpr -> PExpr .)
    AMPCAR          reduce using rule 268 (UExpr -> PExpr .)
    TIMES           reduce using rule 268 (UExpr -> PExpr .)
    PLUS            reduce using rule 268 (UExpr -> PExpr .)
    MINUS           reduce using rule 268 (UExpr -> PExpr .)
    XOR             reduce using rule 268 (UExpr -> PExpr .)
    OR              reduce using rule 268 (UExpr -> PExpr .)
    EQEQ            reduce using rule 268 (UExpr -> PExpr .)
    NOTEQ           reduce using rule 268 (UExpr -> PExpr .)
    LEQ             reduce using rule 268 (UExpr -> PExpr .)
    GEQ             reduce using rule 268 (UExpr -> PExpr .)
    GREAT           reduce using rule 268 (UExpr -> PExpr .)
    LESS            reduce using rule 268 (UExpr -> PExpr .)
    AMPAMP          reduce using rule 268 (UExpr -> PExpr .)
    PLUSEQ          reduce using rule 268 (UExpr -> PExpr .)
    MINUSEQ         reduce using rule 268 (UExpr -> PExpr .)
    TIMESEQ         reduce using rule 268 (UExpr -> PExpr .)
    DIVIDEEQ        reduce using rule 268 (UExpr -> PExpr .)
    MODEQ           reduce using rule 268 (UExpr -> PExpr .)
    OREQ            reduce using rule 268 (UExpr -> PExpr .)
    AMPEQ           reduce using rule 268 (UExpr -> PExpr .)
    CAREQ           reduce using rule 268 (UExpr -> PExpr .)
    SHL_ASSIGN      reduce using rule 268 (UExpr -> PExpr .)
    SHR_ASSIGN      reduce using rule 268 (UExpr -> PExpr .)
    AMPCAREQ        reduce using rule 268 (UExpr -> PExpr .)
    PLUSPLUS        reduce using rule 268 (UExpr -> PExpr .)
    MINUSMIN        reduce using rule 268 (UExpr -> PExpr .)
    OROR            reduce using rule 268 (UExpr -> PExpr .)
    SEMICOL         reduce using rule 268 (UExpr -> PExpr .)
    EQUAL           reduce using rule 268 (UExpr -> PExpr .)
    COLONEQ         reduce using rule 268 (UExpr -> PExpr .)
    COMMA           reduce using rule 268 (UExpr -> PExpr .)
    LBRACE          reduce using rule 268 (UExpr -> PExpr .)
    PIPE            reduce using rule 268 (UExpr -> PExpr .)
    RBRACK          reduce using rule 268 (UExpr -> PExpr .)
    RPAREN          reduce using rule 268 (UExpr -> PExpr .)
    RIGHT_ANGLE     reduce using rule 268 (UExpr -> PExpr .)
    RBRACE          reduce using rule 268 (UExpr -> PExpr .)
    COLON           reduce using rule 268 (UExpr -> PExpr .)
    RIGHT_RIGHT     reduce using rule 268 (UExpr -> PExpr .)
    DDD             reduce using rule 268 (UExpr -> PExpr .)
    DOT             shift and go to state 160
    LBRACK          shift and go to state 157
    LEFT_LEFT       shift and go to state 159
    LPAREN          shift and go to state 158


state 61

    (226) NewType -> TYPE .

    LPAREN          reduce using rule 226 (NewType -> TYPE .)
    IDENTIFIER      reduce using rule 226 (NewType -> TYPE .)
    COMMA           reduce using rule 226 (NewType -> TYPE .)
    OR_RIGHT        reduce using rule 226 (NewType -> TYPE .)
    LBRACE          reduce using rule 226 (NewType -> TYPE .)
    SEMICOL         reduce using rule 226 (NewType -> TYPE .)
    RPAREN          reduce using rule 226 (NewType -> TYPE .)
    INTEGER         reduce using rule 226 (NewType -> TYPE .)
    FLOAT           reduce using rule 226 (NewType -> TYPE .)
    STRING          reduce using rule 226 (NewType -> TYPE .)
    RBRACE          reduce using rule 226 (NewType -> TYPE .)
    LEFT_ANGLE      reduce using rule 226 (NewType -> TYPE .)
    EQUAL           reduce using rule 226 (NewType -> TYPE .)
    DDD             reduce using rule 226 (NewType -> TYPE .)
    COLON           reduce using rule 226 (NewType -> TYPE .)
    COLONEQ         reduce using rule 226 (NewType -> TYPE .)
    LEFT_LEFT       reduce using rule 226 (NewType -> TYPE .)


state 62

    (227) ConvType -> FuncType .
    (152) FuncLiteralDecl -> FuncType .

    LEFT_ANGLE      reduce using rule 227 (ConvType -> FuncType .)
    LBRACE          reduce using rule 152 (FuncLiteralDecl -> FuncType .)


state 63

    (198) NonDeclStmt -> SimpleStmt .

    SEMICOL         reduce using rule 198 (NonDeclStmt -> SimpleStmt .)


state 64

    (199) NonDeclStmt -> ForStmt .

    SEMICOL         reduce using rule 199 (NonDeclStmt -> ForStmt .)


state 65

    (28) CommonDecl -> NewType . TypeDecl
    (29) CommonDecl -> NewType . LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> NewType . LPAREN RPAREN
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    LPAREN          shift and go to state 162
    IDENTIFIER      shift and go to state 164

    TypeDecl                       shift and go to state 161
    TypeDeclName                   shift and go to state 163

state 66

    (206) NonDeclStmt -> GOTO . NewName
    (131) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 165

state 67

    (265) Expr -> Arrayexp .

    OROR            reduce using rule 265 (Expr -> Arrayexp .)
    COLON           reduce using rule 265 (Expr -> Arrayexp .)
    EQUAL           reduce using rule 265 (Expr -> Arrayexp .)
    COLONEQ         reduce using rule 265 (Expr -> Arrayexp .)
    COMMA           reduce using rule 265 (Expr -> Arrayexp .)
    SEMICOL         reduce using rule 265 (Expr -> Arrayexp .)
    LBRACE          reduce using rule 265 (Expr -> Arrayexp .)
    RPAREN          reduce using rule 265 (Expr -> Arrayexp .)
    RIGHT_RIGHT     reduce using rule 265 (Expr -> Arrayexp .)
    PLUSEQ          reduce using rule 265 (Expr -> Arrayexp .)
    MINUSEQ         reduce using rule 265 (Expr -> Arrayexp .)
    TIMESEQ         reduce using rule 265 (Expr -> Arrayexp .)
    DIVIDEEQ        reduce using rule 265 (Expr -> Arrayexp .)
    MODEQ           reduce using rule 265 (Expr -> Arrayexp .)
    OREQ            reduce using rule 265 (Expr -> Arrayexp .)
    AMPEQ           reduce using rule 265 (Expr -> Arrayexp .)
    CAREQ           reduce using rule 265 (Expr -> Arrayexp .)
    SHL_ASSIGN      reduce using rule 265 (Expr -> Arrayexp .)
    SHR_ASSIGN      reduce using rule 265 (Expr -> Arrayexp .)
    AMPCAREQ        reduce using rule 265 (Expr -> Arrayexp .)
    PLUSPLUS        reduce using rule 265 (Expr -> Arrayexp .)
    MINUSMIN        reduce using rule 265 (Expr -> Arrayexp .)
    RBRACK          reduce using rule 265 (Expr -> Arrayexp .)
    RIGHT_ANGLE     reduce using rule 265 (Expr -> Arrayexp .)
    DDD             reduce using rule 265 (Expr -> Arrayexp .)
    RBRACE          reduce using rule 265 (Expr -> Arrayexp .)
    PIPE            reduce using rule 265 (Expr -> Arrayexp .)


state 68

    (213) PExprNoParen -> Name .

    DOT             reduce using rule 213 (PExprNoParen -> Name .)
    LBRACK          reduce using rule 213 (PExprNoParen -> Name .)
    LEFT_LEFT       reduce using rule 213 (PExprNoParen -> Name .)
    LPAREN          reduce using rule 213 (PExprNoParen -> Name .)
    DIVIDE          reduce using rule 213 (PExprNoParen -> Name .)
    MOD             reduce using rule 213 (PExprNoParen -> Name .)
    SHL             reduce using rule 213 (PExprNoParen -> Name .)
    SHR             reduce using rule 213 (PExprNoParen -> Name .)
    AMPERS          reduce using rule 213 (PExprNoParen -> Name .)
    AMPCAR          reduce using rule 213 (PExprNoParen -> Name .)
    TIMES           reduce using rule 213 (PExprNoParen -> Name .)
    PLUS            reduce using rule 213 (PExprNoParen -> Name .)
    MINUS           reduce using rule 213 (PExprNoParen -> Name .)
    XOR             reduce using rule 213 (PExprNoParen -> Name .)
    OR              reduce using rule 213 (PExprNoParen -> Name .)
    EQEQ            reduce using rule 213 (PExprNoParen -> Name .)
    NOTEQ           reduce using rule 213 (PExprNoParen -> Name .)
    LEQ             reduce using rule 213 (PExprNoParen -> Name .)
    GEQ             reduce using rule 213 (PExprNoParen -> Name .)
    GREAT           reduce using rule 213 (PExprNoParen -> Name .)
    LESS            reduce using rule 213 (PExprNoParen -> Name .)
    AMPAMP          reduce using rule 213 (PExprNoParen -> Name .)
    OROR            reduce using rule 213 (PExprNoParen -> Name .)
    COMMA           reduce using rule 213 (PExprNoParen -> Name .)
    SEMICOL         reduce using rule 213 (PExprNoParen -> Name .)
    RPAREN          reduce using rule 213 (PExprNoParen -> Name .)
    LBRACE          reduce using rule 213 (PExprNoParen -> Name .)
    DDD             reduce using rule 213 (PExprNoParen -> Name .)
    PLUSEQ          reduce using rule 213 (PExprNoParen -> Name .)
    MINUSEQ         reduce using rule 213 (PExprNoParen -> Name .)
    TIMESEQ         reduce using rule 213 (PExprNoParen -> Name .)
    DIVIDEEQ        reduce using rule 213 (PExprNoParen -> Name .)
    MODEQ           reduce using rule 213 (PExprNoParen -> Name .)
    OREQ            reduce using rule 213 (PExprNoParen -> Name .)
    AMPEQ           reduce using rule 213 (PExprNoParen -> Name .)
    CAREQ           reduce using rule 213 (PExprNoParen -> Name .)
    SHL_ASSIGN      reduce using rule 213 (PExprNoParen -> Name .)
    SHR_ASSIGN      reduce using rule 213 (PExprNoParen -> Name .)
    AMPCAREQ        reduce using rule 213 (PExprNoParen -> Name .)
    PLUSPLUS        reduce using rule 213 (PExprNoParen -> Name .)
    MINUSMIN        reduce using rule 213 (PExprNoParen -> Name .)
    EQUAL           reduce using rule 213 (PExprNoParen -> Name .)
    COLONEQ         reduce using rule 213 (PExprNoParen -> Name .)
    PIPE            reduce using rule 213 (PExprNoParen -> Name .)
    RBRACK          reduce using rule 213 (PExprNoParen -> Name .)
    RIGHT_ANGLE     reduce using rule 213 (PExprNoParen -> Name .)
    RBRACE          reduce using rule 213 (PExprNoParen -> Name .)
    COLON           reduce using rule 213 (PExprNoParen -> Name .)
    RIGHT_RIGHT     reduce using rule 213 (PExprNoParen -> Name .)


state 69

    (20) Declaration -> NonDeclStmt .

    SEMICOL         reduce using rule 20 (Declaration -> NonDeclStmt .)


state 70

    (41) SimpleStmt -> Expr .
    (42) SimpleStmt -> Expr . PLUSEQ Expr
    (43) SimpleStmt -> Expr . MINUSEQ Expr
    (44) SimpleStmt -> Expr . TIMESEQ Expr
    (45) SimpleStmt -> Expr . DIVIDEEQ Expr
    (46) SimpleStmt -> Expr . MODEQ Expr
    (47) SimpleStmt -> Expr . OREQ Expr
    (48) SimpleStmt -> Expr . AMPEQ Expr
    (49) SimpleStmt -> Expr . CAREQ Expr
    (50) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (51) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (52) SimpleStmt -> Expr . AMPCAREQ Expr
    (55) SimpleStmt -> Expr . PLUSPLUS
    (56) SimpleStmt -> Expr . MINUSMIN
    (262) Expr -> Expr . OROR Prec2Expr_
    (154) ExprList -> Expr .

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 169
    MINUSEQ         shift and go to state 173
    TIMESEQ         shift and go to state 168
    DIVIDEEQ        shift and go to state 179
    MODEQ           shift and go to state 170
    OREQ            shift and go to state 172
    AMPEQ           shift and go to state 175
    CAREQ           shift and go to state 167
    SHL_ASSIGN      shift and go to state 177
    SHR_ASSIGN      shift and go to state 171
    AMPCAREQ        shift and go to state 176
    PLUSPLUS        shift and go to state 178
    MINUSMIN        shift and go to state 174
    OROR            shift and go to state 166
    EQUAL           reduce using rule 154 (ExprList -> Expr .)
    COLONEQ         reduce using rule 154 (ExprList -> Expr .)
    COMMA           reduce using rule 154 (ExprList -> Expr .)


state 71

    (274) UExpr -> XOR . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 180
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 72

    (271) UExpr -> TIMES . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 181
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 73

    (211) PExpr -> LPAREN . ExprOrType RPAREN
    (235) ExprOrType -> . Expr
    (236) ExprOrType -> . NonExprType
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (90) NonExprType -> . FuncType
    (91) NonExprType -> . OtherType
    (92) NonExprType -> . TIMES NonExprType
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 183
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 74

    (78) IfStmt -> IF . IfHeader LoopBody ElseIfList
    (76) IfHeader -> . OSimpleStmt
    (77) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (144) OSimpleStmt -> .
    (145) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 144 (OSimpleStmt -> .)
    LBRACE          reduce using rule 144 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 149
    Prec3Expr_                     shift and go to state 10
    IfHeader                       shift and go to state 188
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    PExpr                          shift and go to state 60

state 75

    (100) StructType -> STRUCT . LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> STRUCT . LBRACE RBRACE

    LBRACE          shift and go to state 189


state 76

    (161) Literal -> FLOAT .

    DOT             reduce using rule 161 (Literal -> FLOAT .)
    LBRACK          reduce using rule 161 (Literal -> FLOAT .)
    LEFT_LEFT       reduce using rule 161 (Literal -> FLOAT .)
    LPAREN          reduce using rule 161 (Literal -> FLOAT .)
    DIVIDE          reduce using rule 161 (Literal -> FLOAT .)
    MOD             reduce using rule 161 (Literal -> FLOAT .)
    SHL             reduce using rule 161 (Literal -> FLOAT .)
    SHR             reduce using rule 161 (Literal -> FLOAT .)
    AMPERS          reduce using rule 161 (Literal -> FLOAT .)
    AMPCAR          reduce using rule 161 (Literal -> FLOAT .)
    TIMES           reduce using rule 161 (Literal -> FLOAT .)
    PLUS            reduce using rule 161 (Literal -> FLOAT .)
    MINUS           reduce using rule 161 (Literal -> FLOAT .)
    XOR             reduce using rule 161 (Literal -> FLOAT .)
    OR              reduce using rule 161 (Literal -> FLOAT .)
    EQEQ            reduce using rule 161 (Literal -> FLOAT .)
    NOTEQ           reduce using rule 161 (Literal -> FLOAT .)
    LEQ             reduce using rule 161 (Literal -> FLOAT .)
    GEQ             reduce using rule 161 (Literal -> FLOAT .)
    GREAT           reduce using rule 161 (Literal -> FLOAT .)
    LESS            reduce using rule 161 (Literal -> FLOAT .)
    AMPAMP          reduce using rule 161 (Literal -> FLOAT .)
    PLUSEQ          reduce using rule 161 (Literal -> FLOAT .)
    MINUSEQ         reduce using rule 161 (Literal -> FLOAT .)
    TIMESEQ         reduce using rule 161 (Literal -> FLOAT .)
    DIVIDEEQ        reduce using rule 161 (Literal -> FLOAT .)
    MODEQ           reduce using rule 161 (Literal -> FLOAT .)
    OREQ            reduce using rule 161 (Literal -> FLOAT .)
    AMPEQ           reduce using rule 161 (Literal -> FLOAT .)
    CAREQ           reduce using rule 161 (Literal -> FLOAT .)
    SHL_ASSIGN      reduce using rule 161 (Literal -> FLOAT .)
    SHR_ASSIGN      reduce using rule 161 (Literal -> FLOAT .)
    AMPCAREQ        reduce using rule 161 (Literal -> FLOAT .)
    PLUSPLUS        reduce using rule 161 (Literal -> FLOAT .)
    MINUSMIN        reduce using rule 161 (Literal -> FLOAT .)
    OROR            reduce using rule 161 (Literal -> FLOAT .)
    SEMICOL         reduce using rule 161 (Literal -> FLOAT .)
    EQUAL           reduce using rule 161 (Literal -> FLOAT .)
    COLONEQ         reduce using rule 161 (Literal -> FLOAT .)
    COMMA           reduce using rule 161 (Literal -> FLOAT .)
    LBRACE          reduce using rule 161 (Literal -> FLOAT .)
    PIPE            reduce using rule 161 (Literal -> FLOAT .)
    RBRACK          reduce using rule 161 (Literal -> FLOAT .)
    RPAREN          reduce using rule 161 (Literal -> FLOAT .)
    RIGHT_ANGLE     reduce using rule 161 (Literal -> FLOAT .)
    RBRACE          reduce using rule 161 (Literal -> FLOAT .)
    COLON           reduce using rule 161 (Literal -> FLOAT .)
    RIGHT_RIGHT     reduce using rule 161 (Literal -> FLOAT .)
    DDD             reduce using rule 161 (Literal -> FLOAT .)


state 77

    (6) PackageClause -> PACKAGE IDENTIFIER SEMICOL .

    COMMENT         reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IMPORT          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANT        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    VAR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FUNCTION        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FALLTHROUGH     reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    BREAK           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONTINUE        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    GOTO            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    RETURN          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TYPE            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FOR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    SWITCH          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IF              reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANTS       reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IDENTIFIER      reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LMINUS          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LBRACK          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRUCT          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTERFACE       reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CHAN            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    AMPERS          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    NOT             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TIMES           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    PLUS            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MINUS           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    XOR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LPAREN          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTEGER         reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FLOAT           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRING          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    $end            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)


state 78

    (256) Prec3Expr_ -> Prec3Expr_ GEQ . Prec4Expr_
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 190
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 79

    (255) Prec3Expr_ -> Prec3Expr_ LEQ . Prec4Expr_
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 191
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 80

    (253) Prec3Expr_ -> Prec3Expr_ EQEQ . Prec4Expr_
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 192
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 81

    (258) Prec3Expr_ -> Prec3Expr_ LESS . Prec4Expr_
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 193
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 82

    (257) Prec3Expr_ -> Prec3Expr_ GREAT . Prec4Expr_
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 194
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 83

    (254) Prec3Expr_ -> Prec3Expr_ NOTEQ . Prec4Expr_
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 195
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 84

    (221) PExprNoParen -> ConvType LEFT_ANGLE . Expr OComma RIGHT_ANGLE
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 196
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 85

    (202) NonDeclStmt -> LabelName COLON . Stmt
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 197
    NewType                        shift and go to state 65
    NonDeclStmt                    shift and go to state 201
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NewName                        shift and go to state 34
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 86

    (243) Prec5Expr_ -> Prec5Expr_ SHR . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 202
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 87

    (240) Prec5Expr_ -> Prec5Expr_ DIVIDE . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 203
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 88

    (245) Prec5Expr_ -> Prec5Expr_ AMPCAR . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 204
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 89

    (244) Prec5Expr_ -> Prec5Expr_ AMPERS . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 205
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 90

    (246) Prec5Expr_ -> Prec5Expr_ TIMES . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 206
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 91

    (242) Prec5Expr_ -> Prec5Expr_ SHL . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 207
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 92

    (241) Prec5Expr_ -> Prec5Expr_ MOD . UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 208
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 93

    (12) ImportStmt -> ImportHere . STRING

    STRING          shift and go to state 209


state 94

    (16) ImportHere -> IDENTIFIER .

    STRING          reduce using rule 16 (ImportHere -> IDENTIFIER .)


state 95

    (10) Import -> IMPORT LPAREN . ImportStmtList OSemi RPAREN
    (11) Import -> IMPORT LPAREN . RPAREN
    (13) ImportStmtList -> . ImportStmt
    (14) ImportStmtList -> . ImportStmtList SEMICOL ImportStmt
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    RPAREN          shift and go to state 210
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 94
    DOT             shift and go to state 97

    ImportHere                     shift and go to state 93
    ImportStmt                     shift and go to state 212
    ImportStmtList                 shift and go to state 211

state 96

    (9) Import -> IMPORT ImportStmt .

    SEMICOL         reduce using rule 9 (Import -> IMPORT ImportStmt .)


state 97

    (17) ImportHere -> DOT .

    STRING          reduce using rule 17 (ImportHere -> DOT .)


state 98

    (266) Chexpr -> LMINUS IDENTIFIER .

    OROR            reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    RBRACE          reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    COMMA           reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    COLON           reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    LBRACE          reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    RBRACK          reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    SEMICOL         reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    PLUSEQ          reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    MINUSEQ         reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    TIMESEQ         reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    DIVIDEEQ        reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    MODEQ           reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    OREQ            reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    AMPEQ           reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    CAREQ           reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    AMPCAREQ        reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    PLUSPLUS        reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    MINUSMIN        reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    EQUAL           reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    COLONEQ         reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    DDD             reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    RPAREN          reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    PIPE            reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 266 (Chexpr -> LMINUS IDENTIFIER .)


state 99

    (99) ChannelType -> LMINUS CHAN . NewType
    (226) NewType -> . TYPE

    TYPE            shift and go to state 61

    NewType                        shift and go to state 213

state 100

    (260) Prec2Expr_ -> Prec2Expr_ AMPAMP . Prec3Expr_
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 214
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 101

    (153) FuncLiteral -> FuncLiteralDecl LBRACE . cmtlist StmtList cmtlist RBRACE
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    LBRACE          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    SEMICOL         reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 215

state 102

    (184) DeclName -> IDENTIFIER .

    EQUAL           reduce using rule 184 (DeclName -> IDENTIFIER .)
    COMMA           reduce using rule 184 (DeclName -> IDENTIFIER .)
    LPAREN          reduce using rule 184 (DeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 184 (DeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 184 (DeclName -> IDENTIFIER .)
    TIMES           reduce using rule 184 (DeclName -> IDENTIFIER .)
    TYPE            reduce using rule 184 (DeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 184 (DeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 184 (DeclName -> IDENTIFIER .)
    CHAN            reduce using rule 184 (DeclName -> IDENTIFIER .)
    LMINUS          reduce using rule 184 (DeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 184 (DeclName -> IDENTIFIER .)
    SEMICOL         reduce using rule 184 (DeclName -> IDENTIFIER .)
    RPAREN          reduce using rule 184 (DeclName -> IDENTIFIER .)


state 103

    (172) DeclNameList -> DeclName .

    EQUAL           reduce using rule 172 (DeclNameList -> DeclName .)
    COMMA           reduce using rule 172 (DeclNameList -> DeclName .)
    LPAREN          reduce using rule 172 (DeclNameList -> DeclName .)
    FUNCTION        reduce using rule 172 (DeclNameList -> DeclName .)
    LBRACK          reduce using rule 172 (DeclNameList -> DeclName .)
    TIMES           reduce using rule 172 (DeclNameList -> DeclName .)
    TYPE            reduce using rule 172 (DeclNameList -> DeclName .)
    STRUCT          reduce using rule 172 (DeclNameList -> DeclName .)
    INTERFACE       reduce using rule 172 (DeclNameList -> DeclName .)
    CHAN            reduce using rule 172 (DeclNameList -> DeclName .)
    LMINUS          reduce using rule 172 (DeclNameList -> DeclName .)
    IDENTIFIER      reduce using rule 172 (DeclNameList -> DeclName .)
    SEMICOL         reduce using rule 172 (DeclNameList -> DeclName .)
    RPAREN          reduce using rule 172 (DeclNameList -> DeclName .)


state 104

    (25) CommonDecl -> VAR VarDecl .

    SEMICOL         reduce using rule 25 (CommonDecl -> VAR VarDecl .)


state 105

    (26) CommonDecl -> VAR LPAREN . VarDeclList OSemi RPAREN
    (27) CommonDecl -> VAR LPAREN . RPAREN
    (166) VarDeclList -> . VarDecl
    (167) VarDeclList -> . VarDeclList SEMICOL VarDecl
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (172) DeclNameList -> . DeclName
    (173) DeclNameList -> . DeclNameList COMMA DeclName
    (184) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 216
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    VarDecl                        shift and go to state 217
    VarDeclList                    shift and go to state 218
    DeclNameList                   shift and go to state 106

state 106

    (31) VarDecl -> DeclNameList . NType
    (32) VarDecl -> DeclNameList . NType EQUAL ExprList
    (33) VarDecl -> DeclNameList . EQUAL ExprList
    (173) DeclNameList -> DeclNameList . COMMA DeclName
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    EQUAL           shift and go to state 220
    COMMA           shift and go to state 226
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    NewType                        shift and go to state 222
    FuncType                       shift and go to state 219
    NType                          shift and go to state 228
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    Name                           shift and go to state 227

state 107

    (155) ExprList -> ExprList COMMA . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 231
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 108

    (54) SimpleStmt -> ExprList COLONEQ . ExprList
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 232
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 109

    (53) SimpleStmt -> ExprList EQUAL . ExprList
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 233
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 110

    (151) OExprList -> ExprList .
    (155) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 151 (OExprList -> ExprList .)
    COMMA           shift and go to state 107


state 111

    (207) NonDeclStmt -> RETURN OExprList .

    SEMICOL         reduce using rule 207 (NonDeclStmt -> RETURN OExprList .)


state 112

    (108) FuncType -> FUNCTION . ArgList FuncRes
    (109) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (110) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 128

    ArgList                        shift and go to state 129

state 113

    (185) Name -> IDENTIFIER .

    DOT             reduce using rule 185 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 185 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 185 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 185 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 185 (Name -> IDENTIFIER .)
    MOD             reduce using rule 185 (Name -> IDENTIFIER .)
    SHL             reduce using rule 185 (Name -> IDENTIFIER .)
    SHR             reduce using rule 185 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 185 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 185 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 185 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 185 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 185 (Name -> IDENTIFIER .)
    XOR             reduce using rule 185 (Name -> IDENTIFIER .)
    OR              reduce using rule 185 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 185 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 185 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 185 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 185 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 185 (Name -> IDENTIFIER .)
    LESS            reduce using rule 185 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 185 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 185 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 185 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 185 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 185 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 185 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 185 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 185 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 185 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 185 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 185 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 185 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 185 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 185 (Name -> IDENTIFIER .)
    OROR            reduce using rule 185 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 185 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 185 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 185 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 185 (Name -> IDENTIFIER .)
    LBRACE          reduce using rule 185 (Name -> IDENTIFIER .)
    PIPE            reduce using rule 185 (Name -> IDENTIFIER .)
    RBRACK          reduce using rule 185 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 185 (Name -> IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 185 (Name -> IDENTIFIER .)
    RBRACE          reduce using rule 185 (Name -> IDENTIFIER .)
    COLON           reduce using rule 185 (Name -> IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 185 (Name -> IDENTIFIER .)
    DDD             reduce using rule 185 (Name -> IDENTIFIER .)
    INTEGER         reduce using rule 185 (Name -> IDENTIFIER .)
    FLOAT           reduce using rule 185 (Name -> IDENTIFIER .)
    STRING          reduce using rule 185 (Name -> IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 185 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 185 (Name -> IDENTIFIER .)


state 114

    (154) ExprList -> Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 154 (ExprList -> Expr .)
    SEMICOL         reduce using rule 154 (ExprList -> Expr .)
    LBRACE          reduce using rule 154 (ExprList -> Expr .)
    RPAREN          reduce using rule 154 (ExprList -> Expr .)
    EQUAL           reduce using rule 154 (ExprList -> Expr .)
    COLONEQ         reduce using rule 154 (ExprList -> Expr .)
    RBRACE          reduce using rule 154 (ExprList -> Expr .)
    OROR            shift and go to state 166


state 115

    (22) CommonDecl -> CONSTANT LPAREN . ConstDecl OSemi RPAREN
    (23) CommonDecl -> CONSTANT LPAREN . ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> CONSTANT LPAREN . RPAREN
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (172) DeclNameList -> . DeclName
    (173) DeclNameList -> . DeclNameList COMMA DeclName
    (184) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 234
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    ConstDecl                      shift and go to state 235
    DeclNameList                   shift and go to state 116

state 116

    (34) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (35) ConstDecl -> DeclNameList . NType
    (36) ConstDecl -> DeclNameList . EQUAL ExprList
    (173) DeclNameList -> DeclNameList . COMMA DeclName
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    EQUAL           shift and go to state 236
    COMMA           shift and go to state 226
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    NewType                        shift and go to state 222
    FuncType                       shift and go to state 219
    NType                          shift and go to state 237
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    Name                           shift and go to state 227

state 117

    (21) CommonDecl -> CONSTANT ConstDecl .

    SEMICOL         reduce using rule 21 (CommonDecl -> CONSTANT ConstDecl .)


state 118

    (228) ConvType -> OtherType .
    (229) CompType -> OtherType .

    LEFT_ANGLE      reduce using rule 228 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 229 (CompType -> OtherType .)


state 119

    (99) ChannelType -> LMINUS . CHAN NewType

    CHAN            shift and go to state 99


state 120

    (269) UExpr -> AMPERS UExpr .

    DIVIDE          reduce using rule 269 (UExpr -> AMPERS UExpr .)
    MOD             reduce using rule 269 (UExpr -> AMPERS UExpr .)
    SHL             reduce using rule 269 (UExpr -> AMPERS UExpr .)
    SHR             reduce using rule 269 (UExpr -> AMPERS UExpr .)
    AMPERS          reduce using rule 269 (UExpr -> AMPERS UExpr .)
    AMPCAR          reduce using rule 269 (UExpr -> AMPERS UExpr .)
    TIMES           reduce using rule 269 (UExpr -> AMPERS UExpr .)
    PLUS            reduce using rule 269 (UExpr -> AMPERS UExpr .)
    MINUS           reduce using rule 269 (UExpr -> AMPERS UExpr .)
    XOR             reduce using rule 269 (UExpr -> AMPERS UExpr .)
    OR              reduce using rule 269 (UExpr -> AMPERS UExpr .)
    EQEQ            reduce using rule 269 (UExpr -> AMPERS UExpr .)
    NOTEQ           reduce using rule 269 (UExpr -> AMPERS UExpr .)
    LEQ             reduce using rule 269 (UExpr -> AMPERS UExpr .)
    GEQ             reduce using rule 269 (UExpr -> AMPERS UExpr .)
    GREAT           reduce using rule 269 (UExpr -> AMPERS UExpr .)
    LESS            reduce using rule 269 (UExpr -> AMPERS UExpr .)
    AMPAMP          reduce using rule 269 (UExpr -> AMPERS UExpr .)
    PLUSEQ          reduce using rule 269 (UExpr -> AMPERS UExpr .)
    MINUSEQ         reduce using rule 269 (UExpr -> AMPERS UExpr .)
    TIMESEQ         reduce using rule 269 (UExpr -> AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 269 (UExpr -> AMPERS UExpr .)
    MODEQ           reduce using rule 269 (UExpr -> AMPERS UExpr .)
    OREQ            reduce using rule 269 (UExpr -> AMPERS UExpr .)
    AMPEQ           reduce using rule 269 (UExpr -> AMPERS UExpr .)
    CAREQ           reduce using rule 269 (UExpr -> AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 269 (UExpr -> AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 269 (UExpr -> AMPERS UExpr .)
    AMPCAREQ        reduce using rule 269 (UExpr -> AMPERS UExpr .)
    PLUSPLUS        reduce using rule 269 (UExpr -> AMPERS UExpr .)
    MINUSMIN        reduce using rule 269 (UExpr -> AMPERS UExpr .)
    OROR            reduce using rule 269 (UExpr -> AMPERS UExpr .)
    SEMICOL         reduce using rule 269 (UExpr -> AMPERS UExpr .)
    EQUAL           reduce using rule 269 (UExpr -> AMPERS UExpr .)
    COLONEQ         reduce using rule 269 (UExpr -> AMPERS UExpr .)
    COMMA           reduce using rule 269 (UExpr -> AMPERS UExpr .)
    LBRACE          reduce using rule 269 (UExpr -> AMPERS UExpr .)
    PIPE            reduce using rule 269 (UExpr -> AMPERS UExpr .)
    RBRACK          reduce using rule 269 (UExpr -> AMPERS UExpr .)
    RPAREN          reduce using rule 269 (UExpr -> AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 269 (UExpr -> AMPERS UExpr .)
    RBRACE          reduce using rule 269 (UExpr -> AMPERS UExpr .)
    COLON           reduce using rule 269 (UExpr -> AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 269 (UExpr -> AMPERS UExpr .)
    DDD             reduce using rule 269 (UExpr -> AMPERS UExpr .)


state 121

    (275) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (93) OtherType -> LBRACK . OExpr RBRACK NType
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (148) OExpr -> .
    (149) OExpr -> . Expr
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    RBRACK          reduce using rule 148 (OExpr -> .)
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 238
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 141
    PExpr                          shift and go to state 60

state 122

    (250) Prec4Expr_ -> Prec4Expr_ XOR . Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 239
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 123

    (251) Prec4Expr_ -> Prec4Expr_ OR . Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 240
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 124

    (248) Prec4Expr_ -> Prec4Expr_ PLUS . Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 241
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 125

    (249) Prec4Expr_ -> Prec4Expr_ MINUS . Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 242
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 126

    (273) UExpr -> MINUS UExpr .

    DIVIDE          reduce using rule 273 (UExpr -> MINUS UExpr .)
    MOD             reduce using rule 273 (UExpr -> MINUS UExpr .)
    SHL             reduce using rule 273 (UExpr -> MINUS UExpr .)
    SHR             reduce using rule 273 (UExpr -> MINUS UExpr .)
    AMPERS          reduce using rule 273 (UExpr -> MINUS UExpr .)
    AMPCAR          reduce using rule 273 (UExpr -> MINUS UExpr .)
    TIMES           reduce using rule 273 (UExpr -> MINUS UExpr .)
    PLUS            reduce using rule 273 (UExpr -> MINUS UExpr .)
    MINUS           reduce using rule 273 (UExpr -> MINUS UExpr .)
    XOR             reduce using rule 273 (UExpr -> MINUS UExpr .)
    OR              reduce using rule 273 (UExpr -> MINUS UExpr .)
    EQEQ            reduce using rule 273 (UExpr -> MINUS UExpr .)
    NOTEQ           reduce using rule 273 (UExpr -> MINUS UExpr .)
    LEQ             reduce using rule 273 (UExpr -> MINUS UExpr .)
    GEQ             reduce using rule 273 (UExpr -> MINUS UExpr .)
    GREAT           reduce using rule 273 (UExpr -> MINUS UExpr .)
    LESS            reduce using rule 273 (UExpr -> MINUS UExpr .)
    AMPAMP          reduce using rule 273 (UExpr -> MINUS UExpr .)
    PLUSEQ          reduce using rule 273 (UExpr -> MINUS UExpr .)
    MINUSEQ         reduce using rule 273 (UExpr -> MINUS UExpr .)
    TIMESEQ         reduce using rule 273 (UExpr -> MINUS UExpr .)
    DIVIDEEQ        reduce using rule 273 (UExpr -> MINUS UExpr .)
    MODEQ           reduce using rule 273 (UExpr -> MINUS UExpr .)
    OREQ            reduce using rule 273 (UExpr -> MINUS UExpr .)
    AMPEQ           reduce using rule 273 (UExpr -> MINUS UExpr .)
    CAREQ           reduce using rule 273 (UExpr -> MINUS UExpr .)
    SHL_ASSIGN      reduce using rule 273 (UExpr -> MINUS UExpr .)
    SHR_ASSIGN      reduce using rule 273 (UExpr -> MINUS UExpr .)
    AMPCAREQ        reduce using rule 273 (UExpr -> MINUS UExpr .)
    PLUSPLUS        reduce using rule 273 (UExpr -> MINUS UExpr .)
    MINUSMIN        reduce using rule 273 (UExpr -> MINUS UExpr .)
    OROR            reduce using rule 273 (UExpr -> MINUS UExpr .)
    SEMICOL         reduce using rule 273 (UExpr -> MINUS UExpr .)
    EQUAL           reduce using rule 273 (UExpr -> MINUS UExpr .)
    COLONEQ         reduce using rule 273 (UExpr -> MINUS UExpr .)
    COMMA           reduce using rule 273 (UExpr -> MINUS UExpr .)
    LBRACE          reduce using rule 273 (UExpr -> MINUS UExpr .)
    PIPE            reduce using rule 273 (UExpr -> MINUS UExpr .)
    RBRACK          reduce using rule 273 (UExpr -> MINUS UExpr .)
    RPAREN          reduce using rule 273 (UExpr -> MINUS UExpr .)
    RIGHT_ANGLE     reduce using rule 273 (UExpr -> MINUS UExpr .)
    RBRACE          reduce using rule 273 (UExpr -> MINUS UExpr .)
    COLON           reduce using rule 273 (UExpr -> MINUS UExpr .)
    RIGHT_RIGHT     reduce using rule 273 (UExpr -> MINUS UExpr .)
    DDD             reduce using rule 273 (UExpr -> MINUS UExpr .)


state 127

    (267) Arrayexp -> OtherType LBRACE . ExprList RBRACE
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 243
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 128

    (109) ArgList -> LPAREN . OArgTypeListOComma RPAREN
    (192) OArgTypeListOComma -> .
    (193) OArgTypeListOComma -> . ArgTypeList OComma
    (190) ArgTypeList -> . ArgType
    (191) ArgTypeList -> . ArgTypeList COMMA ArgType
    (186) ArgType -> . NameOrType
    (187) ArgType -> . IDENTIFIER NameOrType
    (188) ArgType -> . IDENTIFIER DotDotDot
    (189) ArgType -> . DotDotDot
    (237) NameOrType -> . NType
    (208) DotDotDot -> . DDD
    (209) DotDotDot -> . DDD NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    RPAREN          reduce using rule 192 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 219
    ArgTypeList                    shift and go to state 244
    PtrType                        shift and go to state 221
    ArgType                        shift and go to state 245
    NewType                        shift and go to state 222
    OArgTypeListOComma             shift and go to state 246
    DotDotDot                      shift and go to state 247
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NType                          shift and go to state 250
    DotName                        shift and go to state 223

state 129

    (108) FuncType -> FUNCTION ArgList . FuncRes
    (110) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (113) FuncRes -> .
    (114) FuncRes -> . FuncRetType
    (115) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (133) FuncRetType -> . FuncType
    (134) FuncRetType -> . OtherType
    (135) FuncRetType -> . PtrType
    (136) FuncRetType -> . DotName
    (137) FuncRetType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    LPAREN          shift and go to state 252
    LEFT_ANGLE      reduce using rule 113 (FuncRes -> .)
    LBRACE          reduce using rule 113 (FuncRes -> .)
    RPAREN          reduce using rule 113 (FuncRes -> .)
    EQUAL           reduce using rule 113 (FuncRes -> .)
    SEMICOL         reduce using rule 113 (FuncRes -> .)
    COMMA           reduce using rule 113 (FuncRes -> .)
    DDD             reduce using rule 113 (FuncRes -> .)
    COLON           reduce using rule 113 (FuncRes -> .)
    COLONEQ         reduce using rule 113 (FuncRes -> .)
    OR_RIGHT        reduce using rule 113 (FuncRes -> .)
    LEFT_LEFT       reduce using rule 113 (FuncRes -> .)
    INTEGER         reduce using rule 113 (FuncRes -> .)
    FLOAT           reduce using rule 113 (FuncRes -> .)
    STRING          reduce using rule 113 (FuncRes -> .)
    RBRACE          reduce using rule 113 (FuncRes -> .)
    LEFT_OR         shift and go to state 258
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    DotName                        shift and go to state 259
    Name                           shift and go to state 227
    FuncType                       shift and go to state 253
    OtherType                      shift and go to state 256
    InterfaceType                  shift and go to state 15
    FuncRes                        shift and go to state 257
    PtrType                        shift and go to state 254
    ChannelType                    shift and go to state 35
    FuncRetType                    shift and go to state 260
    NewType                        shift and go to state 255

state 130

    (104) FuncDecl -> FUNCTION marker2 . FuncDecl_ FuncBody
    (106) FuncDecl_ -> . IDENTIFIER ArgList FuncRes
    (107) FuncDecl_ -> . LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 263
    LEFT_OR         shift and go to state 262

    FuncDecl_                      shift and go to state 261

state 131

    (71) ForHeader -> OSimpleStmt . SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (72) ForHeader -> OSimpleStmt .

    SEMICOL         shift and go to state 264
    LBRACE          reduce using rule 72 (ForHeader -> OSimpleStmt .)


state 132

    (73) ForHeader -> RangeStmt .

    LBRACE          reduce using rule 73 (ForHeader -> RangeStmt .)


state 133

    (68) RangeStmt -> ExprList . EQUAL RANGE Expr
    (69) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (53) SimpleStmt -> ExprList . EQUAL ExprList
    (54) SimpleStmt -> ExprList . COLONEQ ExprList
    (155) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 265
    COLONEQ         shift and go to state 266
    COMMA           shift and go to state 107


state 134

    (75) ForStmt -> FOR ForBody .

    SEMICOL         reduce using rule 75 (ForStmt -> FOR ForBody .)


state 135

    (70) RangeStmt -> RANGE . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 267
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 136

    (145) OSimpleStmt -> SimpleStmt .

    SEMICOL         reduce using rule 145 (OSimpleStmt -> SimpleStmt .)
    LBRACE          reduce using rule 145 (OSimpleStmt -> SimpleStmt .)


state 137

    (74) ForBody -> ForHeader . LoopBody
    (65) LoopBody -> . LBRACE marker1 cmtlist StmtList cmtlist revmarker1 RBRACE

    LBRACE          shift and go to state 268

    LoopBody                       shift and go to state 269

state 138

    (41) SimpleStmt -> Expr .
    (42) SimpleStmt -> Expr . PLUSEQ Expr
    (43) SimpleStmt -> Expr . MINUSEQ Expr
    (44) SimpleStmt -> Expr . TIMESEQ Expr
    (45) SimpleStmt -> Expr . DIVIDEEQ Expr
    (46) SimpleStmt -> Expr . MODEQ Expr
    (47) SimpleStmt -> Expr . OREQ Expr
    (48) SimpleStmt -> Expr . AMPEQ Expr
    (49) SimpleStmt -> Expr . CAREQ Expr
    (50) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (51) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (52) SimpleStmt -> Expr . AMPCAREQ Expr
    (55) SimpleStmt -> Expr . PLUSPLUS
    (56) SimpleStmt -> Expr . MINUSMIN
    (154) ExprList -> Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 169
    MINUSEQ         shift and go to state 173
    TIMESEQ         shift and go to state 168
    DIVIDEEQ        shift and go to state 179
    MODEQ           shift and go to state 170
    OREQ            shift and go to state 172
    AMPEQ           shift and go to state 175
    CAREQ           shift and go to state 167
    SHL_ASSIGN      shift and go to state 177
    SHR_ASSIGN      shift and go to state 171
    AMPCAREQ        shift and go to state 176
    PLUSPLUS        shift and go to state 178
    MINUSMIN        shift and go to state 174
    EQUAL           reduce using rule 154 (ExprList -> Expr .)
    COLONEQ         reduce using rule 154 (ExprList -> Expr .)
    COMMA           reduce using rule 154 (ExprList -> Expr .)
    OROR            shift and go to state 166


state 139

    (102) InterfaceType -> INTERFACE LBRACE . InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> INTERFACE LBRACE . RBRACE
    (118) InterfaceDeclList -> . InterfaceDecl
    (119) InterfaceDeclList -> . InterfaceDeclList SEMICOL InterfaceDecl
    (126) InterfaceDecl -> . NewName InDecl
    (127) InterfaceDecl -> . IDENTIFIER
    (128) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (131) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 270
    IDENTIFIER      shift and go to state 275
    LPAREN          shift and go to state 274

    InterfaceDecl                  shift and go to state 271
    NewName                        shift and go to state 273
    InterfaceDeclList              shift and go to state 272

state 140

    (275) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (149) OExpr -> Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    PIPE            shift and go to state 276
    RBRACK          reduce using rule 149 (OExpr -> Expr .)
    OROR            shift and go to state 166


state 141

    (93) OtherType -> LBRACK OExpr . RBRACK NType

    RBRACK          shift and go to state 277


state 142

    (147) ONewName -> NewName .

    SEMICOL         reduce using rule 147 (ONewName -> NewName .)


state 143

    (131) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 131 (NewName -> IDENTIFIER .)
    COMMA           reduce using rule 131 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 131 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 131 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 131 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 131 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 131 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 131 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 131 (NewName -> IDENTIFIER .)
    CHAN            reduce using rule 131 (NewName -> IDENTIFIER .)
    LMINUS          reduce using rule 131 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 131 (NewName -> IDENTIFIER .)


state 144

    (205) NonDeclStmt -> CONTINUE ONewName .

    SEMICOL         reduce using rule 205 (NonDeclStmt -> CONTINUE ONewName .)


state 145

    (270) UExpr -> NOT UExpr .

    DIVIDE          reduce using rule 270 (UExpr -> NOT UExpr .)
    MOD             reduce using rule 270 (UExpr -> NOT UExpr .)
    SHL             reduce using rule 270 (UExpr -> NOT UExpr .)
    SHR             reduce using rule 270 (UExpr -> NOT UExpr .)
    AMPERS          reduce using rule 270 (UExpr -> NOT UExpr .)
    AMPCAR          reduce using rule 270 (UExpr -> NOT UExpr .)
    TIMES           reduce using rule 270 (UExpr -> NOT UExpr .)
    PLUS            reduce using rule 270 (UExpr -> NOT UExpr .)
    MINUS           reduce using rule 270 (UExpr -> NOT UExpr .)
    XOR             reduce using rule 270 (UExpr -> NOT UExpr .)
    OR              reduce using rule 270 (UExpr -> NOT UExpr .)
    EQEQ            reduce using rule 270 (UExpr -> NOT UExpr .)
    NOTEQ           reduce using rule 270 (UExpr -> NOT UExpr .)
    LEQ             reduce using rule 270 (UExpr -> NOT UExpr .)
    GEQ             reduce using rule 270 (UExpr -> NOT UExpr .)
    GREAT           reduce using rule 270 (UExpr -> NOT UExpr .)
    LESS            reduce using rule 270 (UExpr -> NOT UExpr .)
    AMPAMP          reduce using rule 270 (UExpr -> NOT UExpr .)
    PLUSEQ          reduce using rule 270 (UExpr -> NOT UExpr .)
    MINUSEQ         reduce using rule 270 (UExpr -> NOT UExpr .)
    TIMESEQ         reduce using rule 270 (UExpr -> NOT UExpr .)
    DIVIDEEQ        reduce using rule 270 (UExpr -> NOT UExpr .)
    MODEQ           reduce using rule 270 (UExpr -> NOT UExpr .)
    OREQ            reduce using rule 270 (UExpr -> NOT UExpr .)
    AMPEQ           reduce using rule 270 (UExpr -> NOT UExpr .)
    CAREQ           reduce using rule 270 (UExpr -> NOT UExpr .)
    SHL_ASSIGN      reduce using rule 270 (UExpr -> NOT UExpr .)
    SHR_ASSIGN      reduce using rule 270 (UExpr -> NOT UExpr .)
    AMPCAREQ        reduce using rule 270 (UExpr -> NOT UExpr .)
    PLUSPLUS        reduce using rule 270 (UExpr -> NOT UExpr .)
    MINUSMIN        reduce using rule 270 (UExpr -> NOT UExpr .)
    OROR            reduce using rule 270 (UExpr -> NOT UExpr .)
    SEMICOL         reduce using rule 270 (UExpr -> NOT UExpr .)
    EQUAL           reduce using rule 270 (UExpr -> NOT UExpr .)
    COLONEQ         reduce using rule 270 (UExpr -> NOT UExpr .)
    COMMA           reduce using rule 270 (UExpr -> NOT UExpr .)
    LBRACE          reduce using rule 270 (UExpr -> NOT UExpr .)
    PIPE            reduce using rule 270 (UExpr -> NOT UExpr .)
    RBRACK          reduce using rule 270 (UExpr -> NOT UExpr .)
    RPAREN          reduce using rule 270 (UExpr -> NOT UExpr .)
    RIGHT_ANGLE     reduce using rule 270 (UExpr -> NOT UExpr .)
    RBRACE          reduce using rule 270 (UExpr -> NOT UExpr .)
    COLON           reduce using rule 270 (UExpr -> NOT UExpr .)
    RIGHT_RIGHT     reduce using rule 270 (UExpr -> NOT UExpr .)
    DDD             reduce using rule 270 (UExpr -> NOT UExpr .)


state 146

    (98) ChannelType -> CHAN LMINUS . NewType
    (226) NewType -> . TYPE

    TYPE            shift and go to state 61

    NewType                        shift and go to state 278

state 147

    (97) ChannelType -> CHAN NewType .

    LBRACE          reduce using rule 97 (ChannelType -> CHAN NewType .)
    LEFT_ANGLE      reduce using rule 97 (ChannelType -> CHAN NewType .)
    LEFT_LEFT       reduce using rule 97 (ChannelType -> CHAN NewType .)
    DDD             reduce using rule 97 (ChannelType -> CHAN NewType .)
    COMMA           reduce using rule 97 (ChannelType -> CHAN NewType .)
    RPAREN          reduce using rule 97 (ChannelType -> CHAN NewType .)
    OR_RIGHT        reduce using rule 97 (ChannelType -> CHAN NewType .)
    EQUAL           reduce using rule 97 (ChannelType -> CHAN NewType .)
    SEMICOL         reduce using rule 97 (ChannelType -> CHAN NewType .)
    COLON           reduce using rule 97 (ChannelType -> CHAN NewType .)
    COLONEQ         reduce using rule 97 (ChannelType -> CHAN NewType .)
    RBRACE          reduce using rule 97 (ChannelType -> CHAN NewType .)
    INTEGER         reduce using rule 97 (ChannelType -> CHAN NewType .)
    FLOAT           reduce using rule 97 (ChannelType -> CHAN NewType .)
    STRING          reduce using rule 97 (ChannelType -> CHAN NewType .)


state 148

    (7) Imports -> Import SEMICOL .

    COMMENT         reduce using rule 7 (Imports -> Import SEMICOL .)
    IMPORT          reduce using rule 7 (Imports -> Import SEMICOL .)
    CONSTANT        reduce using rule 7 (Imports -> Import SEMICOL .)
    VAR             reduce using rule 7 (Imports -> Import SEMICOL .)
    FUNCTION        reduce using rule 7 (Imports -> Import SEMICOL .)
    FALLTHROUGH     reduce using rule 7 (Imports -> Import SEMICOL .)
    BREAK           reduce using rule 7 (Imports -> Import SEMICOL .)
    CONTINUE        reduce using rule 7 (Imports -> Import SEMICOL .)
    GOTO            reduce using rule 7 (Imports -> Import SEMICOL .)
    RETURN          reduce using rule 7 (Imports -> Import SEMICOL .)
    TYPE            reduce using rule 7 (Imports -> Import SEMICOL .)
    FOR             reduce using rule 7 (Imports -> Import SEMICOL .)
    SWITCH          reduce using rule 7 (Imports -> Import SEMICOL .)
    IF              reduce using rule 7 (Imports -> Import SEMICOL .)
    CONSTANTS       reduce using rule 7 (Imports -> Import SEMICOL .)
    IDENTIFIER      reduce using rule 7 (Imports -> Import SEMICOL .)
    LMINUS          reduce using rule 7 (Imports -> Import SEMICOL .)
    LBRACK          reduce using rule 7 (Imports -> Import SEMICOL .)
    STRUCT          reduce using rule 7 (Imports -> Import SEMICOL .)
    INTERFACE       reduce using rule 7 (Imports -> Import SEMICOL .)
    CHAN            reduce using rule 7 (Imports -> Import SEMICOL .)
    AMPERS          reduce using rule 7 (Imports -> Import SEMICOL .)
    NOT             reduce using rule 7 (Imports -> Import SEMICOL .)
    TIMES           reduce using rule 7 (Imports -> Import SEMICOL .)
    PLUS            reduce using rule 7 (Imports -> Import SEMICOL .)
    MINUS           reduce using rule 7 (Imports -> Import SEMICOL .)
    XOR             reduce using rule 7 (Imports -> Import SEMICOL .)
    LPAREN          reduce using rule 7 (Imports -> Import SEMICOL .)
    INTEGER         reduce using rule 7 (Imports -> Import SEMICOL .)
    FLOAT           reduce using rule 7 (Imports -> Import SEMICOL .)
    STRING          reduce using rule 7 (Imports -> Import SEMICOL .)
    $end            reduce using rule 7 (Imports -> Import SEMICOL .)


state 149

    (76) IfHeader -> OSimpleStmt .
    (77) IfHeader -> OSimpleStmt . SEMICOL OSimpleStmt

    LBRACE          reduce using rule 76 (IfHeader -> OSimpleStmt .)
    SEMICOL         shift and go to state 279


state 150

    (238) SwitchStmt -> SWITCH IfHeader . LBRACE CaseBlockList RBRACE

    LBRACE          shift and go to state 280


state 151

    (164) DeclList -> Declaration SEMICOL .

    COMMENT         reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    CONSTANT        reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    VAR             reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    FUNCTION        reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    BREAK           reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    CONTINUE        reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    GOTO            reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    RETURN          reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    TYPE            reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    FOR             reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    SWITCH          reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    IF              reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    CONSTANTS       reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    LMINUS          reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    LBRACK          reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    STRUCT          reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    INTERFACE       reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    CHAN            reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    AMPERS          reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    NOT             reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    TIMES           reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    PLUS            reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    MINUS           reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    XOR             reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    LPAREN          reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    INTEGER         reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    FLOAT           reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    STRING          reduce using rule 164 (DeclList -> Declaration SEMICOL .)
    $end            reduce using rule 164 (DeclList -> Declaration SEMICOL .)


state 152

    (272) UExpr -> PLUS UExpr .

    DIVIDE          reduce using rule 272 (UExpr -> PLUS UExpr .)
    MOD             reduce using rule 272 (UExpr -> PLUS UExpr .)
    SHL             reduce using rule 272 (UExpr -> PLUS UExpr .)
    SHR             reduce using rule 272 (UExpr -> PLUS UExpr .)
    AMPERS          reduce using rule 272 (UExpr -> PLUS UExpr .)
    AMPCAR          reduce using rule 272 (UExpr -> PLUS UExpr .)
    TIMES           reduce using rule 272 (UExpr -> PLUS UExpr .)
    PLUS            reduce using rule 272 (UExpr -> PLUS UExpr .)
    MINUS           reduce using rule 272 (UExpr -> PLUS UExpr .)
    XOR             reduce using rule 272 (UExpr -> PLUS UExpr .)
    OR              reduce using rule 272 (UExpr -> PLUS UExpr .)
    EQEQ            reduce using rule 272 (UExpr -> PLUS UExpr .)
    NOTEQ           reduce using rule 272 (UExpr -> PLUS UExpr .)
    LEQ             reduce using rule 272 (UExpr -> PLUS UExpr .)
    GEQ             reduce using rule 272 (UExpr -> PLUS UExpr .)
    GREAT           reduce using rule 272 (UExpr -> PLUS UExpr .)
    LESS            reduce using rule 272 (UExpr -> PLUS UExpr .)
    AMPAMP          reduce using rule 272 (UExpr -> PLUS UExpr .)
    PLUSEQ          reduce using rule 272 (UExpr -> PLUS UExpr .)
    MINUSEQ         reduce using rule 272 (UExpr -> PLUS UExpr .)
    TIMESEQ         reduce using rule 272 (UExpr -> PLUS UExpr .)
    DIVIDEEQ        reduce using rule 272 (UExpr -> PLUS UExpr .)
    MODEQ           reduce using rule 272 (UExpr -> PLUS UExpr .)
    OREQ            reduce using rule 272 (UExpr -> PLUS UExpr .)
    AMPEQ           reduce using rule 272 (UExpr -> PLUS UExpr .)
    CAREQ           reduce using rule 272 (UExpr -> PLUS UExpr .)
    SHL_ASSIGN      reduce using rule 272 (UExpr -> PLUS UExpr .)
    SHR_ASSIGN      reduce using rule 272 (UExpr -> PLUS UExpr .)
    AMPCAREQ        reduce using rule 272 (UExpr -> PLUS UExpr .)
    PLUSPLUS        reduce using rule 272 (UExpr -> PLUS UExpr .)
    MINUSMIN        reduce using rule 272 (UExpr -> PLUS UExpr .)
    OROR            reduce using rule 272 (UExpr -> PLUS UExpr .)
    SEMICOL         reduce using rule 272 (UExpr -> PLUS UExpr .)
    EQUAL           reduce using rule 272 (UExpr -> PLUS UExpr .)
    COLONEQ         reduce using rule 272 (UExpr -> PLUS UExpr .)
    COMMA           reduce using rule 272 (UExpr -> PLUS UExpr .)
    LBRACE          reduce using rule 272 (UExpr -> PLUS UExpr .)
    PIPE            reduce using rule 272 (UExpr -> PLUS UExpr .)
    RBRACK          reduce using rule 272 (UExpr -> PLUS UExpr .)
    RPAREN          reduce using rule 272 (UExpr -> PLUS UExpr .)
    RIGHT_ANGLE     reduce using rule 272 (UExpr -> PLUS UExpr .)
    RBRACE          reduce using rule 272 (UExpr -> PLUS UExpr .)
    COLON           reduce using rule 272 (UExpr -> PLUS UExpr .)
    RIGHT_RIGHT     reduce using rule 272 (UExpr -> PLUS UExpr .)
    DDD             reduce using rule 272 (UExpr -> PLUS UExpr .)


state 153

    (222) PExprNoParen -> CompType LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (182) BracedKeyvalList -> .
    (183) BracedKeyvalList -> . KeyvalList OComma
    (178) KeyvalList -> . Keyval
    (179) KeyvalList -> . BareCompLitExpr
    (180) KeyvalList -> . KeyvalList COMMA Keyval
    (181) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (230) Keyval -> . Expr COLON CompLitExpr
    (231) BareCompLitExpr -> . Expr
    (232) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 182 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 284
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 281
    BareCompLitExpr                shift and go to state 286
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 282

state 154

    (3) SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist .
    (165) DeclList -> DeclList cmtlist . Declaration SEMICOL
    (280) cmtlist -> cmtlist . COMMENT
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (104) FuncDecl -> . FUNCTION marker2 FuncDecl_ FuncBody
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 3 (SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist .)
    COMMENT         shift and go to state 4
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 287
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 155

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist . DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist .
    (8) Imports -> Imports cmtlist . Import SEMICOL
    (280) cmtlist -> cmtlist . COMMENT
    (164) DeclList -> . Declaration SEMICOL
    (165) DeclList -> . DeclList cmtlist Declaration SEMICOL
    (9) Import -> . IMPORT ImportStmt
    (10) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> . IMPORT LPAREN RPAREN
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (104) FuncDecl -> . FUNCTION marker2 FuncDecl_ FuncBody
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 4 (SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist .)
    COMMENT         shift and go to state 4
    IMPORT          shift and go to state 18
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    NewType                        shift and go to state 65
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    IfStmt                         shift and go to state 12
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 52
    ChannelType                    shift and go to state 35
    Import                         shift and go to state 288
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    DeclList                       shift and go to state 289
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 156

    (204) NonDeclStmt -> BREAK ONewName .

    SEMICOL         reduce using rule 204 (NonDeclStmt -> BREAK ONewName .)


state 157

    (217) PExprNoParen -> PExpr LBRACK . Expr RBRACK
    (218) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr COLON OExpr RBRACK
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (148) OExpr -> .
    (149) OExpr -> . Expr
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    COLON           reduce using rule 148 (OExpr -> .)
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 290
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 291
    PExpr                          shift and go to state 60

state 158

    (276) PseudoCall -> PExpr LPAREN . RPAREN
    (277) PseudoCall -> PExpr LPAREN . ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> PExpr LPAREN . ExprOrTypeList DDD OComma RPAREN
    (156) ExprOrTypeList -> . ExprOrType
    (157) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (235) ExprOrType -> . Expr
    (236) ExprOrType -> . NonExprType
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (90) NonExprType -> . FuncType
    (91) NonExprType -> . OtherType
    (92) NonExprType -> . TIMES NonExprType
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (152) FuncLiteralDecl -> . FuncType

    RPAREN          shift and go to state 294
    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    ExprOrTypeList                 shift and go to state 292
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 293
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 159

    (223) PExprNoParen -> PExpr LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (182) BracedKeyvalList -> .
    (183) BracedKeyvalList -> . KeyvalList OComma
    (178) KeyvalList -> . Keyval
    (179) KeyvalList -> . BareCompLitExpr
    (180) KeyvalList -> . KeyvalList COMMA Keyval
    (181) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (230) Keyval -> . Expr COLON CompLitExpr
    (231) BareCompLitExpr -> . Expr
    (232) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 182 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 284
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 281
    BareCompLitExpr                shift and go to state 286
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 295

state 160

    (214) PExprNoParen -> PExpr DOT . IDENTIFIER
    (215) PExprNoParen -> PExpr DOT . LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> PExpr DOT . LPAREN NewType RPAREN

    IDENTIFIER      shift and go to state 297
    LPAREN          shift and go to state 296


state 161

    (28) CommonDecl -> NewType TypeDecl .

    SEMICOL         reduce using rule 28 (CommonDecl -> NewType TypeDecl .)


state 162

    (29) CommonDecl -> NewType LPAREN . TypeDeclList OSemi RPAREN
    (30) CommonDecl -> NewType LPAREN . RPAREN
    (170) TypeDeclList -> . TypeDecl
    (171) TypeDeclList -> . TypeDeclList SEMICOL TypeDecl
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    RPAREN          shift and go to state 298
    IDENTIFIER      shift and go to state 164

    TypeDecl                       shift and go to state 300
    TypeDeclList                   shift and go to state 299
    TypeDeclName                   shift and go to state 163

state 163

    (40) TypeDecl -> TypeDeclName . NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 301
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 164

    (39) TypeDeclName -> IDENTIFIER .

    LPAREN          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    TIMES           reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    TYPE            reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    CHAN            reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    LMINUS          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 39 (TypeDeclName -> IDENTIFIER .)


state 165

    (206) NonDeclStmt -> GOTO NewName .

    SEMICOL         reduce using rule 206 (NonDeclStmt -> GOTO NewName .)


state 166

    (262) Expr -> Expr OROR . Prec2Expr_
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (152) FuncLiteralDecl -> . FuncType
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 302
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 167

    (49) SimpleStmt -> Expr CAREQ . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 303
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 168

    (44) SimpleStmt -> Expr TIMESEQ . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 304
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 169

    (42) SimpleStmt -> Expr PLUSEQ . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 305
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 170

    (46) SimpleStmt -> Expr MODEQ . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 306
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 171

    (51) SimpleStmt -> Expr SHR_ASSIGN . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 307
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 172

    (47) SimpleStmt -> Expr OREQ . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 308
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 173

    (43) SimpleStmt -> Expr MINUSEQ . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 309
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 174

    (56) SimpleStmt -> Expr MINUSMIN .

    SEMICOL         reduce using rule 56 (SimpleStmt -> Expr MINUSMIN .)
    LBRACE          reduce using rule 56 (SimpleStmt -> Expr MINUSMIN .)


state 175

    (48) SimpleStmt -> Expr AMPEQ . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 310
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 176

    (52) SimpleStmt -> Expr AMPCAREQ . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 311
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 177

    (50) SimpleStmt -> Expr SHL_ASSIGN . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 312
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 178

    (55) SimpleStmt -> Expr PLUSPLUS .

    SEMICOL         reduce using rule 55 (SimpleStmt -> Expr PLUSPLUS .)
    LBRACE          reduce using rule 55 (SimpleStmt -> Expr PLUSPLUS .)


state 179

    (45) SimpleStmt -> Expr DIVIDEEQ . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 313
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 180

    (274) UExpr -> XOR UExpr .

    DIVIDE          reduce using rule 274 (UExpr -> XOR UExpr .)
    MOD             reduce using rule 274 (UExpr -> XOR UExpr .)
    SHL             reduce using rule 274 (UExpr -> XOR UExpr .)
    SHR             reduce using rule 274 (UExpr -> XOR UExpr .)
    AMPERS          reduce using rule 274 (UExpr -> XOR UExpr .)
    AMPCAR          reduce using rule 274 (UExpr -> XOR UExpr .)
    TIMES           reduce using rule 274 (UExpr -> XOR UExpr .)
    PLUS            reduce using rule 274 (UExpr -> XOR UExpr .)
    MINUS           reduce using rule 274 (UExpr -> XOR UExpr .)
    XOR             reduce using rule 274 (UExpr -> XOR UExpr .)
    OR              reduce using rule 274 (UExpr -> XOR UExpr .)
    EQEQ            reduce using rule 274 (UExpr -> XOR UExpr .)
    NOTEQ           reduce using rule 274 (UExpr -> XOR UExpr .)
    LEQ             reduce using rule 274 (UExpr -> XOR UExpr .)
    GEQ             reduce using rule 274 (UExpr -> XOR UExpr .)
    GREAT           reduce using rule 274 (UExpr -> XOR UExpr .)
    LESS            reduce using rule 274 (UExpr -> XOR UExpr .)
    AMPAMP          reduce using rule 274 (UExpr -> XOR UExpr .)
    PLUSEQ          reduce using rule 274 (UExpr -> XOR UExpr .)
    MINUSEQ         reduce using rule 274 (UExpr -> XOR UExpr .)
    TIMESEQ         reduce using rule 274 (UExpr -> XOR UExpr .)
    DIVIDEEQ        reduce using rule 274 (UExpr -> XOR UExpr .)
    MODEQ           reduce using rule 274 (UExpr -> XOR UExpr .)
    OREQ            reduce using rule 274 (UExpr -> XOR UExpr .)
    AMPEQ           reduce using rule 274 (UExpr -> XOR UExpr .)
    CAREQ           reduce using rule 274 (UExpr -> XOR UExpr .)
    SHL_ASSIGN      reduce using rule 274 (UExpr -> XOR UExpr .)
    SHR_ASSIGN      reduce using rule 274 (UExpr -> XOR UExpr .)
    AMPCAREQ        reduce using rule 274 (UExpr -> XOR UExpr .)
    PLUSPLUS        reduce using rule 274 (UExpr -> XOR UExpr .)
    MINUSMIN        reduce using rule 274 (UExpr -> XOR UExpr .)
    OROR            reduce using rule 274 (UExpr -> XOR UExpr .)
    SEMICOL         reduce using rule 274 (UExpr -> XOR UExpr .)
    EQUAL           reduce using rule 274 (UExpr -> XOR UExpr .)
    COLONEQ         reduce using rule 274 (UExpr -> XOR UExpr .)
    COMMA           reduce using rule 274 (UExpr -> XOR UExpr .)
    LBRACE          reduce using rule 274 (UExpr -> XOR UExpr .)
    PIPE            reduce using rule 274 (UExpr -> XOR UExpr .)
    RBRACK          reduce using rule 274 (UExpr -> XOR UExpr .)
    RPAREN          reduce using rule 274 (UExpr -> XOR UExpr .)
    RIGHT_ANGLE     reduce using rule 274 (UExpr -> XOR UExpr .)
    RBRACE          reduce using rule 274 (UExpr -> XOR UExpr .)
    COLON           reduce using rule 274 (UExpr -> XOR UExpr .)
    RIGHT_RIGHT     reduce using rule 274 (UExpr -> XOR UExpr .)
    DDD             reduce using rule 274 (UExpr -> XOR UExpr .)


state 181

    (271) UExpr -> TIMES UExpr .

    DIVIDE          reduce using rule 271 (UExpr -> TIMES UExpr .)
    MOD             reduce using rule 271 (UExpr -> TIMES UExpr .)
    SHL             reduce using rule 271 (UExpr -> TIMES UExpr .)
    SHR             reduce using rule 271 (UExpr -> TIMES UExpr .)
    AMPERS          reduce using rule 271 (UExpr -> TIMES UExpr .)
    AMPCAR          reduce using rule 271 (UExpr -> TIMES UExpr .)
    TIMES           reduce using rule 271 (UExpr -> TIMES UExpr .)
    PLUS            reduce using rule 271 (UExpr -> TIMES UExpr .)
    MINUS           reduce using rule 271 (UExpr -> TIMES UExpr .)
    XOR             reduce using rule 271 (UExpr -> TIMES UExpr .)
    OR              reduce using rule 271 (UExpr -> TIMES UExpr .)
    EQEQ            reduce using rule 271 (UExpr -> TIMES UExpr .)
    NOTEQ           reduce using rule 271 (UExpr -> TIMES UExpr .)
    LEQ             reduce using rule 271 (UExpr -> TIMES UExpr .)
    GEQ             reduce using rule 271 (UExpr -> TIMES UExpr .)
    GREAT           reduce using rule 271 (UExpr -> TIMES UExpr .)
    LESS            reduce using rule 271 (UExpr -> TIMES UExpr .)
    AMPAMP          reduce using rule 271 (UExpr -> TIMES UExpr .)
    PLUSEQ          reduce using rule 271 (UExpr -> TIMES UExpr .)
    MINUSEQ         reduce using rule 271 (UExpr -> TIMES UExpr .)
    TIMESEQ         reduce using rule 271 (UExpr -> TIMES UExpr .)
    DIVIDEEQ        reduce using rule 271 (UExpr -> TIMES UExpr .)
    MODEQ           reduce using rule 271 (UExpr -> TIMES UExpr .)
    OREQ            reduce using rule 271 (UExpr -> TIMES UExpr .)
    AMPEQ           reduce using rule 271 (UExpr -> TIMES UExpr .)
    CAREQ           reduce using rule 271 (UExpr -> TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 271 (UExpr -> TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 271 (UExpr -> TIMES UExpr .)
    AMPCAREQ        reduce using rule 271 (UExpr -> TIMES UExpr .)
    PLUSPLUS        reduce using rule 271 (UExpr -> TIMES UExpr .)
    MINUSMIN        reduce using rule 271 (UExpr -> TIMES UExpr .)
    OROR            reduce using rule 271 (UExpr -> TIMES UExpr .)
    SEMICOL         reduce using rule 271 (UExpr -> TIMES UExpr .)
    EQUAL           reduce using rule 271 (UExpr -> TIMES UExpr .)
    COLONEQ         reduce using rule 271 (UExpr -> TIMES UExpr .)
    COMMA           reduce using rule 271 (UExpr -> TIMES UExpr .)
    LBRACE          reduce using rule 271 (UExpr -> TIMES UExpr .)
    PIPE            reduce using rule 271 (UExpr -> TIMES UExpr .)
    RBRACK          reduce using rule 271 (UExpr -> TIMES UExpr .)
    RPAREN          reduce using rule 271 (UExpr -> TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 271 (UExpr -> TIMES UExpr .)
    RBRACE          reduce using rule 271 (UExpr -> TIMES UExpr .)
    COLON           reduce using rule 271 (UExpr -> TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 271 (UExpr -> TIMES UExpr .)
    DDD             reduce using rule 271 (UExpr -> TIMES UExpr .)


state 182

    (90) NonExprType -> FuncType .
    (227) ConvType -> FuncType .
    (152) FuncLiteralDecl -> FuncType .

    COLON           reduce using rule 90 (NonExprType -> FuncType .)
    EQUAL           reduce using rule 90 (NonExprType -> FuncType .)
    COLONEQ         reduce using rule 90 (NonExprType -> FuncType .)
    COMMA           reduce using rule 90 (NonExprType -> FuncType .)
    RPAREN          reduce using rule 90 (NonExprType -> FuncType .)
    DDD             reduce using rule 90 (NonExprType -> FuncType .)
    LEFT_ANGLE      reduce using rule 227 (ConvType -> FuncType .)
    LBRACE          reduce using rule 152 (FuncLiteralDecl -> FuncType .)


state 183

    (211) PExpr -> LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 314


state 184

    (236) ExprOrType -> NonExprType .

    DDD             reduce using rule 236 (ExprOrType -> NonExprType .)
    COMMA           reduce using rule 236 (ExprOrType -> NonExprType .)
    RPAREN          reduce using rule 236 (ExprOrType -> NonExprType .)
    COLON           reduce using rule 236 (ExprOrType -> NonExprType .)
    EQUAL           reduce using rule 236 (ExprOrType -> NonExprType .)
    COLONEQ         reduce using rule 236 (ExprOrType -> NonExprType .)


state 185

    (91) NonExprType -> OtherType .
    (267) Arrayexp -> OtherType . LBRACE ExprList RBRACE
    (228) ConvType -> OtherType .
    (229) CompType -> OtherType .

    COLON           reduce using rule 91 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 91 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 91 (NonExprType -> OtherType .)
    COMMA           reduce using rule 91 (NonExprType -> OtherType .)
    DDD             reduce using rule 91 (NonExprType -> OtherType .)
    RPAREN          reduce using rule 91 (NonExprType -> OtherType .)
    LBRACE          shift and go to state 127
    LEFT_ANGLE      reduce using rule 228 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 229 (CompType -> OtherType .)


state 186

    (235) ExprOrType -> Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    DDD             reduce using rule 235 (ExprOrType -> Expr .)
    COMMA           reduce using rule 235 (ExprOrType -> Expr .)
    RPAREN          reduce using rule 235 (ExprOrType -> Expr .)
    COLON           reduce using rule 235 (ExprOrType -> Expr .)
    EQUAL           reduce using rule 235 (ExprOrType -> Expr .)
    COLONEQ         reduce using rule 235 (ExprOrType -> Expr .)
    OROR            shift and go to state 166


state 187

    (92) NonExprType -> TIMES . NonExprType
    (271) UExpr -> TIMES . UExpr
    (90) NonExprType -> . FuncType
    (91) NonExprType -> . OtherType
    (92) NonExprType -> . TIMES NonExprType
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (152) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 187
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    LPAREN          shift and go to state 73
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    NonExprType                    shift and go to state 315
    OtherType                      shift and go to state 316
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 181
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 188

    (78) IfStmt -> IF IfHeader . LoopBody ElseIfList
    (65) LoopBody -> . LBRACE marker1 cmtlist StmtList cmtlist revmarker1 RBRACE

    LBRACE          shift and go to state 268

    LoopBody                       shift and go to state 317

state 189

    (100) StructType -> STRUCT LBRACE . StructDeclList OSemi RBRACE
    (101) StructType -> STRUCT LBRACE . RBRACE
    (116) StructDeclList -> . StructDecl
    (117) StructDeclList -> . StructDeclList SEMICOL StructDecl
    (120) StructDecl -> . NewNameList NType OLiteral
    (121) StructDecl -> . Embed OLiteral
    (122) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (123) StructDecl -> . TIMES Embed OLiteral
    (124) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (125) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (176) NewNameList -> . NewName
    (177) NewNameList -> . NewNameList COMMA NewName
    (163) Embed -> . IDENTIFIER
    (131) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 326
    LPAREN          shift and go to state 321
    TIMES           shift and go to state 320
    IDENTIFIER      shift and go to state 324

    NewName                        shift and go to state 318
    StructDecl                     shift and go to state 319
    NewNameList                    shift and go to state 322
    StructDeclList                 shift and go to state 323
    Embed                          shift and go to state 325

state 190

    (256) Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .
    (248) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (250) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (251) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LEQ             reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GEQ             reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GREAT           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LESS            reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MODEQ           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OREQ            reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    CAREQ           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OROR            reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    EQUAL           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COMMA           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LBRACE          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACK          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PIPE            reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RPAREN          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACE          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLON           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DDD             reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 191

    (255) Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .
    (248) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (250) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (251) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LEQ             reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GEQ             reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GREAT           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LESS            reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MODEQ           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OREQ            reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    CAREQ           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OROR            reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    EQUAL           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COMMA           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LBRACE          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACK          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PIPE            reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RPAREN          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACE          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLON           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DDD             reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 192

    (253) Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .
    (248) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (250) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (251) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LEQ             reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GEQ             reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GREAT           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LESS            reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MODEQ           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OREQ            reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    CAREQ           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OROR            reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    EQUAL           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COMMA           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LBRACE          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACK          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PIPE            reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RPAREN          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACE          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLON           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DDD             reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 193

    (258) Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .
    (248) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (250) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (251) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    NOTEQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LEQ             reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GEQ             reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GREAT           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LESS            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPAMP          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSEQ          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSEQ         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    TIMESEQ         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MODEQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OREQ            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPEQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    CAREQ           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPCAREQ        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSPLUS        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSMIN        reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OROR            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SEMICOL         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    EQUAL           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLONEQ         reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COMMA           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LBRACE          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACK          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PIPE            reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RPAREN          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACE          reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLON           reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DDD             reduce using rule 258 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 194

    (257) Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .
    (248) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (250) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (251) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    NOTEQ           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LEQ             reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GEQ             reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GREAT           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LESS            reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPAMP          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSEQ          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSEQ         reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    TIMESEQ         reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MODEQ           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OREQ            reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPEQ           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    CAREQ           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPCAREQ        reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSPLUS        reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSMIN        reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OROR            reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SEMICOL         reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    EQUAL           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLONEQ         reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COMMA           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LBRACE          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACK          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PIPE            reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RPAREN          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACE          reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLON           reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DDD             reduce using rule 257 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 195

    (254) Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .
    (248) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (250) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (251) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LEQ             reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GEQ             reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GREAT           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LESS            reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MODEQ           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OREQ            reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    CAREQ           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OROR            reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    EQUAL           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COMMA           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LBRACE          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACK          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PIPE            reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RPAREN          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACE          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLON           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DDD             reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 196

    (221) PExprNoParen -> ConvType LEFT_ANGLE Expr . OComma RIGHT_ANGLE
    (262) Expr -> Expr . OROR Prec2Expr_
    (140) OComma -> .
    (141) OComma -> . COMMA

    OROR            shift and go to state 166
    RIGHT_ANGLE     reduce using rule 140 (OComma -> .)
    COMMA           shift and go to state 328

    OComma                         shift and go to state 327

state 197

    (202) NonDeclStmt -> LabelName COLON Stmt .

    SEMICOL         reduce using rule 202 (NonDeclStmt -> LabelName COLON Stmt .)


state 198

    (195) Stmt -> CompoundStmt .

    SEMICOL         reduce using rule 195 (Stmt -> CompoundStmt .)


state 199

    (196) Stmt -> CommonDecl .

    SEMICOL         reduce using rule 196 (Stmt -> CommonDecl .)


state 200

    (61) CompoundStmt -> LBRACE . marker1 cmtlist StmtList cmtlist RBRACE
    (66) marker1 -> .

    COMMENT         reduce using rule 66 (marker1 -> .)
    LBRACE          reduce using rule 66 (marker1 -> .)
    CONSTANT        reduce using rule 66 (marker1 -> .)
    VAR             reduce using rule 66 (marker1 -> .)
    FALLTHROUGH     reduce using rule 66 (marker1 -> .)
    BREAK           reduce using rule 66 (marker1 -> .)
    CONTINUE        reduce using rule 66 (marker1 -> .)
    GOTO            reduce using rule 66 (marker1 -> .)
    RETURN          reduce using rule 66 (marker1 -> .)
    TYPE            reduce using rule 66 (marker1 -> .)
    FOR             reduce using rule 66 (marker1 -> .)
    SWITCH          reduce using rule 66 (marker1 -> .)
    IF              reduce using rule 66 (marker1 -> .)
    CONSTANTS       reduce using rule 66 (marker1 -> .)
    IDENTIFIER      reduce using rule 66 (marker1 -> .)
    LMINUS          reduce using rule 66 (marker1 -> .)
    LBRACK          reduce using rule 66 (marker1 -> .)
    STRUCT          reduce using rule 66 (marker1 -> .)
    INTERFACE       reduce using rule 66 (marker1 -> .)
    CHAN            reduce using rule 66 (marker1 -> .)
    AMPERS          reduce using rule 66 (marker1 -> .)
    NOT             reduce using rule 66 (marker1 -> .)
    TIMES           reduce using rule 66 (marker1 -> .)
    PLUS            reduce using rule 66 (marker1 -> .)
    MINUS           reduce using rule 66 (marker1 -> .)
    XOR             reduce using rule 66 (marker1 -> .)
    LPAREN          reduce using rule 66 (marker1 -> .)
    INTEGER         reduce using rule 66 (marker1 -> .)
    FLOAT           reduce using rule 66 (marker1 -> .)
    STRING          reduce using rule 66 (marker1 -> .)
    FUNCTION        reduce using rule 66 (marker1 -> .)
    SEMICOL         reduce using rule 66 (marker1 -> .)

    marker1                        shift and go to state 329

state 201

    (197) Stmt -> NonDeclStmt .

    SEMICOL         reduce using rule 197 (Stmt -> NonDeclStmt .)


state 202

    (243) Prec5Expr_ -> Prec5Expr_ SHR UExpr .

    DIVIDE          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MOD             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPERS          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAR          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMES           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUS            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUS           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    XOR             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OR              reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQEQ            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    NOTEQ           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LEQ             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GEQ             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GREAT           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LESS            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPAMP          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OROR            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COMMA           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_RIGHT     reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSEQ          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSEQ         reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMESEQ         reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DIVIDEEQ        reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MODEQ           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OREQ            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPEQ           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    CAREQ           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL_ASSIGN      reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR_ASSIGN      reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAREQ        reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSPLUS        reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSMIN        reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SEMICOL         reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQUAL           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLONEQ         reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LBRACE          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PIPE            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACK          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RPAREN          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_ANGLE     reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACE          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLON           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DDD             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)


state 203

    (240) Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .

    DIVIDE          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MOD             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPERS          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAR          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMES           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUS            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUS           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    XOR             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OR              reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQEQ            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    NOTEQ           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LEQ             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GEQ             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GREAT           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LESS            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPAMP          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OROR            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COMMA           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_RIGHT     reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSEQ          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSEQ         reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMESEQ         reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DIVIDEEQ        reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MODEQ           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OREQ            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPEQ           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    CAREQ           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL_ASSIGN      reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR_ASSIGN      reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAREQ        reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSPLUS        reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSMIN        reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SEMICOL         reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQUAL           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLONEQ         reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LBRACE          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PIPE            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACK          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RPAREN          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_ANGLE     reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACE          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLON           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DDD             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)


state 204

    (245) Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .

    DIVIDE          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MOD             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPERS          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAR          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMES           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUS            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUS           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    XOR             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OR              reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQEQ            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    NOTEQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LEQ             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GEQ             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GREAT           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LESS            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPAMP          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OROR            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COMMA           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_RIGHT     reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSEQ          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSEQ         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMESEQ         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DIVIDEEQ        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MODEQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OREQ            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPEQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    CAREQ           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL_ASSIGN      reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR_ASSIGN      reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAREQ        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSPLUS        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSMIN        reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SEMICOL         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQUAL           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLONEQ         reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LBRACE          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PIPE            reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACK          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RPAREN          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_ANGLE     reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACE          reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLON           reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DDD             reduce using rule 245 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)


state 205

    (244) Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .

    DIVIDE          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MOD             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPERS          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAR          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMES           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUS            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUS           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    XOR             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OR              reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQEQ            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    NOTEQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LEQ             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GEQ             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GREAT           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LESS            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPAMP          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OROR            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COMMA           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSEQ          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSEQ         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMESEQ         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MODEQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OREQ            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPEQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    CAREQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAREQ        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSPLUS        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSMIN        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SEMICOL         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQUAL           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLONEQ         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LBRACE          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PIPE            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACK          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RPAREN          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACE          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLON           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DDD             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)


state 206

    (246) Prec5Expr_ -> Prec5Expr_ TIMES UExpr .

    DIVIDE          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MOD             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPERS          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAR          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMES           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUS            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUS           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    XOR             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OR              reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQEQ            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    NOTEQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LEQ             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GEQ             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GREAT           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LESS            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPAMP          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OROR            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COMMA           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSEQ          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSEQ         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMESEQ         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DIVIDEEQ        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MODEQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OREQ            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPEQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    CAREQ           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAREQ        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSPLUS        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSMIN        reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SEMICOL         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQUAL           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLONEQ         reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LBRACE          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PIPE            reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACK          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RPAREN          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACE          reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLON           reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DDD             reduce using rule 246 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)


state 207

    (242) Prec5Expr_ -> Prec5Expr_ SHL UExpr .

    DIVIDE          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MOD             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPERS          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAR          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMES           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUS            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUS           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    XOR             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OR              reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQEQ            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    NOTEQ           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LEQ             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GEQ             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GREAT           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LESS            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPAMP          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OROR            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COMMA           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_RIGHT     reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSEQ          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSEQ         reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMESEQ         reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DIVIDEEQ        reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MODEQ           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OREQ            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPEQ           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    CAREQ           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL_ASSIGN      reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR_ASSIGN      reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAREQ        reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSPLUS        reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSMIN        reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SEMICOL         reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQUAL           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLONEQ         reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LBRACE          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PIPE            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACK          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RPAREN          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_ANGLE     reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACE          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLON           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DDD             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)


state 208

    (241) Prec5Expr_ -> Prec5Expr_ MOD UExpr .

    DIVIDE          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MOD             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPERS          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAR          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMES           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUS            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUS           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    XOR             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OR              reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQEQ            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    NOTEQ           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LEQ             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GEQ             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GREAT           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LESS            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPAMP          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OROR            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COMMA           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_RIGHT     reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSEQ          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSEQ         reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMESEQ         reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DIVIDEEQ        reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MODEQ           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OREQ            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPEQ           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    CAREQ           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL_ASSIGN      reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR_ASSIGN      reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAREQ        reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSPLUS        reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSMIN        reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SEMICOL         reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQUAL           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLONEQ         reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LBRACE          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PIPE            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACK          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RPAREN          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_ANGLE     reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACE          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLON           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DDD             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)


state 209

    (12) ImportStmt -> ImportHere STRING .

    SEMICOL         reduce using rule 12 (ImportStmt -> ImportHere STRING .)
    RPAREN          reduce using rule 12 (ImportStmt -> ImportHere STRING .)


state 210

    (11) Import -> IMPORT LPAREN RPAREN .

    SEMICOL         reduce using rule 11 (Import -> IMPORT LPAREN RPAREN .)


state 211

    (10) Import -> IMPORT LPAREN ImportStmtList . OSemi RPAREN
    (14) ImportStmtList -> ImportStmtList . SEMICOL ImportStmt
    (142) OSemi -> .
    (143) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 330
    RPAREN          reduce using rule 142 (OSemi -> .)

    OSemi                          shift and go to state 331

state 212

    (13) ImportStmtList -> ImportStmt .

    SEMICOL         reduce using rule 13 (ImportStmtList -> ImportStmt .)
    RPAREN          reduce using rule 13 (ImportStmtList -> ImportStmt .)


state 213

    (99) ChannelType -> LMINUS CHAN NewType .

    LBRACE          reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    LEFT_ANGLE      reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    LEFT_LEFT       reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    DDD             reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    COMMA           reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    RPAREN          reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    OR_RIGHT        reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    EQUAL           reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    SEMICOL         reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    COLON           reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    COLONEQ         reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    RBRACE          reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    INTEGER         reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    FLOAT           reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)
    STRING          reduce using rule 99 (ChannelType -> LMINUS CHAN NewType .)


state 214

    (260) Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .
    (253) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (254) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (256) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (257) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (258) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OROR            reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SEMICOL         reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    LBRACE          reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQUAL           reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLONEQ         reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COMMA           reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACE          reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RPAREN          reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLON           reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSEQ          reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSEQ         reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    TIMESEQ         reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MODEQ           reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OREQ            reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPEQ           reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    CAREQ           reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPCAREQ        reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSPLUS        reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSMIN        reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DDD             reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACK          reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PIPE            reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 260 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQEQ            shift and go to state 80
    NOTEQ           shift and go to state 83
    LEQ             shift and go to state 79
    GEQ             shift and go to state 78
    GREAT           shift and go to state 82
    LESS            shift and go to state 81


state 215

    (153) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist . StmtList cmtlist RBRACE
    (280) cmtlist -> cmtlist . COMMENT
    (174) StmtList -> . Stmt SEMICOL
    (175) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    NewName                        shift and go to state 34
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 333
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 332
    NewType                        shift and go to state 65
    NonDeclStmt                    shift and go to state 201
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    Prec4Expr_                     shift and go to state 28
    CompoundStmt                   shift and go to state 198

state 216

    (27) CommonDecl -> VAR LPAREN RPAREN .

    SEMICOL         reduce using rule 27 (CommonDecl -> VAR LPAREN RPAREN .)


state 217

    (166) VarDeclList -> VarDecl .

    SEMICOL         reduce using rule 166 (VarDeclList -> VarDecl .)
    RPAREN          reduce using rule 166 (VarDeclList -> VarDecl .)


state 218

    (26) CommonDecl -> VAR LPAREN VarDeclList . OSemi RPAREN
    (167) VarDeclList -> VarDeclList . SEMICOL VarDecl
    (142) OSemi -> .
    (143) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 334
    RPAREN          reduce using rule 142 (OSemi -> .)

    OSemi                          shift and go to state 335

state 219

    (84) NType -> FuncType .

    COMMA           reduce using rule 84 (NType -> FuncType .)
    OR_RIGHT        reduce using rule 84 (NType -> FuncType .)
    INTEGER         reduce using rule 84 (NType -> FuncType .)
    FLOAT           reduce using rule 84 (NType -> FuncType .)
    STRING          reduce using rule 84 (NType -> FuncType .)
    SEMICOL         reduce using rule 84 (NType -> FuncType .)
    RBRACE          reduce using rule 84 (NType -> FuncType .)
    RPAREN          reduce using rule 84 (NType -> FuncType .)
    EQUAL           reduce using rule 84 (NType -> FuncType .)
    LEFT_ANGLE      reduce using rule 84 (NType -> FuncType .)
    LBRACE          reduce using rule 84 (NType -> FuncType .)
    DDD             reduce using rule 84 (NType -> FuncType .)
    COLON           reduce using rule 84 (NType -> FuncType .)
    COLONEQ         reduce using rule 84 (NType -> FuncType .)
    LEFT_LEFT       reduce using rule 84 (NType -> FuncType .)


state 220

    (33) VarDecl -> DeclNameList EQUAL . ExprList
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 336
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 221

    (86) NType -> PtrType .

    COMMA           reduce using rule 86 (NType -> PtrType .)
    OR_RIGHT        reduce using rule 86 (NType -> PtrType .)
    INTEGER         reduce using rule 86 (NType -> PtrType .)
    FLOAT           reduce using rule 86 (NType -> PtrType .)
    STRING          reduce using rule 86 (NType -> PtrType .)
    SEMICOL         reduce using rule 86 (NType -> PtrType .)
    RBRACE          reduce using rule 86 (NType -> PtrType .)
    RPAREN          reduce using rule 86 (NType -> PtrType .)
    EQUAL           reduce using rule 86 (NType -> PtrType .)
    LEFT_ANGLE      reduce using rule 86 (NType -> PtrType .)
    LBRACE          reduce using rule 86 (NType -> PtrType .)
    DDD             reduce using rule 86 (NType -> PtrType .)
    COLON           reduce using rule 86 (NType -> PtrType .)
    COLONEQ         reduce using rule 86 (NType -> PtrType .)
    LEFT_LEFT       reduce using rule 86 (NType -> PtrType .)


state 222

    (89) NType -> NewType .

    COMMA           reduce using rule 89 (NType -> NewType .)
    OR_RIGHT        reduce using rule 89 (NType -> NewType .)
    INTEGER         reduce using rule 89 (NType -> NewType .)
    FLOAT           reduce using rule 89 (NType -> NewType .)
    STRING          reduce using rule 89 (NType -> NewType .)
    SEMICOL         reduce using rule 89 (NType -> NewType .)
    RBRACE          reduce using rule 89 (NType -> NewType .)
    RPAREN          reduce using rule 89 (NType -> NewType .)
    EQUAL           reduce using rule 89 (NType -> NewType .)
    LEFT_ANGLE      reduce using rule 89 (NType -> NewType .)
    LBRACE          reduce using rule 89 (NType -> NewType .)
    DDD             reduce using rule 89 (NType -> NewType .)
    COLON           reduce using rule 89 (NType -> NewType .)
    COLONEQ         reduce using rule 89 (NType -> NewType .)
    LEFT_LEFT       reduce using rule 89 (NType -> NewType .)


state 223

    (87) NType -> DotName .

    COMMA           reduce using rule 87 (NType -> DotName .)
    OR_RIGHT        reduce using rule 87 (NType -> DotName .)
    INTEGER         reduce using rule 87 (NType -> DotName .)
    FLOAT           reduce using rule 87 (NType -> DotName .)
    STRING          reduce using rule 87 (NType -> DotName .)
    SEMICOL         reduce using rule 87 (NType -> DotName .)
    RBRACE          reduce using rule 87 (NType -> DotName .)
    RPAREN          reduce using rule 87 (NType -> DotName .)
    EQUAL           reduce using rule 87 (NType -> DotName .)
    LEFT_ANGLE      reduce using rule 87 (NType -> DotName .)
    LBRACE          reduce using rule 87 (NType -> DotName .)
    DDD             reduce using rule 87 (NType -> DotName .)
    COLON           reduce using rule 87 (NType -> DotName .)
    COLONEQ         reduce using rule 87 (NType -> DotName .)
    LEFT_LEFT       reduce using rule 87 (NType -> DotName .)


state 224

    (132) PtrType -> TIMES . NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 337
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 225

    (85) NType -> OtherType .

    COMMA           reduce using rule 85 (NType -> OtherType .)
    OR_RIGHT        reduce using rule 85 (NType -> OtherType .)
    INTEGER         reduce using rule 85 (NType -> OtherType .)
    FLOAT           reduce using rule 85 (NType -> OtherType .)
    STRING          reduce using rule 85 (NType -> OtherType .)
    SEMICOL         reduce using rule 85 (NType -> OtherType .)
    RBRACE          reduce using rule 85 (NType -> OtherType .)
    RPAREN          reduce using rule 85 (NType -> OtherType .)
    EQUAL           reduce using rule 85 (NType -> OtherType .)
    LEFT_ANGLE      reduce using rule 85 (NType -> OtherType .)
    LBRACE          reduce using rule 85 (NType -> OtherType .)
    DDD             reduce using rule 85 (NType -> OtherType .)
    COLON           reduce using rule 85 (NType -> OtherType .)
    COLONEQ         reduce using rule 85 (NType -> OtherType .)
    LEFT_LEFT       reduce using rule 85 (NType -> OtherType .)


state 226

    (173) DeclNameList -> DeclNameList COMMA . DeclName
    (184) DeclName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 338

state 227

    (138) DotName -> Name .
    (139) DotName -> Name . DOT IDENTIFIER

    COMMA           reduce using rule 138 (DotName -> Name .)
    RPAREN          reduce using rule 138 (DotName -> Name .)
    OR_RIGHT        reduce using rule 138 (DotName -> Name .)
    EQUAL           reduce using rule 138 (DotName -> Name .)
    SEMICOL         reduce using rule 138 (DotName -> Name .)
    LBRACE          reduce using rule 138 (DotName -> Name .)
    LEFT_ANGLE      reduce using rule 138 (DotName -> Name .)
    DDD             reduce using rule 138 (DotName -> Name .)
    COLON           reduce using rule 138 (DotName -> Name .)
    COLONEQ         reduce using rule 138 (DotName -> Name .)
    LEFT_LEFT       reduce using rule 138 (DotName -> Name .)
    INTEGER         reduce using rule 138 (DotName -> Name .)
    FLOAT           reduce using rule 138 (DotName -> Name .)
    STRING          reduce using rule 138 (DotName -> Name .)
    RBRACE          reduce using rule 138 (DotName -> Name .)
    DOT             shift and go to state 339


state 228

    (31) VarDecl -> DeclNameList NType .
    (32) VarDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 31 (VarDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 31 (VarDecl -> DeclNameList NType .)
    EQUAL           shift and go to state 340


state 229

    (88) NType -> LPAREN . NType RPAREN
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 341
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 230

    (93) OtherType -> LBRACK . OExpr RBRACK NType
    (148) OExpr -> .
    (149) OExpr -> . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 148 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 342
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 141
    PExpr                          shift and go to state 60

state 231

    (155) ExprList -> ExprList COMMA Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 155 (ExprList -> ExprList COMMA Expr .)
    SEMICOL         reduce using rule 155 (ExprList -> ExprList COMMA Expr .)
    LBRACE          reduce using rule 155 (ExprList -> ExprList COMMA Expr .)
    EQUAL           reduce using rule 155 (ExprList -> ExprList COMMA Expr .)
    COLONEQ         reduce using rule 155 (ExprList -> ExprList COMMA Expr .)
    RPAREN          reduce using rule 155 (ExprList -> ExprList COMMA Expr .)
    RBRACE          reduce using rule 155 (ExprList -> ExprList COMMA Expr .)
    OROR            shift and go to state 166


state 232

    (54) SimpleStmt -> ExprList COLONEQ ExprList .
    (155) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 54 (SimpleStmt -> ExprList COLONEQ ExprList .)
    LBRACE          reduce using rule 54 (SimpleStmt -> ExprList COLONEQ ExprList .)
    COMMA           shift and go to state 107


state 233

    (53) SimpleStmt -> ExprList EQUAL ExprList .
    (155) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 53 (SimpleStmt -> ExprList EQUAL ExprList .)
    LBRACE          reduce using rule 53 (SimpleStmt -> ExprList EQUAL ExprList .)
    COMMA           shift and go to state 107


state 234

    (24) CommonDecl -> CONSTANT LPAREN RPAREN .

    SEMICOL         reduce using rule 24 (CommonDecl -> CONSTANT LPAREN RPAREN .)


state 235

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl . OSemi RPAREN
    (23) CommonDecl -> CONSTANT LPAREN ConstDecl . SEMICOL ConstDeclList OSemi RPAREN
    (142) OSemi -> .
    (143) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 344
    RPAREN          reduce using rule 142 (OSemi -> .)

    OSemi                          shift and go to state 343

state 236

    (36) ConstDecl -> DeclNameList EQUAL . ExprList
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 345
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 237

    (34) ConstDecl -> DeclNameList NType . EQUAL ExprList
    (35) ConstDecl -> DeclNameList NType .

    EQUAL           shift and go to state 346
    SEMICOL         reduce using rule 35 (ConstDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 35 (ConstDecl -> DeclNameList NType .)


state 238

    (275) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (262) Expr -> Expr . OROR Prec2Expr_
    (149) OExpr -> Expr .

    PIPE            shift and go to state 276
    OROR            shift and go to state 166
    RBRACK          reduce using rule 149 (OExpr -> Expr .)


state 239

    (250) Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .
    (240) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (241) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (242) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (243) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (244) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (245) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUS           reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    XOR             reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OR              reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQEQ            reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    NOTEQ           reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LEQ             reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GEQ             reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GREAT           reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LESS            reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPAMP          reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OROR            reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SEMICOL         reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LBRACE          reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COMMA           reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQUAL           reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLONEQ         reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACE          reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RPAREN          reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSEQ          reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSEQ         reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    TIMESEQ         reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MODEQ           reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OREQ            reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPEQ           reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    CAREQ           reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSMIN        reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLON           reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PIPE            reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACK          reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DDD             reduce using rule 250 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 240

    (251) Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .
    (240) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (241) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (242) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (243) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (244) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (245) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUS           reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    XOR             reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OR              reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQEQ            reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    NOTEQ           reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LEQ             reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GEQ             reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GREAT           reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LESS            reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPAMP          reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OROR            reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SEMICOL         reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LBRACE          reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COMMA           reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQUAL           reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLONEQ         reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACE          reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RPAREN          reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSEQ          reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSEQ         reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    TIMESEQ         reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MODEQ           reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OREQ            reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPEQ           reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    CAREQ           reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSMIN        reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLON           reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PIPE            reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACK          reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DDD             reduce using rule 251 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 241

    (248) Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .
    (240) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (241) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (242) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (243) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (244) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (245) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUS           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    XOR             reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OR              reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQEQ            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    NOTEQ           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LEQ             reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GEQ             reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GREAT           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LESS            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPAMP          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OROR            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SEMICOL         reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LBRACE          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COMMA           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQUAL           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLONEQ         reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACE          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RPAREN          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MODEQ           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OREQ            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPEQ           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    CAREQ           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLON           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PIPE            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACK          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DDD             reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 242

    (249) Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .
    (240) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (241) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (242) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (243) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (244) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (245) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (246) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUS           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    XOR             reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OR              reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQEQ            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    NOTEQ           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LEQ             reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GEQ             reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GREAT           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LESS            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPAMP          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OROR            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SEMICOL         reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LBRACE          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COMMA           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQUAL           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLONEQ         reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACE          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RPAREN          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MODEQ           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OREQ            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPEQ           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    CAREQ           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLON           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PIPE            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACK          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DDD             reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 243

    (267) Arrayexp -> OtherType LBRACE ExprList . RBRACE
    (155) ExprList -> ExprList . COMMA Expr

    RBRACE          shift and go to state 347
    COMMA           shift and go to state 107


state 244

    (193) OArgTypeListOComma -> ArgTypeList . OComma
    (191) ArgTypeList -> ArgTypeList . COMMA ArgType
    (140) OComma -> .
    (141) OComma -> . COMMA

    COMMA           shift and go to state 348
    RPAREN          reduce using rule 140 (OComma -> .)
    OR_RIGHT        reduce using rule 140 (OComma -> .)

    OComma                         shift and go to state 349

state 245

    (190) ArgTypeList -> ArgType .

    COMMA           reduce using rule 190 (ArgTypeList -> ArgType .)
    OR_RIGHT        reduce using rule 190 (ArgTypeList -> ArgType .)
    RPAREN          reduce using rule 190 (ArgTypeList -> ArgType .)


state 246

    (109) ArgList -> LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 350


state 247

    (189) ArgType -> DotDotDot .

    COMMA           reduce using rule 189 (ArgType -> DotDotDot .)
    OR_RIGHT        reduce using rule 189 (ArgType -> DotDotDot .)
    RPAREN          reduce using rule 189 (ArgType -> DotDotDot .)


state 248

    (186) ArgType -> NameOrType .

    COMMA           reduce using rule 186 (ArgType -> NameOrType .)
    OR_RIGHT        reduce using rule 186 (ArgType -> NameOrType .)
    RPAREN          reduce using rule 186 (ArgType -> NameOrType .)


state 249

    (187) ArgType -> IDENTIFIER . NameOrType
    (188) ArgType -> IDENTIFIER . DotDotDot
    (185) Name -> IDENTIFIER .
    (237) NameOrType -> . NType
    (208) DotDotDot -> . DDD
    (209) DotDotDot -> . DDD NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    DOT             reduce using rule 185 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 185 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 185 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 185 (Name -> IDENTIFIER .)
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NewType                        shift and go to state 222
    DotDotDot                      shift and go to state 351
    NType                          shift and go to state 250
    NameOrType                     shift and go to state 352
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    FuncType                       shift and go to state 219

state 250

    (237) NameOrType -> NType .

    COMMA           reduce using rule 237 (NameOrType -> NType .)
    RPAREN          reduce using rule 237 (NameOrType -> NType .)
    OR_RIGHT        reduce using rule 237 (NameOrType -> NType .)


state 251

    (208) DotDotDot -> DDD .
    (209) DotDotDot -> DDD . NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    COMMA           reduce using rule 208 (DotDotDot -> DDD .)
    RPAREN          reduce using rule 208 (DotDotDot -> DDD .)
    OR_RIGHT        reduce using rule 208 (DotDotDot -> DDD .)
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 353
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 252

    (110) ArgList -> ArgList LPAREN . OArgTypeListOComma RPAREN
    (192) OArgTypeListOComma -> .
    (193) OArgTypeListOComma -> . ArgTypeList OComma
    (190) ArgTypeList -> . ArgType
    (191) ArgTypeList -> . ArgTypeList COMMA ArgType
    (186) ArgType -> . NameOrType
    (187) ArgType -> . IDENTIFIER NameOrType
    (188) ArgType -> . IDENTIFIER DotDotDot
    (189) ArgType -> . DotDotDot
    (237) NameOrType -> . NType
    (208) DotDotDot -> . DDD
    (209) DotDotDot -> . DDD NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    RPAREN          reduce using rule 192 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 219
    ArgTypeList                    shift and go to state 244
    PtrType                        shift and go to state 221
    ArgType                        shift and go to state 245
    NewType                        shift and go to state 222
    OArgTypeListOComma             shift and go to state 354
    DotDotDot                      shift and go to state 247
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NType                          shift and go to state 250
    DotName                        shift and go to state 223

state 253

    (133) FuncRetType -> FuncType .

    LBRACE          reduce using rule 133 (FuncRetType -> FuncType .)
    SEMICOL         reduce using rule 133 (FuncRetType -> FuncType .)
    LEFT_ANGLE      reduce using rule 133 (FuncRetType -> FuncType .)
    RPAREN          reduce using rule 133 (FuncRetType -> FuncType .)
    EQUAL           reduce using rule 133 (FuncRetType -> FuncType .)
    COMMA           reduce using rule 133 (FuncRetType -> FuncType .)
    DDD             reduce using rule 133 (FuncRetType -> FuncType .)
    COLON           reduce using rule 133 (FuncRetType -> FuncType .)
    COLONEQ         reduce using rule 133 (FuncRetType -> FuncType .)
    OR_RIGHT        reduce using rule 133 (FuncRetType -> FuncType .)
    LEFT_LEFT       reduce using rule 133 (FuncRetType -> FuncType .)
    INTEGER         reduce using rule 133 (FuncRetType -> FuncType .)
    FLOAT           reduce using rule 133 (FuncRetType -> FuncType .)
    STRING          reduce using rule 133 (FuncRetType -> FuncType .)
    RBRACE          reduce using rule 133 (FuncRetType -> FuncType .)


state 254

    (135) FuncRetType -> PtrType .

    LBRACE          reduce using rule 135 (FuncRetType -> PtrType .)
    SEMICOL         reduce using rule 135 (FuncRetType -> PtrType .)
    LEFT_ANGLE      reduce using rule 135 (FuncRetType -> PtrType .)
    RPAREN          reduce using rule 135 (FuncRetType -> PtrType .)
    EQUAL           reduce using rule 135 (FuncRetType -> PtrType .)
    COMMA           reduce using rule 135 (FuncRetType -> PtrType .)
    DDD             reduce using rule 135 (FuncRetType -> PtrType .)
    COLON           reduce using rule 135 (FuncRetType -> PtrType .)
    COLONEQ         reduce using rule 135 (FuncRetType -> PtrType .)
    OR_RIGHT        reduce using rule 135 (FuncRetType -> PtrType .)
    LEFT_LEFT       reduce using rule 135 (FuncRetType -> PtrType .)
    INTEGER         reduce using rule 135 (FuncRetType -> PtrType .)
    FLOAT           reduce using rule 135 (FuncRetType -> PtrType .)
    STRING          reduce using rule 135 (FuncRetType -> PtrType .)
    RBRACE          reduce using rule 135 (FuncRetType -> PtrType .)


state 255

    (137) FuncRetType -> NewType .

    LBRACE          reduce using rule 137 (FuncRetType -> NewType .)
    SEMICOL         reduce using rule 137 (FuncRetType -> NewType .)
    LEFT_ANGLE      reduce using rule 137 (FuncRetType -> NewType .)
    RPAREN          reduce using rule 137 (FuncRetType -> NewType .)
    EQUAL           reduce using rule 137 (FuncRetType -> NewType .)
    COMMA           reduce using rule 137 (FuncRetType -> NewType .)
    DDD             reduce using rule 137 (FuncRetType -> NewType .)
    COLON           reduce using rule 137 (FuncRetType -> NewType .)
    COLONEQ         reduce using rule 137 (FuncRetType -> NewType .)
    OR_RIGHT        reduce using rule 137 (FuncRetType -> NewType .)
    LEFT_LEFT       reduce using rule 137 (FuncRetType -> NewType .)
    INTEGER         reduce using rule 137 (FuncRetType -> NewType .)
    FLOAT           reduce using rule 137 (FuncRetType -> NewType .)
    STRING          reduce using rule 137 (FuncRetType -> NewType .)
    RBRACE          reduce using rule 137 (FuncRetType -> NewType .)


state 256

    (134) FuncRetType -> OtherType .

    LBRACE          reduce using rule 134 (FuncRetType -> OtherType .)
    SEMICOL         reduce using rule 134 (FuncRetType -> OtherType .)
    LEFT_ANGLE      reduce using rule 134 (FuncRetType -> OtherType .)
    RPAREN          reduce using rule 134 (FuncRetType -> OtherType .)
    EQUAL           reduce using rule 134 (FuncRetType -> OtherType .)
    COMMA           reduce using rule 134 (FuncRetType -> OtherType .)
    DDD             reduce using rule 134 (FuncRetType -> OtherType .)
    COLON           reduce using rule 134 (FuncRetType -> OtherType .)
    COLONEQ         reduce using rule 134 (FuncRetType -> OtherType .)
    OR_RIGHT        reduce using rule 134 (FuncRetType -> OtherType .)
    LEFT_LEFT       reduce using rule 134 (FuncRetType -> OtherType .)
    INTEGER         reduce using rule 134 (FuncRetType -> OtherType .)
    FLOAT           reduce using rule 134 (FuncRetType -> OtherType .)
    STRING          reduce using rule 134 (FuncRetType -> OtherType .)
    RBRACE          reduce using rule 134 (FuncRetType -> OtherType .)


state 257

    (108) FuncType -> FUNCTION ArgList FuncRes .

    LEFT_ANGLE      reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    LBRACE          reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    RPAREN          reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    INTEGER         reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    FLOAT           reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    STRING          reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    SEMICOL         reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACE          reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    COMMA           reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    DDD             reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    EQUAL           reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    COLON           reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    COLONEQ         reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    OR_RIGHT        reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)
    LEFT_LEFT       reduce using rule 108 (FuncType -> FUNCTION ArgList FuncRes .)


state 258

    (115) FuncRes -> LEFT_OR . OArgTypeListOComma OR_RIGHT
    (192) OArgTypeListOComma -> .
    (193) OArgTypeListOComma -> . ArgTypeList OComma
    (190) ArgTypeList -> . ArgType
    (191) ArgTypeList -> . ArgTypeList COMMA ArgType
    (186) ArgType -> . NameOrType
    (187) ArgType -> . IDENTIFIER NameOrType
    (188) ArgType -> . IDENTIFIER DotDotDot
    (189) ArgType -> . DotDotDot
    (237) NameOrType -> . NType
    (208) DotDotDot -> . DDD
    (209) DotDotDot -> . DDD NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 192 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 219
    ArgTypeList                    shift and go to state 244
    PtrType                        shift and go to state 221
    ArgType                        shift and go to state 245
    NewType                        shift and go to state 222
    OArgTypeListOComma             shift and go to state 355
    DotDotDot                      shift and go to state 247
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NType                          shift and go to state 250
    DotName                        shift and go to state 223

state 259

    (136) FuncRetType -> DotName .

    LBRACE          reduce using rule 136 (FuncRetType -> DotName .)
    SEMICOL         reduce using rule 136 (FuncRetType -> DotName .)
    LEFT_ANGLE      reduce using rule 136 (FuncRetType -> DotName .)
    RPAREN          reduce using rule 136 (FuncRetType -> DotName .)
    EQUAL           reduce using rule 136 (FuncRetType -> DotName .)
    COMMA           reduce using rule 136 (FuncRetType -> DotName .)
    DDD             reduce using rule 136 (FuncRetType -> DotName .)
    COLON           reduce using rule 136 (FuncRetType -> DotName .)
    COLONEQ         reduce using rule 136 (FuncRetType -> DotName .)
    OR_RIGHT        reduce using rule 136 (FuncRetType -> DotName .)
    LEFT_LEFT       reduce using rule 136 (FuncRetType -> DotName .)
    INTEGER         reduce using rule 136 (FuncRetType -> DotName .)
    FLOAT           reduce using rule 136 (FuncRetType -> DotName .)
    STRING          reduce using rule 136 (FuncRetType -> DotName .)
    RBRACE          reduce using rule 136 (FuncRetType -> DotName .)


state 260

    (114) FuncRes -> FuncRetType .

    LBRACE          reduce using rule 114 (FuncRes -> FuncRetType .)
    SEMICOL         reduce using rule 114 (FuncRes -> FuncRetType .)
    RBRACE          reduce using rule 114 (FuncRes -> FuncRetType .)
    LEFT_ANGLE      reduce using rule 114 (FuncRes -> FuncRetType .)
    RPAREN          reduce using rule 114 (FuncRes -> FuncRetType .)
    EQUAL           reduce using rule 114 (FuncRes -> FuncRetType .)
    COMMA           reduce using rule 114 (FuncRes -> FuncRetType .)
    DDD             reduce using rule 114 (FuncRes -> FuncRetType .)
    COLON           reduce using rule 114 (FuncRes -> FuncRetType .)
    COLONEQ         reduce using rule 114 (FuncRes -> FuncRetType .)
    OR_RIGHT        reduce using rule 114 (FuncRes -> FuncRetType .)
    LEFT_LEFT       reduce using rule 114 (FuncRes -> FuncRetType .)
    INTEGER         reduce using rule 114 (FuncRes -> FuncRetType .)
    FLOAT           reduce using rule 114 (FuncRes -> FuncRetType .)
    STRING          reduce using rule 114 (FuncRes -> FuncRetType .)


state 261

    (104) FuncDecl -> FUNCTION marker2 FuncDecl_ . FuncBody
    (111) FuncBody -> .
    (112) FuncBody -> . LBRACE cmtlist StmtList cmtlist revmarker1 RBRACE

    SEMICOL         reduce using rule 111 (FuncBody -> .)
    LBRACE          shift and go to state 356

    FuncBody                       shift and go to state 357

state 262

    (107) FuncDecl_ -> LEFT_OR . OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (192) OArgTypeListOComma -> .
    (193) OArgTypeListOComma -> . ArgTypeList OComma
    (190) ArgTypeList -> . ArgType
    (191) ArgTypeList -> . ArgTypeList COMMA ArgType
    (186) ArgType -> . NameOrType
    (187) ArgType -> . IDENTIFIER NameOrType
    (188) ArgType -> . IDENTIFIER DotDotDot
    (189) ArgType -> . DotDotDot
    (237) NameOrType -> . NType
    (208) DotDotDot -> . DDD
    (209) DotDotDot -> . DDD NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 192 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 219
    ArgTypeList                    shift and go to state 244
    PtrType                        shift and go to state 221
    ArgType                        shift and go to state 245
    NewType                        shift and go to state 222
    OArgTypeListOComma             shift and go to state 358
    DotDotDot                      shift and go to state 247
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NType                          shift and go to state 250
    DotName                        shift and go to state 223

state 263

    (106) FuncDecl_ -> IDENTIFIER . ArgList FuncRes
    (109) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (110) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 128

    ArgList                        shift and go to state 359

state 264

    (71) ForHeader -> OSimpleStmt SEMICOL . OSimpleStmt SEMICOL OSimpleStmt
    (144) OSimpleStmt -> .
    (145) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 144 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 360
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 265

    (68) RangeStmt -> ExprList EQUAL . RANGE Expr
    (53) SimpleStmt -> ExprList EQUAL . ExprList
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 361
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 233
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 266

    (69) RangeStmt -> ExprList COLONEQ . RANGE Expr
    (54) SimpleStmt -> ExprList COLONEQ . ExprList
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 362
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 232
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 267

    (70) RangeStmt -> RANGE Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 70 (RangeStmt -> RANGE Expr .)
    LBRACE          reduce using rule 70 (RangeStmt -> RANGE Expr .)
    OROR            shift and go to state 166


state 268

    (65) LoopBody -> LBRACE . marker1 cmtlist StmtList cmtlist revmarker1 RBRACE
    (66) marker1 -> .

    COMMENT         reduce using rule 66 (marker1 -> .)
    LBRACE          reduce using rule 66 (marker1 -> .)
    CONSTANT        reduce using rule 66 (marker1 -> .)
    VAR             reduce using rule 66 (marker1 -> .)
    FALLTHROUGH     reduce using rule 66 (marker1 -> .)
    BREAK           reduce using rule 66 (marker1 -> .)
    CONTINUE        reduce using rule 66 (marker1 -> .)
    GOTO            reduce using rule 66 (marker1 -> .)
    RETURN          reduce using rule 66 (marker1 -> .)
    TYPE            reduce using rule 66 (marker1 -> .)
    FOR             reduce using rule 66 (marker1 -> .)
    SWITCH          reduce using rule 66 (marker1 -> .)
    IF              reduce using rule 66 (marker1 -> .)
    CONSTANTS       reduce using rule 66 (marker1 -> .)
    IDENTIFIER      reduce using rule 66 (marker1 -> .)
    LMINUS          reduce using rule 66 (marker1 -> .)
    LBRACK          reduce using rule 66 (marker1 -> .)
    STRUCT          reduce using rule 66 (marker1 -> .)
    INTERFACE       reduce using rule 66 (marker1 -> .)
    CHAN            reduce using rule 66 (marker1 -> .)
    AMPERS          reduce using rule 66 (marker1 -> .)
    NOT             reduce using rule 66 (marker1 -> .)
    TIMES           reduce using rule 66 (marker1 -> .)
    PLUS            reduce using rule 66 (marker1 -> .)
    MINUS           reduce using rule 66 (marker1 -> .)
    XOR             reduce using rule 66 (marker1 -> .)
    LPAREN          reduce using rule 66 (marker1 -> .)
    INTEGER         reduce using rule 66 (marker1 -> .)
    FLOAT           reduce using rule 66 (marker1 -> .)
    STRING          reduce using rule 66 (marker1 -> .)
    FUNCTION        reduce using rule 66 (marker1 -> .)
    SEMICOL         reduce using rule 66 (marker1 -> .)

    marker1                        shift and go to state 363

state 269

    (74) ForBody -> ForHeader LoopBody .

    SEMICOL         reduce using rule 74 (ForBody -> ForHeader LoopBody .)


state 270

    (103) InterfaceType -> INTERFACE LBRACE RBRACE .

    LBRACE          reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COMMA           reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    EQUAL           reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    SEMICOL         reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RPAREN          reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    DDD             reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLON           reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLONEQ         reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    INTEGER         reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    FLOAT           reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    STRING          reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACE          reduce using rule 103 (InterfaceType -> INTERFACE LBRACE RBRACE .)


state 271

    (118) InterfaceDeclList -> InterfaceDecl .

    SEMICOL         reduce using rule 118 (InterfaceDeclList -> InterfaceDecl .)
    RBRACE          reduce using rule 118 (InterfaceDeclList -> InterfaceDecl .)


state 272

    (102) InterfaceType -> INTERFACE LBRACE InterfaceDeclList . OSemi RBRACE
    (119) InterfaceDeclList -> InterfaceDeclList . SEMICOL InterfaceDecl
    (142) OSemi -> .
    (143) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 364
    RBRACE          reduce using rule 142 (OSemi -> .)

    OSemi                          shift and go to state 365

state 273

    (126) InterfaceDecl -> NewName . InDecl
    (129) InDecl -> . LPAREN OArgTypeListOComma RPAREN FuncRes

    LPAREN          shift and go to state 366

    InDecl                         shift and go to state 367

state 274

    (128) InterfaceDecl -> LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 368


state 275

    (127) InterfaceDecl -> IDENTIFIER .
    (131) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 127 (InterfaceDecl -> IDENTIFIER .)
    RBRACE          reduce using rule 127 (InterfaceDecl -> IDENTIFIER .)
    LPAREN          reduce using rule 131 (NewName -> IDENTIFIER .)


state 276

    (275) ForCompExpr -> LBRACK Expr PIPE . RangeStmt RBRACK
    (68) RangeStmt -> . ExprList EQUAL RANGE Expr
    (69) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (70) RangeStmt -> . RANGE Expr
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 135
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    RangeStmt                      shift and go to state 369
    ExprList                       shift and go to state 370
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 277

    (93) OtherType -> LBRACK OExpr RBRACK . NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 371
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 278

    (98) ChannelType -> CHAN LMINUS NewType .

    LBRACE          reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    LEFT_ANGLE      reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    LEFT_LEFT       reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    DDD             reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    COMMA           reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    RPAREN          reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    OR_RIGHT        reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    EQUAL           reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    SEMICOL         reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    COLON           reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    COLONEQ         reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    RBRACE          reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    INTEGER         reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    FLOAT           reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)
    STRING          reduce using rule 98 (ChannelType -> CHAN LMINUS NewType .)


state 279

    (77) IfHeader -> OSimpleStmt SEMICOL . OSimpleStmt
    (144) OSimpleStmt -> .
    (145) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    LBRACE          reduce using rule 144 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 372
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 280

    (238) SwitchStmt -> SWITCH IfHeader LBRACE . CaseBlockList RBRACE
    (63) CaseBlockList -> .
    (64) CaseBlockList -> . CaseBlockList CaseBlock

    RBRACE          reduce using rule 63 (CaseBlockList -> .)
    CASE            reduce using rule 63 (CaseBlockList -> .)
    DEFAULT         reduce using rule 63 (CaseBlockList -> .)

    CaseBlockList                  shift and go to state 373

state 281

    (178) KeyvalList -> Keyval .

    COMMA           reduce using rule 178 (KeyvalList -> Keyval .)
    RIGHT_RIGHT     reduce using rule 178 (KeyvalList -> Keyval .)


state 282

    (222) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 374


state 283

    (230) Keyval -> Expr . COLON CompLitExpr
    (231) BareCompLitExpr -> Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 375
    COMMA           reduce using rule 231 (BareCompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 231 (BareCompLitExpr -> Expr .)
    OROR            shift and go to state 166


state 284

    (232) BareCompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (182) BracedKeyvalList -> .
    (183) BracedKeyvalList -> . KeyvalList OComma
    (178) KeyvalList -> . Keyval
    (179) KeyvalList -> . BareCompLitExpr
    (180) KeyvalList -> . KeyvalList COMMA Keyval
    (181) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (230) Keyval -> . Expr COLON CompLitExpr
    (231) BareCompLitExpr -> . Expr
    (232) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 182 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 284
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 281
    BareCompLitExpr                shift and go to state 286
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 376

state 285

    (183) BracedKeyvalList -> KeyvalList . OComma
    (180) KeyvalList -> KeyvalList . COMMA Keyval
    (181) KeyvalList -> KeyvalList . COMMA BareCompLitExpr
    (140) OComma -> .
    (141) OComma -> . COMMA

    COMMA           shift and go to state 377
    RIGHT_RIGHT     reduce using rule 140 (OComma -> .)

    OComma                         shift and go to state 378

state 286

    (179) KeyvalList -> BareCompLitExpr .

    COMMA           reduce using rule 179 (KeyvalList -> BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 179 (KeyvalList -> BareCompLitExpr .)


state 287

    (165) DeclList -> DeclList cmtlist Declaration . SEMICOL

    SEMICOL         shift and go to state 379


state 288

    (8) Imports -> Imports cmtlist Import . SEMICOL

    SEMICOL         shift and go to state 380


state 289

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList . cmtlist
    (165) DeclList -> DeclList . cmtlist Declaration SEMICOL
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    $end            reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 381

state 290

    (217) PExprNoParen -> PExpr LBRACK Expr . RBRACK
    (262) Expr -> Expr . OROR Prec2Expr_
    (149) OExpr -> Expr .

    RBRACK          shift and go to state 382
    OROR            shift and go to state 166
    COLON           reduce using rule 149 (OExpr -> Expr .)


state 291

    (218) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr RBRACK
    (219) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr COLON OExpr RBRACK

    COLON           shift and go to state 383


state 292

    (277) PseudoCall -> PExpr LPAREN ExprOrTypeList . OComma RPAREN
    (278) PseudoCall -> PExpr LPAREN ExprOrTypeList . DDD OComma RPAREN
    (157) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType
    (140) OComma -> .
    (141) OComma -> . COMMA

    DDD             shift and go to state 386
    COMMA           shift and go to state 385
    RPAREN          reduce using rule 140 (OComma -> .)

    OComma                         shift and go to state 384

state 293

    (156) ExprOrTypeList -> ExprOrType .

    DDD             reduce using rule 156 (ExprOrTypeList -> ExprOrType .)
    COMMA           reduce using rule 156 (ExprOrTypeList -> ExprOrType .)
    RPAREN          reduce using rule 156 (ExprOrTypeList -> ExprOrType .)
    COLON           reduce using rule 156 (ExprOrTypeList -> ExprOrType .)
    EQUAL           reduce using rule 156 (ExprOrTypeList -> ExprOrType .)
    COLONEQ         reduce using rule 156 (ExprOrTypeList -> ExprOrType .)


state 294

    (276) PseudoCall -> PExpr LPAREN RPAREN .

    DOT             reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACK          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEFT_LEFT       reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    LPAREN          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDE          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    MOD             reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL             reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR             reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPERS          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAR          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMES           reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUS            reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUS           reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    XOR             reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    OR              reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQEQ            reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    NOTEQ           reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEQ             reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    GEQ             reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    GREAT           reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    LESS            reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPAMP          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    OROR            reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    SEMICOL         reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACE          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSEQ          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSEQ         reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMESEQ         reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDEEQ        reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    MODEQ           reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    OREQ            reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPEQ           reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    CAREQ           reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAREQ        reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSMIN        reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQUAL           reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLONEQ         reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    COMMA           reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    PIPE            reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACK          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    RPAREN          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_ANGLE     reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACE          reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLON           reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_RIGHT     reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)
    DDD             reduce using rule 276 (PseudoCall -> PExpr LPAREN RPAREN .)


state 295

    (223) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 387


state 296

    (215) PExprNoParen -> PExpr DOT LPAREN . ExprOrType RPAREN
    (216) PExprNoParen -> PExpr DOT LPAREN . NewType RPAREN
    (235) ExprOrType -> . Expr
    (236) ExprOrType -> . NonExprType
    (226) NewType -> . TYPE
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (90) NonExprType -> . FuncType
    (91) NonExprType -> . OtherType
    (92) NonExprType -> . TIMES NonExprType
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (152) FuncLiteralDecl -> . FuncType

    TYPE            shift and go to state 61
    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    NewType                        shift and go to state 388
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 389
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 297

    (214) PExprNoParen -> PExpr DOT IDENTIFIER .

    DOT             reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACK          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LPAREN          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDE          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MOD             reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL             reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR             reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPERS          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAR          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMES           reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUS            reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUS           reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    XOR             reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OR              reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQEQ            reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    NOTEQ           reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEQ             reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GEQ             reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GREAT           reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LESS            reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPAMP          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OROR            reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COMMA           reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SEMICOL         reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RPAREN          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACE          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DDD             reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MODEQ           reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OREQ            reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPEQ           reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    CAREQ           reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAREQ        reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQUAL           reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLONEQ         reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PIPE            reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACK          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACE          reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLON           reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 214 (PExprNoParen -> PExpr DOT IDENTIFIER .)


state 298

    (30) CommonDecl -> NewType LPAREN RPAREN .

    SEMICOL         reduce using rule 30 (CommonDecl -> NewType LPAREN RPAREN .)


state 299

    (29) CommonDecl -> NewType LPAREN TypeDeclList . OSemi RPAREN
    (171) TypeDeclList -> TypeDeclList . SEMICOL TypeDecl
    (142) OSemi -> .
    (143) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 390
    RPAREN          reduce using rule 142 (OSemi -> .)

    OSemi                          shift and go to state 391

state 300

    (170) TypeDeclList -> TypeDecl .

    SEMICOL         reduce using rule 170 (TypeDeclList -> TypeDecl .)
    RPAREN          reduce using rule 170 (TypeDeclList -> TypeDecl .)


state 301

    (40) TypeDecl -> TypeDeclName NType .

    SEMICOL         reduce using rule 40 (TypeDecl -> TypeDeclName NType .)
    RPAREN          reduce using rule 40 (TypeDecl -> TypeDeclName NType .)


state 302

    (262) Expr -> Expr OROR Prec2Expr_ .
    (260) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    OROR            reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    COLON           reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    EQUAL           reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    COLONEQ         reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    COMMA           reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    SEMICOL         reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    LBRACE          reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    RPAREN          reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSEQ          reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSEQ         reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    TIMESEQ         reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    MODEQ           reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    OREQ            reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    AMPEQ           reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    CAREQ           reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    AMPCAREQ        reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSPLUS        reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSMIN        reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACK          reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    DDD             reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACE          reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    PIPE            reduce using rule 262 (Expr -> Expr OROR Prec2Expr_ .)
    AMPAMP          shift and go to state 100


state 303

    (49) SimpleStmt -> Expr CAREQ Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 49 (SimpleStmt -> Expr CAREQ Expr .)
    LBRACE          reduce using rule 49 (SimpleStmt -> Expr CAREQ Expr .)
    OROR            shift and go to state 166


state 304

    (44) SimpleStmt -> Expr TIMESEQ Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 44 (SimpleStmt -> Expr TIMESEQ Expr .)
    LBRACE          reduce using rule 44 (SimpleStmt -> Expr TIMESEQ Expr .)
    OROR            shift and go to state 166


state 305

    (42) SimpleStmt -> Expr PLUSEQ Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 42 (SimpleStmt -> Expr PLUSEQ Expr .)
    LBRACE          reduce using rule 42 (SimpleStmt -> Expr PLUSEQ Expr .)
    OROR            shift and go to state 166


state 306

    (46) SimpleStmt -> Expr MODEQ Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 46 (SimpleStmt -> Expr MODEQ Expr .)
    LBRACE          reduce using rule 46 (SimpleStmt -> Expr MODEQ Expr .)
    OROR            shift and go to state 166


state 307

    (51) SimpleStmt -> Expr SHR_ASSIGN Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 51 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    LBRACE          reduce using rule 51 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    OROR            shift and go to state 166


state 308

    (47) SimpleStmt -> Expr OREQ Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 47 (SimpleStmt -> Expr OREQ Expr .)
    LBRACE          reduce using rule 47 (SimpleStmt -> Expr OREQ Expr .)
    OROR            shift and go to state 166


state 309

    (43) SimpleStmt -> Expr MINUSEQ Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 43 (SimpleStmt -> Expr MINUSEQ Expr .)
    LBRACE          reduce using rule 43 (SimpleStmt -> Expr MINUSEQ Expr .)
    OROR            shift and go to state 166


state 310

    (48) SimpleStmt -> Expr AMPEQ Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 48 (SimpleStmt -> Expr AMPEQ Expr .)
    LBRACE          reduce using rule 48 (SimpleStmt -> Expr AMPEQ Expr .)
    OROR            shift and go to state 166


state 311

    (52) SimpleStmt -> Expr AMPCAREQ Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 52 (SimpleStmt -> Expr AMPCAREQ Expr .)
    LBRACE          reduce using rule 52 (SimpleStmt -> Expr AMPCAREQ Expr .)
    OROR            shift and go to state 166


state 312

    (50) SimpleStmt -> Expr SHL_ASSIGN Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 50 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    LBRACE          reduce using rule 50 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    OROR            shift and go to state 166


state 313

    (45) SimpleStmt -> Expr DIVIDEEQ Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 45 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    LBRACE          reduce using rule 45 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    OROR            shift and go to state 166


state 314

    (211) PExpr -> LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 211 (PExpr -> LPAREN ExprOrType RPAREN .)


state 315

    (92) NonExprType -> TIMES NonExprType .

    COLON           reduce using rule 92 (NonExprType -> TIMES NonExprType .)
    EQUAL           reduce using rule 92 (NonExprType -> TIMES NonExprType .)
    COLONEQ         reduce using rule 92 (NonExprType -> TIMES NonExprType .)
    COMMA           reduce using rule 92 (NonExprType -> TIMES NonExprType .)
    RPAREN          reduce using rule 92 (NonExprType -> TIMES NonExprType .)
    DDD             reduce using rule 92 (NonExprType -> TIMES NonExprType .)


state 316

    (91) NonExprType -> OtherType .
    (228) ConvType -> OtherType .
    (229) CompType -> OtherType .

    RPAREN          reduce using rule 91 (NonExprType -> OtherType .)
    DDD             reduce using rule 91 (NonExprType -> OtherType .)
    COMMA           reduce using rule 91 (NonExprType -> OtherType .)
    COLON           reduce using rule 91 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 91 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 91 (NonExprType -> OtherType .)
    LEFT_ANGLE      reduce using rule 228 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 229 (CompType -> OtherType .)


state 317

    (78) IfStmt -> IF IfHeader LoopBody . ElseIfList
    (80) ElseIfList -> .
    (81) ElseIfList -> . ElseIf ElseIfList
    (82) ElseIfList -> . Else
    (79) ElseIf -> . ELSE IF IfHeader LoopBody
    (83) Else -> . ELSE CompoundStmt

    SEMICOL         reduce using rule 80 (ElseIfList -> .)
    ELSE            shift and go to state 395

    ElseIfList                     shift and go to state 392
    Else                           shift and go to state 393
    ElseIf                         shift and go to state 394

state 318

    (176) NewNameList -> NewName .

    COMMA           reduce using rule 176 (NewNameList -> NewName .)
    LPAREN          reduce using rule 176 (NewNameList -> NewName .)
    FUNCTION        reduce using rule 176 (NewNameList -> NewName .)
    LBRACK          reduce using rule 176 (NewNameList -> NewName .)
    TIMES           reduce using rule 176 (NewNameList -> NewName .)
    TYPE            reduce using rule 176 (NewNameList -> NewName .)
    STRUCT          reduce using rule 176 (NewNameList -> NewName .)
    INTERFACE       reduce using rule 176 (NewNameList -> NewName .)
    CHAN            reduce using rule 176 (NewNameList -> NewName .)
    LMINUS          reduce using rule 176 (NewNameList -> NewName .)
    IDENTIFIER      reduce using rule 176 (NewNameList -> NewName .)


state 319

    (116) StructDeclList -> StructDecl .

    SEMICOL         reduce using rule 116 (StructDeclList -> StructDecl .)
    RBRACE          reduce using rule 116 (StructDeclList -> StructDecl .)


state 320

    (123) StructDecl -> TIMES . Embed OLiteral
    (125) StructDecl -> TIMES . LPAREN Embed RPAREN OLiteral
    (163) Embed -> . IDENTIFIER

    LPAREN          shift and go to state 396
    IDENTIFIER      shift and go to state 398

    Embed                          shift and go to state 397

state 321

    (122) StructDecl -> LPAREN . Embed RPAREN OLiteral
    (124) StructDecl -> LPAREN . TIMES Embed RPAREN OLiteral
    (163) Embed -> . IDENTIFIER

    TIMES           shift and go to state 399
    IDENTIFIER      shift and go to state 398

    Embed                          shift and go to state 400

state 322

    (120) StructDecl -> NewNameList . NType OLiteral
    (177) NewNameList -> NewNameList . COMMA NewName
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    COMMA           shift and go to state 401
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    FuncType                       shift and go to state 219
    NType                          shift and go to state 402
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    NewType                        shift and go to state 222

state 323

    (100) StructType -> STRUCT LBRACE StructDeclList . OSemi RBRACE
    (117) StructDeclList -> StructDeclList . SEMICOL StructDecl
    (142) OSemi -> .
    (143) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 403
    RBRACE          reduce using rule 142 (OSemi -> .)

    OSemi                          shift and go to state 404

state 324

    (163) Embed -> IDENTIFIER .
    (131) NewName -> IDENTIFIER .

    INTEGER         reduce using rule 163 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 163 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 163 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 163 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 163 (Embed -> IDENTIFIER .)
    COMMA           reduce using rule 131 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 131 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 131 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 131 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 131 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 131 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 131 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 131 (NewName -> IDENTIFIER .)
    CHAN            reduce using rule 131 (NewName -> IDENTIFIER .)
    LMINUS          reduce using rule 131 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 131 (NewName -> IDENTIFIER .)


state 325

    (121) StructDecl -> Embed . OLiteral
    (158) OLiteral -> .
    (159) OLiteral -> . Literal
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING

    SEMICOL         reduce using rule 158 (OLiteral -> .)
    RBRACE          reduce using rule 158 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 406
    Literal                        shift and go to state 405

state 326

    (101) StructType -> STRUCT LBRACE RBRACE .

    SEMICOL         reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACE          reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    LBRACE          reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    COLON           reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    EQUAL           reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    COLONEQ         reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    COMMA           reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    INTEGER         reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    FLOAT           reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    STRING          reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    RPAREN          reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)
    DDD             reduce using rule 101 (StructType -> STRUCT LBRACE RBRACE .)


state 327

    (221) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma . RIGHT_ANGLE

    RIGHT_ANGLE     shift and go to state 407


state 328

    (141) OComma -> COMMA .

    RIGHT_ANGLE     reduce using rule 141 (OComma -> COMMA .)
    RPAREN          reduce using rule 141 (OComma -> COMMA .)


state 329

    (61) CompoundStmt -> LBRACE marker1 . cmtlist StmtList cmtlist RBRACE
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    LBRACE          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    SEMICOL         reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 408

state 330

    (14) ImportStmtList -> ImportStmtList SEMICOL . ImportStmt
    (143) OSemi -> SEMICOL .
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    RPAREN          reduce using rule 143 (OSemi -> SEMICOL .)
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 94
    DOT             shift and go to state 97

    ImportStmt                     shift and go to state 409
    ImportHere                     shift and go to state 93

state 331

    (10) Import -> IMPORT LPAREN ImportStmtList OSemi . RPAREN

    RPAREN          shift and go to state 410


state 332

    (174) StmtList -> Stmt . SEMICOL

    SEMICOL         shift and go to state 411


state 333

    (153) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList . cmtlist RBRACE
    (175) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 279 (cmtlist -> .)
    COMMENT         reduce using rule 279 (cmtlist -> .)
    LBRACE          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    SEMICOL         reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 412

state 334

    (167) VarDeclList -> VarDeclList SEMICOL . VarDecl
    (143) OSemi -> SEMICOL .
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (172) DeclNameList -> . DeclName
    (173) DeclNameList -> . DeclNameList COMMA DeclName
    (184) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 143 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    VarDecl                        shift and go to state 413
    DeclNameList                   shift and go to state 106

state 335

    (26) CommonDecl -> VAR LPAREN VarDeclList OSemi . RPAREN

    RPAREN          shift and go to state 414


state 336

    (33) VarDecl -> DeclNameList EQUAL ExprList .
    (155) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 33 (VarDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 33 (VarDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 107


state 337

    (132) PtrType -> TIMES NType .

    SEMICOL         reduce using rule 132 (PtrType -> TIMES NType .)
    RPAREN          reduce using rule 132 (PtrType -> TIMES NType .)
    LBRACE          reduce using rule 132 (PtrType -> TIMES NType .)
    COMMA           reduce using rule 132 (PtrType -> TIMES NType .)
    OR_RIGHT        reduce using rule 132 (PtrType -> TIMES NType .)
    LEFT_ANGLE      reduce using rule 132 (PtrType -> TIMES NType .)
    EQUAL           reduce using rule 132 (PtrType -> TIMES NType .)
    DDD             reduce using rule 132 (PtrType -> TIMES NType .)
    COLON           reduce using rule 132 (PtrType -> TIMES NType .)
    COLONEQ         reduce using rule 132 (PtrType -> TIMES NType .)
    LEFT_LEFT       reduce using rule 132 (PtrType -> TIMES NType .)
    INTEGER         reduce using rule 132 (PtrType -> TIMES NType .)
    FLOAT           reduce using rule 132 (PtrType -> TIMES NType .)
    STRING          reduce using rule 132 (PtrType -> TIMES NType .)
    RBRACE          reduce using rule 132 (PtrType -> TIMES NType .)


state 338

    (173) DeclNameList -> DeclNameList COMMA DeclName .

    EQUAL           reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    COMMA           reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    LPAREN          reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    FUNCTION        reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    LBRACK          reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    TIMES           reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    TYPE            reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    STRUCT          reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    INTERFACE       reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    CHAN            reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    LMINUS          reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    IDENTIFIER      reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    SEMICOL         reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)
    RPAREN          reduce using rule 173 (DeclNameList -> DeclNameList COMMA DeclName .)


state 339

    (139) DotName -> Name DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 415


state 340

    (32) VarDecl -> DeclNameList NType EQUAL . ExprList
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 416
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 341

    (88) NType -> LPAREN NType . RPAREN

    RPAREN          shift and go to state 417


state 342

    (149) OExpr -> Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 149 (OExpr -> Expr .)
    COLON           reduce using rule 149 (OExpr -> Expr .)
    OROR            shift and go to state 166


state 343

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi . RPAREN

    RPAREN          shift and go to state 418


state 344

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL . ConstDeclList OSemi RPAREN
    (143) OSemi -> SEMICOL .
    (168) ConstDeclList -> . ConstDecl1
    (169) ConstDeclList -> . ConstDeclList SEMICOL ConstDecl1
    (37) ConstDecl1 -> . ConstDecl
    (38) ConstDecl1 -> . DeclNameList
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (172) DeclNameList -> . DeclName
    (173) DeclNameList -> . DeclNameList COMMA DeclName
    (184) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 143 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 102

    ConstDecl1                     shift and go to state 421
    DeclName                       shift and go to state 103
    ConstDecl                      shift and go to state 422
    ConstDeclList                  shift and go to state 419
    DeclNameList                   shift and go to state 420

state 345

    (36) ConstDecl -> DeclNameList EQUAL ExprList .
    (155) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 36 (ConstDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 36 (ConstDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 107


state 346

    (34) ConstDecl -> DeclNameList NType EQUAL . ExprList
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 423
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 347

    (267) Arrayexp -> OtherType LBRACE ExprList RBRACE .

    OROR            reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RPAREN          reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SEMICOL         reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    LBRACE          reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PLUSEQ          reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MINUSEQ         reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    TIMESEQ         reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    DIVIDEEQ        reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MODEQ           reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    OREQ            reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    AMPEQ           reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    CAREQ           reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SHL_ASSIGN      reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SHR_ASSIGN      reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    AMPCAREQ        reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PLUSPLUS        reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MINUSMIN        reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    EQUAL           reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COLONEQ         reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COMMA           reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PIPE            reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RBRACK          reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    DDD             reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COLON           reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RIGHT_RIGHT     reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RBRACE          reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RIGHT_ANGLE     reduce using rule 267 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)


state 348

    (191) ArgTypeList -> ArgTypeList COMMA . ArgType
    (141) OComma -> COMMA .
    (186) ArgType -> . NameOrType
    (187) ArgType -> . IDENTIFIER NameOrType
    (188) ArgType -> . IDENTIFIER DotDotDot
    (189) ArgType -> . DotDotDot
    (237) NameOrType -> . NType
    (208) DotDotDot -> . DDD
    (209) DotDotDot -> . DDD NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    RPAREN          reduce using rule 141 (OComma -> COMMA .)
    OR_RIGHT        reduce using rule 141 (OComma -> COMMA .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    StructType                     shift and go to state 56
    DotName                        shift and go to state 223
    Name                           shift and go to state 227
    NewType                        shift and go to state 222
    DotDotDot                      shift and go to state 247
    NType                          shift and go to state 250
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    ArgType                        shift and go to state 424
    FuncType                       shift and go to state 219

state 349

    (193) OArgTypeListOComma -> ArgTypeList OComma .

    OR_RIGHT        reduce using rule 193 (OArgTypeListOComma -> ArgTypeList OComma .)
    RPAREN          reduce using rule 193 (OArgTypeListOComma -> ArgTypeList OComma .)


state 350

    (109) ArgList -> LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    CHAN            reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LMINUS          reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 109 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)


state 351

    (188) ArgType -> IDENTIFIER DotDotDot .

    COMMA           reduce using rule 188 (ArgType -> IDENTIFIER DotDotDot .)
    OR_RIGHT        reduce using rule 188 (ArgType -> IDENTIFIER DotDotDot .)
    RPAREN          reduce using rule 188 (ArgType -> IDENTIFIER DotDotDot .)


state 352

    (187) ArgType -> IDENTIFIER NameOrType .

    COMMA           reduce using rule 187 (ArgType -> IDENTIFIER NameOrType .)
    OR_RIGHT        reduce using rule 187 (ArgType -> IDENTIFIER NameOrType .)
    RPAREN          reduce using rule 187 (ArgType -> IDENTIFIER NameOrType .)


state 353

    (209) DotDotDot -> DDD NType .

    COMMA           reduce using rule 209 (DotDotDot -> DDD NType .)
    RPAREN          reduce using rule 209 (DotDotDot -> DDD NType .)
    OR_RIGHT        reduce using rule 209 (DotDotDot -> DDD NType .)


state 354

    (110) ArgList -> ArgList LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 425


state 355

    (115) FuncRes -> LEFT_OR OArgTypeListOComma . OR_RIGHT

    OR_RIGHT        shift and go to state 426


state 356

    (112) FuncBody -> LBRACE . cmtlist StmtList cmtlist revmarker1 RBRACE
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    LBRACE          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    SEMICOL         reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 427

state 357

    (104) FuncDecl -> FUNCTION marker2 FuncDecl_ FuncBody .

    SEMICOL         reduce using rule 104 (FuncDecl -> FUNCTION marker2 FuncDecl_ FuncBody .)


state 358

    (107) FuncDecl_ -> LEFT_OR OArgTypeListOComma . OR_RIGHT IDENTIFIER ArgList FuncRes

    OR_RIGHT        shift and go to state 428


state 359

    (106) FuncDecl_ -> IDENTIFIER ArgList . FuncRes
    (110) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (113) FuncRes -> .
    (114) FuncRes -> . FuncRetType
    (115) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (133) FuncRetType -> . FuncType
    (134) FuncRetType -> . OtherType
    (135) FuncRetType -> . PtrType
    (136) FuncRetType -> . DotName
    (137) FuncRetType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    LPAREN          shift and go to state 252
    LBRACE          reduce using rule 113 (FuncRes -> .)
    SEMICOL         reduce using rule 113 (FuncRes -> .)
    LEFT_OR         shift and go to state 258
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    DotName                        shift and go to state 259
    Name                           shift and go to state 227
    FuncType                       shift and go to state 253
    OtherType                      shift and go to state 256
    InterfaceType                  shift and go to state 15
    FuncRes                        shift and go to state 429
    PtrType                        shift and go to state 254
    ChannelType                    shift and go to state 35
    FuncRetType                    shift and go to state 260
    NewType                        shift and go to state 255

state 360

    (71) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt . SEMICOL OSimpleStmt

    SEMICOL         shift and go to state 430


state 361

    (68) RangeStmt -> ExprList EQUAL RANGE . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 431
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 362

    (69) RangeStmt -> ExprList COLONEQ RANGE . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 432
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 363

    (65) LoopBody -> LBRACE marker1 . cmtlist StmtList cmtlist revmarker1 RBRACE
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    LBRACE          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    SEMICOL         reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 433

state 364

    (119) InterfaceDeclList -> InterfaceDeclList SEMICOL . InterfaceDecl
    (143) OSemi -> SEMICOL .
    (126) InterfaceDecl -> . NewName InDecl
    (127) InterfaceDecl -> . IDENTIFIER
    (128) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (131) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 143 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 275
    LPAREN          shift and go to state 274

    InterfaceDecl                  shift and go to state 434
    NewName                        shift and go to state 273

state 365

    (102) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi . RBRACE

    RBRACE          shift and go to state 435


state 366

    (129) InDecl -> LPAREN . OArgTypeListOComma RPAREN FuncRes
    (192) OArgTypeListOComma -> .
    (193) OArgTypeListOComma -> . ArgTypeList OComma
    (190) ArgTypeList -> . ArgType
    (191) ArgTypeList -> . ArgTypeList COMMA ArgType
    (186) ArgType -> . NameOrType
    (187) ArgType -> . IDENTIFIER NameOrType
    (188) ArgType -> . IDENTIFIER DotDotDot
    (189) ArgType -> . DotDotDot
    (237) NameOrType -> . NType
    (208) DotDotDot -> . DDD
    (209) DotDotDot -> . DDD NType
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    RPAREN          reduce using rule 192 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 249
    DDD             shift and go to state 251
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 219
    ArgTypeList                    shift and go to state 244
    PtrType                        shift and go to state 221
    ArgType                        shift and go to state 245
    NewType                        shift and go to state 222
    OArgTypeListOComma             shift and go to state 436
    DotDotDot                      shift and go to state 247
    NameOrType                     shift and go to state 248
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 227
    NType                          shift and go to state 250
    DotName                        shift and go to state 223

state 367

    (126) InterfaceDecl -> NewName InDecl .

    SEMICOL         reduce using rule 126 (InterfaceDecl -> NewName InDecl .)
    RBRACE          reduce using rule 126 (InterfaceDecl -> NewName InDecl .)


state 368

    (128) InterfaceDecl -> LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 437


state 369

    (275) ForCompExpr -> LBRACK Expr PIPE RangeStmt . RBRACK

    RBRACK          shift and go to state 438


state 370

    (68) RangeStmt -> ExprList . EQUAL RANGE Expr
    (69) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (155) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 439
    COLONEQ         shift and go to state 440
    COMMA           shift and go to state 107


state 371

    (93) OtherType -> LBRACK OExpr RBRACK NType .

    EQUAL           reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    SEMICOL         reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    RPAREN          reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    LBRACE          reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    DDD             reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    COMMA           reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_ANGLE      reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_LEFT       reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    OR_RIGHT        reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLON           reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLONEQ         reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACE          reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    INTEGER         reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    FLOAT           reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)
    STRING          reduce using rule 93 (OtherType -> LBRACK OExpr RBRACK NType .)


state 372

    (77) IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 77 (IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .)


state 373

    (238) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList . RBRACE
    (64) CaseBlockList -> CaseBlockList . CaseBlock
    (62) CaseBlock -> . Case StmtList
    (57) Case -> . CASE ExprOrTypeList COLON
    (58) Case -> . CASE ExprOrTypeList EQUAL Expr COLON
    (59) Case -> . CASE ExprOrTypeList COLONEQ Expr COLON
    (60) Case -> . DEFAULT COLON

    RBRACE          shift and go to state 443
    CASE            shift and go to state 442
    DEFAULT         shift and go to state 444

    Case                           shift and go to state 441
    CaseBlock                      shift and go to state 445

state 374

    (222) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 222 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 375

    (230) Keyval -> Expr COLON . CompLitExpr
    (233) CompLitExpr -> . Expr
    (234) CompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    LEFT_LEFT       shift and go to state 448
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 447
    PseudoCall                     shift and go to state 38
    CompLitExpr                    shift and go to state 446
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 376

    (232) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 449


state 377

    (180) KeyvalList -> KeyvalList COMMA . Keyval
    (181) KeyvalList -> KeyvalList COMMA . BareCompLitExpr
    (141) OComma -> COMMA .
    (230) Keyval -> . Expr COLON CompLitExpr
    (231) BareCompLitExpr -> . Expr
    (232) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 141 (OComma -> COMMA .)
    LEFT_LEFT       shift and go to state 284
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 450
    BareCompLitExpr                shift and go to state 451
    PExpr                          shift and go to state 60

state 378

    (183) BracedKeyvalList -> KeyvalList OComma .

    RIGHT_RIGHT     reduce using rule 183 (BracedKeyvalList -> KeyvalList OComma .)


state 379

    (165) DeclList -> DeclList cmtlist Declaration SEMICOL .

    COMMENT         reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANT        reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    VAR             reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FUNCTION        reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    BREAK           reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONTINUE        reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    GOTO            reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    RETURN          reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TYPE            reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FOR             reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    SWITCH          reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IF              reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANTS       reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LMINUS          reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LBRACK          reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRUCT          reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTERFACE       reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CHAN            reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    AMPERS          reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    NOT             reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TIMES           reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    PLUS            reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    MINUS           reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    XOR             reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LPAREN          reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTEGER         reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FLOAT           reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRING          reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    $end            reduce using rule 165 (DeclList -> DeclList cmtlist Declaration SEMICOL .)


state 380

    (8) Imports -> Imports cmtlist Import SEMICOL .

    COMMENT         reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IMPORT          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANT        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    VAR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FUNCTION        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FALLTHROUGH     reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    BREAK           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONTINUE        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    GOTO            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    RETURN          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    TYPE            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FOR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    SWITCH          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IF              reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANTS       reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IDENTIFIER      reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LMINUS          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LBRACK          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    STRUCT          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    INTERFACE       reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CHAN            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    AMPERS          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    NOT             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    TIMES           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    PLUS            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    MINUS           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    XOR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LPAREN          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    INTEGER         reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FLOAT           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    STRING          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    $end            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)


state 381

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .
    (165) DeclList -> DeclList cmtlist . Declaration SEMICOL
    (280) cmtlist -> cmtlist . COMMENT
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (104) FuncDecl -> . FUNCTION marker2 FuncDecl_ FuncBody
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 2 (SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .)
    COMMENT         shift and go to state 4
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    NewType                        shift and go to state 65
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    IfStmt                         shift and go to state 12
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 287
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 382

    (217) PExprNoParen -> PExpr LBRACK Expr RBRACK .

    DOT             reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACK          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEFT_LEFT       reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LPAREN          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDE          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MOD             reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL             reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR             reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPERS          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAR          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMES           reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUS            reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUS           reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    XOR             reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OR              reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQEQ            reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    NOTEQ           reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEQ             reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GEQ             reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GREAT           reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LESS            reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPAMP          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OROR            reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COMMA           reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SEMICOL         reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RPAREN          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACE          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DDD             reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSEQ          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSEQ         reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMESEQ         reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDEEQ        reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MODEQ           reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OREQ            reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPEQ           reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    CAREQ           reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAREQ        reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSPLUS        reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSMIN        reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQUAL           reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLONEQ         reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PIPE            reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACK          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_ANGLE     reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACE          reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLON           reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_RIGHT     reduce using rule 217 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)


state 383

    (218) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr RBRACK
    (219) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr COLON OExpr RBRACK
    (148) OExpr -> .
    (149) OExpr -> . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 148 (OExpr -> .)
    COLON           reduce using rule 148 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 342
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 452
    PExpr                          shift and go to state 60

state 384

    (277) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma . RPAREN

    RPAREN          shift and go to state 453


state 385

    (157) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (141) OComma -> COMMA .
    (235) ExprOrType -> . Expr
    (236) ExprOrType -> . NonExprType
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (90) NonExprType -> . FuncType
    (91) NonExprType -> . OtherType
    (92) NonExprType -> . TIMES NonExprType
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (152) FuncLiteralDecl -> . FuncType

    RPAREN          reduce using rule 141 (OComma -> COMMA .)
    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 454
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 386

    (278) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD . OComma RPAREN
    (140) OComma -> .
    (141) OComma -> . COMMA

    RPAREN          reduce using rule 140 (OComma -> .)
    COMMA           shift and go to state 328

    OComma                         shift and go to state 455

state 387

    (223) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 223 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 388

    (216) PExprNoParen -> PExpr DOT LPAREN NewType . RPAREN

    RPAREN          shift and go to state 456


state 389

    (215) PExprNoParen -> PExpr DOT LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 457


state 390

    (171) TypeDeclList -> TypeDeclList SEMICOL . TypeDecl
    (143) OSemi -> SEMICOL .
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    RPAREN          reduce using rule 143 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 164

    TypeDeclName                   shift and go to state 163
    TypeDecl                       shift and go to state 458

state 391

    (29) CommonDecl -> NewType LPAREN TypeDeclList OSemi . RPAREN

    RPAREN          shift and go to state 459


state 392

    (78) IfStmt -> IF IfHeader LoopBody ElseIfList .

    SEMICOL         reduce using rule 78 (IfStmt -> IF IfHeader LoopBody ElseIfList .)


state 393

    (82) ElseIfList -> Else .

    SEMICOL         reduce using rule 82 (ElseIfList -> Else .)


state 394

    (81) ElseIfList -> ElseIf . ElseIfList
    (80) ElseIfList -> .
    (81) ElseIfList -> . ElseIf ElseIfList
    (82) ElseIfList -> . Else
    (79) ElseIf -> . ELSE IF IfHeader LoopBody
    (83) Else -> . ELSE CompoundStmt

    SEMICOL         reduce using rule 80 (ElseIfList -> .)
    ELSE            shift and go to state 395

    ElseIfList                     shift and go to state 460
    Else                           shift and go to state 393
    ElseIf                         shift and go to state 394

state 395

    (79) ElseIf -> ELSE . IF IfHeader LoopBody
    (83) Else -> ELSE . CompoundStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE

    IF              shift and go to state 462
    LBRACE          shift and go to state 200

    CompoundStmt                   shift and go to state 461

state 396

    (125) StructDecl -> TIMES LPAREN . Embed RPAREN OLiteral
    (163) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 398

    Embed                          shift and go to state 463

state 397

    (123) StructDecl -> TIMES Embed . OLiteral
    (158) OLiteral -> .
    (159) OLiteral -> . Literal
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING

    SEMICOL         reduce using rule 158 (OLiteral -> .)
    RBRACE          reduce using rule 158 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 464
    Literal                        shift and go to state 405

state 398

    (163) Embed -> IDENTIFIER .

    RPAREN          reduce using rule 163 (Embed -> IDENTIFIER .)
    INTEGER         reduce using rule 163 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 163 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 163 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 163 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 163 (Embed -> IDENTIFIER .)


state 399

    (124) StructDecl -> LPAREN TIMES . Embed RPAREN OLiteral
    (163) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 398

    Embed                          shift and go to state 465

state 400

    (122) StructDecl -> LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 466


state 401

    (177) NewNameList -> NewNameList COMMA . NewName
    (131) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 467

state 402

    (120) StructDecl -> NewNameList NType . OLiteral
    (158) OLiteral -> .
    (159) OLiteral -> . Literal
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING

    SEMICOL         reduce using rule 158 (OLiteral -> .)
    RBRACE          reduce using rule 158 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    Literal                        shift and go to state 405
    OLiteral                       shift and go to state 468

state 403

    (117) StructDeclList -> StructDeclList SEMICOL . StructDecl
    (143) OSemi -> SEMICOL .
    (120) StructDecl -> . NewNameList NType OLiteral
    (121) StructDecl -> . Embed OLiteral
    (122) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (123) StructDecl -> . TIMES Embed OLiteral
    (124) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (125) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (176) NewNameList -> . NewName
    (177) NewNameList -> . NewNameList COMMA NewName
    (163) Embed -> . IDENTIFIER
    (131) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 143 (OSemi -> SEMICOL .)
    LPAREN          shift and go to state 321
    TIMES           shift and go to state 320
    IDENTIFIER      shift and go to state 324

    NewName                        shift and go to state 318
    StructDecl                     shift and go to state 469
    NewNameList                    shift and go to state 322
    Embed                          shift and go to state 325

state 404

    (100) StructType -> STRUCT LBRACE StructDeclList OSemi . RBRACE

    RBRACE          shift and go to state 470


state 405

    (159) OLiteral -> Literal .

    SEMICOL         reduce using rule 159 (OLiteral -> Literal .)
    RBRACE          reduce using rule 159 (OLiteral -> Literal .)


state 406

    (121) StructDecl -> Embed OLiteral .

    SEMICOL         reduce using rule 121 (StructDecl -> Embed OLiteral .)
    RBRACE          reduce using rule 121 (StructDecl -> Embed OLiteral .)


state 407

    (221) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .

    DOT             reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACK          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEFT_LEFT       reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LPAREN          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDE          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MOD             reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL             reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR             reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPERS          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAR          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMES           reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUS            reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUS           reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    XOR             reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OR              reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQEQ            reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    NOTEQ           reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEQ             reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GEQ             reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GREAT           reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LESS            reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPAMP          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OROR            reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COMMA           reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SEMICOL         reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RPAREN          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACE          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DDD             reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSEQ          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSEQ         reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMESEQ         reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDEEQ        reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MODEQ           reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OREQ            reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPEQ           reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    CAREQ           reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL_ASSIGN      reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR_ASSIGN      reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAREQ        reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSPLUS        reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSMIN        reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQUAL           reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLONEQ         reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PIPE            reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACK          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_ANGLE     reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACE          reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLON           reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_RIGHT     reduce using rule 221 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)


state 408

    (61) CompoundStmt -> LBRACE marker1 cmtlist . StmtList cmtlist RBRACE
    (280) cmtlist -> cmtlist . COMMENT
    (174) StmtList -> . Stmt SEMICOL
    (175) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 471
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 332
    NewType                        shift and go to state 65
    NonDeclStmt                    shift and go to state 201
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NewName                        shift and go to state 34
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 409

    (14) ImportStmtList -> ImportStmtList SEMICOL ImportStmt .

    SEMICOL         reduce using rule 14 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)
    RPAREN          reduce using rule 14 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)


state 410

    (10) Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .

    SEMICOL         reduce using rule 10 (Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .)


state 411

    (174) StmtList -> Stmt SEMICOL .

    RBRACE          reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    COMMENT         reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    LBRACE          reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    CONSTANT        reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    VAR             reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    BREAK           reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    CONTINUE        reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    GOTO            reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    RETURN          reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    TYPE            reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    FOR             reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    SWITCH          reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    IF              reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    CONSTANTS       reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    LMINUS          reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    LBRACK          reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    STRUCT          reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    INTERFACE       reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    CHAN            reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    AMPERS          reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    NOT             reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    TIMES           reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    PLUS            reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    MINUS           reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    XOR             reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    LPAREN          reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    INTEGER         reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    FLOAT           reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    STRING          reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    FUNCTION        reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    SEMICOL         reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    CASE            reduce using rule 174 (StmtList -> Stmt SEMICOL .)
    DEFAULT         reduce using rule 174 (StmtList -> Stmt SEMICOL .)


state 412

    (153) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist . RBRACE
    (175) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (280) cmtlist -> cmtlist . COMMENT
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 473
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    NewName                        shift and go to state 34
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 472
    NewType                        shift and go to state 65
    NonDeclStmt                    shift and go to state 201
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    Prec4Expr_                     shift and go to state 28
    CompoundStmt                   shift and go to state 198

state 413

    (167) VarDeclList -> VarDeclList SEMICOL VarDecl .

    SEMICOL         reduce using rule 167 (VarDeclList -> VarDeclList SEMICOL VarDecl .)
    RPAREN          reduce using rule 167 (VarDeclList -> VarDeclList SEMICOL VarDecl .)


state 414

    (26) CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 26 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)


state 415

    (139) DotName -> Name DOT IDENTIFIER .

    COMMA           reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    RPAREN          reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    OR_RIGHT        reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    EQUAL           reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    SEMICOL         reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    LBRACE          reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    DDD             reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    COLON           reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    COLONEQ         reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    INTEGER         reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    FLOAT           reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    STRING          reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)
    RBRACE          reduce using rule 139 (DotName -> Name DOT IDENTIFIER .)


state 416

    (32) VarDecl -> DeclNameList NType EQUAL ExprList .
    (155) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 32 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 32 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 107


state 417

    (88) NType -> LPAREN NType RPAREN .

    COMMA           reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    OR_RIGHT        reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    INTEGER         reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    FLOAT           reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    STRING          reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    SEMICOL         reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    RBRACE          reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    RPAREN          reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    EQUAL           reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    LEFT_ANGLE      reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    LBRACE          reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    DDD             reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    COLON           reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    COLONEQ         reduce using rule 88 (NType -> LPAREN NType RPAREN .)
    LEFT_LEFT       reduce using rule 88 (NType -> LPAREN NType RPAREN .)


state 418

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .

    SEMICOL         reduce using rule 22 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)


state 419

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList . OSemi RPAREN
    (169) ConstDeclList -> ConstDeclList . SEMICOL ConstDecl1
    (142) OSemi -> .
    (143) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 475
    RPAREN          reduce using rule 142 (OSemi -> .)

    OSemi                          shift and go to state 474

state 420

    (38) ConstDecl1 -> DeclNameList .
    (34) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (35) ConstDecl -> DeclNameList . NType
    (36) ConstDecl -> DeclNameList . EQUAL ExprList
    (173) DeclNameList -> DeclNameList . COMMA DeclName
    (84) NType -> . FuncType
    (85) NType -> . OtherType
    (86) NType -> . PtrType
    (87) NType -> . DotName
    (88) NType -> . LPAREN NType RPAREN
    (89) NType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 38 (ConstDecl1 -> DeclNameList .)
    RPAREN          reduce using rule 38 (ConstDecl1 -> DeclNameList .)
    EQUAL           shift and go to state 236
    COMMA           shift and go to state 226
    LPAREN          shift and go to state 229
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    NewType                        shift and go to state 222
    FuncType                       shift and go to state 219
    NType                          shift and go to state 237
    OtherType                      shift and go to state 225
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 221
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 223
    Name                           shift and go to state 227

state 421

    (168) ConstDeclList -> ConstDecl1 .

    SEMICOL         reduce using rule 168 (ConstDeclList -> ConstDecl1 .)
    RPAREN          reduce using rule 168 (ConstDeclList -> ConstDecl1 .)


state 422

    (37) ConstDecl1 -> ConstDecl .

    SEMICOL         reduce using rule 37 (ConstDecl1 -> ConstDecl .)
    RPAREN          reduce using rule 37 (ConstDecl1 -> ConstDecl .)


state 423

    (34) ConstDecl -> DeclNameList NType EQUAL ExprList .
    (155) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 34 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 34 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 107


state 424

    (191) ArgTypeList -> ArgTypeList COMMA ArgType .

    COMMA           reduce using rule 191 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    OR_RIGHT        reduce using rule 191 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    RPAREN          reduce using rule 191 (ArgTypeList -> ArgTypeList COMMA ArgType .)


state 425

    (110) ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    CHAN            reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LMINUS          reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 110 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)


state 426

    (115) FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .

    LBRACE          reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    SEMICOL         reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACE          reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_ANGLE      reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RPAREN          reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    EQUAL           reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COMMA           reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    DDD             reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLON           reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLONEQ         reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    OR_RIGHT        reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_LEFT       reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    INTEGER         reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    FLOAT           reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    STRING          reduce using rule 115 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)


state 427

    (112) FuncBody -> LBRACE cmtlist . StmtList cmtlist revmarker1 RBRACE
    (280) cmtlist -> cmtlist . COMMENT
    (174) StmtList -> . Stmt SEMICOL
    (175) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 476
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 332
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 428

    (107) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT . IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 477


state 429

    (106) FuncDecl_ -> IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 106 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 106 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)


state 430

    (71) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL . OSimpleStmt
    (144) OSimpleStmt -> .
    (145) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    LBRACE          reduce using rule 144 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 478
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 431

    (68) RangeStmt -> ExprList EQUAL RANGE Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 68 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    LBRACE          reduce using rule 68 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    OROR            shift and go to state 166


state 432

    (69) RangeStmt -> ExprList COLONEQ RANGE Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 69 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    LBRACE          reduce using rule 69 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    OROR            shift and go to state 166


state 433

    (65) LoopBody -> LBRACE marker1 cmtlist . StmtList cmtlist revmarker1 RBRACE
    (280) cmtlist -> cmtlist . COMMENT
    (174) StmtList -> . Stmt SEMICOL
    (175) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 479
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 332
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 434

    (119) InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .

    SEMICOL         reduce using rule 119 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)
    RBRACE          reduce using rule 119 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)


state 435

    (102) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .

    LBRACE          reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COMMA           reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    DDD             reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLON           reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    STRING          reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 102 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)


state 436

    (129) InDecl -> LPAREN OArgTypeListOComma . RPAREN FuncRes

    RPAREN          shift and go to state 480


state 437

    (128) InterfaceDecl -> LPAREN IDENTIFIER RPAREN .

    SEMICOL         reduce using rule 128 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)
    RBRACE          reduce using rule 128 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)


state 438

    (275) ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .

    DOT             reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACK          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEFT_LEFT       reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LPAREN          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDE          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MOD             reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL             reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR             reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPERS          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAR          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMES           reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUS            reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUS           reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    XOR             reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OR              reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQEQ            reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    NOTEQ           reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEQ             reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GEQ             reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GREAT           reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LESS            reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPAMP          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OROR            reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SEMICOL         reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACE          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RPAREN          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSEQ          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSEQ         reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMESEQ         reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDEEQ        reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MODEQ           reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OREQ            reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPEQ           reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    CAREQ           reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL_ASSIGN      reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR_ASSIGN      reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAREQ        reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSPLUS        reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSMIN        reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQUAL           reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLONEQ         reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COMMA           reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PIPE            reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACK          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_ANGLE     reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACE          reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLON           reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_RIGHT     reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DDD             reduce using rule 275 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)


state 439

    (68) RangeStmt -> ExprList EQUAL . RANGE Expr

    RANGE           shift and go to state 361


state 440

    (69) RangeStmt -> ExprList COLONEQ . RANGE Expr

    RANGE           shift and go to state 362


state 441

    (62) CaseBlock -> Case . StmtList
    (174) StmtList -> . Stmt SEMICOL
    (175) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 481
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 332
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 442

    (57) Case -> CASE . ExprOrTypeList COLON
    (58) Case -> CASE . ExprOrTypeList EQUAL Expr COLON
    (59) Case -> CASE . ExprOrTypeList COLONEQ Expr COLON
    (156) ExprOrTypeList -> . ExprOrType
    (157) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (235) ExprOrType -> . Expr
    (236) ExprOrType -> . NonExprType
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (90) NonExprType -> . FuncType
    (91) NonExprType -> . OtherType
    (92) NonExprType -> . TIMES NonExprType
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    ExprOrTypeList                 shift and go to state 482
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 293
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 443

    (238) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .

    SEMICOL         reduce using rule 238 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)


state 444

    (60) Case -> DEFAULT . COLON

    COLON           shift and go to state 483


state 445

    (64) CaseBlockList -> CaseBlockList CaseBlock .

    RBRACE          reduce using rule 64 (CaseBlockList -> CaseBlockList CaseBlock .)
    CASE            reduce using rule 64 (CaseBlockList -> CaseBlockList CaseBlock .)
    DEFAULT         reduce using rule 64 (CaseBlockList -> CaseBlockList CaseBlock .)


state 446

    (230) Keyval -> Expr COLON CompLitExpr .

    COMMA           reduce using rule 230 (Keyval -> Expr COLON CompLitExpr .)
    RIGHT_RIGHT     reduce using rule 230 (Keyval -> Expr COLON CompLitExpr .)


state 447

    (233) CompLitExpr -> Expr .
    (262) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 233 (CompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 233 (CompLitExpr -> Expr .)
    OROR            shift and go to state 166


state 448

    (234) CompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (182) BracedKeyvalList -> .
    (183) BracedKeyvalList -> . KeyvalList OComma
    (178) KeyvalList -> . Keyval
    (179) KeyvalList -> . BareCompLitExpr
    (180) KeyvalList -> . KeyvalList COMMA Keyval
    (181) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (230) Keyval -> . Expr COLON CompLitExpr
    (231) BareCompLitExpr -> . Expr
    (232) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 182 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 284
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 281
    BareCompLitExpr                shift and go to state 286
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 484

state 449

    (232) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 232 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 232 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 450

    (180) KeyvalList -> KeyvalList COMMA Keyval .

    COMMA           reduce using rule 180 (KeyvalList -> KeyvalList COMMA Keyval .)
    RIGHT_RIGHT     reduce using rule 180 (KeyvalList -> KeyvalList COMMA Keyval .)


state 451

    (181) KeyvalList -> KeyvalList COMMA BareCompLitExpr .

    COMMA           reduce using rule 181 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 181 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)


state 452

    (218) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . RBRACK
    (219) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . COLON OExpr RBRACK

    RBRACK          shift and go to state 485
    COLON           shift and go to state 486


state 453

    (277) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .

    DOT             reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACK          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEFT_LEFT       reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LPAREN          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDE          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MOD             reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL             reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR             reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPERS          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAR          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMES           reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUS            reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUS           reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    XOR             reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OR              reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQEQ            reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    NOTEQ           reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEQ             reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GEQ             reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GREAT           reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LESS            reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPAMP          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OROR            reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SEMICOL         reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACE          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSEQ          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSEQ         reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMESEQ         reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDEEQ        reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MODEQ           reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OREQ            reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPEQ           reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    CAREQ           reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAREQ        reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSPLUS        reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSMIN        reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQUAL           reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLONEQ         reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COMMA           reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PIPE            reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACK          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RPAREN          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACE          reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLON           reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DDD             reduce using rule 277 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)


state 454

    (157) ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .

    DDD             reduce using rule 157 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COMMA           reduce using rule 157 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    RPAREN          reduce using rule 157 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLON           reduce using rule 157 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    EQUAL           reduce using rule 157 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLONEQ         reduce using rule 157 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)


state 455

    (278) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma . RPAREN

    RPAREN          shift and go to state 487


state 456

    (216) PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .

    DOT             reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LBRACK          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LEFT_LEFT       reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LPAREN          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DIVIDE          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MOD             reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHL             reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHR             reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPERS          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPCAR          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    TIMES           reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUS            reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUS           reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    XOR             reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OR              reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    EQEQ            reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    NOTEQ           reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LEQ             reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    GEQ             reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    GREAT           reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LESS            reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPAMP          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OROR            reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COMMA           reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SEMICOL         reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RPAREN          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LBRACE          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DDD             reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUSEQ          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUSEQ         reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    TIMESEQ         reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DIVIDEEQ        reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MODEQ           reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OREQ            reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPEQ           reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    CAREQ           reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHL_ASSIGN      reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHR_ASSIGN      reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPCAREQ        reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUSPLUS        reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUSMIN        reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    EQUAL           reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COLONEQ         reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PIPE            reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RBRACK          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RIGHT_ANGLE     reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RBRACE          reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COLON           reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RIGHT_RIGHT     reduce using rule 216 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)


state 457

    (215) PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 215 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)


state 458

    (171) TypeDeclList -> TypeDeclList SEMICOL TypeDecl .

    SEMICOL         reduce using rule 171 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)
    RPAREN          reduce using rule 171 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)


state 459

    (29) CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 29 (CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN .)


state 460

    (81) ElseIfList -> ElseIf ElseIfList .

    SEMICOL         reduce using rule 81 (ElseIfList -> ElseIf ElseIfList .)


state 461

    (83) Else -> ELSE CompoundStmt .

    SEMICOL         reduce using rule 83 (Else -> ELSE CompoundStmt .)


state 462

    (79) ElseIf -> ELSE IF . IfHeader LoopBody
    (76) IfHeader -> . OSimpleStmt
    (77) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (144) OSimpleStmt -> .
    (145) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 144 (OSimpleStmt -> .)
    LBRACE          reduce using rule 144 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 136
    OSimpleStmt                    shift and go to state 149
    Prec3Expr_                     shift and go to state 10
    IfHeader                       shift and go to state 488
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    PExpr                          shift and go to state 60

state 463

    (125) StructDecl -> TIMES LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 489


state 464

    (123) StructDecl -> TIMES Embed OLiteral .

    SEMICOL         reduce using rule 123 (StructDecl -> TIMES Embed OLiteral .)
    RBRACE          reduce using rule 123 (StructDecl -> TIMES Embed OLiteral .)


state 465

    (124) StructDecl -> LPAREN TIMES Embed . RPAREN OLiteral

    RPAREN          shift and go to state 490


state 466

    (122) StructDecl -> LPAREN Embed RPAREN . OLiteral
    (158) OLiteral -> .
    (159) OLiteral -> . Literal
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING

    SEMICOL         reduce using rule 158 (OLiteral -> .)
    RBRACE          reduce using rule 158 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 491
    Literal                        shift and go to state 405

state 467

    (177) NewNameList -> NewNameList COMMA NewName .

    COMMA           reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)
    LPAREN          reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)
    FUNCTION        reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)
    LBRACK          reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)
    TIMES           reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)
    TYPE            reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)
    STRUCT          reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)
    INTERFACE       reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)
    CHAN            reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)
    LMINUS          reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)
    IDENTIFIER      reduce using rule 177 (NewNameList -> NewNameList COMMA NewName .)


state 468

    (120) StructDecl -> NewNameList NType OLiteral .

    SEMICOL         reduce using rule 120 (StructDecl -> NewNameList NType OLiteral .)
    RBRACE          reduce using rule 120 (StructDecl -> NewNameList NType OLiteral .)


state 469

    (117) StructDeclList -> StructDeclList SEMICOL StructDecl .

    SEMICOL         reduce using rule 117 (StructDeclList -> StructDeclList SEMICOL StructDecl .)
    RBRACE          reduce using rule 117 (StructDeclList -> StructDeclList SEMICOL StructDecl .)


state 470

    (100) StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .

    SEMICOL         reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LBRACE          reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLON           reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COMMA           reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    STRING          reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    DDD             reduce using rule 100 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)


state 471

    (61) CompoundStmt -> LBRACE marker1 cmtlist StmtList . cmtlist RBRACE
    (175) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 279 (cmtlist -> .)
    COMMENT         reduce using rule 279 (cmtlist -> .)
    LBRACE          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    SEMICOL         reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 492

state 472

    (175) StmtList -> StmtList cmtlist Stmt . SEMICOL

    SEMICOL         shift and go to state 493


state 473

    (153) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .

    DOT             reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACK          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEFT_LEFT       reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LPAREN          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDE          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MOD             reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL             reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR             reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPERS          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAR          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMES           reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUS            reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUS           reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    XOR             reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OR              reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQEQ            reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    NOTEQ           reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEQ             reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GEQ             reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GREAT           reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LESS            reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPAMP          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSEQ          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSEQ         reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMESEQ         reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDEEQ        reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MODEQ           reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OREQ            reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPEQ           reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    CAREQ           reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL_ASSIGN      reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR_ASSIGN      reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAREQ        reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSPLUS        reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSMIN        reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OROR            reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SEMICOL         reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQUAL           reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLONEQ         reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COMMA           reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACE          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PIPE            reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACK          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RPAREN          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_ANGLE     reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACE          reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLON           reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_RIGHT     reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DDD             reduce using rule 153 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)


state 474

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi . RPAREN

    RPAREN          shift and go to state 494


state 475

    (169) ConstDeclList -> ConstDeclList SEMICOL . ConstDecl1
    (143) OSemi -> SEMICOL .
    (37) ConstDecl1 -> . ConstDecl
    (38) ConstDecl1 -> . DeclNameList
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (172) DeclNameList -> . DeclName
    (173) DeclNameList -> . DeclNameList COMMA DeclName
    (184) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 143 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 102

    ConstDecl1                     shift and go to state 495
    DeclName                       shift and go to state 103
    DeclNameList                   shift and go to state 420
    ConstDecl                      shift and go to state 422

state 476

    (112) FuncBody -> LBRACE cmtlist StmtList . cmtlist revmarker1 RBRACE
    (175) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    LBRACE          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    RBRACE          reduce using rule 279 (cmtlist -> .)
    SEMICOL         reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 496

state 477

    (107) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER . ArgList FuncRes
    (109) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (110) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 128

    ArgList                        shift and go to state 497

state 478

    (71) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 71 (ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .)


state 479

    (65) LoopBody -> LBRACE marker1 cmtlist StmtList . cmtlist revmarker1 RBRACE
    (175) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 279 (cmtlist -> .)
    LBRACE          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    RBRACE          reduce using rule 279 (cmtlist -> .)
    SEMICOL         reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 498

state 480

    (129) InDecl -> LPAREN OArgTypeListOComma RPAREN . FuncRes
    (113) FuncRes -> .
    (114) FuncRes -> . FuncRetType
    (115) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (133) FuncRetType -> . FuncType
    (134) FuncRetType -> . OtherType
    (135) FuncRetType -> . PtrType
    (136) FuncRetType -> . DotName
    (137) FuncRetType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 113 (FuncRes -> .)
    RBRACE          reduce using rule 113 (FuncRes -> .)
    LEFT_OR         shift and go to state 258
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    DotName                        shift and go to state 259
    Name                           shift and go to state 227
    FuncType                       shift and go to state 253
    OtherType                      shift and go to state 256
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 254
    ChannelType                    shift and go to state 35
    FuncRes                        shift and go to state 499
    FuncRetType                    shift and go to state 260
    NewType                        shift and go to state 255

state 481

    (62) CaseBlock -> Case StmtList .
    (175) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (279) cmtlist -> .
    (280) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 62 (CaseBlock -> Case StmtList .)
    CASE            reduce using rule 62 (CaseBlock -> Case StmtList .)
    DEFAULT         reduce using rule 62 (CaseBlock -> Case StmtList .)
    COMMENT         reduce using rule 279 (cmtlist -> .)
    LBRACE          reduce using rule 279 (cmtlist -> .)
    CONSTANT        reduce using rule 279 (cmtlist -> .)
    VAR             reduce using rule 279 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 279 (cmtlist -> .)
    BREAK           reduce using rule 279 (cmtlist -> .)
    CONTINUE        reduce using rule 279 (cmtlist -> .)
    GOTO            reduce using rule 279 (cmtlist -> .)
    RETURN          reduce using rule 279 (cmtlist -> .)
    TYPE            reduce using rule 279 (cmtlist -> .)
    FOR             reduce using rule 279 (cmtlist -> .)
    SWITCH          reduce using rule 279 (cmtlist -> .)
    IF              reduce using rule 279 (cmtlist -> .)
    CONSTANTS       reduce using rule 279 (cmtlist -> .)
    IDENTIFIER      reduce using rule 279 (cmtlist -> .)
    LMINUS          reduce using rule 279 (cmtlist -> .)
    LBRACK          reduce using rule 279 (cmtlist -> .)
    STRUCT          reduce using rule 279 (cmtlist -> .)
    INTERFACE       reduce using rule 279 (cmtlist -> .)
    CHAN            reduce using rule 279 (cmtlist -> .)
    AMPERS          reduce using rule 279 (cmtlist -> .)
    NOT             reduce using rule 279 (cmtlist -> .)
    TIMES           reduce using rule 279 (cmtlist -> .)
    PLUS            reduce using rule 279 (cmtlist -> .)
    MINUS           reduce using rule 279 (cmtlist -> .)
    XOR             reduce using rule 279 (cmtlist -> .)
    LPAREN          reduce using rule 279 (cmtlist -> .)
    INTEGER         reduce using rule 279 (cmtlist -> .)
    FLOAT           reduce using rule 279 (cmtlist -> .)
    STRING          reduce using rule 279 (cmtlist -> .)
    FUNCTION        reduce using rule 279 (cmtlist -> .)
    SEMICOL         reduce using rule 279 (cmtlist -> .)

    cmtlist                        shift and go to state 500

state 482

    (57) Case -> CASE ExprOrTypeList . COLON
    (58) Case -> CASE ExprOrTypeList . EQUAL Expr COLON
    (59) Case -> CASE ExprOrTypeList . COLONEQ Expr COLON
    (157) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType

    COLON           shift and go to state 503
    EQUAL           shift and go to state 501
    COLONEQ         shift and go to state 502
    COMMA           shift and go to state 504


state 483

    (60) Case -> DEFAULT COLON .

    LBRACE          reduce using rule 60 (Case -> DEFAULT COLON .)
    CONSTANT        reduce using rule 60 (Case -> DEFAULT COLON .)
    VAR             reduce using rule 60 (Case -> DEFAULT COLON .)
    FALLTHROUGH     reduce using rule 60 (Case -> DEFAULT COLON .)
    BREAK           reduce using rule 60 (Case -> DEFAULT COLON .)
    CONTINUE        reduce using rule 60 (Case -> DEFAULT COLON .)
    GOTO            reduce using rule 60 (Case -> DEFAULT COLON .)
    RETURN          reduce using rule 60 (Case -> DEFAULT COLON .)
    TYPE            reduce using rule 60 (Case -> DEFAULT COLON .)
    FOR             reduce using rule 60 (Case -> DEFAULT COLON .)
    SWITCH          reduce using rule 60 (Case -> DEFAULT COLON .)
    IF              reduce using rule 60 (Case -> DEFAULT COLON .)
    CONSTANTS       reduce using rule 60 (Case -> DEFAULT COLON .)
    IDENTIFIER      reduce using rule 60 (Case -> DEFAULT COLON .)
    LMINUS          reduce using rule 60 (Case -> DEFAULT COLON .)
    LBRACK          reduce using rule 60 (Case -> DEFAULT COLON .)
    STRUCT          reduce using rule 60 (Case -> DEFAULT COLON .)
    INTERFACE       reduce using rule 60 (Case -> DEFAULT COLON .)
    CHAN            reduce using rule 60 (Case -> DEFAULT COLON .)
    AMPERS          reduce using rule 60 (Case -> DEFAULT COLON .)
    NOT             reduce using rule 60 (Case -> DEFAULT COLON .)
    TIMES           reduce using rule 60 (Case -> DEFAULT COLON .)
    PLUS            reduce using rule 60 (Case -> DEFAULT COLON .)
    MINUS           reduce using rule 60 (Case -> DEFAULT COLON .)
    XOR             reduce using rule 60 (Case -> DEFAULT COLON .)
    LPAREN          reduce using rule 60 (Case -> DEFAULT COLON .)
    INTEGER         reduce using rule 60 (Case -> DEFAULT COLON .)
    FLOAT           reduce using rule 60 (Case -> DEFAULT COLON .)
    STRING          reduce using rule 60 (Case -> DEFAULT COLON .)
    FUNCTION        reduce using rule 60 (Case -> DEFAULT COLON .)
    SEMICOL         reduce using rule 60 (Case -> DEFAULT COLON .)


state 484

    (234) CompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 505


state 485

    (218) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 218 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)


state 486

    (219) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON . OExpr RBRACK
    (148) OExpr -> .
    (149) OExpr -> . Expr
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 148 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 342
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 506
    PExpr                          shift and go to state 60

state 487

    (278) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .

    DOT             reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACK          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEFT_LEFT       reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LPAREN          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDE          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MOD             reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL             reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR             reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPERS          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAR          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMES           reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUS            reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUS           reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    XOR             reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OR              reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQEQ            reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    NOTEQ           reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEQ             reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GEQ             reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GREAT           reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LESS            reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPAMP          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OROR            reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SEMICOL         reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACE          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSEQ          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSEQ         reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMESEQ         reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDEEQ        reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MODEQ           reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OREQ            reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPEQ           reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    CAREQ           reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAREQ        reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSPLUS        reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSMIN        reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQUAL           reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLONEQ         reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COMMA           reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PIPE            reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACK          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RPAREN          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACE          reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLON           reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DDD             reduce using rule 278 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)


state 488

    (79) ElseIf -> ELSE IF IfHeader . LoopBody
    (65) LoopBody -> . LBRACE marker1 cmtlist StmtList cmtlist revmarker1 RBRACE

    LBRACE          shift and go to state 268

    LoopBody                       shift and go to state 507

state 489

    (125) StructDecl -> TIMES LPAREN Embed RPAREN . OLiteral
    (158) OLiteral -> .
    (159) OLiteral -> . Literal
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING

    SEMICOL         reduce using rule 158 (OLiteral -> .)
    RBRACE          reduce using rule 158 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 508
    Literal                        shift and go to state 405

state 490

    (124) StructDecl -> LPAREN TIMES Embed RPAREN . OLiteral
    (158) OLiteral -> .
    (159) OLiteral -> . Literal
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING

    SEMICOL         reduce using rule 158 (OLiteral -> .)
    RBRACE          reduce using rule 158 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 509
    Literal                        shift and go to state 405

state 491

    (122) StructDecl -> LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 122 (StructDecl -> LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 122 (StructDecl -> LPAREN Embed RPAREN OLiteral .)


state 492

    (61) CompoundStmt -> LBRACE marker1 cmtlist StmtList cmtlist . RBRACE
    (175) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (280) cmtlist -> cmtlist . COMMENT
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 510
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 472
    NewType                        shift and go to state 65
    NonDeclStmt                    shift and go to state 201
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NewName                        shift and go to state 34
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 493

    (175) StmtList -> StmtList cmtlist Stmt SEMICOL .

    RBRACE          reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    COMMENT         reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACE          reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANT        reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    VAR             reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    BREAK           reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONTINUE        reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    GOTO            reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    RETURN          reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TYPE            reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FOR             reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SWITCH          reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IF              reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANTS       reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LMINUS          reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACK          reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRUCT          reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTERFACE       reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CHAN            reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    AMPERS          reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    NOT             reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TIMES           reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    PLUS            reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    MINUS           reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    XOR             reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LPAREN          reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTEGER         reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FLOAT           reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRING          reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FUNCTION        reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SEMICOL         reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CASE            reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    DEFAULT         reduce using rule 175 (StmtList -> StmtList cmtlist Stmt SEMICOL .)


state 494

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 23 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)


state 495

    (169) ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .

    SEMICOL         reduce using rule 169 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)
    RPAREN          reduce using rule 169 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)


state 496

    (112) FuncBody -> LBRACE cmtlist StmtList cmtlist . revmarker1 RBRACE
    (175) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (280) cmtlist -> cmtlist . COMMENT
    (67) revmarker1 -> .
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    RBRACE          reduce using rule 67 (revmarker1 -> .)
    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    revmarker1                     shift and go to state 511
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 472
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 497

    (107) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList . FuncRes
    (110) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (113) FuncRes -> .
    (114) FuncRes -> . FuncRetType
    (115) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (133) FuncRetType -> . FuncType
    (134) FuncRetType -> . OtherType
    (135) FuncRetType -> . PtrType
    (136) FuncRetType -> . DotName
    (137) FuncRetType -> . NewType
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (132) PtrType -> . TIMES NType
    (138) DotName -> . Name
    (139) DotName -> . Name DOT IDENTIFIER
    (226) NewType -> . TYPE
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (185) Name -> . IDENTIFIER

    LPAREN          shift and go to state 252
    LBRACE          reduce using rule 113 (FuncRes -> .)
    SEMICOL         reduce using rule 113 (FuncRes -> .)
    LEFT_OR         shift and go to state 258
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 230
    TIMES           shift and go to state 224
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    DotName                        shift and go to state 259
    Name                           shift and go to state 227
    FuncType                       shift and go to state 253
    OtherType                      shift and go to state 256
    InterfaceType                  shift and go to state 15
    FuncRes                        shift and go to state 512
    PtrType                        shift and go to state 254
    ChannelType                    shift and go to state 35
    FuncRetType                    shift and go to state 260
    NewType                        shift and go to state 255

state 498

    (65) LoopBody -> LBRACE marker1 cmtlist StmtList cmtlist . revmarker1 RBRACE
    (175) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (280) cmtlist -> cmtlist . COMMENT
    (67) revmarker1 -> .
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    RBRACE          reduce using rule 67 (revmarker1 -> .)
    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    revmarker1                     shift and go to state 513
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 472
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 201
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 499

    (129) InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .

    SEMICOL         reduce using rule 129 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)
    RBRACE          reduce using rule 129 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)


state 500

    (175) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (280) cmtlist -> cmtlist . COMMENT
    (194) Stmt -> .
    (195) Stmt -> . CompoundStmt
    (196) Stmt -> . CommonDecl
    (197) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE marker1 cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (198) NonDeclStmt -> . SimpleStmt
    (199) NonDeclStmt -> . ForStmt
    (200) NonDeclStmt -> . SwitchStmt
    (201) NonDeclStmt -> . IfStmt
    (202) NonDeclStmt -> . LabelName COLON Stmt
    (203) NonDeclStmt -> . FALLTHROUGH
    (204) NonDeclStmt -> . BREAK ONewName
    (205) NonDeclStmt -> . CONTINUE ONewName
    (206) NonDeclStmt -> . GOTO NewName
    (207) NonDeclStmt -> . RETURN OExprList
    (226) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (75) ForStmt -> . FOR ForBody
    (238) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (78) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (130) LabelName -> . NewName
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (154) ExprList -> . Expr
    (155) ExprList -> . ExprList COMMA Expr
    (131) NewName -> . IDENTIFIER
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 194 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 472
    NewType                        shift and go to state 65
    NonDeclStmt                    shift and go to state 201
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NewName                        shift and go to state 34
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 198

state 501

    (58) Case -> CASE ExprOrTypeList EQUAL . Expr COLON
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 514
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 502

    (59) Case -> CASE ExprOrTypeList COLONEQ . Expr COLON
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 515
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 503

    (57) Case -> CASE ExprOrTypeList COLON .

    LBRACE          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANT        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    VAR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FALLTHROUGH     reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    BREAK           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONTINUE        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    GOTO            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    RETURN          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    TYPE            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FOR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    SWITCH          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    IF              reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANTS       reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    IDENTIFIER      reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LMINUS          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LBRACK          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    STRUCT          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    INTERFACE       reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CHAN            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    AMPERS          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    NOT             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    TIMES           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    PLUS            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    MINUS           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    XOR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LPAREN          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    INTEGER         reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FLOAT           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    STRING          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FUNCTION        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    SEMICOL         reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)


state 504

    (157) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (235) ExprOrType -> . Expr
    (236) ExprOrType -> . NonExprType
    (261) Expr -> . Prec2Expr_
    (262) Expr -> . Expr OROR Prec2Expr_
    (263) Expr -> . CONSTANTS
    (264) Expr -> . Chexpr
    (265) Expr -> . Arrayexp
    (90) NonExprType -> . FuncType
    (91) NonExprType -> . OtherType
    (92) NonExprType -> . TIMES NonExprType
    (259) Prec2Expr_ -> . Prec3Expr_
    (260) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (266) Chexpr -> . LMINUS IDENTIFIER
    (267) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (108) FuncType -> . FUNCTION ArgList FuncRes
    (93) OtherType -> . LBRACK OExpr RBRACK NType
    (94) OtherType -> . StructType
    (95) OtherType -> . InterfaceType
    (96) OtherType -> . ChannelType
    (252) Prec3Expr_ -> . Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (257) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (258) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (100) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (101) StructType -> . STRUCT LBRACE RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (103) InterfaceType -> . INTERFACE LBRACE RBRACE
    (97) ChannelType -> . CHAN NewType
    (98) ChannelType -> . CHAN LMINUS NewType
    (99) ChannelType -> . LMINUS CHAN NewType
    (247) Prec4Expr_ -> . Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (250) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (251) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (239) Prec5Expr_ -> . UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (245) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (246) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (268) UExpr -> . PExpr
    (269) UExpr -> . AMPERS UExpr
    (270) UExpr -> . NOT UExpr
    (271) UExpr -> . TIMES UExpr
    (272) UExpr -> . PLUS UExpr
    (273) UExpr -> . MINUS UExpr
    (274) UExpr -> . XOR UExpr
    (210) PExpr -> . PExprNoParen
    (211) PExpr -> . LPAREN ExprOrType RPAREN
    (212) PExprNoParen -> . Literal
    (213) PExprNoParen -> . Name
    (214) PExprNoParen -> . PExpr DOT IDENTIFIER
    (215) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (216) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (217) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (218) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (219) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (220) PExprNoParen -> . PseudoCall
    (221) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (222) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (223) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (224) PExprNoParen -> . FuncLiteral
    (225) PExprNoParen -> . ForCompExpr
    (160) Literal -> . INTEGER
    (161) Literal -> . FLOAT
    (162) Literal -> . STRING
    (185) Name -> . IDENTIFIER
    (276) PseudoCall -> . PExpr LPAREN RPAREN
    (277) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (278) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (227) ConvType -> . FuncType
    (228) ConvType -> . OtherType
    (229) CompType -> . OtherType
    (153) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (275) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (152) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 187
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 182
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 454
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 184
    OtherType                      shift and go to state 185
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 186
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 505

    (234) CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 234 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 234 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 506

    (219) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr . RBRACK

    RBRACK          shift and go to state 516


state 507

    (79) ElseIf -> ELSE IF IfHeader LoopBody .

    ELSE            reduce using rule 79 (ElseIf -> ELSE IF IfHeader LoopBody .)
    SEMICOL         reduce using rule 79 (ElseIf -> ELSE IF IfHeader LoopBody .)


state 508

    (125) StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 125 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 125 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)


state 509

    (124) StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 124 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 124 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)


state 510

    (61) CompoundStmt -> LBRACE marker1 cmtlist StmtList cmtlist RBRACE .

    SEMICOL         reduce using rule 61 (CompoundStmt -> LBRACE marker1 cmtlist StmtList cmtlist RBRACE .)


state 511

    (112) FuncBody -> LBRACE cmtlist StmtList cmtlist revmarker1 . RBRACE

    RBRACE          shift and go to state 517


state 512

    (107) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 107 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 107 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)


state 513

    (65) LoopBody -> LBRACE marker1 cmtlist StmtList cmtlist revmarker1 . RBRACE

    RBRACE          shift and go to state 518


state 514

    (58) Case -> CASE ExprOrTypeList EQUAL Expr . COLON
    (262) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 519
    OROR            shift and go to state 166


state 515

    (59) Case -> CASE ExprOrTypeList COLONEQ Expr . COLON
    (262) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 520
    OROR            shift and go to state 166


state 516

    (219) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 219 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)


state 517

    (112) FuncBody -> LBRACE cmtlist StmtList cmtlist revmarker1 RBRACE .

    SEMICOL         reduce using rule 112 (FuncBody -> LBRACE cmtlist StmtList cmtlist revmarker1 RBRACE .)


state 518

    (65) LoopBody -> LBRACE marker1 cmtlist StmtList cmtlist revmarker1 RBRACE .

    ELSE            reduce using rule 65 (LoopBody -> LBRACE marker1 cmtlist StmtList cmtlist revmarker1 RBRACE .)
    SEMICOL         reduce using rule 65 (LoopBody -> LBRACE marker1 cmtlist StmtList cmtlist revmarker1 RBRACE .)


state 519

    (58) Case -> CASE ExprOrTypeList EQUAL Expr COLON .

    LBRACE          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANT        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    VAR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FALLTHROUGH     reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    BREAK           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONTINUE        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    GOTO            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    RETURN          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TYPE            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FOR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SWITCH          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IF              reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANTS       reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IDENTIFIER      reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LMINUS          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LBRACK          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRUCT          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTERFACE       reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CHAN            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    AMPERS          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    NOT             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TIMES           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    PLUS            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MINUS           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    XOR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LPAREN          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTEGER         reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FLOAT           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRING          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FUNCTION        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SEMICOL         reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)


state 520

    (59) Case -> CASE ExprOrTypeList COLONEQ Expr COLON .

    LBRACE          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANT        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    VAR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FALLTHROUGH     reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    BREAK           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONTINUE        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    GOTO            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    RETURN          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TYPE            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FOR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SWITCH          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IF              reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANTS       reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IDENTIFIER      reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LMINUS          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LBRACK          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRUCT          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTERFACE       reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CHAN            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    AMPERS          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    NOT             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TIMES           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    PLUS            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MINUS           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    XOR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LPAREN          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTEGER         reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FLOAT           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRING          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FUNCTION        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SEMICOL         reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)

