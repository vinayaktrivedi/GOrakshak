
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPAMP AMPCAR AMPCAREQ AMPEQ AMPERS AND_NOT BREAK CAREQ CASE CHAN COLON COLONEQ COMMA COMMENT CONSTANT CONSTANTS CONTINUE DDD DEFAULT DEFER DIVIDE DIVIDEEQ DOT ELSE EQEQ EQUAL FALLTHROUGH FLOAT FOR FUNCTION GEQ GO GOTO GREAT IDENTIFIER IF IMPORT INTEGER INTERFACE LBRACE LBRACK LEFT_ANGLE LEFT_LEFT LEFT_OR LEQ LESS LMINUS LPAREN MAP MINUS MINUSEQ MINUSMIN MOD MODEQ NOT NOTEQ OR OREQ OROR OR_RIGHT PACKAGE PIPE PLUS PLUSEQ PLUSPLUS RANGE RBRACE RBRACK RETURN RIGHT_ANGLE RIGHT_RIGHT RPAREN SELECT SEMICOL SHL SHL_ASSIGN SHR SHR_ASSIGN STRING STRUCT SWITCH TIMES TIMESEQ TYPE VAR XORstart : SourceFileSourceFile : PackageClause Imports DeclListPackageClause : PACKAGE IDENTIFIER SEMICOLImports : \n           | Imports Import SEMICOLImport : IMPORT ImportStmt\n           | IMPORT LPAREN ImportStmtList OSemi RPAREN\n           | IMPORT LPAREN RPARENImportStmt : ImportHere STRINGImportStmtList : ImportStmt\n               | ImportStmtList SEMICOL ImportStmtImportHere : \n           | IDENTIFIER\n           | DOTDeclaration : CommonDecl\n            | FuncDecl\n            | NonDeclStmtCommonDecl : CONSTANT ConstDecl\n           | CONSTANT LPAREN ConstDecl OSemi RPAREN\n           | CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN\n           | CONSTANT LPAREN RPAREN\n           | VAR VarDecl\n           | VAR LPAREN VarDeclList OSemi RPAREN\n           | VAR LPAREN RPAREN\n           | TYPE TypeDecl\n           | TYPE LPAREN TypeDeclList OSemi RPAREN\n           | TYPE LPAREN RPARENVarDecl   : DeclNameList NType\n          | DeclNameList NType EQUAL ExprList\n          | DeclNameList EQUAL ExprListConstDecl : DeclNameList NType EQUAL ExprList\n          | DeclNameList EQUAL ExprListConstDecl1 : ConstDecl\n           | DeclNameList NType\n           | DeclNameListTypeDeclName : IDENTIFIERTypeDecl : TypeDeclName NTypeSimpleStmt : Expr\n           | Expr PLUSEQ Expr\n           | Expr MINUSEQ Expr\n           | Expr TIMESEQ Expr\n           | Expr DIVIDEEQ Expr\n           | Expr MODEQ Expr\n           | Expr OREQ Expr\n           | Expr AMPEQ Expr\n           | Expr CAREQ Expr\n           | Expr SHL_ASSIGN Expr\n           | Expr SHR_ASSIGN Expr\n           | Expr AMPCAREQ Expr\n           | ExprList EQUAL ExprList\n           | ExprList COLONEQ ExprList\n           | Expr PLUSPLUS\n           | Expr MINUSMINCase : CASE ExprOrTypeList COLON\n     | CASE ExprOrTypeList EQUAL Expr COLON\n     | CASE ExprOrTypeList COLONEQ Expr COLON\n     | DEFAULT COLONCompoundStmt : LBRACE StmtList RBRACECaseBlock : Case StmtListCaseBlockList : \n                   | CaseBlockList CaseBlockLoopBody : LBRACE StmtList RBRACERangeStmt : ExprList EQUAL RANGE Expr\n               | ExprList COLONEQ RANGE Expr\n               | RANGE ExprForHeader : OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt\n               | OSimpleStmt\n               | RangeStmtForBody : ForHeader LoopBodyForStmt : FOR ForBodyIfHeader : OSimpleStmt\n           | OSimpleStmt SEMICOL OSimpleStmtIfStmt : IF IfHeader LoopBody ElseIfList ElseElseIf : ELSE IF IfHeader LoopBodyElseIfList : \n                | ElseIfList ElseIfElse : \n          | ELSE CompoundStmtNType : FuncType\n           |  OtherType\n           |  PtrType\n           |  DotName\n           |  LPAREN NType RPARENNonExprType : FuncType\n                 | OtherType\n                 | TIMES NonExprTypeOtherType : LBRACK OExpr RBRACK NType\n               | MAP LBRACK NType RBRACK NType\n               | StructType\n               | InterfaceTypeStructType : STRUCT LBRACE StructDeclList OSemi RBRACE\n                | STRUCT LBRACE RBRACEInterfaceType : INTERFACE LBRACE InterfaceDeclList OSemi RBRACE\n                   | INTERFACE LBRACE RBRACEFuncDecl : FUNCTION FuncDecl_ FuncBodyFuncDecl_ : IDENTIFIER ArgList FuncRes\n               | LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncResFuncType : FUNCTION ArgList FuncResArgList : LPAREN OArgTypeListOComma RPAREN\n             | ArgList LPAREN OArgTypeListOComma RPARENFuncBody : \n              | LBRACE StmtList RBRACEFuncRes : \n             | FuncRetType\n             | LEFT_OR OArgTypeListOComma OR_RIGHTStructDeclList : StructDecl\n                    | StructDeclList SEMICOL StructDeclInterfaceDeclList : InterfaceDecl\n                       | InterfaceDeclList SEMICOL InterfaceDeclStructDecl : NewNameList NType OLiteral\n                | Embed OLiteral\n                | LPAREN Embed RPAREN OLiteral\n                | TIMES Embed OLiteral\n                | LPAREN TIMES Embed RPAREN OLiteral\n                | TIMES LPAREN Embed RPAREN OLiteralInterfaceDecl : NewName InDecl\n                   | IDENTIFIER\n                   | LPAREN IDENTIFIER RPARENInDecl : LPAREN OArgTypeListOComma RPAREN FuncResLabelName : NewNameNewName : IDENTIFIERPtrType : TIMES NTypeFuncRetType : FuncType\n                 | OtherType\n                 | PtrType\n                 | DotNameDotName : Name\n             | Name DOT IDENTIFIEROComma : \n            | COMMAOSemi : \n           | SEMICOLOSimpleStmt : \n                 | SimpleStmtONewName : \n              | NewNameOExpr : \n           | ExprOExprList : \n               | ExprListFuncLiteralDecl : FuncTypeFuncLiteral : FuncLiteralDecl LBRACE StmtList RBRACEExprList : Expr\n              | ExprList COMMA ExprExprOrTypeList : ExprOrType\n                    | ExprOrTypeList COMMA ExprOrTypeOLiteral : \n              | LiteralLiteral : INTEGER\n             | FLOAT\n             | STRINGEmbed : IDENTIFIERDeclList : \n              | DeclList Declaration SEMICOLVarDeclList : VarDecl \n                   | VarDeclList SEMICOL VarDeclConstDeclList : ConstDecl1\n                     | ConstDeclList SEMICOL ConstDecl1TypeDeclList : TypeDecl\n                    | TypeDeclList SEMICOL TypeDeclDeclNameList : DeclName\n                    | DeclNameList COMMA DeclNameStmtList : Stmt\n                | StmtList SEMICOL StmtNewNameList : NewName\n                   | NewNameList COMMA NewNameKeyvalList : Keyval\n                  | BareCompLitExpr\n                  | KeyvalList COMMA Keyval\n                  | KeyvalList COMMA BareCompLitExprBracedKeyvalList : \n                        | KeyvalList OCommaDeclName : IDENTIFIERName : IDENTIFIERArgType : NameOrType\n               | IDENTIFIER NameOrType\n               | IDENTIFIER DotDotDot\n               | DotDotDotArgTypeList : ArgType\n                   | ArgTypeList COMMA ArgTypeOArgTypeListOComma : \n                          | ArgTypeList OCommaStmt : \n            | CompoundStmt\n            | CommonDecl\n            | NonDeclStmtNonDeclStmt : SimpleStmt\n                   | ForStmt\n                   | SwitchStmt\n                   | IfStmt\n                   | LabelName COLON Stmt\n                   | FALLTHROUGH\n                   | BREAK ONewName\n                   | CONTINUE ONewName\n                   | DEFER PseudoCall\n                   | GOTO NewName\n                   | RETURN OExprListDotDotDot : DDD\n                 | DDD NTypePExpr : PExprNoParen\n             | LPAREN ExprOrType RPARENPExprNoParen : Literal\n                    | Name\n                    | PExpr DOT IDENTIFIER\n                    | PExpr DOT LPAREN ExprOrType RPAREN\n                    | PExpr DOT LPAREN TYPE RPAREN\n                    | PExpr LBRACK Expr RBRACK\n                    | PExpr LBRACK OExpr COLON OExpr RBRACK\n                    | PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK\n                    | PseudoCall\n                    | ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE\n                    | CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT\n                    | PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT\n                    | FuncLiteral\n                    | ForCompExprConvType : FuncType\n                | OtherTypeCompType : OtherTypeStartCompLit :  Keyval : Expr COLON CompLitExprBareCompLitExpr : Expr\n                       | LEFT_LEFT BracedKeyvalList RIGHT_RIGHTCompLitExpr : Expr\n                   | LEFT_LEFT BracedKeyvalList RIGHT_RIGHTExprOrType : Expr\n                  | NonExprTypeNameOrType : NTypeSwitchStmt : SWITCH IfHeader LBRACE CaseBlockList RBRACEPrec5Expr_ : UExpr\n                  | Prec5Expr_ DIVIDE UExpr\n                  | Prec5Expr_ MOD UExpr\n                  | Prec5Expr_ SHL UExpr\n                  | Prec5Expr_ SHR UExpr\n                  | Prec5Expr_ AMPERS UExpr\n                  | Prec5Expr_ AMPCAR UExpr\n                  | Prec5Expr_ TIMES UExprPrec4Expr_ : Prec5Expr_\n                  | Prec4Expr_ PLUS Prec5Expr_\n                  | Prec4Expr_ MINUS Prec5Expr_\n                  | Prec4Expr_ XOR Prec5Expr_\n                  | Prec4Expr_ OR Prec5Expr_Prec3Expr_ : Prec4Expr_\n                  | Prec3Expr_ EQEQ Prec4Expr_\n                  | Prec3Expr_ NOTEQ Prec4Expr_\n                  | Prec3Expr_ LEQ Prec4Expr_\n                  | Prec3Expr_ GEQ Prec4Expr_\n                  | Prec3Expr_ GREAT Prec4Expr_\n                  | Prec3Expr_ LESS Prec4Expr_\n                Prec2Expr_ : Prec3Expr_\n                  | Prec2Expr_ AMPAMP Prec3Expr_Expr : Prec2Expr_\n            | Expr OROR Prec2Expr_UExpr : PExpr\n             | AMPERS UExpr\n             | NOT UExpr\n             | TIMES UExpr\n             | PLUS UExpr\n             | MINUS UExpr\n             | XOR UExprForCompExpr : LBRACK Expr PIPE RangeStmt RBRACKPseudoCall : PExpr LPAREN RPAREN\n                  | PExpr LPAREN ExprOrTypeList OComma RPAREN\n                  | PExpr LPAREN ExprOrTypeList DDD OComma RPAREN'
    
_lr_action_items = {'OROR':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,63,69,83,85,88,111,128,134,139,140,167,168,174,182,183,184,185,186,187,188,194,195,196,197,198,199,200,201,218,226,227,228,229,253,270,276,280,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,314,324,361,362,367,384,405,406,414,423,429,432,433,455,457,476,477,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,153,-150,-174,-258,-257,-254,153,153,-255,153,-259,-256,153,-246,-245,-243,-248,-247,-244,153,-233,-230,-235,-234,-236,-232,-231,-250,153,-240,-241,-238,-239,153,153,153,-261,-204,-252,153,153,153,153,153,153,153,153,153,153,153,-201,153,-142,153,-212,-207,-213,-211,153,153,-260,153,-262,-205,-206,-208,-263,153,153,-209,]),'DIVIDE':([11,20,30,34,37,39,40,41,47,52,56,61,69,83,85,88,111,139,167,168,194,195,196,197,198,199,200,226,227,228,229,280,283,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,91,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,-150,-174,-258,-257,-254,-255,-259,-256,-233,-230,-235,-234,-236,-232,-231,91,91,91,91,-261,-204,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'GREAT':([11,12,20,28,30,34,37,39,40,41,47,52,56,61,69,83,85,88,111,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,80,-237,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,-150,-174,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,80,-240,-241,-238,-239,-261,-204,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'SEMICOL':([6,9,11,12,17,20,21,28,29,30,31,32,34,36,37,39,40,41,43,45,47,48,49,50,51,52,54,55,56,58,59,61,62,63,67,69,73,83,85,86,88,89,98,99,100,101,110,111,116,117,121,124,126,128,130,136,137,138,139,140,141,142,143,147,152,161,165,167,168,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,212,214,215,218,219,220,222,223,226,227,228,229,231,232,233,234,236,237,238,239,249,250,254,255,256,257,258,261,262,263,264,265,280,283,284,285,286,287,288,289,290,291,292,293,294,295,296,299,301,305,306,307,308,313,314,315,318,319,320,328,332,335,340,341,344,348,354,361,362,367,370,372,373,377,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,407,408,409,411,412,413,414,417,419,429,432,433,434,435,438,440,442,443,444,447,448,450,451,453,455,457,458,459,460,461,462,463,464,465,466,469,474,475,478,479,480,481,],[10,75,-214,-249,-192,-237,-251,-242,-15,-151,-16,-190,-149,-133,-210,-202,-229,-215,-189,-135,-200,-139,-133,145,-90,-174,-89,-135,-253,-187,-188,-203,-17,-38,-133,-150,-6,-174,-258,-195,-257,-183,-183,-173,-161,-22,-18,-254,-103,-101,250,-70,-134,-38,-25,-136,-121,-194,-255,-143,-140,-197,268,-193,-196,-53,-52,-259,-256,-9,-8,309,-10,-246,-245,-243,-248,-247,-244,-191,-185,-183,-184,-186,-233,-230,-235,-234,-236,-232,-231,-250,-163,315,-24,-155,316,-79,-81,-82,-80,-127,-28,-144,-51,-50,-21,327,-240,-241,-238,-239,-123,-125,-124,-98,-126,-104,-183,-95,-103,-133,-69,-183,-94,-108,345,-117,-159,350,-27,-37,-261,-204,-252,-46,-41,-39,-43,-48,-44,-40,-45,-49,-47,-42,-201,-75,-106,378,-152,-147,-92,315,-142,-183,-30,-122,-162,-32,315,-99,-96,404,315,-116,-87,-212,-207,-213,-77,-147,-152,-147,-148,-111,-11,-7,-211,-58,-164,-156,-23,-128,-29,-83,-88,-19,446,-35,-157,-33,-31,-100,-105,-102,-62,-109,-93,-118,-160,-26,-260,-183,-228,-262,-205,-206,-73,-76,-113,-147,-110,-107,-91,-34,-103,-103,315,-57,-208,-263,-78,-133,-147,-147,-112,-20,-158,-97,-119,-54,-115,-114,-209,-74,-55,-56,]),'CONSTANT':([1,5,7,10,75,89,98,145,191,238,255,315,417,453,469,480,481,],[-4,-153,26,-3,-5,26,26,-154,26,26,26,26,26,-57,-54,-55,-56,]),'CAREQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,63,69,83,85,88,111,128,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,154,-150,-174,-258,-257,-254,154,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'AMPCAR':([11,20,30,34,37,39,40,41,47,52,56,61,69,83,85,88,111,139,167,168,194,195,196,197,198,199,200,226,227,228,229,280,283,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,92,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,-150,-174,-258,-257,-254,-255,-259,-256,-233,-230,-235,-234,-236,-232,-231,92,92,92,92,-261,-204,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'LESS':([11,12,20,28,30,34,37,39,40,41,47,52,56,61,69,83,85,88,111,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,79,-237,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,-150,-174,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,79,-240,-241,-238,-239,-261,-204,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'EQEQ':([11,12,20,28,30,34,37,39,40,41,47,52,56,61,69,83,85,88,111,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,78,-237,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,-150,-174,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,78,-240,-241,-238,-239,-261,-204,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'EQUAL':([11,12,20,21,24,28,30,34,37,39,40,41,47,51,52,54,56,61,63,69,83,85,88,99,100,103,109,111,116,123,128,139,140,167,168,169,172,173,174,182,183,184,185,186,187,194,195,196,197,198,199,200,201,207,209,210,212,214,215,218,225,226,227,228,229,231,232,233,234,236,237,256,279,280,283,284,296,297,308,314,319,320,335,353,354,361,362,367,384,389,391,392,395,399,400,409,414,429,430,432,433,444,447,452,455,457,478,],[-214,-249,-237,-251,106,-242,-151,-149,-210,-202,-229,-215,-200,-90,-174,-89,-253,-203,-143,-150,-174,-258,-257,-173,-161,208,224,-254,-103,251,-143,-255,-143,-259,-256,-84,-226,-85,-225,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-79,-81,-82,-80,-127,322,-144,329,-240,-241,-238,-239,-123,-125,-124,-98,-126,-104,-94,-145,-261,-204,-252,-201,-86,-92,-142,-122,-162,-99,415,-87,-212,-207,-213,-211,-128,-83,-88,224,-100,-105,-93,-260,-262,-146,-205,-206,-91,329,467,-208,-263,-209,]),'SHL_ASSIGN':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,63,69,83,85,88,111,128,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,164,-150,-174,-258,-257,-254,164,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'RIGHT_ANGLE':([11,12,20,21,28,30,34,37,39,40,41,47,56,61,69,83,85,88,111,139,167,168,182,183,184,185,186,187,188,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,311,312,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-253,-203,-150,-174,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-129,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,384,-130,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'COLON':([11,12,19,20,21,28,30,33,34,37,39,40,41,47,51,52,54,56,61,69,83,85,88,111,116,139,148,167,168,169,172,173,174,182,183,184,185,186,187,194,195,196,197,198,199,200,201,207,209,210,212,214,226,227,228,229,231,232,233,234,236,237,256,270,276,277,279,280,283,284,296,297,308,314,319,324,335,354,361,362,363,367,384,389,391,392,399,400,409,414,420,428,429,430,432,433,444,452,455,457,476,477,478,],[-214,-249,89,-237,-251,-242,-151,-120,-149,-210,-202,-229,-215,-200,-90,-121,-89,-253,-203,-150,-174,-258,-257,-254,-103,-255,-137,-259,-256,-84,-226,-85,-225,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-79,-81,-82,-80,-127,-240,-241,-238,-239,-123,-125,-124,-98,-126,-104,-94,357,-138,363,-145,-261,-204,-252,-201,-86,-92,-142,-122,-138,-99,-87,-212,-207,-137,-213,-211,-128,-83,-88,-100,-105,-93,-260,453,456,-262,-146,-205,-206,-91,469,-208,-263,480,481,-209,]),'COLONEQ':([11,12,20,21,24,28,30,34,37,39,40,41,47,51,52,54,56,61,63,69,83,85,88,111,116,123,128,139,140,167,168,169,172,173,174,182,183,184,185,186,187,194,195,196,197,198,199,200,201,207,209,210,212,214,218,226,227,228,229,231,232,233,234,236,237,256,279,280,283,284,296,297,308,314,319,335,353,354,361,362,367,384,389,391,392,399,400,409,414,429,430,432,433,444,452,455,457,478,],[-214,-249,-237,-251,105,-242,-151,-149,-210,-202,-229,-215,-200,-90,-174,-89,-253,-203,-143,-150,-174,-258,-257,-254,-103,252,-143,-255,-143,-259,-256,-84,-226,-85,-225,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-79,-81,-82,-80,-127,-144,-240,-241,-238,-239,-123,-125,-124,-98,-126,-104,-94,-145,-261,-204,-252,-201,-86,-92,-142,-122,-99,416,-87,-212,-207,-213,-211,-128,-83,-88,-100,-105,-93,-260,-262,-146,-205,-206,-91,468,-208,-263,-209,]),'AMPAMP':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,69,83,85,88,111,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,97,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,-150,-174,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,97,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'RETURN':([1,5,7,10,75,89,98,145,191,238,255,315,417,453,469,480,481,],[-4,-153,48,-3,-5,48,48,-154,48,48,48,48,48,-57,-54,-55,-56,]),'MINUS':([1,5,7,10,11,15,18,20,27,28,30,34,36,37,39,40,41,44,46,47,48,49,52,56,61,64,65,66,67,69,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,111,112,113,114,115,125,139,145,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,167,168,171,175,182,183,184,185,186,187,191,194,195,196,197,198,199,200,208,217,224,226,227,228,229,238,250,251,252,255,266,268,271,280,282,283,296,314,315,322,329,342,343,357,359,361,362,363,365,367,384,404,414,417,418,424,429,432,433,453,455,456,457,459,467,468,469,470,478,480,481,],[-4,-153,15,-3,-214,15,15,-237,15,115,-151,-149,15,-210,-202,-229,-215,15,15,-200,15,15,-174,-253,-203,15,15,15,15,-150,-5,15,15,15,15,15,15,15,-174,-258,-257,15,15,15,15,15,15,15,15,15,15,15,15,15,-254,15,15,15,15,15,-255,-154,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-259,-256,15,15,115,115,115,115,115,115,15,-233,-230,-235,-234,-236,-232,-231,15,15,15,-240,-241,-238,-239,15,15,15,15,15,15,15,15,-261,15,-204,-201,-142,15,15,15,15,15,15,15,-212,-207,15,15,-213,-211,15,-260,15,15,15,-262,-205,-206,-57,-208,15,-263,15,15,15,-54,15,-209,-55,-56,]),'DOT':([8,11,30,34,37,39,41,47,52,56,61,69,72,83,86,87,214,245,280,283,296,309,314,361,362,367,384,414,429,432,433,455,457,478,],[74,-214,-151,-149,-210,-202,-215,-200,-174,151,-203,-150,74,-174,-210,151,321,-174,-261,-204,-201,74,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'GOTO':([1,5,7,10,75,89,98,145,191,238,255,315,417,453,469,480,481,],[-4,-153,60,-3,-5,60,60,-154,60,60,60,60,60,-57,-54,-55,-56,]),'CASE':([11,12,17,20,21,28,30,32,34,37,39,40,41,43,45,47,48,51,52,54,55,56,58,59,61,63,69,83,85,86,88,89,101,110,111,116,124,130,136,137,138,139,140,141,142,147,152,161,165,167,168,182,183,184,185,186,187,189,190,192,193,194,195,196,197,198,199,200,201,202,204,207,209,210,212,214,215,218,219,220,222,226,227,228,229,231,232,233,234,236,237,254,256,264,265,269,280,283,284,285,286,287,288,289,290,291,292,293,294,295,296,299,308,314,315,318,319,328,335,354,356,361,362,367,370,384,385,386,388,389,390,391,392,393,398,399,400,407,409,413,414,417,419,421,429,432,433,434,435,444,451,453,455,457,458,463,469,478,479,480,481,],[-214,-249,-192,-237,-251,-242,-151,-190,-149,-210,-202,-229,-215,-189,-135,-200,-139,-90,-174,-89,-135,-253,-187,-188,-203,-38,-150,-174,-258,-195,-257,-183,-22,-18,-254,-103,-70,-25,-136,-121,-194,-255,-143,-140,-197,-193,-196,-53,-52,-259,-256,-246,-245,-243,-248,-247,-244,-191,-185,-184,-186,-233,-230,-235,-234,-236,-232,-231,-250,-163,-24,-79,-81,-82,-80,-127,-28,-144,-51,-50,-21,-240,-241,-238,-239,-123,-125,-124,-98,-126,-104,-69,-94,-27,-37,-60,-261,-204,-252,-46,-41,-39,-43,-48,-44,-40,-45,-49,-47,-42,-201,-75,-92,-142,-183,-30,-122,-32,-99,-87,418,-212,-207,-213,-77,-211,-58,-164,-23,-128,-29,-83,-88,-19,-31,-100,-105,-62,-93,-26,-260,-183,-228,-61,-262,-205,-206,-73,-76,-91,-59,-57,-208,-263,-78,-20,-54,-209,-74,-55,-56,]),'DEFER':([1,5,7,10,75,89,98,145,191,238,255,315,417,453,469,480,481,],[-4,-153,16,-3,-5,16,16,-154,16,16,16,16,16,-57,-54,-55,-56,]),'GEQ':([11,12,20,28,30,34,37,39,40,41,47,52,56,61,69,83,85,88,111,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,76,-237,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,-150,-174,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,76,-240,-241,-238,-239,-261,-204,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'RPAREN':([11,12,20,21,28,30,34,37,39,40,41,47,51,54,56,61,69,72,83,85,88,99,100,102,108,111,116,118,131,139,140,149,167,168,169,170,172,173,174,178,180,181,182,183,184,185,186,187,194,195,196,197,198,199,200,201,205,206,207,209,210,212,214,215,218,223,226,227,228,229,230,231,232,233,234,236,237,240,241,242,243,244,245,246,247,256,262,263,265,278,279,280,283,284,296,297,308,309,310,312,314,316,317,318,319,320,323,326,327,328,330,333,334,335,336,337,338,347,349,350,351,354,361,362,364,365,366,367,368,369,373,375,382,384,387,389,390,391,392,394,395,396,397,398,399,400,402,409,410,412,414,429,430,431,432,433,437,439,444,445,446,447,455,457,464,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-90,-89,-253,-203,-150,179,-174,-258,-257,-173,-161,204,222,-254,-103,-181,264,-255,-143,280,-259,-256,-84,296,-226,-85,-225,-9,-131,-10,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-155,-131,-79,-81,-82,-80,-127,-28,-144,-131,-240,-241,-238,-239,-181,-123,-125,-124,-98,-126,-104,-129,-179,335,-178,-175,-174,-227,-198,-94,-159,-131,-37,-129,-145,-261,-204,-252,-201,-86,-92,-132,383,-130,-142,-132,388,-30,-122,-162,391,393,-132,-32,399,-130,-182,-99,-177,-176,-199,-181,411,-132,413,-87,-212,-207,429,-130,-129,-213,432,433,-152,440,-11,-211,-156,-128,-29,-83,-88,-131,-35,-157,-33,-31,-100,-105,-180,-93,450,-160,-260,-262,-146,457,-205,-206,460,461,-91,463,-132,-34,-208,-263,-158,-209,]),'TIMESEQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,63,69,83,85,88,111,128,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,155,-150,-174,-258,-257,-254,155,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'FALLTHROUGH':([1,5,7,10,75,89,98,145,191,238,255,315,417,453,469,480,481,],[-4,-153,17,-3,-5,17,17,-154,17,17,17,17,17,-57,-54,-55,-56,]),'SHR_ASSIGN':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,63,69,83,85,88,111,128,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,158,-150,-174,-258,-257,-254,158,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'MODEQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,63,69,83,85,88,111,128,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,157,-150,-174,-258,-257,-254,157,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'PIPE':([11,12,20,21,28,30,34,37,39,40,41,47,56,61,69,83,85,88,111,134,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,298,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-253,-203,-150,-174,-258,-257,-254,266,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,266,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'MINUSEQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,63,69,83,85,88,111,128,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,160,-150,-174,-258,-257,-254,160,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'SWITCH':([1,5,7,10,75,89,98,145,191,238,255,315,417,453,469,480,481,],[-4,-153,49,-3,-5,49,49,-154,49,49,49,49,49,-57,-54,-55,-56,]),'AMPCAREQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,63,69,83,85,88,111,128,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,163,-150,-174,-258,-257,-254,163,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'PLUS':([1,5,7,10,11,15,18,20,27,28,30,34,36,37,39,40,41,44,46,47,48,49,52,56,61,64,65,66,67,69,75,76,77,78,79,80,81,82,83,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,111,112,113,114,115,125,139,145,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,167,168,171,175,182,183,184,185,186,187,191,194,195,196,197,198,199,200,208,217,224,226,227,228,229,238,250,251,252,255,266,268,271,280,282,283,296,314,315,322,329,342,343,357,359,361,362,363,365,367,384,404,414,417,418,424,429,432,433,453,455,456,457,459,467,468,469,470,478,480,481,],[-4,-153,18,-3,-214,18,18,-237,18,114,-151,-149,18,-210,-202,-229,-215,18,18,-200,18,18,-174,-253,-203,18,18,18,18,-150,-5,18,18,18,18,18,18,18,-174,-258,-257,18,18,18,18,18,18,18,18,18,18,18,18,18,-254,18,18,18,18,18,-255,-154,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-259,-256,18,18,114,114,114,114,114,114,18,-233,-230,-235,-234,-236,-232,-231,18,18,18,-240,-241,-238,-239,18,18,18,18,18,18,18,18,-261,18,-204,-201,-142,18,18,18,18,18,18,18,-212,-207,18,18,-213,-211,18,-260,18,18,18,-262,-205,-206,-57,-208,18,-263,18,18,18,-54,18,-209,-55,-56,]),'INTEGER':([1,5,7,10,15,16,18,27,36,44,46,48,49,51,54,64,65,66,67,75,76,77,78,79,80,81,82,83,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,116,125,145,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,207,208,209,210,212,214,217,224,231,232,233,234,236,237,238,250,251,252,255,256,266,268,271,282,306,307,308,315,319,322,329,335,342,343,354,357,359,363,365,372,373,377,389,391,392,399,400,404,409,417,418,424,440,444,453,456,459,460,461,467,468,469,470,480,481,],[-4,-153,34,-3,34,34,34,34,34,34,34,34,34,-90,-89,34,34,34,34,-5,34,34,34,34,34,34,34,-174,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-103,34,-154,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-79,34,-81,-82,-80,-127,34,34,-123,-125,-124,-98,-126,-104,34,34,34,34,34,-94,34,34,34,34,-152,34,-92,34,-122,34,34,-99,34,34,-87,34,34,34,34,34,-152,34,-128,-83,-88,-100,-105,34,-93,34,34,34,34,-91,-57,34,34,34,34,34,34,-54,34,-55,-56,]),'IDENTIFIER':([1,2,5,7,8,10,15,16,18,23,26,27,35,36,42,44,45,46,48,49,55,60,64,65,66,67,72,75,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,112,113,114,115,116,118,119,125,129,131,132,133,137,145,146,148,149,150,151,153,154,155,156,157,158,159,160,162,163,164,166,171,175,177,191,208,211,213,216,217,224,230,235,238,245,247,249,250,251,252,255,260,266,267,268,271,282,300,302,303,304,306,309,315,316,320,321,322,325,327,329,333,335,339,342,343,345,347,350,357,359,363,365,371,374,376,378,395,399,404,417,418,424,441,446,448,450,453,456,459,467,468,469,470,480,481,],[-4,6,-153,52,71,-3,83,83,83,99,99,83,120,83,133,83,137,83,83,83,137,137,83,83,83,83,71,-5,83,83,83,83,83,83,83,52,83,83,83,83,83,83,83,83,52,-173,-161,99,83,83,83,83,83,99,83,83,83,83,83,83,245,245,83,261,133,83,-36,-121,-154,83,83,83,83,283,83,83,83,83,83,83,83,83,83,83,83,83,83,83,306,52,83,83,99,83,83,83,245,245,52,83,83,83,83,83,83,52,349,83,83,83,83,83,-165,373,373,83,-121,71,52,99,-162,389,83,83,99,83,245,-99,403,83,83,261,245,133,83,83,83,83,373,373,137,306,83,-100,83,52,83,83,-166,99,83,83,-57,83,83,83,83,-54,83,-55,-56,]),'LEFT_ANGLE':([13,14,51,54,57,83,116,169,173,207,209,210,212,214,231,232,233,234,236,237,256,308,319,335,354,389,391,392,399,400,409,444,],[82,-217,-90,-89,-216,-174,-103,-216,-217,-79,-81,-82,-80,-127,-123,-125,-124,-98,-126,-104,-94,-92,-122,-99,-87,-128,-83,-88,-100,-105,-93,-91,]),'DIVIDEEQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,63,69,83,85,88,111,128,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,166,-150,-174,-258,-257,-254,166,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'OREQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,56,61,63,69,83,85,88,111,128,139,167,168,182,183,184,185,186,187,194,195,196,197,198,199,200,201,226,227,228,229,280,283,284,296,314,361,362,367,384,414,429,432,433,455,457,478,],[-214,-249,-237,-251,-242,-151,-149,-210,-202,-229,-215,-200,-174,-253,-203,159,-150,-174,-258,-257,-254,159,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-204,-252,-201,-142,-212,-207,-213,-211,-260,-262,-205,-206,-208,-263,-209,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FuncLiteral':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'DeclName':([23,26,102,108,213,316,327,446,],[100,100,100,100,320,100,100,100,]),'OSimpleStmt':([36,49,67,250,268,404,459,],[121,143,143,341,355,449,143,]),'Prec3Expr_':([7,36,44,48,49,66,67,82,89,97,98,104,105,106,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[12,12,12,12,12,12,12,12,12,201,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'ConvType':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'IfStmt':([7,89,98,191,238,255,315,417,],[32,32,32,32,32,32,32,32,]),'DotDotDot':([118,119,230,235,245,333,347,],[243,243,243,243,336,243,243,]),'NonExprType':([66,149,171,282,365,418,470,],[172,172,297,172,172,172,172,]),'Stmt':([89,98,191,238,255,315,417,],[189,202,202,202,202,386,202,]),'FuncDecl_':([35,],[117,]),'InterfaceType':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,109,112,113,114,115,116,118,119,125,132,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,211,216,217,224,230,235,238,245,247,249,250,251,252,255,266,267,268,271,282,304,315,322,325,329,333,342,343,347,357,359,363,365,395,404,417,418,424,448,450,456,459,467,468,470,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'LabelName':([7,89,98,191,238,255,315,417,],[19,19,19,19,19,19,19,19,]),'Prec5Expr_':([7,36,44,48,49,66,67,76,77,78,79,80,81,82,89,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,226,227,228,229,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'InterfaceDeclList':([129,],[258,]),'Prec2Expr_':([7,36,44,48,49,66,67,82,89,98,104,105,106,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,284,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'FuncLiteralDecl':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ONewName':([45,55,],[138,147,]),'RangeStmt':([36,266,],[122,352,]),'InDecl':([259,],[348,]),'Embed':([177,302,303,371,374,378,],[307,372,375,437,439,307,]),'DotName':([103,107,109,116,118,119,132,211,216,230,235,245,247,249,267,304,325,333,347,395,448,450,],[210,210,210,236,210,210,210,210,210,210,210,210,210,236,210,210,210,210,210,210,236,236,]),'ExprList':([7,36,48,49,67,89,98,105,106,191,208,224,238,250,251,252,255,266,268,315,322,329,404,417,459,],[24,123,141,24,24,24,24,219,220,24,318,328,24,24,220,219,24,353,24,24,390,398,24,24,24,]),'CaseBlock':([356,],[421,]),'ExprOrTypeList':([149,418,],[278,452,]),'Keyval':([146,150,271,359,424,],[273,273,273,426,273,]),'FuncBody':([117,],[239,]),'VarDecl':([23,102,316,],[101,205,387,]),'IfHeader':([49,67,459,],[144,176,473,]),'TypeDeclList':([131,],[263,]),'CompoundStmt':([89,98,191,238,255,315,417,436,],[192,192,192,192,192,192,192,458,]),'ForBody':([36,],[124,]),'SourceFile':([0,],[3,]),'Prec4Expr_':([7,36,44,48,49,66,67,76,77,78,79,80,81,82,89,97,98,104,105,106,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[28,28,28,28,28,28,28,182,183,184,185,186,187,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ArgTypeList':([118,119,230,235,347,],[240,240,240,240,240,]),'CaseBlockList':([269,],[356,]),'PtrType':([103,107,109,116,118,119,132,211,216,230,235,245,247,249,267,304,325,333,347,395,448,450,],[209,209,209,232,209,209,209,209,209,209,209,209,209,232,209,209,209,209,209,209,232,232,]),'DeclNameList':([23,26,102,108,316,327,446,],[103,109,103,109,103,395,395,]),'ExprOrType':([66,149,282,365,418,470,],[170,279,368,430,279,430,]),'PackageClause':([0,],[1,]),'OArgTypeListOComma':([118,119,230,235,347,],[242,248,330,331,410,]),'FuncDecl':([7,],[31,]),'OtherType':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,109,112,113,114,115,116,118,119,125,132,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,211,216,217,224,230,235,238,245,247,249,250,251,252,255,266,267,268,271,282,304,315,322,325,329,333,342,343,347,357,359,363,365,395,404,417,418,424,448,450,456,459,467,468,470,],[14,14,14,14,14,14,14,14,14,14,14,14,173,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,212,14,14,14,212,212,14,14,14,14,233,212,212,14,212,14,14,173,14,14,14,14,14,14,14,14,14,14,14,14,14,173,14,14,14,212,212,14,14,212,212,14,212,212,233,14,14,14,14,14,212,14,14,173,212,14,14,212,14,212,14,14,212,14,14,14,173,212,14,14,173,14,233,233,14,14,14,14,173,]),'StructDeclList':([177,],[305,]),'NewName':([7,45,55,60,89,98,129,177,191,238,255,315,345,376,378,417,],[33,136,136,152,33,33,259,300,33,33,33,33,259,441,300,33,]),'PseudoCall':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[37,37,86,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'PExpr':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[56,56,87,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'OExprList':([48,],[142,]),'UExpr':([7,15,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[40,85,88,111,40,40,139,40,40,167,168,40,40,40,40,40,40,40,40,40,40,194,195,196,197,198,199,200,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,168,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'ForCompExpr':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'InterfaceDecl':([129,345,],[257,408,]),'ConstDecl':([26,108,327,446,],[110,223,397,397,]),'SwitchStmt':([7,89,98,191,238,255,315,417,],[43,43,43,43,43,43,43,43,]),'VarDeclList':([102,],[206,]),'ElseIf':([370,],[435,]),'PExprNoParen':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'BracedKeyvalList':([146,150,271,424,],[274,281,358,454,]),'Literal':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,217,224,238,250,251,252,255,266,268,271,282,307,315,322,329,342,343,357,359,363,365,372,377,404,417,418,424,440,456,459,460,461,467,468,470,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,380,39,39,39,39,39,39,39,39,39,380,380,39,39,39,39,380,39,39,380,380,39,39,39,]),'Import':([5,],[9,]),'ConstDeclList':([327,],[394,]),'OComma':([188,240,272,278,366,],[311,334,360,364,431,]),'NameOrType':([118,119,230,235,245,333,347,],[244,244,244,244,337,244,244,]),'start':([0,],[4,]),'Declaration':([7,],[50,]),'CompLitExpr':([357,],[422,]),'OLiteral':([307,372,377,440,460,461,],[381,438,442,462,474,475,]),'CompType':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,104,105,106,112,113,114,115,125,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'LoopBody':([127,176,473,],[254,299,479,]),'StructType':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,109,112,113,114,115,116,118,119,125,132,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,211,216,217,224,230,235,238,245,247,249,250,251,252,255,266,267,268,271,282,304,315,322,325,329,333,342,343,347,357,359,363,365,395,404,417,418,424,448,450,456,459,467,468,470,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'DeclList':([5,],[7,]),'NType':([103,107,109,118,119,132,211,216,230,235,245,247,267,304,325,333,347,395,],[215,221,225,246,246,265,319,323,246,246,246,338,354,377,392,246,246,447,]),'ImportStmtList':([72,],[180,]),'ArgType':([118,119,230,235,333,347,],[241,241,241,241,402,241,]),'OExpr':([44,148,175,217,363,456,],[135,277,135,135,428,472,]),'Imports':([1,],[5,]),'NewNameList':([177,378,],[304,304,]),'FuncRetType':([116,249,448,450,],[237,237,237,237,]),'ElseIfList':([299,],[370,]),'StructDecl':([177,378,],[301,443,]),'FuncType':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,109,112,113,114,115,116,118,119,125,132,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,211,216,217,224,230,235,238,245,247,249,250,251,252,255,266,267,268,271,282,304,315,322,325,329,333,342,343,347,357,359,363,365,395,404,417,418,424,448,450,456,459,467,468,470,],[57,57,57,57,57,57,57,57,57,57,57,57,169,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,207,57,57,57,207,207,57,57,57,57,231,207,207,57,207,57,57,169,57,57,57,57,57,57,57,57,57,57,57,57,57,169,57,57,57,207,207,57,57,207,207,57,207,207,231,57,57,57,57,57,207,57,57,169,207,57,57,207,57,207,57,57,207,57,57,57,169,207,57,57,169,57,231,231,57,57,57,57,169,]),'SimpleStmt':([7,36,49,67,89,98,191,238,250,255,268,315,404,417,459,],[58,126,126,126,58,58,58,58,126,58,126,58,126,58,126,]),'ForStmt':([7,89,98,191,238,255,315,417,],[59,59,59,59,59,59,59,59,]),'StmtList':([98,191,238,255,417,],[203,313,332,344,451,]),'CommonDecl':([7,89,98,191,238,255,315,417,],[29,190,190,190,190,190,190,190,]),'ImportHere':([8,72,309,],[70,70,70,]),'ImportStmt':([8,72,309,],[73,181,382,]),'ConstDecl1':([327,446,],[396,464,]),'Else':([370,],[434,]),'TypeDeclName':([42,131,350,],[132,132,132,]),'ForHeader':([36,],[127,]),'OSemi':([180,206,223,258,263,305,394,],[310,317,326,346,351,379,445,]),'Case':([356,],[417,]),'TypeDecl':([42,131,350,],[130,262,412,]),'Name':([7,15,16,18,27,36,44,46,48,49,64,65,66,67,76,77,78,79,80,81,82,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,109,112,113,114,115,116,118,119,125,132,146,148,149,150,153,154,155,156,157,158,159,160,162,163,164,166,171,175,191,208,211,216,217,224,230,235,238,245,247,249,250,251,252,255,266,267,268,271,282,304,315,322,325,329,333,342,343,347,357,359,363,365,395,404,417,418,424,448,450,456,459,467,468,470,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,214,61,61,61,214,214,61,61,61,61,214,214,214,61,214,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,214,214,61,61,214,214,61,214,214,214,61,61,61,61,61,214,61,61,61,214,61,61,214,61,214,61,61,214,61,61,61,61,214,61,61,61,61,214,214,61,61,61,61,61,]),'NonDeclStmt':([7,89,98,191,238,255,315,417,],[62,193,193,193,193,193,193,193,]),'Expr':([7,36,44,48,49,66,67,82,89,98,104,105,106,125,146,148,149,150,154,155,156,157,158,159,160,162,163,164,166,175,191,208,217,224,238,250,251,252,255,266,268,271,282,315,322,329,342,343,357,359,363,365,404,417,418,424,456,459,467,468,470,],[63,128,134,140,63,174,63,188,63,63,218,140,140,253,270,276,174,270,285,286,287,288,289,290,291,292,293,294,295,298,63,140,324,140,63,63,140,140,63,140,63,270,174,63,140,140,405,406,423,270,324,174,63,63,174,270,324,63,476,477,174,]),'FuncRes':([116,249,448,450,],[234,340,465,466,]),'ArgList':([35,84,120,403,],[116,116,249,448,]),'KeyvalList':([146,150,271,424,],[272,272,272,272,]),'BareCompLitExpr':([146,150,271,359,424,],[275,275,275,427,275,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',8),
  ('SourceFile -> PackageClause Imports DeclList','SourceFile',3,'p_sourcefile','parser.py',11),
  ('PackageClause -> PACKAGE IDENTIFIER SEMICOL','PackageClause',3,'p_packegeclause','parser.py',14),
  ('Imports -> <empty>','Imports',0,'p_imports','parser.py',16),
  ('Imports -> Imports Import SEMICOL','Imports',3,'p_imports','parser.py',17),
  ('Import -> IMPORT ImportStmt','Import',2,'p_import','parser.py',19),
  ('Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN','Import',5,'p_import','parser.py',20),
  ('Import -> IMPORT LPAREN RPAREN','Import',3,'p_import','parser.py',21),
  ('ImportStmt -> ImportHere STRING','ImportStmt',2,'p_importstmt','parser.py',23),
  ('ImportStmtList -> ImportStmt','ImportStmtList',1,'p_importstmtlist','parser.py',25),
  ('ImportStmtList -> ImportStmtList SEMICOL ImportStmt','ImportStmtList',3,'p_importstmtlist','parser.py',26),
  ('ImportHere -> <empty>','ImportHere',0,'p_importhere','parser.py',29),
  ('ImportHere -> IDENTIFIER','ImportHere',1,'p_importhere','parser.py',30),
  ('ImportHere -> DOT','ImportHere',1,'p_importhere','parser.py',31),
  ('Declaration -> CommonDecl','Declaration',1,'p_declaration','parser.py',34),
  ('Declaration -> FuncDecl','Declaration',1,'p_declaration','parser.py',35),
  ('Declaration -> NonDeclStmt','Declaration',1,'p_declaration','parser.py',36),
  ('CommonDecl -> CONSTANT ConstDecl','CommonDecl',2,'p_commondecl','parser.py',38),
  ('CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN','CommonDecl',5,'p_commondecl','parser.py',39),
  ('CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN','CommonDecl',7,'p_commondecl','parser.py',40),
  ('CommonDecl -> CONSTANT LPAREN RPAREN','CommonDecl',3,'p_commondecl','parser.py',41),
  ('CommonDecl -> VAR VarDecl','CommonDecl',2,'p_commondecl','parser.py',42),
  ('CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN','CommonDecl',5,'p_commondecl','parser.py',43),
  ('CommonDecl -> VAR LPAREN RPAREN','CommonDecl',3,'p_commondecl','parser.py',44),
  ('CommonDecl -> TYPE TypeDecl','CommonDecl',2,'p_commondecl','parser.py',45),
  ('CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN','CommonDecl',5,'p_commondecl','parser.py',46),
  ('CommonDecl -> TYPE LPAREN RPAREN','CommonDecl',3,'p_commondecl','parser.py',47),
  ('VarDecl -> DeclNameList NType','VarDecl',2,'p_vardecl','parser.py',50),
  ('VarDecl -> DeclNameList NType EQUAL ExprList','VarDecl',4,'p_vardecl','parser.py',51),
  ('VarDecl -> DeclNameList EQUAL ExprList','VarDecl',3,'p_vardecl','parser.py',52),
  ('ConstDecl -> DeclNameList NType EQUAL ExprList','ConstDecl',4,'p_constdecl','parser.py',55),
  ('ConstDecl -> DeclNameList EQUAL ExprList','ConstDecl',3,'p_constdecl','parser.py',56),
  ('ConstDecl1 -> ConstDecl','ConstDecl1',1,'p_constdecl1','parser.py',59),
  ('ConstDecl1 -> DeclNameList NType','ConstDecl1',2,'p_constdecl1','parser.py',60),
  ('ConstDecl1 -> DeclNameList','ConstDecl1',1,'p_constdecl1','parser.py',61),
  ('TypeDeclName -> IDENTIFIER','TypeDeclName',1,'p_typedeclname','parser.py',63),
  ('TypeDecl -> TypeDeclName NType','TypeDecl',2,'p_typedecl','parser.py',66),
  ('SimpleStmt -> Expr','SimpleStmt',1,'p_simplestmt','parser.py',69),
  ('SimpleStmt -> Expr PLUSEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',70),
  ('SimpleStmt -> Expr MINUSEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',71),
  ('SimpleStmt -> Expr TIMESEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',72),
  ('SimpleStmt -> Expr DIVIDEEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',73),
  ('SimpleStmt -> Expr MODEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',74),
  ('SimpleStmt -> Expr OREQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',75),
  ('SimpleStmt -> Expr AMPEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',76),
  ('SimpleStmt -> Expr CAREQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',77),
  ('SimpleStmt -> Expr SHL_ASSIGN Expr','SimpleStmt',3,'p_simplestmt','parser.py',78),
  ('SimpleStmt -> Expr SHR_ASSIGN Expr','SimpleStmt',3,'p_simplestmt','parser.py',79),
  ('SimpleStmt -> Expr AMPCAREQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',80),
  ('SimpleStmt -> ExprList EQUAL ExprList','SimpleStmt',3,'p_simplestmt','parser.py',81),
  ('SimpleStmt -> ExprList COLONEQ ExprList','SimpleStmt',3,'p_simplestmt','parser.py',82),
  ('SimpleStmt -> Expr PLUSPLUS','SimpleStmt',2,'p_simplestmt','parser.py',83),
  ('SimpleStmt -> Expr MINUSMIN','SimpleStmt',2,'p_simplestmt','parser.py',84),
  ('Case -> CASE ExprOrTypeList COLON','Case',3,'p_case','parser.py',86),
  ('Case -> CASE ExprOrTypeList EQUAL Expr COLON','Case',5,'p_case','parser.py',87),
  ('Case -> CASE ExprOrTypeList COLONEQ Expr COLON','Case',5,'p_case','parser.py',88),
  ('Case -> DEFAULT COLON','Case',2,'p_case','parser.py',89),
  ('CompoundStmt -> LBRACE StmtList RBRACE','CompoundStmt',3,'p_compoundstmt','parser.py',92),
  ('CaseBlock -> Case StmtList','CaseBlock',2,'p_caseblock','parser.py',95),
  ('CaseBlockList -> <empty>','CaseBlockList',0,'p_caseblocklist','parser.py',98),
  ('CaseBlockList -> CaseBlockList CaseBlock','CaseBlockList',2,'p_caseblocklist','parser.py',99),
  ('LoopBody -> LBRACE StmtList RBRACE','LoopBody',3,'p_loopbody','parser.py',102),
  ('RangeStmt -> ExprList EQUAL RANGE Expr','RangeStmt',4,'p_rangestmt','parser.py',106),
  ('RangeStmt -> ExprList COLONEQ RANGE Expr','RangeStmt',4,'p_rangestmt','parser.py',107),
  ('RangeStmt -> RANGE Expr','RangeStmt',2,'p_rangestmt','parser.py',108),
  ('ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt','ForHeader',5,'p_forheader','parser.py',111),
  ('ForHeader -> OSimpleStmt','ForHeader',1,'p_forheader','parser.py',112),
  ('ForHeader -> RangeStmt','ForHeader',1,'p_forheader','parser.py',113),
  ('ForBody -> ForHeader LoopBody','ForBody',2,'p_forbody','parser.py',116),
  ('ForStmt -> FOR ForBody','ForStmt',2,'p_forstmt','parser.py',120),
  ('IfHeader -> OSimpleStmt','IfHeader',1,'p_ifheader','parser.py',124),
  ('IfHeader -> OSimpleStmt SEMICOL OSimpleStmt','IfHeader',3,'p_ifheader','parser.py',125),
  ('IfStmt -> IF IfHeader LoopBody ElseIfList Else','IfStmt',5,'p_ifstmt','parser.py',128),
  ('ElseIf -> ELSE IF IfHeader LoopBody','ElseIf',4,'p_elseif','parser.py',131),
  ('ElseIfList -> <empty>','ElseIfList',0,'p_elseiflist','parser.py',134),
  ('ElseIfList -> ElseIfList ElseIf','ElseIfList',2,'p_elseiflist','parser.py',135),
  ('Else -> <empty>','Else',0,'p_else','parser.py',138),
  ('Else -> ELSE CompoundStmt','Else',2,'p_else','parser.py',139),
  ('NType -> FuncType','NType',1,'p_ntype','parser.py',142),
  ('NType -> OtherType','NType',1,'p_ntype','parser.py',143),
  ('NType -> PtrType','NType',1,'p_ntype','parser.py',144),
  ('NType -> DotName','NType',1,'p_ntype','parser.py',145),
  ('NType -> LPAREN NType RPAREN','NType',3,'p_ntype','parser.py',146),
  ('NonExprType -> FuncType','NonExprType',1,'p_nonexprtype','parser.py',149),
  ('NonExprType -> OtherType','NonExprType',1,'p_nonexprtype','parser.py',150),
  ('NonExprType -> TIMES NonExprType','NonExprType',2,'p_nonexprtype','parser.py',151),
  ('OtherType -> LBRACK OExpr RBRACK NType','OtherType',4,'p_othertype','parser.py',154),
  ('OtherType -> MAP LBRACK NType RBRACK NType','OtherType',5,'p_othertype','parser.py',155),
  ('OtherType -> StructType','OtherType',1,'p_othertype','parser.py',156),
  ('OtherType -> InterfaceType','OtherType',1,'p_othertype','parser.py',157),
  ('StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE','StructType',5,'p_structtype','parser.py',160),
  ('StructType -> STRUCT LBRACE RBRACE','StructType',3,'p_structtype','parser.py',161),
  ('InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE','InterfaceType',5,'p_interfacetype','parser.py',164),
  ('InterfaceType -> INTERFACE LBRACE RBRACE','InterfaceType',3,'p_interfacetype','parser.py',165),
  ('FuncDecl -> FUNCTION FuncDecl_ FuncBody','FuncDecl',3,'p_funcdec1','parser.py',169),
  ('FuncDecl_ -> IDENTIFIER ArgList FuncRes','FuncDecl_',3,'p_funcdec1_','parser.py',172),
  ('FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes','FuncDecl_',6,'p_funcdec1_','parser.py',173),
  ('FuncType -> FUNCTION ArgList FuncRes','FuncType',3,'p_functype','parser.py',176),
  ('ArgList -> LPAREN OArgTypeListOComma RPAREN','ArgList',3,'p_arglist','parser.py',179),
  ('ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN','ArgList',4,'p_arglist','parser.py',180),
  ('FuncBody -> <empty>','FuncBody',0,'p_funcbody','parser.py',183),
  ('FuncBody -> LBRACE StmtList RBRACE','FuncBody',3,'p_funcbody','parser.py',184),
  ('FuncRes -> <empty>','FuncRes',0,'p_funcres','parser.py',187),
  ('FuncRes -> FuncRetType','FuncRes',1,'p_funcres','parser.py',188),
  ('FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT','FuncRes',3,'p_funcres','parser.py',189),
  ('StructDeclList -> StructDecl','StructDeclList',1,'p_structdeclist','parser.py',192),
  ('StructDeclList -> StructDeclList SEMICOL StructDecl','StructDeclList',3,'p_structdeclist','parser.py',193),
  ('InterfaceDeclList -> InterfaceDecl','InterfaceDeclList',1,'p_interfacedec1list','parser.py',196),
  ('InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl','InterfaceDeclList',3,'p_interfacedec1list','parser.py',197),
  ('StructDecl -> NewNameList NType OLiteral','StructDecl',3,'p_structdec1','parser.py',200),
  ('StructDecl -> Embed OLiteral','StructDecl',2,'p_structdec1','parser.py',201),
  ('StructDecl -> LPAREN Embed RPAREN OLiteral','StructDecl',4,'p_structdec1','parser.py',202),
  ('StructDecl -> TIMES Embed OLiteral','StructDecl',3,'p_structdec1','parser.py',203),
  ('StructDecl -> LPAREN TIMES Embed RPAREN OLiteral','StructDecl',5,'p_structdec1','parser.py',204),
  ('StructDecl -> TIMES LPAREN Embed RPAREN OLiteral','StructDecl',5,'p_structdec1','parser.py',205),
  ('InterfaceDecl -> NewName InDecl','InterfaceDecl',2,'p_interfacedec1','parser.py',208),
  ('InterfaceDecl -> IDENTIFIER','InterfaceDecl',1,'p_interfacedec1','parser.py',209),
  ('InterfaceDecl -> LPAREN IDENTIFIER RPAREN','InterfaceDecl',3,'p_interfacedec1','parser.py',210),
  ('InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes','InDecl',4,'p_indecl','parser.py',213),
  ('LabelName -> NewName','LabelName',1,'p_labelname','parser.py',216),
  ('NewName -> IDENTIFIER','NewName',1,'p_newname','parser.py',219),
  ('PtrType -> TIMES NType','PtrType',2,'p_ptrtype','parser.py',222),
  ('FuncRetType -> FuncType','FuncRetType',1,'p_funcrettype','parser.py',225),
  ('FuncRetType -> OtherType','FuncRetType',1,'p_funcrettype','parser.py',226),
  ('FuncRetType -> PtrType','FuncRetType',1,'p_funcrettype','parser.py',227),
  ('FuncRetType -> DotName','FuncRetType',1,'p_funcrettype','parser.py',228),
  ('DotName -> Name','DotName',1,'p_dotname','parser.py',231),
  ('DotName -> Name DOT IDENTIFIER','DotName',3,'p_dotname','parser.py',232),
  ('OComma -> <empty>','OComma',0,'p_ocomma','parser.py',235),
  ('OComma -> COMMA','OComma',1,'p_ocomma','parser.py',236),
  ('OSemi -> <empty>','OSemi',0,'p_osemi','parser.py',239),
  ('OSemi -> SEMICOL','OSemi',1,'p_osemi','parser.py',240),
  ('OSimpleStmt -> <empty>','OSimpleStmt',0,'p_osimplestmt','parser.py',243),
  ('OSimpleStmt -> SimpleStmt','OSimpleStmt',1,'p_osimplestmt','parser.py',244),
  ('ONewName -> <empty>','ONewName',0,'p_onewname','parser.py',247),
  ('ONewName -> NewName','ONewName',1,'p_onewname','parser.py',248),
  ('OExpr -> <empty>','OExpr',0,'p_oexpr','parser.py',251),
  ('OExpr -> Expr','OExpr',1,'p_oexpr','parser.py',252),
  ('OExprList -> <empty>','OExprList',0,'p_oexprlist','parser.py',255),
  ('OExprList -> ExprList','OExprList',1,'p_oexprlist','parser.py',256),
  ('FuncLiteralDecl -> FuncType','FuncLiteralDecl',1,'p_funcliteraldecl','parser.py',259),
  ('FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE','FuncLiteral',4,'p_funcliteral','parser.py',262),
  ('ExprList -> Expr','ExprList',1,'p_exprlist','parser.py',265),
  ('ExprList -> ExprList COMMA Expr','ExprList',3,'p_exprlist','parser.py',266),
  ('ExprOrTypeList -> ExprOrType','ExprOrTypeList',1,'p_exprortypelist','parser.py',269),
  ('ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType','ExprOrTypeList',3,'p_exprortypelist','parser.py',270),
  ('OLiteral -> <empty>','OLiteral',0,'p_oliteral','parser.py',273),
  ('OLiteral -> Literal','OLiteral',1,'p_oliteral','parser.py',274),
  ('Literal -> INTEGER','Literal',1,'p_literal','parser.py',277),
  ('Literal -> FLOAT','Literal',1,'p_literal','parser.py',278),
  ('Literal -> STRING','Literal',1,'p_literal','parser.py',279),
  ('Embed -> IDENTIFIER','Embed',1,'p_embed','parser.py',282),
  ('DeclList -> <empty>','DeclList',0,'p_dec1list','parser.py',285),
  ('DeclList -> DeclList Declaration SEMICOL','DeclList',3,'p_dec1list','parser.py',286),
  ('VarDeclList -> VarDecl','VarDeclList',1,'p_var_dec_list','parser.py',289),
  ('VarDeclList -> VarDeclList SEMICOL VarDecl','VarDeclList',3,'p_var_dec_list','parser.py',290),
  ('ConstDeclList -> ConstDecl1','ConstDeclList',1,'p_const_dec_list','parser.py',292),
  ('ConstDeclList -> ConstDeclList SEMICOL ConstDecl1','ConstDeclList',3,'p_const_dec_list','parser.py',293),
  ('TypeDeclList -> TypeDecl','TypeDeclList',1,'p_type_decl_list','parser.py',295),
  ('TypeDeclList -> TypeDeclList SEMICOL TypeDecl','TypeDeclList',3,'p_type_decl_list','parser.py',296),
  ('DeclNameList -> DeclName','DeclNameList',1,'p_decl_name_list','parser.py',298),
  ('DeclNameList -> DeclNameList COMMA DeclName','DeclNameList',3,'p_decl_name_list','parser.py',299),
  ('StmtList -> Stmt','StmtList',1,'p_stmtlist','parser.py',301),
  ('StmtList -> StmtList SEMICOL Stmt','StmtList',3,'p_stmtlist','parser.py',302),
  ('NewNameList -> NewName','NewNameList',1,'p_newnamelist','parser.py',304),
  ('NewNameList -> NewNameList COMMA NewName','NewNameList',3,'p_newnamelist','parser.py',305),
  ('KeyvalList -> Keyval','KeyvalList',1,'p_keyvallist','parser.py',307),
  ('KeyvalList -> BareCompLitExpr','KeyvalList',1,'p_keyvallist','parser.py',308),
  ('KeyvalList -> KeyvalList COMMA Keyval','KeyvalList',3,'p_keyvallist','parser.py',309),
  ('KeyvalList -> KeyvalList COMMA BareCompLitExpr','KeyvalList',3,'p_keyvallist','parser.py',310),
  ('BracedKeyvalList -> <empty>','BracedKeyvalList',0,'p_bracedkeyvallist','parser.py',312),
  ('BracedKeyvalList -> KeyvalList OComma','BracedKeyvalList',2,'p_bracedkeyvallist','parser.py',313),
  ('DeclName -> IDENTIFIER','DeclName',1,'p_declname','parser.py',315),
  ('Name -> IDENTIFIER','Name',1,'p_name','parser.py',317),
  ('ArgType -> NameOrType','ArgType',1,'p_argtype','parser.py',319),
  ('ArgType -> IDENTIFIER NameOrType','ArgType',2,'p_argtype','parser.py',320),
  ('ArgType -> IDENTIFIER DotDotDot','ArgType',2,'p_argtype','parser.py',321),
  ('ArgType -> DotDotDot','ArgType',1,'p_argtype','parser.py',322),
  ('ArgTypeList -> ArgType','ArgTypeList',1,'p_argtypelist','parser.py',324),
  ('ArgTypeList -> ArgTypeList COMMA ArgType','ArgTypeList',3,'p_argtypelist','parser.py',325),
  ('OArgTypeListOComma -> <empty>','OArgTypeListOComma',0,'p_oargtypelistocomma','parser.py',327),
  ('OArgTypeListOComma -> ArgTypeList OComma','OArgTypeListOComma',2,'p_oargtypelistocomma','parser.py',328),
  ('Stmt -> <empty>','Stmt',0,'p_stmt','parser.py',331),
  ('Stmt -> CompoundStmt','Stmt',1,'p_stmt','parser.py',332),
  ('Stmt -> CommonDecl','Stmt',1,'p_stmt','parser.py',333),
  ('Stmt -> NonDeclStmt','Stmt',1,'p_stmt','parser.py',334),
  ('NonDeclStmt -> SimpleStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',336),
  ('NonDeclStmt -> ForStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',337),
  ('NonDeclStmt -> SwitchStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',338),
  ('NonDeclStmt -> IfStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',339),
  ('NonDeclStmt -> LabelName COLON Stmt','NonDeclStmt',3,'p_nondeclstmt','parser.py',340),
  ('NonDeclStmt -> FALLTHROUGH','NonDeclStmt',1,'p_nondeclstmt','parser.py',341),
  ('NonDeclStmt -> BREAK ONewName','NonDeclStmt',2,'p_nondeclstmt','parser.py',342),
  ('NonDeclStmt -> CONTINUE ONewName','NonDeclStmt',2,'p_nondeclstmt','parser.py',343),
  ('NonDeclStmt -> DEFER PseudoCall','NonDeclStmt',2,'p_nondeclstmt','parser.py',344),
  ('NonDeclStmt -> GOTO NewName','NonDeclStmt',2,'p_nondeclstmt','parser.py',345),
  ('NonDeclStmt -> RETURN OExprList','NonDeclStmt',2,'p_nondeclstmt','parser.py',346),
  ('DotDotDot -> DDD','DotDotDot',1,'p_dotdotdot','parser.py',348),
  ('DotDotDot -> DDD NType','DotDotDot',2,'p_dotdotdot','parser.py',349),
  ('PExpr -> PExprNoParen','PExpr',1,'p_pexpr','parser.py',351),
  ('PExpr -> LPAREN ExprOrType RPAREN','PExpr',3,'p_pexpr','parser.py',352),
  ('PExprNoParen -> Literal','PExprNoParen',1,'p_pexprnoparen','parser.py',354),
  ('PExprNoParen -> Name','PExprNoParen',1,'p_pexprnoparen','parser.py',355),
  ('PExprNoParen -> PExpr DOT IDENTIFIER','PExprNoParen',3,'p_pexprnoparen','parser.py',356),
  ('PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN','PExprNoParen',5,'p_pexprnoparen','parser.py',357),
  ('PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN','PExprNoParen',5,'p_pexprnoparen','parser.py',358),
  ('PExprNoParen -> PExpr LBRACK Expr RBRACK','PExprNoParen',4,'p_pexprnoparen','parser.py',359),
  ('PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK','PExprNoParen',6,'p_pexprnoparen','parser.py',360),
  ('PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK','PExprNoParen',8,'p_pexprnoparen','parser.py',361),
  ('PExprNoParen -> PseudoCall','PExprNoParen',1,'p_pexprnoparen','parser.py',362),
  ('PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE','PExprNoParen',5,'p_pexprnoparen','parser.py',363),
  ('PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','PExprNoParen',4,'p_pexprnoparen','parser.py',364),
  ('PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','PExprNoParen',4,'p_pexprnoparen','parser.py',365),
  ('PExprNoParen -> FuncLiteral','PExprNoParen',1,'p_pexprnoparen','parser.py',366),
  ('PExprNoParen -> ForCompExpr','PExprNoParen',1,'p_pexprnoparen','parser.py',367),
  ('ConvType -> FuncType','ConvType',1,'p_convtype','parser.py',369),
  ('ConvType -> OtherType','ConvType',1,'p_convtype','parser.py',370),
  ('CompType -> OtherType','CompType',1,'p_comptype','parser.py',372),
  ('StartCompLit -> <empty>','StartCompLit',0,'p_startcomplit','parser.py',377),
  ('Keyval -> Expr COLON CompLitExpr','Keyval',3,'p_keyval','parser.py',380),
  ('BareCompLitExpr -> Expr','BareCompLitExpr',1,'p_barecomplitexpr','parser.py',382),
  ('BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','BareCompLitExpr',3,'p_barecomplitexpr','parser.py',383),
  ('CompLitExpr -> Expr','CompLitExpr',1,'p_complitexpr','parser.py',385),
  ('CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','CompLitExpr',3,'p_complitexpr','parser.py',386),
  ('ExprOrType -> Expr','ExprOrType',1,'p_exportype','parser.py',388),
  ('ExprOrType -> NonExprType','ExprOrType',1,'p_exportype','parser.py',389),
  ('NameOrType -> NType','NameOrType',1,'p_nameortype','parser.py',391),
  ('SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE','SwitchStmt',5,'p_switchstmt','parser.py',393),
  ('Prec5Expr_ -> UExpr','Prec5Expr_',1,'p_prec5expr_','parser.py',396),
  ('Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',397),
  ('Prec5Expr_ -> Prec5Expr_ MOD UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',398),
  ('Prec5Expr_ -> Prec5Expr_ SHL UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',399),
  ('Prec5Expr_ -> Prec5Expr_ SHR UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',400),
  ('Prec5Expr_ -> Prec5Expr_ AMPERS UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',401),
  ('Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',402),
  ('Prec5Expr_ -> Prec5Expr_ TIMES UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',403),
  ('Prec4Expr_ -> Prec5Expr_','Prec4Expr_',1,'p_prec4expr_','parser.py',405),
  ('Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',406),
  ('Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',407),
  ('Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',408),
  ('Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',409),
  ('Prec3Expr_ -> Prec4Expr_','Prec3Expr_',1,'p_prec3expr_','parser.py',411),
  ('Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',412),
  ('Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',413),
  ('Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',414),
  ('Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',415),
  ('Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',416),
  ('Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',417),
  ('Prec2Expr_ -> Prec3Expr_','Prec2Expr_',1,'p_prec2expr_','parser.py',420),
  ('Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_','Prec2Expr_',3,'p_prec2expr_','parser.py',421),
  ('Expr -> Prec2Expr_','Expr',1,'p_expr','parser.py',423),
  ('Expr -> Expr OROR Prec2Expr_','Expr',3,'p_expr','parser.py',424),
  ('UExpr -> PExpr','UExpr',1,'p_uexpr','parser.py',426),
  ('UExpr -> AMPERS UExpr','UExpr',2,'p_uexpr','parser.py',427),
  ('UExpr -> NOT UExpr','UExpr',2,'p_uexpr','parser.py',428),
  ('UExpr -> TIMES UExpr','UExpr',2,'p_uexpr','parser.py',429),
  ('UExpr -> PLUS UExpr','UExpr',2,'p_uexpr','parser.py',430),
  ('UExpr -> MINUS UExpr','UExpr',2,'p_uexpr','parser.py',431),
  ('UExpr -> XOR UExpr','UExpr',2,'p_uexpr','parser.py',432),
  ('ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK','ForCompExpr',5,'p_forcompexpr','parser.py',434),
  ('PseudoCall -> PExpr LPAREN RPAREN','PseudoCall',3,'p_pseudocall','parser.py',437),
  ('PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN','PseudoCall',5,'p_pseudocall','parser.py',438),
  ('PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN','PseudoCall',6,'p_pseudocall','parser.py',439),
]
