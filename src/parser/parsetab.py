
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPAMP AMPCAR AMPCAREQ AMPEQ AMPERS AND_NOT BREAK CAREQ CASE CHAN COLON COLONEQ COMMA COMMENT CONSTANT CONSTANTS CONTINUE DDD DEFAULT DEFER DIVIDE DIVIDEEQ DOT ELSE EQEQ EQUAL FALLTHROUGH FLOAT FOR FUNCTION GEQ GO GOTO GREAT IDENTIFIER IF IMPORT INTEGER INTERFACE LBRACE LBRACK LEFT_ANGLE LEFT_LEFT LEFT_OR LEQ LESS LMINUS LPAREN MAP MINUS MINUSEQ MINUSMIN MOD MODEQ NOT NOTEQ OR OREQ OROR OR_RIGHT PACKAGE PIPE PLUS PLUSEQ PLUSPLUS RANGE RBRACE RBRACK RETURN RIGHT_ANGLE RIGHT_RIGHT RPAREN SELECT SEMICOL SHL SHL_ASSIGN SHR SHR_ASSIGN STRING STRUCT SWITCH TIMES TIMESEQ TYPE VAR XORstart : SourceFileSourceFile : PackageClause Imports DeclListPackageClause : PACKAGE IDENTIFIER SEMICOLImports : empty\n           | Imports Import SEMICOLImport : IMPORT ImportStmt\n           | IMPORT LPAREN ImportStmtList OSemi RPAREN\n           | IMPORT LPAREN RPARENImportStmt : ImportHere STRINGImportStmtList : ImportStmt\n               | ImportStmtList SEMICOL ImportStmtImportHere : empty\n           | IDENTIFIER\n           | DOTDeclaration : CommonDecl\n            | FuncDecl\n            | NonDeclStmt\n            | errorCommonDecl : CONSTANT ConstDecl\n           | CONSTANT LPAREN ConstDecl OSemi RPAREN\n           | CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN\n           | CONSTANT LPAREN RPAREN\n           | VAR VarDecl\n           | VAR LPAREN VarDeclList OSemi RPAREN\n           | VAR LPAREN RPAREN\n           | TYPE TypeDecl\n           | TYPE LPAREN TypeDeclList OSemi RPAREN\n           | TYPE LPAREN RPARENVarDecl   : DeclNameList NType\n          | DeclNameList NType EQUAL ExprList\n          | DeclNameList EQUAL ExprListConstDecl : DeclNameList NType EQUAL ExprList\n          | DeclNameList EQUAL ExprListConstDecl1 : ConstDecl\n           | DeclNameList NType\n           | DeclNameListTypeDeclName : IDENTIFIERTypeDecl : TypeDeclName NTypeSimpleStmt : Expr\n           | Expr PLUSEQ Expr\n           | Expr MINUSEQ Expr\n           | Expr TIMESEQ Expr\n           | Expr DIVIDEEQ Expr\n           | Expr MODEQ Expr\n           | Expr OREQ Expr\n           | Expr AMPEQ Expr\n           | Expr CAREQ Expr\n           | Expr SHL_ASSIGN Expr\n           | Expr SHR_ASSIGN Expr\n           | Expr AMPCAREQ Expr\n           | ExprList EQUAL ExprList\n           | ExprList COLONEQ ExprList\n           | Expr PLUSPLUS\n           | Expr MINUSMINCase : CASE ExprOrTypeList COLON\n     | CASE ExprOrTypeList EQUAL Expr COLON\n     | CASE ExprOrTypeList COLONEQ Expr COLON\n     | DEFAULT COLONCompoundStmt : LBRACE StmtList RBRACECaseBlock : Case StmtListCaseBlockList : empty\n                   | CaseBlockList CaseBlockLoopBody : LBRACE StmtList RBRACERangeStmt : ExprList EQUAL RANGE Expr\n               | ExprList COLONEQ RANGE Expr\n               | RANGE ExprForHeader : OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt\n               | OSimpleStmt\n               | RangeStmtForBody : ForHeader LoopBodyForStmt : FOR ForBodyIfHeader : OSimpleStmt\n           | OSimpleStmt SEMICOL OSimpleStmtIfStmt : IF IfHeader LoopBody ElseIfList ElseElseIf : ELSE IF IfHeader LoopBodyElseIfList : empty\n                | ElseIfList ElseIfElse : empty\n          | ELSE CompoundStmtNType : FuncType\n           |  OtherType\n           |  PtrType\n           |  DotName\n           |  LPAREN NType RPARENNonExprType : FuncType\n                 | OtherType\n                 | TIMES NonExprTypeOtherType : LBRACK OExpr RBRACK NType\n               | MAP LBRACK NType RBRACK NType\n               | StructType\n               | InterfaceTypeStructType : STRUCT LBRACE StructDeclList OSemi RBRACE\n                | STRUCT LBRACE RBRACEInterfaceType : INTERFACE LBRACE InterfaceDeclList OSemi RBRACE\n                   | INTERFACE LBRACE RBRACEFuncDecl : FUNCTION FuncDecl_ FuncBodyFuncDecl_ : IDENTIFIER ArgList FuncRes\n               | LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncResFuncType : FUNCTION ArgList FuncResArgList : LPAREN OArgTypeListOComma RPAREN\n             | ArgList LPAREN OArgTypeListOComma RPARENFuncBody : empty\n              | LBRACE StmtList RBRACEFuncRes : empty\n             | FuncRetType\n             | LEFT_OR OArgTypeListOComma OR_RIGHTStructDeclList : StructDecl\n                    | StructDeclList SEMICOL StructDeclInterfaceDeclList : InterfaceDecl\n                       | InterfaceDeclList SEMICOL InterfaceDeclStructDecl : NewNameList NType OLiteral\n                | Embed OLiteral\n                | LPAREN Embed RPAREN OLiteral\n                | TIMES Embed OLiteral\n                | LPAREN TIMES Embed RPAREN OLiteral\n                | TIMES LPAREN Embed RPAREN OLiteralInterfaceDecl : NewName InDecl\n                   | IDENTIFIER\n                   | LPAREN IDENTIFIER RPARENInDecl : LPAREN OArgTypeListOComma RPAREN FuncResLabelName : NewNameNewName : IDENTIFIERPtrType : TIMES NTypeFuncRetType : FuncType\n                 | OtherType\n                 | PtrType\n                 | DotNameDotName : Name\n             | Name DOT IDENTIFIEROComma : empty\n            | COMMAOSemi : empty\n           | SEMICOLOSimpleStmt : empty\n                 | SimpleStmtONewName : empty\n              | NewNameOExpr : empty\n           | ExprOExprList : empty\n               | ExprListFuncLiteralDecl : FuncTypeFuncLiteral : FuncLiteralDecl LBRACE StmtList RBRACEExprList : Expr\n              | ExprList COMMA ExprExprOrTypeList : ExprOrType\n                    | ExprOrTypeList COMMA ExprOrTypeOLiteral : empty\n              | LiteralLiteral : INTEGER\n             | FLOAT\n             | STRINGEmbed : IDENTIFIERDeclList : empty\n              | DeclList Declaration SEMICOLVarDeclList : VarDecl \n                   | VarDeclList SEMICOL VarDeclConstDeclList : ConstDecl1\n                     | ConstDeclList SEMICOL ConstDecl1TypeDeclList : TypeDecl\n                    | TypeDeclList SEMICOL TypeDeclDeclNameList : DeclName\n                    | DeclNameList COMMA DeclNameStmtList : Stmt\n                | StmtList SEMICOL StmtNewNameList : NewName\n                   | NewNameList COMMA NewNameKeyvalList : Keyval\n                  | BareCompLitExpr\n                  | KeyvalList COMMA Keyval\n                  | KeyvalList COMMA BareCompLitExprBracedKeyvalList : empty\n                        | KeyvalList OCommaDeclName : IDENTIFIERName : IDENTIFIERArgType : NameOrType\n               | IDENTIFIER NameOrType\n               | IDENTIFIER DotDotDot\n               | DotDotDotArgTypeList : ArgType\n                   | ArgTypeList COMMA ArgTypeOArgTypeListOComma : empty\n                          | ArgTypeList OCommaStmt : empty\n            | CompoundStmt\n            | CommonDecl\n            | NonDeclStmtNonDeclStmt : SimpleStmt\n                   | ForStmt\n                   | SwitchStmt\n                   | IfStmt\n                   | LabelName COLON Stmt\n                   | FALLTHROUGH\n                   | BREAK ONewName\n                   | CONTINUE ONewName\n                   | DEFER PseudoCall\n                   | GOTO NewName\n                   | RETURN OExprListDotDotDot : DDD\n                 | DDD NTypePExpr : PExprNoParen\n             | LPAREN ExprOrType RPARENPExprNoParen : Literal\n                    | Name\n                    | PExpr DOT IDENTIFIER\n                    | PExpr DOT LPAREN ExprOrType RPAREN\n                    | PExpr DOT LPAREN TYPE RPAREN\n                    | PExpr LBRACK Expr RBRACK\n                    | PExpr LBRACK OExpr COLON OExpr RBRACK\n                    | PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK\n                    | PseudoCall\n                    | ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE\n                    | CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT\n                    | PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT\n                    | FuncLiteral\n                    | ForCompExprConvType : FuncType\n                | OtherTypeCompType : OtherTypeStartCompLit : empty Keyval : Expr COLON CompLitExprBareCompLitExpr : Expr\n                       | LEFT_LEFT BracedKeyvalList RIGHT_RIGHTCompLitExpr : Expr\n                   | LEFT_LEFT BracedKeyvalList RIGHT_RIGHTExprOrType : Expr\n                  | NonExprTypeNameOrType : NTypeSwitchStmt : SWITCH IfHeader LBRACE CaseBlockList RBRACEPrec5Expr_ : UExpr\n                  | Prec5Expr_ DIVIDE UExpr\n                  | Prec5Expr_ MOD UExpr\n                  | Prec5Expr_ SHL UExpr\n                  | Prec5Expr_ SHR UExpr\n                  | Prec5Expr_ AMPERS UExpr\n                  | Prec5Expr_ AMPCAR UExpr\n                  | Prec5Expr_ TIMES UExprPrec4Expr_ : Prec5Expr_\n                  | Prec4Expr_ PLUS Prec5Expr_\n                  | Prec4Expr_ MINUS Prec5Expr_\n                  | Prec4Expr_ XOR Prec5Expr_\n                  | Prec4Expr_ OR Prec5Expr_Prec3Expr_ : Prec4Expr_\n                  | Prec3Expr_ EQEQ Prec4Expr_\n                  | Prec3Expr_ NOTEQ Prec4Expr_\n                  | Prec3Expr_ LEQ Prec4Expr_\n                  | Prec3Expr_ GEQ Prec4Expr_\n                  | Prec3Expr_ GREAT Prec4Expr_\n                  | Prec3Expr_ LESS Prec4Expr_\n                Prec2Expr_ : Prec3Expr_\n                  | Prec2Expr_ AMPAMP Prec3Expr_Expr : Prec2Expr_\n            | Expr OROR Prec2Expr_UExpr : PExpr\n             | AMPERS UExpr\n             | NOT UExpr\n             | TIMES UExpr\n             | PLUS UExpr\n             | MINUS UExpr\n             | XOR UExprForCompExpr : LBRACK Expr PIPE RangeStmt RBRACKPseudoCall : PExpr LPAREN RPAREN\n                  | PExpr LPAREN ExprOrTypeList OComma RPAREN\n                  | PExpr LPAREN ExprOrTypeList DDD OComma RPARENempty : '
    
_lr_action_items = {'OROR':([13,14,22,23,30,32,36,39,41,42,43,49,54,59,64,66,72,87,89,92,115,133,140,146,148,175,176,182,190,191,192,193,194,195,196,203,204,205,206,207,208,209,210,227,235,236,237,238,265,283,289,293,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,329,339,377,378,383,402,423,424,432,441,447,450,451,474,476,495,496,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,161,-151,-175,-259,-258,-255,161,161,-256,161,-260,-257,161,-247,-246,-244,-249,-248,-245,161,-234,-231,-236,-235,-237,-233,-232,-251,161,-241,-242,-239,-240,161,161,161,-262,-205,-253,161,161,161,161,161,161,161,161,161,161,161,-202,161,-143,161,-213,-208,-214,-212,161,161,-261,161,-263,-206,-207,-209,-264,161,161,-210,]),'DIVIDE':([13,22,32,36,39,41,42,43,49,54,59,64,72,87,89,92,115,146,175,176,203,204,205,206,207,208,209,235,236,237,238,293,296,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,95,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,-151,-175,-259,-258,-255,-256,-260,-257,-234,-231,-236,-235,-237,-233,-232,95,95,95,95,-262,-205,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'GREAT':([13,14,22,30,32,36,39,41,42,43,49,54,59,64,72,87,89,92,115,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,84,-238,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,-151,-175,-259,-258,-255,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,84,-241,-242,-239,-240,-262,-205,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'SEMICOL':([7,10,13,14,19,22,23,30,31,32,33,34,36,38,39,41,42,43,45,47,49,50,51,52,53,54,56,57,58,59,61,62,64,65,66,70,72,77,87,89,90,92,93,102,103,104,105,114,115,120,121,125,128,130,131,133,135,142,143,144,145,146,147,148,149,150,151,155,160,169,173,175,176,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,221,223,224,227,228,229,231,232,235,236,237,238,240,241,242,243,244,246,247,248,249,250,261,262,266,267,268,269,270,273,274,275,276,277,293,296,297,298,299,300,301,302,303,304,305,306,307,308,309,312,314,318,319,320,321,328,329,330,333,334,335,343,347,350,355,356,359,363,369,377,378,383,386,387,389,390,394,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,425,426,427,429,430,431,432,435,437,447,450,451,452,453,454,457,459,461,462,463,466,467,469,470,472,474,476,477,478,479,480,481,482,483,484,485,488,493,494,497,498,499,500,],[12,79,-215,-250,-193,-238,-252,-243,-15,-152,-16,-191,-150,-265,-211,-203,-230,-216,-190,-265,-201,-265,-265,153,-91,-175,-90,-265,-18,-254,-188,-189,-204,-17,-39,-265,-151,-6,-175,-259,-196,-258,-265,-265,-174,-162,-23,-19,-255,-265,-265,262,-71,-134,-135,-39,-26,-137,-122,-136,-195,-256,-140,-144,-141,-198,280,-194,-197,-54,-53,-260,-257,-9,-8,322,-10,-247,-246,-244,-249,-248,-245,-192,-186,-265,-185,-184,-187,-234,-231,-236,-235,-237,-233,-232,-251,-164,330,-25,-156,331,-80,-82,-83,-81,-128,-29,-145,-52,-51,-22,342,-241,-242,-239,-240,-124,-126,-125,-104,-99,-127,-105,-265,-96,-102,-265,-265,-70,-265,-95,-109,360,-118,-160,365,-28,-38,-262,-205,-253,-47,-42,-40,-44,-49,-45,-41,-46,-50,-48,-43,-202,-265,-107,395,-153,-265,-93,330,-143,-265,-31,-123,-163,-33,330,-100,-97,422,330,-117,-88,-213,-208,-214,-265,-76,-265,-153,-265,-149,-112,-148,-11,-7,-212,-59,-165,-157,-24,-129,-30,-84,-89,-20,465,-36,-158,-34,-32,-101,-106,-103,-63,-110,-94,-119,-161,-27,-261,-265,-229,-263,-206,-207,-74,-78,-77,-114,-265,-111,-108,-92,-35,-265,-265,330,-58,-209,-264,-79,-265,-265,-265,-113,-21,-159,-98,-120,-55,-116,-115,-210,-75,-56,-57,]),'CONSTANT':([1,5,6,8,11,12,79,93,102,153,199,248,267,330,435,472,488,499,500,],[-265,-265,-4,28,-154,-3,-5,28,28,-155,28,28,28,28,28,-58,-55,-56,-57,]),'CAREQ':([13,14,22,23,30,32,36,39,41,42,43,49,54,59,64,66,72,87,89,92,115,133,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,162,-151,-175,-259,-258,-255,162,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,-253,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'AMPCAR':([13,22,32,36,39,41,42,43,49,54,59,64,72,87,89,92,115,146,175,176,203,204,205,206,207,208,209,235,236,237,238,293,296,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,96,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,-151,-175,-259,-258,-255,-256,-260,-257,-234,-231,-236,-235,-237,-233,-232,96,96,96,96,-262,-205,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'LESS':([13,14,22,30,32,36,39,41,42,43,49,54,59,64,72,87,89,92,115,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,83,-238,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,-151,-175,-259,-258,-255,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,83,-241,-242,-239,-240,-262,-205,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'EQEQ':([13,14,22,30,32,36,39,41,42,43,49,54,59,64,72,87,89,92,115,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,82,-238,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,-151,-175,-259,-258,-255,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,82,-241,-242,-239,-240,-262,-205,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'EQUAL':([13,14,22,23,26,30,32,36,39,41,42,43,49,53,54,56,59,64,66,72,87,89,92,103,104,107,113,115,120,127,133,146,148,175,176,177,180,181,182,190,191,192,193,194,195,203,204,205,206,207,208,209,210,216,218,219,221,223,224,227,234,235,236,237,238,240,241,242,243,244,246,247,268,292,293,296,297,309,310,321,329,334,335,350,368,369,377,378,383,402,407,409,410,413,417,418,427,432,447,448,450,451,463,466,471,474,476,497,],[-215,-250,-238,-252,110,-243,-152,-150,-211,-203,-230,-216,-201,-91,-175,-90,-254,-204,-144,-151,-175,-259,-258,-174,-162,217,233,-255,-265,263,-144,-256,-144,-260,-257,-85,-227,-86,-226,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-80,-82,-83,-81,-128,337,-145,344,-241,-242,-239,-240,-124,-126,-125,-104,-99,-127,-105,-95,-146,-262,-205,-253,-202,-87,-93,-143,-123,-163,-100,433,-88,-213,-208,-214,-212,-129,-84,-89,233,-101,-106,-94,-261,-263,-147,-206,-207,-92,344,486,-209,-264,-210,]),'SHL_ASSIGN':([13,14,22,23,30,32,36,39,41,42,43,49,54,59,64,66,72,87,89,92,115,133,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,172,-151,-175,-259,-258,-255,172,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,-253,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'RIGHT_ANGLE':([13,14,22,23,30,32,36,39,41,42,43,49,59,64,72,87,89,92,115,146,175,176,190,191,192,193,194,195,196,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,325,326,327,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-254,-204,-151,-175,-259,-258,-255,-256,-260,-257,-247,-246,-244,-249,-248,-245,-265,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,-253,-202,402,-131,-130,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'COLON':([13,14,21,22,23,30,32,35,36,39,41,42,43,49,53,54,56,59,64,72,87,89,92,115,120,139,146,156,175,176,177,180,181,182,190,191,192,193,194,195,203,204,205,206,207,208,209,210,216,218,219,221,223,235,236,237,238,240,241,242,243,244,246,247,268,283,289,290,292,293,296,297,309,310,321,329,334,339,350,369,377,378,379,383,402,407,409,410,417,418,427,432,438,446,447,448,450,451,463,471,474,476,495,496,497,],[-215,-250,93,-238,-252,-243,-152,-121,-150,-211,-203,-230,-216,-201,-91,-122,-90,-254,-204,-151,-175,-259,-258,-255,-265,-138,-256,-265,-260,-257,-85,-227,-86,-226,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-80,-82,-83,-81,-128,-241,-242,-239,-240,-124,-126,-125,-104,-99,-127,-105,-95,373,-139,379,-146,-262,-205,-253,-202,-87,-93,-143,-123,-139,-100,-88,-213,-208,-265,-214,-212,-129,-84,-89,-101,-106,-94,-261,472,475,-263,-147,-206,-207,-92,488,-209,-264,499,500,-210,]),'COLONEQ':([13,14,22,23,26,30,32,36,39,41,42,43,49,53,54,56,59,64,66,72,87,89,92,115,120,127,133,146,148,175,176,177,180,181,182,190,191,192,193,194,195,203,204,205,206,207,208,209,210,216,218,219,221,223,227,235,236,237,238,240,241,242,243,244,246,247,268,292,293,296,297,309,310,321,329,334,350,368,369,377,378,383,402,407,409,410,417,418,427,432,447,448,450,451,463,471,474,476,497,],[-215,-250,-238,-252,109,-243,-152,-150,-211,-203,-230,-216,-201,-91,-175,-90,-254,-204,-144,-151,-175,-259,-258,-255,-265,264,-144,-256,-144,-260,-257,-85,-227,-86,-226,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-80,-82,-83,-81,-128,-145,-241,-242,-239,-240,-124,-126,-125,-104,-99,-127,-105,-95,-146,-262,-205,-253,-202,-87,-93,-143,-123,-100,434,-88,-213,-208,-214,-212,-129,-84,-89,-101,-106,-94,-261,-263,-147,-206,-207,-92,487,-209,-264,-210,]),'AMPAMP':([13,14,22,23,30,32,36,39,41,42,43,49,54,59,64,72,87,89,92,115,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,101,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,-151,-175,-259,-258,-255,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,101,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'RETURN':([1,5,6,8,11,12,79,93,102,153,199,248,267,330,435,472,488,499,500,],[-265,-265,-4,50,-154,-3,-5,50,50,-155,50,50,50,50,50,-58,-55,-56,-57,]),'MINUS':([1,5,6,8,11,12,13,17,20,22,29,30,32,36,38,39,41,42,43,46,48,49,50,51,54,59,64,67,68,69,70,72,79,80,81,82,83,84,85,86,87,89,92,93,94,95,96,97,98,99,100,101,102,108,109,110,115,116,117,118,119,129,146,153,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,175,176,179,183,190,191,192,193,194,195,199,203,204,205,206,207,208,209,217,226,233,235,236,237,238,248,262,263,264,267,278,280,284,293,295,296,309,329,330,337,344,357,358,373,376,377,378,379,381,383,402,422,432,435,436,442,447,450,451,472,474,475,476,478,486,487,488,489,497,499,500,],[-265,-265,-4,17,-154,-3,-215,17,17,-238,17,119,-152,-150,17,-211,-203,-230,-216,17,17,-201,17,17,-175,-254,-204,17,17,17,17,-151,-5,17,17,17,17,17,17,17,-175,-259,-258,17,17,17,17,17,17,17,17,17,17,17,17,17,-255,17,17,17,17,17,-256,-155,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-260,-257,17,17,119,119,119,119,119,119,17,-234,-231,-236,-235,-237,-233,-232,17,17,17,-241,-242,-239,-240,17,17,17,17,17,17,17,17,-262,17,-205,-202,-143,17,17,17,17,17,17,17,-213,-208,17,17,-214,-212,17,-261,17,17,17,-263,-206,-207,-58,-209,17,-264,17,17,17,-55,17,-210,-56,-57,]),'DOT':([9,13,32,36,39,41,43,49,54,59,64,72,76,87,90,91,223,256,293,296,309,322,329,377,378,383,402,432,447,450,451,474,476,497,],[75,-215,-152,-150,-211,-203,-216,-201,-175,159,-204,-151,75,-175,-211,159,336,-175,-262,-205,-202,75,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'GOTO':([1,5,6,8,11,12,79,93,102,153,199,248,267,330,435,472,488,499,500,],[-265,-265,-4,63,-154,-3,-5,63,63,-155,63,63,63,63,63,-58,-55,-56,-57,]),'CASE':([13,14,19,22,23,30,32,34,36,39,41,42,43,45,47,49,50,53,54,56,57,59,61,62,64,66,72,87,89,90,92,93,105,114,115,120,128,135,142,143,144,145,146,147,148,149,150,155,160,169,173,175,176,190,191,192,193,194,195,197,198,200,201,202,203,204,205,206,207,208,209,210,211,213,216,218,219,221,223,224,227,228,229,231,235,236,237,238,240,241,242,243,244,246,247,266,268,276,277,281,293,296,297,298,299,300,301,302,303,304,305,306,307,308,309,312,321,329,330,333,334,343,350,369,371,372,377,378,383,386,387,402,403,404,406,407,408,409,410,411,416,417,418,425,427,431,432,435,437,439,447,450,451,452,453,454,463,470,472,474,476,477,482,488,497,498,499,500,],[-215,-250,-193,-238,-252,-243,-152,-191,-150,-211,-203,-230,-216,-190,-265,-201,-265,-91,-175,-90,-265,-254,-188,-189,-204,-39,-151,-175,-259,-196,-258,-265,-23,-19,-255,-265,-71,-26,-137,-122,-136,-195,-256,-140,-144,-141,-198,-194,-197,-54,-53,-260,-257,-247,-246,-244,-249,-248,-245,-192,-186,-185,-184,-187,-234,-231,-236,-235,-237,-233,-232,-251,-164,-25,-80,-82,-83,-81,-128,-29,-145,-52,-51,-22,-241,-242,-239,-240,-124,-126,-125,-104,-99,-127,-105,-70,-95,-28,-38,-265,-262,-205,-253,-47,-42,-40,-44,-49,-45,-41,-46,-50,-48,-43,-202,-265,-93,-143,-265,-31,-123,-33,-100,-88,436,-61,-213,-208,-214,-265,-76,-212,-59,-165,-24,-129,-30,-84,-89,-20,-32,-101,-106,-63,-94,-27,-261,-265,-229,-62,-263,-206,-207,-74,-78,-77,-92,-60,-58,-209,-264,-79,-21,-55,-210,-75,-56,-57,]),'DEFER':([1,5,6,8,11,12,79,93,102,153,199,248,267,330,435,472,488,499,500,],[-265,-265,-4,18,-154,-3,-5,18,18,-155,18,18,18,18,18,-58,-55,-56,-57,]),'GEQ':([13,14,22,30,32,36,39,41,42,43,49,54,59,64,72,87,89,92,115,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,80,-238,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,-151,-175,-259,-258,-255,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,80,-241,-242,-239,-240,-262,-205,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'RPAREN':([13,14,22,23,30,32,36,39,41,42,43,49,53,56,59,64,72,76,87,89,92,103,104,106,112,115,120,122,136,146,148,157,175,176,177,178,180,181,182,186,188,189,190,191,192,193,194,195,203,204,205,206,207,208,209,210,214,215,216,218,219,221,223,224,227,232,235,236,237,238,239,240,241,242,243,244,246,247,251,252,253,254,255,256,257,258,259,268,274,275,277,291,292,293,296,297,309,310,321,322,323,324,326,327,329,331,332,333,334,335,338,341,342,343,345,348,349,350,351,352,353,362,364,365,366,369,377,378,380,381,382,383,384,385,390,392,400,402,405,407,408,409,410,412,413,414,415,416,417,418,420,427,428,430,432,447,448,449,450,451,456,458,463,464,465,466,474,476,483,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-91,-90,-254,-204,-151,187,-175,-259,-258,-174,-162,213,231,-255,-265,-265,276,-256,-144,293,-260,-257,-85,309,-227,-86,-226,-9,-265,-10,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-156,-265,-80,-82,-83,-81,-128,-29,-145,-265,-241,-242,-239,-240,-265,-124,-126,-125,-104,-99,-127,-105,-265,-180,350,-179,-176,-175,-182,-228,-199,-95,-160,-265,-38,-265,-146,-262,-205,-253,-202,-87,-93,-133,401,-132,-131,-130,-143,-133,406,-31,-123,-163,409,411,-133,-33,417,-131,-183,-100,-178,-177,-200,-265,429,-133,431,-88,-213,-208,447,-131,-265,-214,450,451,-153,459,-11,-212,-157,-129,-30,-84,-89,-265,-36,-158,-34,-32,-101,-106,-181,-94,469,-161,-261,-263,-147,476,-206,-207,479,480,-92,482,-133,-35,-209,-264,-159,-210,]),'MINUSMIN':([13,14,22,23,30,32,36,39,41,42,43,49,54,59,64,66,72,87,89,92,115,133,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,169,-151,-175,-259,-258,-255,169,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,-253,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'TIMESEQ':([13,14,22,23,30,32,36,39,41,42,43,49,54,59,64,66,72,87,89,92,115,133,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,163,-151,-175,-259,-258,-255,163,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,-253,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'FALLTHROUGH':([1,5,6,8,11,12,79,93,102,153,199,248,267,330,435,472,488,499,500,],[-265,-265,-4,19,-154,-3,-5,19,19,-155,19,19,19,19,19,-58,-55,-56,-57,]),'RIGHT_RIGHT':([13,14,22,23,30,32,36,39,41,42,43,49,59,64,72,87,89,92,115,146,154,158,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,282,283,284,285,286,287,288,293,294,296,297,309,327,329,374,375,376,377,378,383,402,432,440,441,442,443,444,445,447,450,451,473,474,476,490,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-254,-204,-151,-175,-259,-258,-255,-256,-265,-265,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-172,-222,-265,-265,-168,377,-169,-262,383,-205,-253,-202,-130,-143,443,-173,-131,-213,-208,-214,-212,-261,-221,-224,-265,-223,-170,-171,-263,-206,-207,490,-209,-264,-225,-210,]),'MODEQ':([13,14,22,23,30,32,36,39,41,42,43,49,54,59,64,66,72,87,89,92,115,133,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,165,-151,-175,-259,-258,-255,165,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,-253,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'PIPE':([13,14,22,23,30,32,36,39,41,42,43,49,59,64,72,87,89,92,115,140,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,311,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-254,-204,-151,-175,-259,-258,-255,278,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,-253,-202,278,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'MINUSEQ':([13,14,22,23,30,32,36,39,41,42,43,49,54,59,64,66,72,87,89,92,115,133,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,168,-151,-175,-259,-258,-255,168,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,-253,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'SWITCH':([1,5,6,8,11,12,79,93,102,153,199,248,267,330,435,472,488,499,500,],[-265,-265,-4,51,-154,-3,-5,51,51,-155,51,51,51,51,51,-58,-55,-56,-57,]),'PLUS':([1,5,6,8,11,12,13,17,20,22,29,30,32,36,38,39,41,42,43,46,48,49,50,51,54,59,64,67,68,69,70,72,79,80,81,82,83,84,85,86,87,89,92,93,94,95,96,97,98,99,100,101,102,108,109,110,115,116,117,118,119,129,146,153,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,175,176,179,183,190,191,192,193,194,195,199,203,204,205,206,207,208,209,217,226,233,235,236,237,238,248,262,263,264,267,278,280,284,293,295,296,309,329,330,337,344,357,358,373,376,377,378,379,381,383,402,422,432,435,436,442,447,450,451,472,474,475,476,478,486,487,488,489,497,499,500,],[-265,-265,-4,20,-154,-3,-215,20,20,-238,20,118,-152,-150,20,-211,-203,-230,-216,20,20,-201,20,20,-175,-254,-204,20,20,20,20,-151,-5,20,20,20,20,20,20,20,-175,-259,-258,20,20,20,20,20,20,20,20,20,20,20,20,20,-255,20,20,20,20,20,-256,-155,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-260,-257,20,20,118,118,118,118,118,118,20,-234,-231,-236,-235,-237,-233,-232,20,20,20,-241,-242,-239,-240,20,20,20,20,20,20,20,20,-262,20,-205,-202,-143,20,20,20,20,20,20,20,-213,-208,20,20,-214,-212,20,-261,20,20,20,-263,-206,-207,-58,-209,20,-264,20,20,20,-55,20,-210,-56,-57,]),'INTEGER':([1,5,6,8,11,12,17,18,20,29,38,46,48,50,51,53,56,67,68,69,70,79,80,81,82,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,120,129,153,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,216,217,218,219,221,223,226,233,240,241,242,243,244,246,247,248,262,263,264,267,268,278,280,284,295,319,320,321,330,334,337,344,350,357,358,369,373,376,379,381,389,390,394,407,409,410,417,418,422,427,435,436,442,459,463,472,475,478,479,480,486,487,488,489,499,500,],[-265,-265,-4,36,-154,-3,36,36,36,36,36,36,36,36,36,-91,-90,36,36,36,36,-5,36,36,36,36,36,36,36,-175,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-265,36,-155,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-80,36,-82,-83,-81,-128,36,36,-124,-126,-125,-104,-99,-127,-105,36,36,36,36,36,-95,36,36,36,36,-153,36,-93,36,-123,36,36,-100,36,36,-88,36,36,36,36,36,-153,36,-129,-84,-89,-101,-106,36,-94,36,36,36,36,-92,-58,36,36,36,36,36,36,-55,36,-56,-57,]),'IDENTIFIER':([1,2,5,6,8,9,11,12,17,18,20,25,28,29,37,38,44,46,47,48,50,51,57,63,67,68,69,70,76,79,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,116,117,118,119,120,122,123,129,134,136,137,138,143,153,154,156,157,158,159,161,162,163,164,165,166,167,168,170,171,172,174,179,183,185,199,217,220,222,225,226,233,239,245,248,256,259,261,262,263,264,267,272,278,279,280,284,295,313,315,316,317,319,322,330,331,335,336,337,340,342,344,348,350,354,357,358,360,362,365,373,376,379,381,388,391,393,395,413,417,422,435,436,442,460,465,467,469,472,475,478,486,487,488,489,499,500,],[-265,7,-265,-4,54,74,-154,-3,87,87,87,103,103,87,124,87,138,87,143,87,87,87,143,143,87,87,87,87,74,-5,87,87,87,87,87,87,87,54,87,87,87,87,87,87,87,87,54,-174,-162,103,87,87,87,87,87,103,87,87,87,87,87,87,256,256,87,273,138,87,-37,-122,-155,87,87,87,87,296,87,87,87,87,87,87,87,87,87,87,87,87,87,87,319,54,87,87,103,87,87,87,256,256,54,87,87,87,87,87,87,54,364,87,87,87,87,87,-166,390,390,87,-122,74,54,103,-163,407,87,87,103,87,256,-100,421,87,87,273,256,138,87,87,87,87,390,390,143,319,87,-101,87,54,87,87,-167,103,87,87,-58,87,87,87,87,-55,87,-56,-57,]),'LEFT_ANGLE':([15,16,53,56,60,87,120,177,181,216,218,219,221,223,240,241,242,243,244,246,247,268,321,334,350,369,407,409,410,417,418,427,463,],[86,-218,-91,-90,-217,-175,-265,-217,-218,-80,-82,-83,-81,-128,-124,-126,-125,-104,-99,-127,-105,-95,-93,-123,-100,-88,-129,-84,-89,-101,-106,-94,-92,]),'SHR_ASSIGN':([13,14,22,23,30,32,36,39,41,42,43,49,54,59,64,66,72,87,89,92,115,133,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,166,-151,-175,-259,-258,-255,166,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,-253,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'OREQ':([13,14,22,23,30,32,36,39,41,42,43,49,54,59,64,66,72,87,89,92,115,133,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,210,235,236,237,238,293,296,297,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,167,-151,-175,-259,-258,-255,167,-256,-260,-257,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-241,-242,-239,-240,-262,-205,-253,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'$enderror':([1,5,6,8,11,12,79,153,],[-265,-265,-4,58,-154,-3,-5,-155,]),'INTERFACE':([1,5,6,8,11,12,17,18,20,29,38,46,48,50,51,67,68,69,70,79,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,113,116,117,118,119,120,122,123,129,137,138,143,153,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,220,225,226,233,239,245,248,256,259,261,262,263,264,267,278,279,280,284,295,313,317,319,330,335,337,340,344,348,350,357,358,362,373,376,379,381,413,417,422,435,436,442,460,467,469,472,475,478,486,487,488,489,499,500,],[-265,-265,-4,40,-154,-3,40,40,40,40,40,40,40,40,40,40,40,40,40,-5,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-174,-162,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-37,-122,-155,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-166,40,-122,40,-163,40,40,40,40,-100,40,40,40,40,40,40,40,40,-101,40,40,40,40,-167,40,40,-58,40,40,40,40,-55,40,-56,-57,]),'DDD':([13,14,22,23,30,32,36,39,41,42,43,49,53,56,59,64,72,87,89,92,115,120,122,123,146,175,176,177,180,181,182,190,191,192,193,194,195,203,204,205,206,207,208,209,210,216,218,219,221,223,235,236,237,238,239,240,241,242,243,244,245,246,247,256,268,291,292,293,296,297,309,310,321,329,334,348,350,362,369,377,378,383,402,407,409,410,417,418,427,432,447,448,450,451,463,474,476,497,],[-215,-250,-238,-252,-243,-152,-150,-211,-203,-230,-216,-201,-91,-90,-254,-204,-151,-175,-259,-258,-255,-265,259,259,-256,-260,-257,-85,-227,-86,-226,-247,-246,-244,-249,-248,-245,-234,-231,-236,-235,-237,-233,-232,-251,-80,-82,-83,-81,-128,-241,-242,-239,-240,259,-124,-126,-125,-104,-99,259,-127,-105,259,-95,382,-146,-262,-205,-253,-202,-87,-93,-143,-123,259,-100,259,-88,-213,-208,-214,-212,-129,-84,-89,-101,-106,-94,-261,-263,-147,-206,-207,-92,-209,-264,-210,]),'COMMA':([13,14,22,23,26,30,32,36,39,41,42,43,49,53,54,56,59,64,66,72,87,89,92,103,104,107,113,115,120,127,133,143,146,148,149,175,176,177,180,181,182,190,191,192,193,194,195,196,203,204,205,206,207,208,209,210,216,218,219,221,223,227,228,229,235,236,237,238,240,241,242,243,244,246,247,251,252,254,255,256,258,259,268,283,285,286,288,291,292,293,296,297,309,310,313,317,319,321,329,333,334,335,343,350,351,352,353,368,369,377,378,382,383,402,407,408,409,410,413,416,417,418,420,427,432,440,441,443,444,445,447,448,450,451,460,463,471,474,476,490,497,],[-215,-250,-238,-252,108,-243,-152,-150,-211,-203,-230,-216,-201,-91,-175,-90,-254,-204,-144,-151,-175,-259,-258,-174,-162,222,222,-255,-265,108,-144,-122,-256,-144,108,-260,-257,-85,-227,-86,-226,-247,-246,-244,-249,-248,-245,326,-234,-231,-236,-235,-237,-233,-232,-251,-80,-82,-83,-81,-128,-145,108,108,-241,-242,-239,-240,-124,-126,-125,-104,-99,-127,-105,348,-180,-179,-176,-175,-228,-199,-95,-222,376,-168,-169,381,-146,-262,-205,-253,-202,-87,-166,393,-122,-93,-143,108,-123,-163,108,-100,-178,-177,-200,108,-88,-213,-208,326,-214,-212,-129,108,-84,-89,222,108,-101,-106,-181,-94,-261,-221,-224,-223,-170,-171,-263,-147,-206,-207,-167,-92,489,-209,-264,-225,-210,]),'TYPE':([1,5,6,8,11,12,79,93,102,153,199,248,267,295,330,435,472,488,499,500,],[-265,-265,-4,44,-154,-3,-5,44,44,-155,44,44,44,385,44,44,-58,-55,-56,-57,]),'OR':([13,22,30,32,36,39,41,42,43,49,54,59,64,72,87,89,92,115,146,175,176,190,191,192,193,194,195,203,204,205,206,207,208,209,235,236,237,238,293,296,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,-238,117,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,-151,-175,-259,-258,-255,-256,-260,-257,117,117,117,117,117,117,-234,-231,-236,-235,-237,-233,-232,-241,-242,-239,-240,-262,-205,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),'MOD':([13,22,32,36,39,41,42,43,49,54,59,64,72,87,89,92,115,146,175,176,203,204,205,206,207,208,209,235,236,237,238,293,296,309,329,377,378,383,402,432,447,450,451,474,476,497,],[-215,100,-152,-150,-211,-203,-230,-216,-201,-175,-254,-204,-151,-175,-259,-258,-255,-256,-260,-257,-234,-231,-236,-235,-237,-233,-232,100,100,100,100,-262,-205,-202,-143,-213,-208,-214,-212,-261,-263,-206,-207,-209,-264,-210,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FuncLiteral':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'DeclName':([25,28,106,112,222,331,342,465,],[104,104,104,104,335,104,104,104,]),'OSimpleStmt':([38,51,70,262,280,422,478,],[125,151,151,356,370,468,151,]),'Prec3Expr_':([8,38,46,50,51,69,70,86,93,101,102,108,109,110,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[14,14,14,14,14,14,14,14,14,210,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'ConvType':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'IfStmt':([8,93,102,199,248,267,330,435,],[34,34,34,34,34,34,34,34,]),'DotDotDot':([122,123,239,245,256,348,362,],[254,254,254,254,351,254,254,]),'NonExprType':([69,157,179,295,381,436,489,],[180,180,310,180,180,180,180,]),'Stmt':([93,102,199,248,267,330,435,],[197,211,211,211,211,404,211,]),'FuncDecl_':([37,],[121,]),'InterfaceType':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,113,116,117,118,119,120,122,123,129,137,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,220,225,226,233,239,245,248,256,259,261,262,263,264,267,278,279,280,284,295,317,330,337,340,344,348,357,358,362,373,376,379,381,413,422,435,436,442,467,469,475,478,486,487,489,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'LabelName':([8,93,102,199,248,267,330,435,],[21,21,21,21,21,21,21,21,]),'Prec5Expr_':([8,38,46,50,51,69,70,80,81,82,83,84,85,86,93,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,235,236,237,238,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'InterfaceDeclList':([134,],[270,]),'Prec2Expr_':([8,38,46,50,51,69,70,86,93,102,108,109,110,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,297,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'FuncLiteralDecl':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'ONewName':([47,57,],[145,155,]),'RangeStmt':([38,278,],[126,367,]),'InDecl':([271,],[363,]),'Embed':([185,315,316,388,391,395,],[320,389,392,456,458,320,]),'DotName':([107,111,113,120,122,123,137,220,225,239,245,256,259,261,279,317,340,348,362,413,467,469,],[219,219,219,246,219,219,219,219,219,219,219,219,219,246,219,219,219,219,219,219,246,246,]),'ExprList':([8,38,50,51,70,93,102,109,110,199,217,233,248,262,263,264,267,278,280,330,337,344,422,435,478,],[26,127,149,26,26,26,26,228,229,26,333,343,26,26,229,228,26,368,26,26,408,416,26,26,26,]),'CaseBlock':([371,],[439,]),'ExprOrTypeList':([157,436,],[291,471,]),'Keyval':([154,158,284,376,442,],[286,286,286,444,286,]),'FuncBody':([121,],[249,]),'VarDecl':([25,106,331,],[105,214,405,]),'IfHeader':([51,70,478,],[152,184,492,]),'TypeDeclList':([136,],[275,]),'CompoundStmt':([93,102,199,248,267,330,435,455,],[200,200,200,200,200,200,200,477,]),'ForBody':([38,],[128,]),'SourceFile':([0,],[3,]),'Prec4Expr_':([8,38,46,50,51,69,70,80,81,82,83,84,85,86,93,101,102,108,109,110,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[30,30,30,30,30,30,30,190,191,192,193,194,195,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'ArgTypeList':([122,123,239,245,362,],[251,251,251,251,251,]),'CaseBlockList':([281,],[371,]),'PtrType':([107,111,113,120,122,123,137,220,225,239,245,256,259,261,279,317,340,348,362,413,467,469,],[218,218,218,241,218,218,218,218,218,218,218,218,218,241,218,218,218,218,218,218,241,241,]),'DeclNameList':([25,28,106,112,331,342,465,],[107,113,107,113,107,413,413,]),'ExprOrType':([69,157,295,381,436,489,],[178,292,384,448,292,448,]),'PackageClause':([0,],[1,]),'OArgTypeListOComma':([122,123,239,245,362,],[253,260,345,346,428,]),'FuncDecl':([8,],[33,]),'OtherType':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,113,116,117,118,119,120,122,123,129,137,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,220,225,226,233,239,245,248,256,259,261,262,263,264,267,278,279,280,284,295,317,330,337,340,344,348,357,358,362,373,376,379,381,413,422,435,436,442,467,469,475,478,486,487,489,],[16,16,16,16,16,16,16,16,16,16,16,16,181,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,221,16,16,16,221,221,16,16,16,16,242,221,221,16,221,16,16,181,16,16,16,16,16,16,16,16,16,16,16,16,16,181,16,16,16,221,221,16,16,221,221,16,221,221,242,16,16,16,16,16,221,16,16,181,221,16,16,221,16,221,16,16,221,16,16,16,181,221,16,16,181,16,242,242,16,16,16,16,181,]),'StructDeclList':([185,],[318,]),'NewName':([8,47,57,63,93,102,134,185,199,248,267,330,360,393,395,435,],[35,142,142,160,35,35,271,313,35,35,35,35,271,460,313,35,]),'PseudoCall':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[39,39,90,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'PExpr':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[59,59,91,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'OExprList':([50,],[150,]),'UExpr':([8,17,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[42,89,92,115,42,42,146,42,42,175,176,42,42,42,42,42,42,42,42,42,42,203,204,205,206,207,208,209,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,176,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'ForCompExpr':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'InterfaceDecl':([134,360,],[269,426,]),'ConstDecl':([28,112,342,465,],[114,232,415,415,]),'SwitchStmt':([8,93,102,199,248,267,330,435,],[45,45,45,45,45,45,45,45,]),'VarDeclList':([106,],[215,]),'ElseIf':([386,],[454,]),'PExprNoParen':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'BracedKeyvalList':([154,158,284,442,],[287,294,374,473,]),'Literal':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,226,233,248,262,263,264,267,278,280,284,295,320,330,337,344,357,358,373,376,379,381,389,394,422,435,436,442,459,475,478,479,480,486,487,489,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,397,41,41,41,41,41,41,41,41,41,397,397,41,41,41,41,397,41,41,397,397,41,41,41,]),'Import':([5,],[10,]),'ConstDeclList':([342,],[412,]),'OComma':([196,251,285,291,382,],[325,349,375,380,449,]),'NameOrType':([122,123,239,245,256,348,362,],[255,255,255,255,352,255,255,]),'start':([0,],[4,]),'Declaration':([8,],[52,]),'CompLitExpr':([373,],[440,]),'OLiteral':([320,389,394,459,479,480,],[398,457,461,481,493,494,]),'CompType':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,108,109,110,116,117,118,119,129,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'empty':([1,5,9,38,46,47,50,51,57,70,76,93,102,120,121,122,123,154,156,158,183,188,196,199,215,226,232,239,245,248,251,261,262,267,270,275,280,281,284,285,291,312,318,320,322,330,362,379,382,386,389,394,412,422,435,442,459,467,469,475,478,479,480,],[6,11,78,130,139,144,147,130,144,130,78,201,201,243,250,257,257,282,139,282,139,324,327,201,324,139,324,257,257,201,327,243,130,201,324,324,130,372,282,327,327,387,324,399,78,201,257,139,327,453,399,399,324,130,201,282,399,243,243,139,130,399,399,]),'StructType':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,113,116,117,118,119,120,122,123,129,137,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,220,225,226,233,239,245,248,256,259,261,262,263,264,267,278,279,280,284,295,317,330,337,340,344,348,357,358,362,373,376,379,381,413,422,435,436,442,467,469,475,478,486,487,489,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'DeclList':([5,],[8,]),'NType':([107,111,113,122,123,137,220,225,239,245,256,259,279,317,340,348,362,413,],[224,230,234,258,258,277,334,338,258,258,258,353,369,394,410,258,258,466,]),'ImportStmtList':([76,],[188,]),'ArgType':([122,123,239,245,348,362,],[252,252,252,252,420,252,]),'OExpr':([46,156,183,226,379,475,],[141,290,141,141,446,491,]),'Imports':([1,],[5,]),'LoopBody':([132,184,492,],[266,312,498,]),'NewNameList':([185,395,],[317,317,]),'FuncRetType':([120,261,467,469,],[247,247,247,247,]),'ElseIfList':([312,],[386,]),'StructDecl':([185,395,],[314,462,]),'FuncType':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,113,116,117,118,119,120,122,123,129,137,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,220,225,226,233,239,245,248,256,259,261,262,263,264,267,278,279,280,284,295,317,330,337,340,344,348,357,358,362,373,376,379,381,413,422,435,436,442,467,469,475,478,486,487,489,],[60,60,60,60,60,60,60,60,60,60,60,60,177,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,216,60,60,60,216,216,60,60,60,60,240,216,216,60,216,60,60,177,60,60,60,60,60,60,60,60,60,60,60,60,60,177,60,60,60,216,216,60,60,216,216,60,216,216,240,60,60,60,60,60,216,60,60,177,216,60,60,216,60,216,60,60,216,60,60,60,177,216,60,60,177,60,240,240,60,60,60,60,177,]),'SimpleStmt':([8,38,51,70,93,102,199,248,262,267,280,330,422,435,478,],[61,131,131,131,61,61,61,61,131,61,131,61,131,61,131,]),'ForStmt':([8,93,102,199,248,267,330,435,],[62,62,62,62,62,62,62,62,]),'StmtList':([102,199,248,267,435,],[212,328,347,359,470,]),'CommonDecl':([8,93,102,199,248,267,330,435,],[31,198,198,198,198,198,198,198,]),'ImportHere':([9,76,322,],[73,73,73,]),'ImportStmt':([9,76,322,],[77,189,400,]),'ConstDecl1':([342,465,],[414,483,]),'Else':([386,],[452,]),'TypeDeclName':([44,136,365,],[137,137,137,]),'ForHeader':([38,],[132,]),'OSemi':([188,215,232,270,275,318,412,],[323,332,341,361,366,396,464,]),'Case':([371,],[435,]),'TypeDecl':([44,136,365,],[135,274,430,]),'Name':([8,17,18,20,29,38,46,48,50,51,67,68,69,70,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,113,116,117,118,119,120,122,123,129,137,154,156,157,158,161,162,163,164,165,166,167,168,170,171,172,174,179,183,199,217,220,225,226,233,239,245,248,256,259,261,262,263,264,267,278,279,280,284,295,317,330,337,340,344,348,357,358,362,373,376,379,381,413,422,435,436,442,467,469,475,478,486,487,489,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,223,64,64,64,223,223,64,64,64,64,223,223,223,64,223,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,223,223,64,64,223,223,64,223,223,223,64,64,64,64,64,223,64,64,64,223,64,64,223,64,223,64,64,223,64,64,64,64,223,64,64,64,64,223,223,64,64,64,64,64,]),'NonDeclStmt':([8,93,102,199,248,267,330,435,],[65,202,202,202,202,202,202,202,]),'Expr':([8,38,46,50,51,69,70,86,93,102,108,109,110,129,154,156,157,158,162,163,164,165,166,167,168,170,171,172,174,183,199,217,226,233,248,262,263,264,267,278,280,284,295,330,337,344,357,358,373,376,379,381,422,435,436,442,475,478,486,487,489,],[66,133,140,148,66,182,66,196,66,66,227,148,148,265,283,289,182,283,298,299,300,301,302,303,304,305,306,307,308,311,66,148,339,148,66,66,148,148,66,148,66,283,182,66,148,148,423,424,441,283,339,182,66,66,182,283,339,66,495,496,182,]),'FuncRes':([120,261,467,469,],[244,355,484,485,]),'ArgList':([37,88,124,421,],[120,120,261,467,]),'KeyvalList':([154,158,284,442,],[285,285,285,285,]),'BareCompLitExpr':([154,158,284,376,442,],[288,288,288,445,288,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',8),
  ('SourceFile -> PackageClause Imports DeclList','SourceFile',3,'p_sourcefile','parser.py',11),
  ('PackageClause -> PACKAGE IDENTIFIER SEMICOL','PackageClause',3,'p_packegeclause','parser.py',14),
  ('Imports -> empty','Imports',1,'p_imports','parser.py',16),
  ('Imports -> Imports Import SEMICOL','Imports',3,'p_imports','parser.py',17),
  ('Import -> IMPORT ImportStmt','Import',2,'p_import','parser.py',19),
  ('Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN','Import',5,'p_import','parser.py',20),
  ('Import -> IMPORT LPAREN RPAREN','Import',3,'p_import','parser.py',21),
  ('ImportStmt -> ImportHere STRING','ImportStmt',2,'p_importstmt','parser.py',23),
  ('ImportStmtList -> ImportStmt','ImportStmtList',1,'p_importstmtlist','parser.py',25),
  ('ImportStmtList -> ImportStmtList SEMICOL ImportStmt','ImportStmtList',3,'p_importstmtlist','parser.py',26),
  ('ImportHere -> empty','ImportHere',1,'p_importhere','parser.py',29),
  ('ImportHere -> IDENTIFIER','ImportHere',1,'p_importhere','parser.py',30),
  ('ImportHere -> DOT','ImportHere',1,'p_importhere','parser.py',31),
  ('Declaration -> CommonDecl','Declaration',1,'p_declaration','parser.py',34),
  ('Declaration -> FuncDecl','Declaration',1,'p_declaration','parser.py',35),
  ('Declaration -> NonDeclStmt','Declaration',1,'p_declaration','parser.py',36),
  ('Declaration -> error','Declaration',1,'p_declaration','parser.py',37),
  ('CommonDecl -> CONSTANT ConstDecl','CommonDecl',2,'p_commondecl','parser.py',39),
  ('CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN','CommonDecl',5,'p_commondecl','parser.py',40),
  ('CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN','CommonDecl',7,'p_commondecl','parser.py',41),
  ('CommonDecl -> CONSTANT LPAREN RPAREN','CommonDecl',3,'p_commondecl','parser.py',42),
  ('CommonDecl -> VAR VarDecl','CommonDecl',2,'p_commondecl','parser.py',43),
  ('CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN','CommonDecl',5,'p_commondecl','parser.py',44),
  ('CommonDecl -> VAR LPAREN RPAREN','CommonDecl',3,'p_commondecl','parser.py',45),
  ('CommonDecl -> TYPE TypeDecl','CommonDecl',2,'p_commondecl','parser.py',46),
  ('CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN','CommonDecl',5,'p_commondecl','parser.py',47),
  ('CommonDecl -> TYPE LPAREN RPAREN','CommonDecl',3,'p_commondecl','parser.py',48),
  ('VarDecl -> DeclNameList NType','VarDecl',2,'p_vardecl','parser.py',51),
  ('VarDecl -> DeclNameList NType EQUAL ExprList','VarDecl',4,'p_vardecl','parser.py',52),
  ('VarDecl -> DeclNameList EQUAL ExprList','VarDecl',3,'p_vardecl','parser.py',53),
  ('ConstDecl -> DeclNameList NType EQUAL ExprList','ConstDecl',4,'p_constdecl','parser.py',56),
  ('ConstDecl -> DeclNameList EQUAL ExprList','ConstDecl',3,'p_constdecl','parser.py',57),
  ('ConstDecl1 -> ConstDecl','ConstDecl1',1,'p_constdecl1','parser.py',60),
  ('ConstDecl1 -> DeclNameList NType','ConstDecl1',2,'p_constdecl1','parser.py',61),
  ('ConstDecl1 -> DeclNameList','ConstDecl1',1,'p_constdecl1','parser.py',62),
  ('TypeDeclName -> IDENTIFIER','TypeDeclName',1,'p_typedeclname','parser.py',64),
  ('TypeDecl -> TypeDeclName NType','TypeDecl',2,'p_typedecl','parser.py',67),
  ('SimpleStmt -> Expr','SimpleStmt',1,'p_simplestmt','parser.py',70),
  ('SimpleStmt -> Expr PLUSEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',71),
  ('SimpleStmt -> Expr MINUSEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',72),
  ('SimpleStmt -> Expr TIMESEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',73),
  ('SimpleStmt -> Expr DIVIDEEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',74),
  ('SimpleStmt -> Expr MODEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',75),
  ('SimpleStmt -> Expr OREQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',76),
  ('SimpleStmt -> Expr AMPEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',77),
  ('SimpleStmt -> Expr CAREQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',78),
  ('SimpleStmt -> Expr SHL_ASSIGN Expr','SimpleStmt',3,'p_simplestmt','parser.py',79),
  ('SimpleStmt -> Expr SHR_ASSIGN Expr','SimpleStmt',3,'p_simplestmt','parser.py',80),
  ('SimpleStmt -> Expr AMPCAREQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',81),
  ('SimpleStmt -> ExprList EQUAL ExprList','SimpleStmt',3,'p_simplestmt','parser.py',82),
  ('SimpleStmt -> ExprList COLONEQ ExprList','SimpleStmt',3,'p_simplestmt','parser.py',83),
  ('SimpleStmt -> Expr PLUSPLUS','SimpleStmt',2,'p_simplestmt','parser.py',84),
  ('SimpleStmt -> Expr MINUSMIN','SimpleStmt',2,'p_simplestmt','parser.py',85),
  ('Case -> CASE ExprOrTypeList COLON','Case',3,'p_case','parser.py',87),
  ('Case -> CASE ExprOrTypeList EQUAL Expr COLON','Case',5,'p_case','parser.py',88),
  ('Case -> CASE ExprOrTypeList COLONEQ Expr COLON','Case',5,'p_case','parser.py',89),
  ('Case -> DEFAULT COLON','Case',2,'p_case','parser.py',90),
  ('CompoundStmt -> LBRACE StmtList RBRACE','CompoundStmt',3,'p_compoundstmt','parser.py',93),
  ('CaseBlock -> Case StmtList','CaseBlock',2,'p_caseblock','parser.py',96),
  ('CaseBlockList -> empty','CaseBlockList',1,'p_caseblocklist','parser.py',99),
  ('CaseBlockList -> CaseBlockList CaseBlock','CaseBlockList',2,'p_caseblocklist','parser.py',100),
  ('LoopBody -> LBRACE StmtList RBRACE','LoopBody',3,'p_loopbody','parser.py',103),
  ('RangeStmt -> ExprList EQUAL RANGE Expr','RangeStmt',4,'p_rangestmt','parser.py',107),
  ('RangeStmt -> ExprList COLONEQ RANGE Expr','RangeStmt',4,'p_rangestmt','parser.py',108),
  ('RangeStmt -> RANGE Expr','RangeStmt',2,'p_rangestmt','parser.py',109),
  ('ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt','ForHeader',5,'p_forheader','parser.py',112),
  ('ForHeader -> OSimpleStmt','ForHeader',1,'p_forheader','parser.py',113),
  ('ForHeader -> RangeStmt','ForHeader',1,'p_forheader','parser.py',114),
  ('ForBody -> ForHeader LoopBody','ForBody',2,'p_forbody','parser.py',117),
  ('ForStmt -> FOR ForBody','ForStmt',2,'p_forstmt','parser.py',121),
  ('IfHeader -> OSimpleStmt','IfHeader',1,'p_ifheader','parser.py',125),
  ('IfHeader -> OSimpleStmt SEMICOL OSimpleStmt','IfHeader',3,'p_ifheader','parser.py',126),
  ('IfStmt -> IF IfHeader LoopBody ElseIfList Else','IfStmt',5,'p_ifstmt','parser.py',129),
  ('ElseIf -> ELSE IF IfHeader LoopBody','ElseIf',4,'p_elseif','parser.py',132),
  ('ElseIfList -> empty','ElseIfList',1,'p_elseiflist','parser.py',135),
  ('ElseIfList -> ElseIfList ElseIf','ElseIfList',2,'p_elseiflist','parser.py',136),
  ('Else -> empty','Else',1,'p_else','parser.py',139),
  ('Else -> ELSE CompoundStmt','Else',2,'p_else','parser.py',140),
  ('NType -> FuncType','NType',1,'p_ntype','parser.py',143),
  ('NType -> OtherType','NType',1,'p_ntype','parser.py',144),
  ('NType -> PtrType','NType',1,'p_ntype','parser.py',145),
  ('NType -> DotName','NType',1,'p_ntype','parser.py',146),
  ('NType -> LPAREN NType RPAREN','NType',3,'p_ntype','parser.py',147),
  ('NonExprType -> FuncType','NonExprType',1,'p_nonexprtype','parser.py',150),
  ('NonExprType -> OtherType','NonExprType',1,'p_nonexprtype','parser.py',151),
  ('NonExprType -> TIMES NonExprType','NonExprType',2,'p_nonexprtype','parser.py',152),
  ('OtherType -> LBRACK OExpr RBRACK NType','OtherType',4,'p_othertype','parser.py',155),
  ('OtherType -> MAP LBRACK NType RBRACK NType','OtherType',5,'p_othertype','parser.py',156),
  ('OtherType -> StructType','OtherType',1,'p_othertype','parser.py',157),
  ('OtherType -> InterfaceType','OtherType',1,'p_othertype','parser.py',158),
  ('StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE','StructType',5,'p_structtype','parser.py',161),
  ('StructType -> STRUCT LBRACE RBRACE','StructType',3,'p_structtype','parser.py',162),
  ('InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE','InterfaceType',5,'p_interfacetype','parser.py',165),
  ('InterfaceType -> INTERFACE LBRACE RBRACE','InterfaceType',3,'p_interfacetype','parser.py',166),
  ('FuncDecl -> FUNCTION FuncDecl_ FuncBody','FuncDecl',3,'p_funcdec1','parser.py',170),
  ('FuncDecl_ -> IDENTIFIER ArgList FuncRes','FuncDecl_',3,'p_funcdec1_','parser.py',173),
  ('FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes','FuncDecl_',6,'p_funcdec1_','parser.py',174),
  ('FuncType -> FUNCTION ArgList FuncRes','FuncType',3,'p_functype','parser.py',177),
  ('ArgList -> LPAREN OArgTypeListOComma RPAREN','ArgList',3,'p_arglist','parser.py',180),
  ('ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN','ArgList',4,'p_arglist','parser.py',181),
  ('FuncBody -> empty','FuncBody',1,'p_funcbody','parser.py',184),
  ('FuncBody -> LBRACE StmtList RBRACE','FuncBody',3,'p_funcbody','parser.py',185),
  ('FuncRes -> empty','FuncRes',1,'p_funcres','parser.py',188),
  ('FuncRes -> FuncRetType','FuncRes',1,'p_funcres','parser.py',189),
  ('FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT','FuncRes',3,'p_funcres','parser.py',190),
  ('StructDeclList -> StructDecl','StructDeclList',1,'p_structdeclist','parser.py',193),
  ('StructDeclList -> StructDeclList SEMICOL StructDecl','StructDeclList',3,'p_structdeclist','parser.py',194),
  ('InterfaceDeclList -> InterfaceDecl','InterfaceDeclList',1,'p_interfacedec1list','parser.py',197),
  ('InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl','InterfaceDeclList',3,'p_interfacedec1list','parser.py',198),
  ('StructDecl -> NewNameList NType OLiteral','StructDecl',3,'p_structdec1','parser.py',201),
  ('StructDecl -> Embed OLiteral','StructDecl',2,'p_structdec1','parser.py',202),
  ('StructDecl -> LPAREN Embed RPAREN OLiteral','StructDecl',4,'p_structdec1','parser.py',203),
  ('StructDecl -> TIMES Embed OLiteral','StructDecl',3,'p_structdec1','parser.py',204),
  ('StructDecl -> LPAREN TIMES Embed RPAREN OLiteral','StructDecl',5,'p_structdec1','parser.py',205),
  ('StructDecl -> TIMES LPAREN Embed RPAREN OLiteral','StructDecl',5,'p_structdec1','parser.py',206),
  ('InterfaceDecl -> NewName InDecl','InterfaceDecl',2,'p_interfacedec1','parser.py',209),
  ('InterfaceDecl -> IDENTIFIER','InterfaceDecl',1,'p_interfacedec1','parser.py',210),
  ('InterfaceDecl -> LPAREN IDENTIFIER RPAREN','InterfaceDecl',3,'p_interfacedec1','parser.py',211),
  ('InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes','InDecl',4,'p_indecl','parser.py',214),
  ('LabelName -> NewName','LabelName',1,'p_labelname','parser.py',217),
  ('NewName -> IDENTIFIER','NewName',1,'p_newname','parser.py',220),
  ('PtrType -> TIMES NType','PtrType',2,'p_ptrtype','parser.py',223),
  ('FuncRetType -> FuncType','FuncRetType',1,'p_funcrettype','parser.py',226),
  ('FuncRetType -> OtherType','FuncRetType',1,'p_funcrettype','parser.py',227),
  ('FuncRetType -> PtrType','FuncRetType',1,'p_funcrettype','parser.py',228),
  ('FuncRetType -> DotName','FuncRetType',1,'p_funcrettype','parser.py',229),
  ('DotName -> Name','DotName',1,'p_dotname','parser.py',232),
  ('DotName -> Name DOT IDENTIFIER','DotName',3,'p_dotname','parser.py',233),
  ('OComma -> empty','OComma',1,'p_ocomma','parser.py',236),
  ('OComma -> COMMA','OComma',1,'p_ocomma','parser.py',237),
  ('OSemi -> empty','OSemi',1,'p_osemi','parser.py',240),
  ('OSemi -> SEMICOL','OSemi',1,'p_osemi','parser.py',241),
  ('OSimpleStmt -> empty','OSimpleStmt',1,'p_osimplestmt','parser.py',244),
  ('OSimpleStmt -> SimpleStmt','OSimpleStmt',1,'p_osimplestmt','parser.py',245),
  ('ONewName -> empty','ONewName',1,'p_onewname','parser.py',248),
  ('ONewName -> NewName','ONewName',1,'p_onewname','parser.py',249),
  ('OExpr -> empty','OExpr',1,'p_oexpr','parser.py',252),
  ('OExpr -> Expr','OExpr',1,'p_oexpr','parser.py',253),
  ('OExprList -> empty','OExprList',1,'p_oexprlist','parser.py',256),
  ('OExprList -> ExprList','OExprList',1,'p_oexprlist','parser.py',257),
  ('FuncLiteralDecl -> FuncType','FuncLiteralDecl',1,'p_funcliteraldecl','parser.py',260),
  ('FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE','FuncLiteral',4,'p_funcliteral','parser.py',263),
  ('ExprList -> Expr','ExprList',1,'p_exprlist','parser.py',266),
  ('ExprList -> ExprList COMMA Expr','ExprList',3,'p_exprlist','parser.py',267),
  ('ExprOrTypeList -> ExprOrType','ExprOrTypeList',1,'p_exprortypelist','parser.py',270),
  ('ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType','ExprOrTypeList',3,'p_exprortypelist','parser.py',271),
  ('OLiteral -> empty','OLiteral',1,'p_oliteral','parser.py',274),
  ('OLiteral -> Literal','OLiteral',1,'p_oliteral','parser.py',275),
  ('Literal -> INTEGER','Literal',1,'p_literal','parser.py',278),
  ('Literal -> FLOAT','Literal',1,'p_literal','parser.py',279),
  ('Literal -> STRING','Literal',1,'p_literal','parser.py',280),
  ('Embed -> IDENTIFIER','Embed',1,'p_embed','parser.py',283),
  ('DeclList -> empty','DeclList',1,'p_dec1list','parser.py',286),
  ('DeclList -> DeclList Declaration SEMICOL','DeclList',3,'p_dec1list','parser.py',287),
  ('VarDeclList -> VarDecl','VarDeclList',1,'p_var_dec_list','parser.py',290),
  ('VarDeclList -> VarDeclList SEMICOL VarDecl','VarDeclList',3,'p_var_dec_list','parser.py',291),
  ('ConstDeclList -> ConstDecl1','ConstDeclList',1,'p_const_dec_list','parser.py',293),
  ('ConstDeclList -> ConstDeclList SEMICOL ConstDecl1','ConstDeclList',3,'p_const_dec_list','parser.py',294),
  ('TypeDeclList -> TypeDecl','TypeDeclList',1,'p_type_decl_list','parser.py',296),
  ('TypeDeclList -> TypeDeclList SEMICOL TypeDecl','TypeDeclList',3,'p_type_decl_list','parser.py',297),
  ('DeclNameList -> DeclName','DeclNameList',1,'p_decl_name_list','parser.py',299),
  ('DeclNameList -> DeclNameList COMMA DeclName','DeclNameList',3,'p_decl_name_list','parser.py',300),
  ('StmtList -> Stmt','StmtList',1,'p_stmtlist','parser.py',302),
  ('StmtList -> StmtList SEMICOL Stmt','StmtList',3,'p_stmtlist','parser.py',303),
  ('NewNameList -> NewName','NewNameList',1,'p_newnamelist','parser.py',305),
  ('NewNameList -> NewNameList COMMA NewName','NewNameList',3,'p_newnamelist','parser.py',306),
  ('KeyvalList -> Keyval','KeyvalList',1,'p_keyvallist','parser.py',308),
  ('KeyvalList -> BareCompLitExpr','KeyvalList',1,'p_keyvallist','parser.py',309),
  ('KeyvalList -> KeyvalList COMMA Keyval','KeyvalList',3,'p_keyvallist','parser.py',310),
  ('KeyvalList -> KeyvalList COMMA BareCompLitExpr','KeyvalList',3,'p_keyvallist','parser.py',311),
  ('BracedKeyvalList -> empty','BracedKeyvalList',1,'p_bracedkeyvallist','parser.py',313),
  ('BracedKeyvalList -> KeyvalList OComma','BracedKeyvalList',2,'p_bracedkeyvallist','parser.py',314),
  ('DeclName -> IDENTIFIER','DeclName',1,'p_declname','parser.py',316),
  ('Name -> IDENTIFIER','Name',1,'p_name','parser.py',318),
  ('ArgType -> NameOrType','ArgType',1,'p_argtype','parser.py',320),
  ('ArgType -> IDENTIFIER NameOrType','ArgType',2,'p_argtype','parser.py',321),
  ('ArgType -> IDENTIFIER DotDotDot','ArgType',2,'p_argtype','parser.py',322),
  ('ArgType -> DotDotDot','ArgType',1,'p_argtype','parser.py',323),
  ('ArgTypeList -> ArgType','ArgTypeList',1,'p_argtypelist','parser.py',325),
  ('ArgTypeList -> ArgTypeList COMMA ArgType','ArgTypeList',3,'p_argtypelist','parser.py',326),
  ('OArgTypeListOComma -> empty','OArgTypeListOComma',1,'p_oargtypelistocomma','parser.py',328),
  ('OArgTypeListOComma -> ArgTypeList OComma','OArgTypeListOComma',2,'p_oargtypelistocomma','parser.py',329),
  ('Stmt -> empty','Stmt',1,'p_stmt','parser.py',332),
  ('Stmt -> CompoundStmt','Stmt',1,'p_stmt','parser.py',333),
  ('Stmt -> CommonDecl','Stmt',1,'p_stmt','parser.py',334),
  ('Stmt -> NonDeclStmt','Stmt',1,'p_stmt','parser.py',335),
  ('NonDeclStmt -> SimpleStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',337),
  ('NonDeclStmt -> ForStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',338),
  ('NonDeclStmt -> SwitchStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',339),
  ('NonDeclStmt -> IfStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',340),
  ('NonDeclStmt -> LabelName COLON Stmt','NonDeclStmt',3,'p_nondeclstmt','parser.py',341),
  ('NonDeclStmt -> FALLTHROUGH','NonDeclStmt',1,'p_nondeclstmt','parser.py',342),
  ('NonDeclStmt -> BREAK ONewName','NonDeclStmt',2,'p_nondeclstmt','parser.py',343),
  ('NonDeclStmt -> CONTINUE ONewName','NonDeclStmt',2,'p_nondeclstmt','parser.py',344),
  ('NonDeclStmt -> DEFER PseudoCall','NonDeclStmt',2,'p_nondeclstmt','parser.py',345),
  ('NonDeclStmt -> GOTO NewName','NonDeclStmt',2,'p_nondeclstmt','parser.py',346),
  ('NonDeclStmt -> RETURN OExprList','NonDeclStmt',2,'p_nondeclstmt','parser.py',347),
  ('DotDotDot -> DDD','DotDotDot',1,'p_dotdotdot','parser.py',349),
  ('DotDotDot -> DDD NType','DotDotDot',2,'p_dotdotdot','parser.py',350),
  ('PExpr -> PExprNoParen','PExpr',1,'p_pexpr','parser.py',352),
  ('PExpr -> LPAREN ExprOrType RPAREN','PExpr',3,'p_pexpr','parser.py',353),
  ('PExprNoParen -> Literal','PExprNoParen',1,'p_pexprnoparen','parser.py',355),
  ('PExprNoParen -> Name','PExprNoParen',1,'p_pexprnoparen','parser.py',356),
  ('PExprNoParen -> PExpr DOT IDENTIFIER','PExprNoParen',3,'p_pexprnoparen','parser.py',357),
  ('PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN','PExprNoParen',5,'p_pexprnoparen','parser.py',358),
  ('PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN','PExprNoParen',5,'p_pexprnoparen','parser.py',359),
  ('PExprNoParen -> PExpr LBRACK Expr RBRACK','PExprNoParen',4,'p_pexprnoparen','parser.py',360),
  ('PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK','PExprNoParen',6,'p_pexprnoparen','parser.py',361),
  ('PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK','PExprNoParen',8,'p_pexprnoparen','parser.py',362),
  ('PExprNoParen -> PseudoCall','PExprNoParen',1,'p_pexprnoparen','parser.py',363),
  ('PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE','PExprNoParen',5,'p_pexprnoparen','parser.py',364),
  ('PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','PExprNoParen',4,'p_pexprnoparen','parser.py',365),
  ('PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','PExprNoParen',4,'p_pexprnoparen','parser.py',366),
  ('PExprNoParen -> FuncLiteral','PExprNoParen',1,'p_pexprnoparen','parser.py',367),
  ('PExprNoParen -> ForCompExpr','PExprNoParen',1,'p_pexprnoparen','parser.py',368),
  ('ConvType -> FuncType','ConvType',1,'p_convtype','parser.py',370),
  ('ConvType -> OtherType','ConvType',1,'p_convtype','parser.py',371),
  ('CompType -> OtherType','CompType',1,'p_comptype','parser.py',373),
  ('StartCompLit -> empty','StartCompLit',1,'p_startcomplit','parser.py',378),
  ('Keyval -> Expr COLON CompLitExpr','Keyval',3,'p_keyval','parser.py',381),
  ('BareCompLitExpr -> Expr','BareCompLitExpr',1,'p_barecomplitexpr','parser.py',383),
  ('BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','BareCompLitExpr',3,'p_barecomplitexpr','parser.py',384),
  ('CompLitExpr -> Expr','CompLitExpr',1,'p_complitexpr','parser.py',386),
  ('CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','CompLitExpr',3,'p_complitexpr','parser.py',387),
  ('ExprOrType -> Expr','ExprOrType',1,'p_exportype','parser.py',389),
  ('ExprOrType -> NonExprType','ExprOrType',1,'p_exportype','parser.py',390),
  ('NameOrType -> NType','NameOrType',1,'p_nameortype','parser.py',392),
  ('SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE','SwitchStmt',5,'p_switchstmt','parser.py',394),
  ('Prec5Expr_ -> UExpr','Prec5Expr_',1,'p_prec5expr_','parser.py',397),
  ('Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',398),
  ('Prec5Expr_ -> Prec5Expr_ MOD UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',399),
  ('Prec5Expr_ -> Prec5Expr_ SHL UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',400),
  ('Prec5Expr_ -> Prec5Expr_ SHR UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',401),
  ('Prec5Expr_ -> Prec5Expr_ AMPERS UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',402),
  ('Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',403),
  ('Prec5Expr_ -> Prec5Expr_ TIMES UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',404),
  ('Prec4Expr_ -> Prec5Expr_','Prec4Expr_',1,'p_prec4expr_','parser.py',406),
  ('Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',407),
  ('Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',408),
  ('Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',409),
  ('Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',410),
  ('Prec3Expr_ -> Prec4Expr_','Prec3Expr_',1,'p_prec3expr_','parser.py',412),
  ('Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',413),
  ('Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',414),
  ('Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',415),
  ('Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',416),
  ('Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',417),
  ('Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',418),
  ('Prec2Expr_ -> Prec3Expr_','Prec2Expr_',1,'p_prec2expr_','parser.py',421),
  ('Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_','Prec2Expr_',3,'p_prec2expr_','parser.py',422),
  ('Expr -> Prec2Expr_','Expr',1,'p_expr','parser.py',424),
  ('Expr -> Expr OROR Prec2Expr_','Expr',3,'p_expr','parser.py',425),
  ('UExpr -> PExpr','UExpr',1,'p_uexpr','parser.py',427),
  ('UExpr -> AMPERS UExpr','UExpr',2,'p_uexpr','parser.py',428),
  ('UExpr -> NOT UExpr','UExpr',2,'p_uexpr','parser.py',429),
  ('UExpr -> TIMES UExpr','UExpr',2,'p_uexpr','parser.py',430),
  ('UExpr -> PLUS UExpr','UExpr',2,'p_uexpr','parser.py',431),
  ('UExpr -> MINUS UExpr','UExpr',2,'p_uexpr','parser.py',432),
  ('UExpr -> XOR UExpr','UExpr',2,'p_uexpr','parser.py',433),
  ('ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK','ForCompExpr',5,'p_forcompexpr','parser.py',435),
  ('PseudoCall -> PExpr LPAREN RPAREN','PseudoCall',3,'p_pseudocall','parser.py',438),
  ('PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN','PseudoCall',5,'p_pseudocall','parser.py',439),
  ('PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN','PseudoCall',6,'p_pseudocall','parser.py',440),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',443),
]
