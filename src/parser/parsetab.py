
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPAMP AMPCAR AMPCAREQ AMPEQ AMPERS AND_NOT BREAK CAREQ CASE CHAN COLON COLONEQ COMMA COMMENT CONSTANT CONSTANTS CONTINUE DDD DEFAULT DEFER DIVIDE DIVIDEEQ DOT ELSE EQEQ EQUAL FALLTHROUGH FLOAT FOR FUNCTION GEQ GO GOTO GREAT IDENTIFIER IF IMPORT INTEGER INTERFACE LBRACE LBRACK LEFT_ANGLE LEFT_LEFT LEFT_OR LEQ LESS LMINUS LPAREN MAP MINUS MINUSEQ MINUSMIN MOD MODEQ NOT NOTEQ OR OREQ OROR OR_RIGHT PACKAGE PIPE PLUS PLUSEQ PLUSPLUS RANGE RBRACE RBRACK RETURN RIGHT_ANGLE RIGHT_RIGHT RPAREN SELECT SEMICOL SHL SHL_ASSIGN SHR SHR_ASSIGN STRING STRUCT SWITCH TIMES TIMESEQ TYPE VAR XORstart : SourceFileSourceFile : PackageClause Imports DeclListPackageClause : PACKAGE IDENTIFIER SEMICOLImports : \n           | Imports Import SEMICOLImport : IMPORT ImportStmt\n           | IMPORT LPAREN ImportStmtList OSemi RPAREN\n           | IMPORT LPAREN RPARENImportStmt : ImportHere STRINGImportStmtList : ImportStmt\n               | ImportStmtList SEMICOL ImportStmtImportHere : \n           | IDENTIFIER\n           | DOTDeclaration : CommonDecl\n            | FuncDecl\n            | NonDeclStmt\n            | errorCommonDecl : CONSTANT ConstDecl\n           | CONSTANT LPAREN ConstDecl OSemi RPAREN\n           | CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN\n           | CONSTANT LPAREN RPAREN\n           | VAR VarDecl\n           | VAR LPAREN VarDeclList OSemi RPAREN\n           | VAR LPAREN RPAREN\n           | TYPE TypeDecl\n           | TYPE LPAREN TypeDeclList OSemi RPAREN\n           | TYPE LPAREN RPARENVarDecl   : DeclNameList NType\n          | DeclNameList NType EQUAL ExprList\n          | DeclNameList EQUAL ExprListConstDecl : DeclNameList NType EQUAL ExprList\n          | DeclNameList EQUAL ExprListConstDecl1 : ConstDecl\n           | DeclNameList NType\n           | DeclNameListTypeDeclName : IDENTIFIERTypeDecl : TypeDeclName NTypeSimpleStmt : Expr\n           | Expr PLUSEQ Expr\n           | Expr MINUSEQ Expr\n           | Expr TIMESEQ Expr\n           | Expr DIVIDEEQ Expr\n           | Expr MODEQ Expr\n           | Expr OREQ Expr\n           | Expr AMPEQ Expr\n           | Expr CAREQ Expr\n           | Expr SHL_ASSIGN Expr\n           | Expr SHR_ASSIGN Expr\n           | Expr AMPCAREQ Expr\n           | ExprList EQUAL ExprList\n           | ExprList COLONEQ ExprList\n           | Expr PLUSPLUS\n           | Expr MINUSMINCase : CASE ExprOrTypeList COLON\n     | CASE ExprOrTypeList EQUAL Expr COLON\n     | CASE ExprOrTypeList COLONEQ Expr COLON\n     | DEFAULT COLONCompoundStmt : LBRACE StmtList RBRACECaseBlock : Case StmtListCaseBlockList : \n                   | CaseBlockList CaseBlockLoopBody : LBRACE StmtList RBRACERangeStmt : ExprList EQUAL RANGE Expr\n               | ExprList COLONEQ RANGE Expr\n               | RANGE ExprForHeader : OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt\n               | OSimpleStmt\n               | RangeStmtForBody : ForHeader LoopBodyForStmt : FOR ForBodyIfHeader : OSimpleStmt\n           | OSimpleStmt SEMICOL OSimpleStmtIfStmt : IF IfHeader LoopBody ElseIfList ElseElseIf : ELSE IF IfHeader LoopBodyElseIfList : \n                | ElseIfList ElseIfElse : \n          | ELSE CompoundStmtNType : FuncType\n           |  OtherType\n           |  PtrType\n           |  DotName\n           |  LPAREN NType RPARENNonExprType : FuncType\n                 | OtherType\n                 | TIMES NonExprTypeOtherType : LBRACK OExpr RBRACK NType\n               | MAP LBRACK NType RBRACK NType\n               | StructType\n               | InterfaceTypeStructType : STRUCT LBRACE StructDeclList OSemi RBRACE\n                | STRUCT LBRACE RBRACEInterfaceType : INTERFACE LBRACE InterfaceDeclList OSemi RBRACE\n                   | INTERFACE LBRACE RBRACEFuncDecl : FUNCTION FuncDecl_ FuncBodyFuncDecl_ : IDENTIFIER ArgList FuncRes\n               | LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncResFuncType : FUNCTION ArgList FuncResArgList : LPAREN OArgTypeListOComma RPAREN\n             | ArgList LPAREN OArgTypeListOComma RPARENFuncBody : \n              | LBRACE StmtList RBRACEFuncRes : \n             | FuncRetType\n             | LEFT_OR OArgTypeListOComma OR_RIGHTStructDeclList : StructDecl\n                    | StructDeclList SEMICOL StructDeclInterfaceDeclList : InterfaceDecl\n                       | InterfaceDeclList SEMICOL InterfaceDeclStructDecl : NewNameList NType OLiteral\n                | Embed OLiteral\n                | LPAREN Embed RPAREN OLiteral\n                | TIMES Embed OLiteral\n                | LPAREN TIMES Embed RPAREN OLiteral\n                | TIMES LPAREN Embed RPAREN OLiteralInterfaceDecl : NewName InDecl\n                   | IDENTIFIER\n                   | LPAREN IDENTIFIER RPARENInDecl : LPAREN OArgTypeListOComma RPAREN FuncResLabelName : NewNameNewName : IDENTIFIERPtrType : TIMES NTypeFuncRetType : FuncType\n                 | OtherType\n                 | PtrType\n                 | DotNameDotName : Name\n             | Name DOT IDENTIFIEROComma : \n            | COMMAOSemi : \n           | SEMICOLOSimpleStmt : \n                 | SimpleStmtONewName : \n              | NewNameOExpr : \n           | ExprOExprList : \n               | ExprListFuncLiteralDecl : FuncTypeFuncLiteral : FuncLiteralDecl LBRACE StmtList RBRACEExprList : Expr\n              | ExprList COMMA ExprExprOrTypeList : ExprOrType\n                    | ExprOrTypeList COMMA ExprOrTypeOLiteral : \n              | LiteralLiteral : INTEGER\n             | FLOAT\n             | STRINGEmbed : IDENTIFIERDeclList : \n              | DeclList Declaration SEMICOLVarDeclList : VarDecl \n                   | VarDeclList SEMICOL VarDeclConstDeclList : ConstDecl1\n                     | ConstDeclList SEMICOL ConstDecl1TypeDeclList : TypeDecl\n                    | TypeDeclList SEMICOL TypeDeclDeclNameList : DeclName\n                    | DeclNameList COMMA DeclNameStmtList : Stmt\n                | StmtList SEMICOL StmtNewNameList : NewName\n                   | NewNameList COMMA NewNameKeyvalList : Keyval\n                  | BareCompLitExpr\n                  | KeyvalList COMMA Keyval\n                  | KeyvalList COMMA BareCompLitExprBracedKeyvalList : \n                        | KeyvalList OCommaDeclName : IDENTIFIERName : IDENTIFIERArgType : NameOrType\n               | IDENTIFIER NameOrType\n               | IDENTIFIER DotDotDot\n               | DotDotDotArgTypeList : ArgType\n                   | ArgTypeList COMMA ArgTypeOArgTypeListOComma : \n                          | ArgTypeList OCommaStmt : \n            | CompoundStmt\n            | CommonDecl\n            | NonDeclStmtNonDeclStmt : SimpleStmt\n                   | ForStmt\n                   | SwitchStmt\n                   | IfStmt\n                   | LabelName COLON Stmt\n                   | FALLTHROUGH\n                   | BREAK ONewName\n                   | CONTINUE ONewName\n                   | DEFER PseudoCall\n                   | GOTO NewName\n                   | RETURN OExprListDotDotDot : DDD\n                 | DDD NTypePExpr : PExprNoParen\n             | LPAREN ExprOrType RPARENPExprNoParen : Literal\n                    | Name\n                    | PExpr DOT IDENTIFIER\n                    | PExpr DOT LPAREN ExprOrType RPAREN\n                    | PExpr DOT LPAREN TYPE RPAREN\n                    | PExpr LBRACK Expr RBRACK\n                    | PExpr LBRACK OExpr COLON OExpr RBRACK\n                    | PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK\n                    | PseudoCall\n                    | ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE\n                    | CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT\n                    | PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT\n                    | FuncLiteral\n                    | ForCompExprConvType : FuncType\n                | OtherTypeCompType : OtherTypeKeyval : Expr COLON CompLitExprBareCompLitExpr : Expr\n                       | LEFT_LEFT BracedKeyvalList RIGHT_RIGHTCompLitExpr : Expr\n                   | LEFT_LEFT BracedKeyvalList RIGHT_RIGHTExprOrType : Expr\n                  | NonExprTypeNameOrType : NTypeSwitchStmt : SWITCH IfHeader LBRACE CaseBlockList RBRACEPrec5Expr_ : UExpr\n                  | Prec5Expr_ DIVIDE UExpr\n                  | Prec5Expr_ MOD UExpr\n                  | Prec5Expr_ SHL UExpr\n                  | Prec5Expr_ SHR UExpr\n                  | Prec5Expr_ AMPERS UExpr\n                  | Prec5Expr_ AMPCAR UExpr\n                  | Prec5Expr_ TIMES UExprPrec4Expr_ : Prec5Expr_\n                  | Prec4Expr_ PLUS Prec5Expr_\n                  | Prec4Expr_ MINUS Prec5Expr_\n                  | Prec4Expr_ XOR Prec5Expr_\n                  | Prec4Expr_ OR Prec5Expr_Prec3Expr_ : Prec4Expr_\n                  | Prec3Expr_ EQEQ Prec4Expr_\n                  | Prec3Expr_ NOTEQ Prec4Expr_\n                  | Prec3Expr_ LEQ Prec4Expr_\n                  | Prec3Expr_ GEQ Prec4Expr_\n                  | Prec3Expr_ GREAT Prec4Expr_\n                  | Prec3Expr_ LESS Prec4Expr_\n                  Prec2Expr_ : Prec3Expr_\n                  | Prec2Expr_ AMPAMP Prec3Expr_Expr : Prec2Expr_\n            | Expr OROR Prec2Expr_UExpr : PExpr\n             | AMPERS UExpr\n             | NOT UExpr\n             | TIMES UExpr\n             | PLUS UExpr\n             | MINUS UExpr\n             | XOR UExprForCompExpr : LBRACK Expr PIPE RangeStmt RBRACKPseudoCall : PExpr LPAREN RPAREN\n                  | PExpr LPAREN ExprOrTypeList OComma RPAREN\n                  | PExpr LPAREN ExprOrTypeList DDD OComma RPAREN'
    
_lr_action_items = {'OROR':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,64,70,84,86,89,112,129,135,140,141,168,169,175,183,184,185,186,187,188,189,195,196,197,198,199,200,201,202,219,227,228,229,230,254,271,277,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,315,325,362,363,368,385,406,407,415,424,430,433,434,456,458,477,478,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,154,-151,-175,-258,-257,-254,154,154,-255,154,-259,-256,154,-246,-245,-243,-248,-247,-244,154,-233,-230,-235,-234,-236,-232,-231,-250,154,-240,-241,-238,-239,154,154,154,-261,-205,-252,154,154,154,154,154,154,154,154,154,154,154,-202,154,-143,154,-213,-208,-214,-212,154,154,-260,154,-262,-206,-207,-209,-263,154,154,-210,]),'DIVIDE':([11,20,30,34,37,39,40,41,47,52,57,62,70,84,86,89,112,140,168,169,195,196,197,198,199,200,201,227,228,229,230,281,284,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,92,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,-151,-175,-258,-257,-254,-255,-259,-256,-233,-230,-235,-234,-236,-232,-231,92,92,92,92,-261,-205,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'GREAT':([11,12,20,28,30,34,37,39,40,41,47,52,57,62,70,84,86,89,112,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,81,-237,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,-151,-175,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,81,-240,-241,-238,-239,-261,-205,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'SEMICOL':([6,9,11,12,17,20,21,28,29,30,31,32,34,36,37,39,40,41,43,45,47,48,49,50,51,52,54,55,56,57,59,60,62,63,64,68,70,74,84,86,87,89,90,99,100,101,102,111,112,117,118,122,125,127,129,131,137,138,139,140,141,142,143,144,148,153,162,166,168,169,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,213,215,216,219,220,221,223,224,227,228,229,230,232,233,234,235,237,238,239,240,250,251,255,256,257,258,259,262,263,264,265,266,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,300,302,306,307,308,309,314,315,316,319,320,321,329,333,336,341,342,345,349,355,362,363,368,371,373,374,378,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,408,409,410,412,413,414,415,418,420,430,433,434,435,436,439,441,443,444,445,448,449,451,452,454,456,458,459,460,461,462,463,464,465,466,467,470,475,476,479,480,481,482,],[10,76,-215,-249,-193,-237,-251,-242,-15,-152,-16,-191,-150,-134,-211,-203,-229,-216,-190,-136,-201,-140,-134,146,-91,-175,-90,-136,-18,-253,-188,-189,-204,-17,-39,-134,-151,-6,-175,-258,-196,-257,-184,-184,-174,-162,-23,-19,-254,-104,-102,251,-71,-135,-39,-26,-137,-122,-195,-255,-144,-141,-198,269,-194,-197,-54,-53,-259,-256,-9,-8,310,-10,-246,-245,-243,-248,-247,-244,-192,-186,-184,-185,-187,-233,-230,-235,-234,-236,-232,-231,-250,-164,316,-25,-156,317,-80,-82,-83,-81,-128,-29,-145,-52,-51,-22,328,-240,-241,-238,-239,-124,-126,-125,-99,-127,-105,-184,-96,-104,-134,-70,-184,-95,-109,346,-118,-160,351,-28,-38,-261,-205,-252,-47,-42,-40,-44,-49,-45,-41,-46,-50,-48,-43,-202,-76,-107,379,-153,-148,-93,316,-143,-184,-31,-123,-163,-33,316,-100,-97,405,316,-117,-88,-213,-208,-214,-78,-148,-153,-148,-149,-112,-11,-7,-212,-59,-165,-157,-24,-129,-30,-84,-89,-20,447,-36,-158,-34,-32,-101,-106,-103,-63,-110,-94,-119,-161,-27,-260,-184,-228,-262,-206,-207,-74,-77,-114,-148,-111,-108,-92,-35,-104,-104,316,-58,-209,-263,-79,-134,-148,-148,-113,-21,-159,-98,-120,-55,-116,-115,-210,-75,-56,-57,]),'CONSTANT':([1,5,7,10,76,90,99,146,192,239,256,316,418,454,470,481,482,],[-4,-154,26,-3,-5,26,26,-155,26,26,26,26,26,-58,-55,-56,-57,]),'CAREQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,64,70,84,86,89,112,129,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,155,-151,-175,-258,-257,-254,155,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'AMPCAR':([11,20,30,34,37,39,40,41,47,52,57,62,70,84,86,89,112,140,168,169,195,196,197,198,199,200,201,227,228,229,230,281,284,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,93,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,-151,-175,-258,-257,-254,-255,-259,-256,-233,-230,-235,-234,-236,-232,-231,93,93,93,93,-261,-205,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'LESS':([11,12,20,28,30,34,37,39,40,41,47,52,57,62,70,84,86,89,112,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,80,-237,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,-151,-175,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,80,-240,-241,-238,-239,-261,-205,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'EQEQ':([11,12,20,28,30,34,37,39,40,41,47,52,57,62,70,84,86,89,112,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,79,-237,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,-151,-175,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,79,-240,-241,-238,-239,-261,-205,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'EQUAL':([11,12,20,21,24,28,30,34,37,39,40,41,47,51,52,54,57,62,64,70,84,86,89,100,101,104,110,112,117,124,129,140,141,168,169,170,173,174,175,183,184,185,186,187,188,195,196,197,198,199,200,201,202,208,210,211,213,215,216,219,226,227,228,229,230,232,233,234,235,237,238,257,280,281,284,285,297,298,309,315,320,321,336,354,355,362,363,368,385,390,392,393,396,400,401,410,415,430,431,433,434,445,448,453,456,458,479,],[-215,-249,-237,-251,107,-242,-152,-150,-211,-203,-229,-216,-201,-91,-175,-90,-253,-204,-144,-151,-175,-258,-257,-174,-162,209,225,-254,-104,252,-144,-255,-144,-259,-256,-85,-226,-86,-225,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-80,-82,-83,-81,-128,323,-145,330,-240,-241,-238,-239,-124,-126,-125,-99,-127,-105,-95,-146,-261,-205,-252,-202,-87,-93,-143,-123,-163,-100,416,-88,-213,-208,-214,-212,-129,-84,-89,225,-101,-106,-94,-260,-262,-147,-206,-207,-92,330,468,-209,-263,-210,]),'SHL_ASSIGN':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,64,70,84,86,89,112,129,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,165,-151,-175,-258,-257,-254,165,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'RIGHT_ANGLE':([11,12,20,21,28,30,34,37,39,40,41,47,57,62,70,84,86,89,112,140,168,169,183,184,185,186,187,188,189,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,312,313,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-253,-204,-151,-175,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-130,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,385,-131,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'COLON':([11,12,19,20,21,28,30,33,34,37,39,40,41,47,51,52,54,57,62,70,84,86,89,112,117,140,149,168,169,170,173,174,175,183,184,185,186,187,188,195,196,197,198,199,200,201,202,208,210,211,213,215,227,228,229,230,232,233,234,235,237,238,257,271,277,278,280,281,284,285,297,298,309,315,320,325,336,355,362,363,364,368,385,390,392,393,400,401,410,415,421,429,430,431,433,434,445,453,456,458,477,478,479,],[-215,-249,90,-237,-251,-242,-152,-121,-150,-211,-203,-229,-216,-201,-91,-122,-90,-253,-204,-151,-175,-258,-257,-254,-104,-255,-138,-259,-256,-85,-226,-86,-225,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-80,-82,-83,-81,-128,-240,-241,-238,-239,-124,-126,-125,-99,-127,-105,-95,358,-139,364,-146,-261,-205,-252,-202,-87,-93,-143,-123,-139,-100,-88,-213,-208,-138,-214,-212,-129,-84,-89,-101,-106,-94,-260,454,457,-262,-147,-206,-207,-92,470,-209,-263,481,482,-210,]),'COLONEQ':([11,12,20,21,24,28,30,34,37,39,40,41,47,51,52,54,57,62,64,70,84,86,89,112,117,124,129,140,141,168,169,170,173,174,175,183,184,185,186,187,188,195,196,197,198,199,200,201,202,208,210,211,213,215,219,227,228,229,230,232,233,234,235,237,238,257,280,281,284,285,297,298,309,315,320,336,354,355,362,363,368,385,390,392,393,400,401,410,415,430,431,433,434,445,453,456,458,479,],[-215,-249,-237,-251,106,-242,-152,-150,-211,-203,-229,-216,-201,-91,-175,-90,-253,-204,-144,-151,-175,-258,-257,-254,-104,253,-144,-255,-144,-259,-256,-85,-226,-86,-225,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-80,-82,-83,-81,-128,-145,-240,-241,-238,-239,-124,-126,-125,-99,-127,-105,-95,-146,-261,-205,-252,-202,-87,-93,-143,-123,-100,417,-88,-213,-208,-214,-212,-129,-84,-89,-101,-106,-94,-260,-262,-147,-206,-207,-92,469,-209,-263,-210,]),'AMPAMP':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,70,84,86,89,112,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,98,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,-151,-175,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,98,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'RETURN':([1,5,7,10,76,90,99,146,192,239,256,316,418,454,470,481,482,],[-4,-154,48,-3,-5,48,48,-155,48,48,48,48,48,-58,-55,-56,-57,]),'MINUS':([1,5,7,10,11,15,18,20,27,28,30,34,36,37,39,40,41,44,46,47,48,49,52,57,62,65,66,67,68,70,76,77,78,79,80,81,82,83,84,86,89,90,91,92,93,94,95,96,97,98,99,105,106,107,112,113,114,115,116,126,140,146,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,168,169,172,176,183,184,185,186,187,188,192,195,196,197,198,199,200,201,209,218,225,227,228,229,230,239,251,252,253,256,267,269,272,281,283,284,297,315,316,323,330,343,344,358,360,362,363,364,366,368,385,405,415,418,419,425,430,433,434,454,456,457,458,460,468,469,470,471,479,481,482,],[-4,-154,15,-3,-215,15,15,-237,15,116,-152,-150,15,-211,-203,-229,-216,15,15,-201,15,15,-175,-253,-204,15,15,15,15,-151,-5,15,15,15,15,15,15,15,-175,-258,-257,15,15,15,15,15,15,15,15,15,15,15,15,15,-254,15,15,15,15,15,-255,-155,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-259,-256,15,15,116,116,116,116,116,116,15,-233,-230,-235,-234,-236,-232,-231,15,15,15,-240,-241,-238,-239,15,15,15,15,15,15,15,15,-261,15,-205,-202,-143,15,15,15,15,15,15,15,-213,-208,15,15,-214,-212,15,-260,15,15,15,-262,-206,-207,-58,-209,15,-263,15,15,15,-55,15,-210,-56,-57,]),'DOT':([8,11,30,34,37,39,41,47,52,57,62,70,73,84,87,88,215,246,281,284,297,310,315,362,363,368,385,415,430,433,434,456,458,479,],[75,-215,-152,-150,-211,-203,-216,-201,-175,152,-204,-151,75,-175,-211,152,322,-175,-261,-205,-202,75,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'GOTO':([1,5,7,10,76,90,99,146,192,239,256,316,418,454,470,481,482,],[-4,-154,61,-3,-5,61,61,-155,61,61,61,61,61,-58,-55,-56,-57,]),'CASE':([11,12,17,20,21,28,30,32,34,37,39,40,41,43,45,47,48,51,52,54,55,57,59,60,62,64,70,84,86,87,89,90,102,111,112,117,125,131,137,138,139,140,141,142,143,148,153,162,166,168,169,183,184,185,186,187,188,190,191,193,194,195,196,197,198,199,200,201,202,203,205,208,210,211,213,215,216,219,220,221,223,227,228,229,230,232,233,234,235,237,238,255,257,265,266,270,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,300,309,315,316,319,320,329,336,355,357,362,363,368,371,385,386,387,389,390,391,392,393,394,399,400,401,408,410,414,415,418,420,422,430,433,434,435,436,445,452,454,456,458,459,464,470,479,480,481,482,],[-215,-249,-193,-237,-251,-242,-152,-191,-150,-211,-203,-229,-216,-190,-136,-201,-140,-91,-175,-90,-136,-253,-188,-189,-204,-39,-151,-175,-258,-196,-257,-184,-23,-19,-254,-104,-71,-26,-137,-122,-195,-255,-144,-141,-198,-194,-197,-54,-53,-259,-256,-246,-245,-243,-248,-247,-244,-192,-186,-185,-187,-233,-230,-235,-234,-236,-232,-231,-250,-164,-25,-80,-82,-83,-81,-128,-29,-145,-52,-51,-22,-240,-241,-238,-239,-124,-126,-125,-99,-127,-105,-70,-95,-28,-38,-61,-261,-205,-252,-47,-42,-40,-44,-49,-45,-41,-46,-50,-48,-43,-202,-76,-93,-143,-184,-31,-123,-33,-100,-88,419,-213,-208,-214,-78,-212,-59,-165,-24,-129,-30,-84,-89,-20,-32,-101,-106,-63,-94,-27,-260,-184,-228,-62,-262,-206,-207,-74,-77,-92,-60,-58,-209,-263,-79,-21,-55,-210,-75,-56,-57,]),'DEFER':([1,5,7,10,76,90,99,146,192,239,256,316,418,454,470,481,482,],[-4,-154,16,-3,-5,16,16,-155,16,16,16,16,16,-58,-55,-56,-57,]),'GEQ':([11,12,20,28,30,34,37,39,40,41,47,52,57,62,70,84,86,89,112,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,77,-237,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,-151,-175,-258,-257,-254,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,77,-240,-241,-238,-239,-261,-205,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'RPAREN':([11,12,20,21,28,30,34,37,39,40,41,47,51,54,57,62,70,73,84,86,89,100,101,103,109,112,117,119,132,140,141,150,168,169,170,171,173,174,175,179,181,182,183,184,185,186,187,188,195,196,197,198,199,200,201,202,206,207,208,210,211,213,215,216,219,224,227,228,229,230,231,232,233,234,235,237,238,241,242,243,244,245,246,247,248,257,263,264,266,279,280,281,284,285,297,298,309,310,311,313,315,317,318,319,320,321,324,327,328,329,331,334,335,336,337,338,339,348,350,351,352,355,362,363,365,366,367,368,369,370,374,376,383,385,388,390,391,392,393,395,396,397,398,399,400,401,403,410,411,413,415,430,431,432,433,434,438,440,445,446,447,448,456,458,465,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-91,-90,-253,-204,-151,180,-175,-258,-257,-174,-162,205,223,-254,-104,-182,265,-255,-144,281,-259,-256,-85,297,-226,-86,-225,-9,-132,-10,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-156,-132,-80,-82,-83,-81,-128,-29,-145,-132,-240,-241,-238,-239,-182,-124,-126,-125,-99,-127,-105,-130,-180,336,-179,-176,-175,-227,-199,-95,-160,-132,-38,-130,-146,-261,-205,-252,-202,-87,-93,-133,384,-131,-143,-133,389,-31,-123,-163,392,394,-133,-33,400,-131,-183,-100,-178,-177,-200,-182,412,-133,414,-88,-213,-208,430,-131,-130,-214,433,434,-153,441,-11,-212,-157,-129,-30,-84,-89,-132,-36,-158,-34,-32,-101,-106,-181,-94,451,-161,-260,-262,-147,458,-206,-207,461,462,-92,464,-133,-35,-209,-263,-159,-210,]),'MINUSMIN':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,64,70,84,86,89,112,129,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,162,-151,-175,-258,-257,-254,162,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'TIMESEQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,64,70,84,86,89,112,129,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,156,-151,-175,-258,-257,-254,156,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'FALLTHROUGH':([1,5,7,10,76,90,99,146,192,239,256,316,418,454,470,481,482,],[-4,-154,17,-3,-5,17,17,-155,17,17,17,17,17,-58,-55,-56,-57,]),'RIGHT_RIGHT':([11,12,20,21,28,30,34,37,39,40,41,47,57,62,70,84,86,89,112,140,147,151,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,271,272,273,274,275,276,281,282,284,285,297,315,359,360,361,362,363,368,385,415,423,424,425,426,427,428,430,433,434,455,456,458,472,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-253,-204,-151,-175,-258,-257,-254,-255,-172,-172,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-221,-172,-130,-168,362,-169,-261,368,-205,-252,-202,-143,426,-131,-173,-213,-208,-214,-212,-260,-220,-223,-172,-222,-170,-171,-262,-206,-207,472,-209,-263,-224,-210,]),'MODEQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,64,70,84,86,89,112,129,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,158,-151,-175,-258,-257,-254,158,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'PIPE':([11,12,20,21,28,30,34,37,39,40,41,47,57,62,70,84,86,89,112,135,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,299,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-253,-204,-151,-175,-258,-257,-254,267,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,267,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'MINUSEQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,64,70,84,86,89,112,129,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,161,-151,-175,-258,-257,-254,161,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'SWITCH':([1,5,7,10,76,90,99,146,192,239,256,316,418,454,470,481,482,],[-4,-154,49,-3,-5,49,49,-155,49,49,49,49,49,-58,-55,-56,-57,]),'AMPCAREQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,64,70,84,86,89,112,129,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,164,-151,-175,-258,-257,-254,164,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'PLUS':([1,5,7,10,11,15,18,20,27,28,30,34,36,37,39,40,41,44,46,47,48,49,52,57,62,65,66,67,68,70,76,77,78,79,80,81,82,83,84,86,89,90,91,92,93,94,95,96,97,98,99,105,106,107,112,113,114,115,116,126,140,146,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,168,169,172,176,183,184,185,186,187,188,192,195,196,197,198,199,200,201,209,218,225,227,228,229,230,239,251,252,253,256,267,269,272,281,283,284,297,315,316,323,330,343,344,358,360,362,363,364,366,368,385,405,415,418,419,425,430,433,434,454,456,457,458,460,468,469,470,471,479,481,482,],[-4,-154,18,-3,-215,18,18,-237,18,115,-152,-150,18,-211,-203,-229,-216,18,18,-201,18,18,-175,-253,-204,18,18,18,18,-151,-5,18,18,18,18,18,18,18,-175,-258,-257,18,18,18,18,18,18,18,18,18,18,18,18,18,-254,18,18,18,18,18,-255,-155,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-259,-256,18,18,115,115,115,115,115,115,18,-233,-230,-235,-234,-236,-232,-231,18,18,18,-240,-241,-238,-239,18,18,18,18,18,18,18,18,-261,18,-205,-202,-143,18,18,18,18,18,18,18,-213,-208,18,18,-214,-212,18,-260,18,18,18,-262,-206,-207,-58,-209,18,-263,18,18,18,-55,18,-210,-56,-57,]),'INTEGER':([1,5,7,10,15,16,18,27,36,44,46,48,49,51,54,65,66,67,68,76,77,78,79,80,81,82,83,84,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,117,126,146,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,208,209,210,211,213,215,218,225,232,233,234,235,237,238,239,251,252,253,256,257,267,269,272,283,307,308,309,316,320,323,330,336,343,344,355,358,360,364,366,373,374,378,390,392,393,400,401,405,410,418,419,425,441,445,454,457,460,461,462,468,469,470,471,481,482,],[-4,-154,34,-3,34,34,34,34,34,34,34,34,34,-91,-90,34,34,34,34,-5,34,34,34,34,34,34,34,-175,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-104,34,-155,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-80,34,-82,-83,-81,-128,34,34,-124,-126,-125,-99,-127,-105,34,34,34,34,34,-95,34,34,34,34,-153,34,-93,34,-123,34,34,-100,34,34,-88,34,34,34,34,34,-153,34,-129,-84,-89,-101,-106,34,-94,34,34,34,34,-92,-58,34,34,34,34,34,34,-55,34,-56,-57,]),'IDENTIFIER':([1,2,5,7,8,10,15,16,18,23,26,27,35,36,42,44,45,46,48,49,55,61,65,66,67,68,73,76,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,113,114,115,116,117,119,120,126,130,132,133,134,138,146,147,149,150,151,152,154,155,156,157,158,159,160,161,163,164,165,167,172,176,178,192,209,212,214,217,218,225,231,236,239,246,248,250,251,252,253,256,261,267,268,269,272,283,301,303,304,305,307,310,316,317,321,322,323,326,328,330,334,336,340,343,344,346,348,351,358,360,364,366,372,375,377,379,396,400,405,418,419,425,442,447,449,451,454,457,460,468,469,470,471,481,482,],[-4,6,-154,52,72,-3,84,84,84,100,100,84,121,84,134,84,138,84,84,84,138,138,84,84,84,84,72,-5,84,84,84,84,84,84,84,52,84,84,84,84,84,84,84,84,52,-174,-162,100,84,84,84,84,84,100,84,84,84,84,84,84,246,246,84,262,134,84,-37,-122,-155,84,84,84,84,284,84,84,84,84,84,84,84,84,84,84,84,84,84,84,307,52,84,84,100,84,84,84,246,246,52,84,84,84,84,84,84,52,350,84,84,84,84,84,-166,374,374,84,-122,72,52,100,-163,390,84,84,100,84,246,-100,404,84,84,262,246,134,84,84,84,84,374,374,138,307,84,-101,84,52,84,84,-167,100,84,84,-58,84,84,84,84,-55,84,-56,-57,]),'LEFT_ANGLE':([13,14,51,54,58,84,117,170,174,208,210,211,213,215,232,233,234,235,237,238,257,309,320,336,355,390,392,393,400,401,410,445,],[83,-218,-91,-90,-217,-175,-104,-217,-218,-80,-82,-83,-81,-128,-124,-126,-125,-99,-127,-105,-95,-93,-123,-100,-88,-129,-84,-89,-101,-106,-94,-92,]),'SHR_ASSIGN':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,64,70,84,86,89,112,129,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,159,-151,-175,-258,-257,-254,159,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'OREQ':([11,12,20,21,28,30,34,37,39,40,41,47,52,57,62,64,70,84,86,89,112,129,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,202,227,228,229,230,281,284,285,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,160,-151,-175,-258,-257,-254,160,-255,-259,-256,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-240,-241,-238,-239,-261,-205,-252,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'$enderror':([1,5,7,10,76,146,],[-4,-154,56,-3,-5,-155,]),'INTERFACE':([1,5,7,10,15,16,18,27,36,44,46,48,49,65,66,67,68,76,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,110,113,114,115,116,117,119,120,126,133,134,138,146,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,212,217,218,225,231,236,239,246,248,250,251,252,253,256,267,268,269,272,283,301,305,307,316,321,323,326,330,334,336,343,344,348,358,360,364,366,396,400,405,418,419,425,442,449,451,454,457,460,468,469,470,471,481,482,],[-4,-154,38,-3,38,38,38,38,38,38,38,38,38,38,38,38,38,-5,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-174,-162,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-37,-122,-155,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-166,38,-122,38,-163,38,38,38,38,-100,38,38,38,38,38,38,38,38,-101,38,38,38,38,-167,38,38,-58,38,38,38,38,-55,38,-56,-57,]),'DDD':([11,12,20,21,28,30,34,37,39,40,41,47,51,54,57,62,70,84,86,89,112,117,119,120,140,168,169,170,173,174,175,183,184,185,186,187,188,195,196,197,198,199,200,201,202,208,210,211,213,215,227,228,229,230,231,232,233,234,235,236,237,238,246,257,279,280,281,284,285,297,298,309,315,320,334,336,348,355,362,363,368,385,390,392,393,400,401,410,415,430,431,433,434,445,456,458,479,],[-215,-249,-237,-251,-242,-152,-150,-211,-203,-229,-216,-201,-91,-90,-253,-204,-151,-175,-258,-257,-254,-104,248,248,-255,-259,-256,-85,-226,-86,-225,-246,-245,-243,-248,-247,-244,-233,-230,-235,-234,-236,-232,-231,-250,-80,-82,-83,-81,-128,-240,-241,-238,-239,248,-124,-126,-125,-99,248,-127,-105,248,-95,367,-146,-261,-205,-252,-202,-87,-93,-143,-123,248,-100,248,-88,-213,-208,-214,-212,-129,-84,-89,-101,-106,-94,-260,-262,-147,-206,-207,-92,-209,-263,-210,]),'COMMA':([11,12,20,21,24,28,30,34,37,39,40,41,47,51,52,54,57,62,64,70,84,86,89,100,101,104,110,112,117,124,129,138,140,141,142,168,169,170,173,174,175,183,184,185,186,187,188,189,195,196,197,198,199,200,201,202,208,210,211,213,215,219,220,221,227,228,229,230,232,233,234,235,237,238,241,242,244,245,246,247,248,257,271,273,274,276,279,280,281,284,285,297,298,301,305,307,309,315,319,320,321,329,336,337,338,339,354,355,362,363,367,368,385,390,391,392,393,396,399,400,401,403,410,415,423,424,426,427,428,430,431,433,434,442,445,453,456,458,472,479,],[-215,-249,-237,-251,105,-242,-152,-150,-211,-203,-229,-216,-201,-91,-175,-90,-253,-204,-144,-151,-175,-258,-257,-174,-162,214,214,-254,-104,105,-144,-122,-255,-144,105,-259,-256,-85,-226,-86,-225,-246,-245,-243,-248,-247,-244,313,-233,-230,-235,-234,-236,-232,-231,-250,-80,-82,-83,-81,-128,-145,105,105,-240,-241,-238,-239,-124,-126,-125,-99,-127,-105,334,-180,-179,-176,-175,-227,-199,-95,-221,360,-168,-169,366,-146,-261,-205,-252,-202,-87,-166,377,-122,-93,-143,105,-123,-163,105,-100,-178,-177,-200,105,-88,-213,-208,313,-214,-212,-129,105,-84,-89,214,105,-101,-106,-181,-94,-260,-220,-223,-222,-170,-171,-262,-147,-206,-207,-167,-92,471,-209,-263,-224,-210,]),'TYPE':([1,5,7,10,76,90,99,146,192,239,256,283,316,418,454,470,481,482,],[-4,-154,42,-3,-5,42,42,-155,42,42,42,370,42,42,-58,-55,-56,-57,]),'OR':([11,20,28,30,34,37,39,40,41,47,52,57,62,70,84,86,89,112,140,168,169,183,184,185,186,187,188,195,196,197,198,199,200,201,227,228,229,230,281,284,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,-237,114,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,-151,-175,-258,-257,-254,-255,-259,-256,114,114,114,114,114,114,-233,-230,-235,-234,-236,-232,-231,-240,-241,-238,-239,-261,-205,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),'MOD':([11,20,30,34,37,39,40,41,47,52,57,62,70,84,86,89,112,140,168,169,195,196,197,198,199,200,201,227,228,229,230,281,284,297,315,362,363,368,385,415,430,433,434,456,458,479,],[-215,97,-152,-150,-211,-203,-229,-216,-201,-175,-253,-204,-151,-175,-258,-257,-254,-255,-259,-256,-233,-230,-235,-234,-236,-232,-231,97,97,97,97,-261,-205,-202,-143,-213,-208,-214,-212,-260,-262,-206,-207,-209,-263,-210,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FuncLiteral':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'DeclName':([23,26,103,109,214,317,328,447,],[101,101,101,101,321,101,101,101,]),'OSimpleStmt':([36,49,68,251,269,405,460,],[122,144,144,342,356,450,144,]),'Prec3Expr_':([7,36,44,48,49,67,68,83,90,98,99,105,106,107,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[12,12,12,12,12,12,12,12,12,202,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'ConvType':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'IfStmt':([7,90,99,192,239,256,316,418,],[32,32,32,32,32,32,32,32,]),'DotDotDot':([119,120,231,236,246,334,348,],[244,244,244,244,337,244,244,]),'NonExprType':([67,150,172,283,366,419,471,],[173,173,298,173,173,173,173,]),'Stmt':([90,99,192,239,256,316,418,],[190,203,203,203,203,387,203,]),'FuncDecl_':([35,],[118,]),'InterfaceType':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,110,113,114,115,116,117,119,120,126,133,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,212,217,218,225,231,236,239,246,248,250,251,252,253,256,267,268,269,272,283,305,316,323,326,330,334,343,344,348,358,360,364,366,396,405,418,419,425,449,451,457,460,468,469,471,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'LabelName':([7,90,99,192,239,256,316,418,],[19,19,19,19,19,19,19,19,]),'Prec5Expr_':([7,36,44,48,49,67,68,77,78,79,80,81,82,83,90,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,227,228,229,230,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'InterfaceDeclList':([130,],[259,]),'Prec2Expr_':([7,36,44,48,49,67,68,83,90,99,105,106,107,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,285,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'FuncLiteralDecl':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ONewName':([45,55,],[139,148,]),'RangeStmt':([36,267,],[123,353,]),'InDecl':([260,],[349,]),'Embed':([178,303,304,372,375,379,],[308,373,376,438,440,308,]),'DotName':([104,108,110,117,119,120,133,212,217,231,236,246,248,250,268,305,326,334,348,396,449,451,],[211,211,211,237,211,211,211,211,211,211,211,211,211,237,211,211,211,211,211,211,237,237,]),'ExprList':([7,36,48,49,68,90,99,106,107,192,209,225,239,251,252,253,256,267,269,316,323,330,405,418,460,],[24,124,142,24,24,24,24,220,221,24,319,329,24,24,221,220,24,354,24,24,391,399,24,24,24,]),'CaseBlock':([357,],[422,]),'ExprOrTypeList':([150,419,],[279,453,]),'Keyval':([147,151,272,360,425,],[274,274,274,427,274,]),'FuncBody':([118,],[240,]),'VarDecl':([23,103,317,],[102,206,388,]),'IfHeader':([49,68,460,],[145,177,474,]),'TypeDeclList':([132,],[264,]),'CompoundStmt':([90,99,192,239,256,316,418,437,],[193,193,193,193,193,193,193,459,]),'ForBody':([36,],[125,]),'SourceFile':([0,],[3,]),'Prec4Expr_':([7,36,44,48,49,67,68,77,78,79,80,81,82,83,90,98,99,105,106,107,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[28,28,28,28,28,28,28,183,184,185,186,187,188,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ArgTypeList':([119,120,231,236,348,],[241,241,241,241,241,]),'CaseBlockList':([270,],[357,]),'PtrType':([104,108,110,117,119,120,133,212,217,231,236,246,248,250,268,305,326,334,348,396,449,451,],[210,210,210,233,210,210,210,210,210,210,210,210,210,233,210,210,210,210,210,210,233,233,]),'DeclNameList':([23,26,103,109,317,328,447,],[104,110,104,110,104,396,396,]),'ExprOrType':([67,150,283,366,419,471,],[171,280,369,431,280,431,]),'PackageClause':([0,],[1,]),'OArgTypeListOComma':([119,120,231,236,348,],[243,249,331,332,411,]),'FuncDecl':([7,],[31,]),'OtherType':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,110,113,114,115,116,117,119,120,126,133,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,212,217,218,225,231,236,239,246,248,250,251,252,253,256,267,268,269,272,283,305,316,323,326,330,334,343,344,348,358,360,364,366,396,405,418,419,425,449,451,457,460,468,469,471,],[14,14,14,14,14,14,14,14,14,14,14,14,174,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,213,14,14,14,213,213,14,14,14,14,234,213,213,14,213,14,14,174,14,14,14,14,14,14,14,14,14,14,14,14,14,174,14,14,14,213,213,14,14,213,213,14,213,213,234,14,14,14,14,14,213,14,14,174,213,14,14,213,14,213,14,14,213,14,14,14,174,213,14,14,174,14,234,234,14,14,14,14,174,]),'StructDeclList':([178,],[306,]),'NewName':([7,45,55,61,90,99,130,178,192,239,256,316,346,377,379,418,],[33,137,137,153,33,33,260,301,33,33,33,33,260,442,301,33,]),'PseudoCall':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[37,37,87,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'PExpr':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[57,57,88,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'OExprList':([48,],[143,]),'UExpr':([7,15,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[40,86,89,112,40,40,140,40,40,168,169,40,40,40,40,40,40,40,40,40,40,195,196,197,198,199,200,201,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,169,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'ForCompExpr':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'InterfaceDecl':([130,346,],[258,409,]),'ConstDecl':([26,109,328,447,],[111,224,398,398,]),'SwitchStmt':([7,90,99,192,239,256,316,418,],[43,43,43,43,43,43,43,43,]),'VarDeclList':([103,],[207,]),'ElseIf':([371,],[436,]),'PExprNoParen':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'BracedKeyvalList':([147,151,272,425,],[275,282,359,455,]),'Literal':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,218,225,239,251,252,253,256,267,269,272,283,308,316,323,330,343,344,358,360,364,366,373,378,405,418,419,425,441,457,460,461,462,468,469,471,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,381,39,39,39,39,39,39,39,39,39,381,381,39,39,39,39,381,39,39,381,381,39,39,39,]),'Import':([5,],[9,]),'ConstDeclList':([328,],[395,]),'OComma':([189,241,273,279,367,],[312,335,361,365,432,]),'NameOrType':([119,120,231,236,246,334,348,],[245,245,245,245,338,245,245,]),'start':([0,],[4,]),'Declaration':([7,],[50,]),'CompLitExpr':([358,],[423,]),'OLiteral':([308,373,378,441,461,462,],[382,439,443,463,475,476,]),'CompType':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,105,106,107,113,114,115,116,126,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'LoopBody':([128,177,474,],[255,300,480,]),'StructType':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,110,113,114,115,116,117,119,120,126,133,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,212,217,218,225,231,236,239,246,248,250,251,252,253,256,267,268,269,272,283,305,316,323,326,330,334,343,344,348,358,360,364,366,396,405,418,419,425,449,451,457,460,468,469,471,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'DeclList':([5,],[7,]),'NType':([104,108,110,119,120,133,212,217,231,236,246,248,268,305,326,334,348,396,],[216,222,226,247,247,266,320,324,247,247,247,339,355,378,393,247,247,448,]),'ImportStmtList':([73,],[181,]),'ArgType':([119,120,231,236,334,348,],[242,242,242,242,403,242,]),'OExpr':([44,149,176,218,364,457,],[136,278,136,136,429,473,]),'Imports':([1,],[5,]),'NewNameList':([178,379,],[305,305,]),'FuncRetType':([117,250,449,451,],[238,238,238,238,]),'ElseIfList':([300,],[371,]),'StructDecl':([178,379,],[302,444,]),'FuncType':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,110,113,114,115,116,117,119,120,126,133,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,212,217,218,225,231,236,239,246,248,250,251,252,253,256,267,268,269,272,283,305,316,323,326,330,334,343,344,348,358,360,364,366,396,405,418,419,425,449,451,457,460,468,469,471,],[58,58,58,58,58,58,58,58,58,58,58,58,170,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,208,58,58,58,208,208,58,58,58,58,232,208,208,58,208,58,58,170,58,58,58,58,58,58,58,58,58,58,58,58,58,170,58,58,58,208,208,58,58,208,208,58,208,208,232,58,58,58,58,58,208,58,58,170,208,58,58,208,58,208,58,58,208,58,58,58,170,208,58,58,170,58,232,232,58,58,58,58,170,]),'SimpleStmt':([7,36,49,68,90,99,192,239,251,256,269,316,405,418,460,],[59,127,127,127,59,59,59,59,127,59,127,59,127,59,127,]),'ForStmt':([7,90,99,192,239,256,316,418,],[60,60,60,60,60,60,60,60,]),'StmtList':([99,192,239,256,418,],[204,314,333,345,452,]),'CommonDecl':([7,90,99,192,239,256,316,418,],[29,191,191,191,191,191,191,191,]),'ImportHere':([8,73,310,],[71,71,71,]),'ImportStmt':([8,73,310,],[74,182,383,]),'ConstDecl1':([328,447,],[397,465,]),'Else':([371,],[435,]),'TypeDeclName':([42,132,351,],[133,133,133,]),'ForHeader':([36,],[128,]),'OSemi':([181,207,224,259,264,306,395,],[311,318,327,347,352,380,446,]),'Case':([357,],[418,]),'TypeDecl':([42,132,351,],[131,263,413,]),'Name':([7,15,16,18,27,36,44,46,48,49,65,66,67,68,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,110,113,114,115,116,117,119,120,126,133,147,149,150,151,154,155,156,157,158,159,160,161,163,164,165,167,172,176,192,209,212,217,218,225,231,236,239,246,248,250,251,252,253,256,267,268,269,272,283,305,316,323,326,330,334,343,344,348,358,360,364,366,396,405,418,419,425,449,451,457,460,468,469,471,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,215,62,62,62,215,215,62,62,62,62,215,215,215,62,215,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,215,215,62,62,215,215,62,215,215,215,62,62,62,62,62,215,62,62,62,215,62,62,215,62,215,62,62,215,62,62,62,62,215,62,62,62,62,215,215,62,62,62,62,62,]),'NonDeclStmt':([7,90,99,192,239,256,316,418,],[63,194,194,194,194,194,194,194,]),'Expr':([7,36,44,48,49,67,68,83,90,99,105,106,107,126,147,149,150,151,155,156,157,158,159,160,161,163,164,165,167,176,192,209,218,225,239,251,252,253,256,267,269,272,283,316,323,330,343,344,358,360,364,366,405,418,419,425,457,460,468,469,471,],[64,129,135,141,64,175,64,189,64,64,219,141,141,254,271,277,175,271,286,287,288,289,290,291,292,293,294,295,296,299,64,141,325,141,64,64,141,141,64,141,64,271,175,64,141,141,406,407,424,271,325,175,64,64,175,271,325,64,477,478,175,]),'FuncRes':([117,250,449,451,],[235,341,466,467,]),'ArgList':([35,85,121,404,],[117,117,250,449,]),'KeyvalList':([147,151,272,425,],[273,273,273,273,]),'BareCompLitExpr':([147,151,272,360,425,],[276,276,276,428,276,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',12),
  ('SourceFile -> PackageClause Imports DeclList','SourceFile',3,'p_sourcefile','parser.py',14),
  ('PackageClause -> PACKAGE IDENTIFIER SEMICOL','PackageClause',3,'p_packegeclause','parser.py',17),
  ('Imports -> <empty>','Imports',0,'p_imports','parser.py',19),
  ('Imports -> Imports Import SEMICOL','Imports',3,'p_imports','parser.py',20),
  ('Import -> IMPORT ImportStmt','Import',2,'p_import','parser.py',22),
  ('Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN','Import',5,'p_import','parser.py',23),
  ('Import -> IMPORT LPAREN RPAREN','Import',3,'p_import','parser.py',24),
  ('ImportStmt -> ImportHere STRING','ImportStmt',2,'p_importstmt','parser.py',26),
  ('ImportStmtList -> ImportStmt','ImportStmtList',1,'p_importstmtlist','parser.py',28),
  ('ImportStmtList -> ImportStmtList SEMICOL ImportStmt','ImportStmtList',3,'p_importstmtlist','parser.py',29),
  ('ImportHere -> <empty>','ImportHere',0,'p_importhere','parser.py',32),
  ('ImportHere -> IDENTIFIER','ImportHere',1,'p_importhere','parser.py',33),
  ('ImportHere -> DOT','ImportHere',1,'p_importhere','parser.py',34),
  ('Declaration -> CommonDecl','Declaration',1,'p_declaration','parser.py',37),
  ('Declaration -> FuncDecl','Declaration',1,'p_declaration','parser.py',38),
  ('Declaration -> NonDeclStmt','Declaration',1,'p_declaration','parser.py',39),
  ('Declaration -> error','Declaration',1,'p_declaration','parser.py',40),
  ('CommonDecl -> CONSTANT ConstDecl','CommonDecl',2,'p_commondecl','parser.py',42),
  ('CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN','CommonDecl',5,'p_commondecl','parser.py',43),
  ('CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN','CommonDecl',7,'p_commondecl','parser.py',44),
  ('CommonDecl -> CONSTANT LPAREN RPAREN','CommonDecl',3,'p_commondecl','parser.py',45),
  ('CommonDecl -> VAR VarDecl','CommonDecl',2,'p_commondecl','parser.py',46),
  ('CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN','CommonDecl',5,'p_commondecl','parser.py',47),
  ('CommonDecl -> VAR LPAREN RPAREN','CommonDecl',3,'p_commondecl','parser.py',48),
  ('CommonDecl -> TYPE TypeDecl','CommonDecl',2,'p_commondecl','parser.py',49),
  ('CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN','CommonDecl',5,'p_commondecl','parser.py',50),
  ('CommonDecl -> TYPE LPAREN RPAREN','CommonDecl',3,'p_commondecl','parser.py',51),
  ('VarDecl -> DeclNameList NType','VarDecl',2,'p_vardecl','parser.py',54),
  ('VarDecl -> DeclNameList NType EQUAL ExprList','VarDecl',4,'p_vardecl','parser.py',55),
  ('VarDecl -> DeclNameList EQUAL ExprList','VarDecl',3,'p_vardecl','parser.py',56),
  ('ConstDecl -> DeclNameList NType EQUAL ExprList','ConstDecl',4,'p_constdecl','parser.py',59),
  ('ConstDecl -> DeclNameList EQUAL ExprList','ConstDecl',3,'p_constdecl','parser.py',60),
  ('ConstDecl1 -> ConstDecl','ConstDecl1',1,'p_constdecl1','parser.py',63),
  ('ConstDecl1 -> DeclNameList NType','ConstDecl1',2,'p_constdecl1','parser.py',64),
  ('ConstDecl1 -> DeclNameList','ConstDecl1',1,'p_constdecl1','parser.py',65),
  ('TypeDeclName -> IDENTIFIER','TypeDeclName',1,'p_typedeclname','parser.py',67),
  ('TypeDecl -> TypeDeclName NType','TypeDecl',2,'p_typedecl','parser.py',70),
  ('SimpleStmt -> Expr','SimpleStmt',1,'p_simplestmt','parser.py',73),
  ('SimpleStmt -> Expr PLUSEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',74),
  ('SimpleStmt -> Expr MINUSEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',75),
  ('SimpleStmt -> Expr TIMESEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',76),
  ('SimpleStmt -> Expr DIVIDEEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',77),
  ('SimpleStmt -> Expr MODEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',78),
  ('SimpleStmt -> Expr OREQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',79),
  ('SimpleStmt -> Expr AMPEQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',80),
  ('SimpleStmt -> Expr CAREQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',81),
  ('SimpleStmt -> Expr SHL_ASSIGN Expr','SimpleStmt',3,'p_simplestmt','parser.py',82),
  ('SimpleStmt -> Expr SHR_ASSIGN Expr','SimpleStmt',3,'p_simplestmt','parser.py',83),
  ('SimpleStmt -> Expr AMPCAREQ Expr','SimpleStmt',3,'p_simplestmt','parser.py',84),
  ('SimpleStmt -> ExprList EQUAL ExprList','SimpleStmt',3,'p_simplestmt','parser.py',85),
  ('SimpleStmt -> ExprList COLONEQ ExprList','SimpleStmt',3,'p_simplestmt','parser.py',86),
  ('SimpleStmt -> Expr PLUSPLUS','SimpleStmt',2,'p_simplestmt','parser.py',87),
  ('SimpleStmt -> Expr MINUSMIN','SimpleStmt',2,'p_simplestmt','parser.py',88),
  ('Case -> CASE ExprOrTypeList COLON','Case',3,'p_case','parser.py',90),
  ('Case -> CASE ExprOrTypeList EQUAL Expr COLON','Case',5,'p_case','parser.py',91),
  ('Case -> CASE ExprOrTypeList COLONEQ Expr COLON','Case',5,'p_case','parser.py',92),
  ('Case -> DEFAULT COLON','Case',2,'p_case','parser.py',93),
  ('CompoundStmt -> LBRACE StmtList RBRACE','CompoundStmt',3,'p_compoundstmt','parser.py',96),
  ('CaseBlock -> Case StmtList','CaseBlock',2,'p_caseblock','parser.py',99),
  ('CaseBlockList -> <empty>','CaseBlockList',0,'p_caseblocklist','parser.py',102),
  ('CaseBlockList -> CaseBlockList CaseBlock','CaseBlockList',2,'p_caseblocklist','parser.py',103),
  ('LoopBody -> LBRACE StmtList RBRACE','LoopBody',3,'p_loopbody','parser.py',106),
  ('RangeStmt -> ExprList EQUAL RANGE Expr','RangeStmt',4,'p_rangestmt','parser.py',110),
  ('RangeStmt -> ExprList COLONEQ RANGE Expr','RangeStmt',4,'p_rangestmt','parser.py',111),
  ('RangeStmt -> RANGE Expr','RangeStmt',2,'p_rangestmt','parser.py',112),
  ('ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt','ForHeader',5,'p_forheader','parser.py',115),
  ('ForHeader -> OSimpleStmt','ForHeader',1,'p_forheader','parser.py',116),
  ('ForHeader -> RangeStmt','ForHeader',1,'p_forheader','parser.py',117),
  ('ForBody -> ForHeader LoopBody','ForBody',2,'p_forbody','parser.py',120),
  ('ForStmt -> FOR ForBody','ForStmt',2,'p_forstmt','parser.py',124),
  ('IfHeader -> OSimpleStmt','IfHeader',1,'p_ifheader','parser.py',128),
  ('IfHeader -> OSimpleStmt SEMICOL OSimpleStmt','IfHeader',3,'p_ifheader','parser.py',129),
  ('IfStmt -> IF IfHeader LoopBody ElseIfList Else','IfStmt',5,'p_ifstmt','parser.py',132),
  ('ElseIf -> ELSE IF IfHeader LoopBody','ElseIf',4,'p_elseif','parser.py',135),
  ('ElseIfList -> <empty>','ElseIfList',0,'p_elseiflist','parser.py',138),
  ('ElseIfList -> ElseIfList ElseIf','ElseIfList',2,'p_elseiflist','parser.py',139),
  ('Else -> <empty>','Else',0,'p_else','parser.py',142),
  ('Else -> ELSE CompoundStmt','Else',2,'p_else','parser.py',143),
  ('NType -> FuncType','NType',1,'p_ntype','parser.py',146),
  ('NType -> OtherType','NType',1,'p_ntype','parser.py',147),
  ('NType -> PtrType','NType',1,'p_ntype','parser.py',148),
  ('NType -> DotName','NType',1,'p_ntype','parser.py',149),
  ('NType -> LPAREN NType RPAREN','NType',3,'p_ntype','parser.py',150),
  ('NonExprType -> FuncType','NonExprType',1,'p_nonexprtype','parser.py',153),
  ('NonExprType -> OtherType','NonExprType',1,'p_nonexprtype','parser.py',154),
  ('NonExprType -> TIMES NonExprType','NonExprType',2,'p_nonexprtype','parser.py',155),
  ('OtherType -> LBRACK OExpr RBRACK NType','OtherType',4,'p_othertype','parser.py',158),
  ('OtherType -> MAP LBRACK NType RBRACK NType','OtherType',5,'p_othertype','parser.py',159),
  ('OtherType -> StructType','OtherType',1,'p_othertype','parser.py',160),
  ('OtherType -> InterfaceType','OtherType',1,'p_othertype','parser.py',161),
  ('StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE','StructType',5,'p_structtype','parser.py',164),
  ('StructType -> STRUCT LBRACE RBRACE','StructType',3,'p_structtype','parser.py',165),
  ('InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE','InterfaceType',5,'p_interfacetype','parser.py',168),
  ('InterfaceType -> INTERFACE LBRACE RBRACE','InterfaceType',3,'p_interfacetype','parser.py',169),
  ('FuncDecl -> FUNCTION FuncDecl_ FuncBody','FuncDecl',3,'p_funcdec1','parser.py',173),
  ('FuncDecl_ -> IDENTIFIER ArgList FuncRes','FuncDecl_',3,'p_funcdec1_','parser.py',176),
  ('FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes','FuncDecl_',6,'p_funcdec1_','parser.py',177),
  ('FuncType -> FUNCTION ArgList FuncRes','FuncType',3,'p_functype','parser.py',180),
  ('ArgList -> LPAREN OArgTypeListOComma RPAREN','ArgList',3,'p_arglist','parser.py',183),
  ('ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN','ArgList',4,'p_arglist','parser.py',184),
  ('FuncBody -> <empty>','FuncBody',0,'p_funcbody','parser.py',187),
  ('FuncBody -> LBRACE StmtList RBRACE','FuncBody',3,'p_funcbody','parser.py',188),
  ('FuncRes -> <empty>','FuncRes',0,'p_funcres','parser.py',191),
  ('FuncRes -> FuncRetType','FuncRes',1,'p_funcres','parser.py',192),
  ('FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT','FuncRes',3,'p_funcres','parser.py',193),
  ('StructDeclList -> StructDecl','StructDeclList',1,'p_structdeclist','parser.py',196),
  ('StructDeclList -> StructDeclList SEMICOL StructDecl','StructDeclList',3,'p_structdeclist','parser.py',197),
  ('InterfaceDeclList -> InterfaceDecl','InterfaceDeclList',1,'p_interfacedec1list','parser.py',200),
  ('InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl','InterfaceDeclList',3,'p_interfacedec1list','parser.py',201),
  ('StructDecl -> NewNameList NType OLiteral','StructDecl',3,'p_structdec1','parser.py',204),
  ('StructDecl -> Embed OLiteral','StructDecl',2,'p_structdec1','parser.py',205),
  ('StructDecl -> LPAREN Embed RPAREN OLiteral','StructDecl',4,'p_structdec1','parser.py',206),
  ('StructDecl -> TIMES Embed OLiteral','StructDecl',3,'p_structdec1','parser.py',207),
  ('StructDecl -> LPAREN TIMES Embed RPAREN OLiteral','StructDecl',5,'p_structdec1','parser.py',208),
  ('StructDecl -> TIMES LPAREN Embed RPAREN OLiteral','StructDecl',5,'p_structdec1','parser.py',209),
  ('InterfaceDecl -> NewName InDecl','InterfaceDecl',2,'p_interfacedec1','parser.py',212),
  ('InterfaceDecl -> IDENTIFIER','InterfaceDecl',1,'p_interfacedec1','parser.py',213),
  ('InterfaceDecl -> LPAREN IDENTIFIER RPAREN','InterfaceDecl',3,'p_interfacedec1','parser.py',214),
  ('InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes','InDecl',4,'p_indecl','parser.py',217),
  ('LabelName -> NewName','LabelName',1,'p_labelname','parser.py',220),
  ('NewName -> IDENTIFIER','NewName',1,'p_newname','parser.py',223),
  ('PtrType -> TIMES NType','PtrType',2,'p_ptrtype','parser.py',226),
  ('FuncRetType -> FuncType','FuncRetType',1,'p_funcrettype','parser.py',229),
  ('FuncRetType -> OtherType','FuncRetType',1,'p_funcrettype','parser.py',230),
  ('FuncRetType -> PtrType','FuncRetType',1,'p_funcrettype','parser.py',231),
  ('FuncRetType -> DotName','FuncRetType',1,'p_funcrettype','parser.py',232),
  ('DotName -> Name','DotName',1,'p_dotname','parser.py',235),
  ('DotName -> Name DOT IDENTIFIER','DotName',3,'p_dotname','parser.py',236),
  ('OComma -> <empty>','OComma',0,'p_ocomma','parser.py',239),
  ('OComma -> COMMA','OComma',1,'p_ocomma','parser.py',240),
  ('OSemi -> <empty>','OSemi',0,'p_osemi','parser.py',243),
  ('OSemi -> SEMICOL','OSemi',1,'p_osemi','parser.py',244),
  ('OSimpleStmt -> <empty>','OSimpleStmt',0,'p_osimplestmt','parser.py',247),
  ('OSimpleStmt -> SimpleStmt','OSimpleStmt',1,'p_osimplestmt','parser.py',248),
  ('ONewName -> <empty>','ONewName',0,'p_onewname','parser.py',251),
  ('ONewName -> NewName','ONewName',1,'p_onewname','parser.py',252),
  ('OExpr -> <empty>','OExpr',0,'p_oexpr','parser.py',255),
  ('OExpr -> Expr','OExpr',1,'p_oexpr','parser.py',256),
  ('OExprList -> <empty>','OExprList',0,'p_oexprlist','parser.py',259),
  ('OExprList -> ExprList','OExprList',1,'p_oexprlist','parser.py',260),
  ('FuncLiteralDecl -> FuncType','FuncLiteralDecl',1,'p_funcliteraldecl','parser.py',263),
  ('FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE','FuncLiteral',4,'p_funcliteral','parser.py',266),
  ('ExprList -> Expr','ExprList',1,'p_exprlist','parser.py',269),
  ('ExprList -> ExprList COMMA Expr','ExprList',3,'p_exprlist','parser.py',270),
  ('ExprOrTypeList -> ExprOrType','ExprOrTypeList',1,'p_exprortypelist','parser.py',273),
  ('ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType','ExprOrTypeList',3,'p_exprortypelist','parser.py',274),
  ('OLiteral -> <empty>','OLiteral',0,'p_oliteral','parser.py',277),
  ('OLiteral -> Literal','OLiteral',1,'p_oliteral','parser.py',278),
  ('Literal -> INTEGER','Literal',1,'p_literal','parser.py',281),
  ('Literal -> FLOAT','Literal',1,'p_literal','parser.py',282),
  ('Literal -> STRING','Literal',1,'p_literal','parser.py',283),
  ('Embed -> IDENTIFIER','Embed',1,'p_embed','parser.py',286),
  ('DeclList -> <empty>','DeclList',0,'p_dec1list','parser.py',289),
  ('DeclList -> DeclList Declaration SEMICOL','DeclList',3,'p_dec1list','parser.py',290),
  ('VarDeclList -> VarDecl','VarDeclList',1,'p_var_dec_list','parser.py',293),
  ('VarDeclList -> VarDeclList SEMICOL VarDecl','VarDeclList',3,'p_var_dec_list','parser.py',294),
  ('ConstDeclList -> ConstDecl1','ConstDeclList',1,'p_const_dec_list','parser.py',296),
  ('ConstDeclList -> ConstDeclList SEMICOL ConstDecl1','ConstDeclList',3,'p_const_dec_list','parser.py',297),
  ('TypeDeclList -> TypeDecl','TypeDeclList',1,'p_type_decl_list','parser.py',299),
  ('TypeDeclList -> TypeDeclList SEMICOL TypeDecl','TypeDeclList',3,'p_type_decl_list','parser.py',300),
  ('DeclNameList -> DeclName','DeclNameList',1,'p_decl_name_list','parser.py',302),
  ('DeclNameList -> DeclNameList COMMA DeclName','DeclNameList',3,'p_decl_name_list','parser.py',303),
  ('StmtList -> Stmt','StmtList',1,'p_stmtlist','parser.py',305),
  ('StmtList -> StmtList SEMICOL Stmt','StmtList',3,'p_stmtlist','parser.py',306),
  ('NewNameList -> NewName','NewNameList',1,'p_newnamelist','parser.py',308),
  ('NewNameList -> NewNameList COMMA NewName','NewNameList',3,'p_newnamelist','parser.py',309),
  ('KeyvalList -> Keyval','KeyvalList',1,'p_keyvallist','parser.py',311),
  ('KeyvalList -> BareCompLitExpr','KeyvalList',1,'p_keyvallist','parser.py',312),
  ('KeyvalList -> KeyvalList COMMA Keyval','KeyvalList',3,'p_keyvallist','parser.py',313),
  ('KeyvalList -> KeyvalList COMMA BareCompLitExpr','KeyvalList',3,'p_keyvallist','parser.py',314),
  ('BracedKeyvalList -> <empty>','BracedKeyvalList',0,'p_bracedkeyvallist','parser.py',316),
  ('BracedKeyvalList -> KeyvalList OComma','BracedKeyvalList',2,'p_bracedkeyvallist','parser.py',317),
  ('DeclName -> IDENTIFIER','DeclName',1,'p_declname','parser.py',319),
  ('Name -> IDENTIFIER','Name',1,'p_name','parser.py',321),
  ('ArgType -> NameOrType','ArgType',1,'p_argtype','parser.py',323),
  ('ArgType -> IDENTIFIER NameOrType','ArgType',2,'p_argtype','parser.py',324),
  ('ArgType -> IDENTIFIER DotDotDot','ArgType',2,'p_argtype','parser.py',325),
  ('ArgType -> DotDotDot','ArgType',1,'p_argtype','parser.py',326),
  ('ArgTypeList -> ArgType','ArgTypeList',1,'p_argtypelist','parser.py',328),
  ('ArgTypeList -> ArgTypeList COMMA ArgType','ArgTypeList',3,'p_argtypelist','parser.py',329),
  ('OArgTypeListOComma -> <empty>','OArgTypeListOComma',0,'p_oargtypelistocomma','parser.py',331),
  ('OArgTypeListOComma -> ArgTypeList OComma','OArgTypeListOComma',2,'p_oargtypelistocomma','parser.py',332),
  ('Stmt -> <empty>','Stmt',0,'p_stmt','parser.py',335),
  ('Stmt -> CompoundStmt','Stmt',1,'p_stmt','parser.py',336),
  ('Stmt -> CommonDecl','Stmt',1,'p_stmt','parser.py',337),
  ('Stmt -> NonDeclStmt','Stmt',1,'p_stmt','parser.py',338),
  ('NonDeclStmt -> SimpleStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',340),
  ('NonDeclStmt -> ForStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',341),
  ('NonDeclStmt -> SwitchStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',342),
  ('NonDeclStmt -> IfStmt','NonDeclStmt',1,'p_nondeclstmt','parser.py',343),
  ('NonDeclStmt -> LabelName COLON Stmt','NonDeclStmt',3,'p_nondeclstmt','parser.py',344),
  ('NonDeclStmt -> FALLTHROUGH','NonDeclStmt',1,'p_nondeclstmt','parser.py',345),
  ('NonDeclStmt -> BREAK ONewName','NonDeclStmt',2,'p_nondeclstmt','parser.py',346),
  ('NonDeclStmt -> CONTINUE ONewName','NonDeclStmt',2,'p_nondeclstmt','parser.py',347),
  ('NonDeclStmt -> DEFER PseudoCall','NonDeclStmt',2,'p_nondeclstmt','parser.py',348),
  ('NonDeclStmt -> GOTO NewName','NonDeclStmt',2,'p_nondeclstmt','parser.py',349),
  ('NonDeclStmt -> RETURN OExprList','NonDeclStmt',2,'p_nondeclstmt','parser.py',350),
  ('DotDotDot -> DDD','DotDotDot',1,'p_dotdotdot','parser.py',352),
  ('DotDotDot -> DDD NType','DotDotDot',2,'p_dotdotdot','parser.py',353),
  ('PExpr -> PExprNoParen','PExpr',1,'p_pexpr','parser.py',355),
  ('PExpr -> LPAREN ExprOrType RPAREN','PExpr',3,'p_pexpr','parser.py',356),
  ('PExprNoParen -> Literal','PExprNoParen',1,'p_pexprnoparen','parser.py',358),
  ('PExprNoParen -> Name','PExprNoParen',1,'p_pexprnoparen','parser.py',359),
  ('PExprNoParen -> PExpr DOT IDENTIFIER','PExprNoParen',3,'p_pexprnoparen','parser.py',360),
  ('PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN','PExprNoParen',5,'p_pexprnoparen','parser.py',361),
  ('PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN','PExprNoParen',5,'p_pexprnoparen','parser.py',362),
  ('PExprNoParen -> PExpr LBRACK Expr RBRACK','PExprNoParen',4,'p_pexprnoparen','parser.py',363),
  ('PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK','PExprNoParen',6,'p_pexprnoparen','parser.py',364),
  ('PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK','PExprNoParen',8,'p_pexprnoparen','parser.py',365),
  ('PExprNoParen -> PseudoCall','PExprNoParen',1,'p_pexprnoparen','parser.py',366),
  ('PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE','PExprNoParen',5,'p_pexprnoparen','parser.py',367),
  ('PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','PExprNoParen',4,'p_pexprnoparen','parser.py',368),
  ('PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','PExprNoParen',4,'p_pexprnoparen','parser.py',369),
  ('PExprNoParen -> FuncLiteral','PExprNoParen',1,'p_pexprnoparen','parser.py',370),
  ('PExprNoParen -> ForCompExpr','PExprNoParen',1,'p_pexprnoparen','parser.py',371),
  ('ConvType -> FuncType','ConvType',1,'p_convtype','parser.py',373),
  ('ConvType -> OtherType','ConvType',1,'p_convtype','parser.py',374),
  ('CompType -> OtherType','CompType',1,'p_comptype','parser.py',376),
  ('Keyval -> Expr COLON CompLitExpr','Keyval',3,'p_keyval','parser.py',384),
  ('BareCompLitExpr -> Expr','BareCompLitExpr',1,'p_barecomplitexpr','parser.py',386),
  ('BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','BareCompLitExpr',3,'p_barecomplitexpr','parser.py',387),
  ('CompLitExpr -> Expr','CompLitExpr',1,'p_complitexpr','parser.py',389),
  ('CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT','CompLitExpr',3,'p_complitexpr','parser.py',390),
  ('ExprOrType -> Expr','ExprOrType',1,'p_exportype','parser.py',392),
  ('ExprOrType -> NonExprType','ExprOrType',1,'p_exportype','parser.py',393),
  ('NameOrType -> NType','NameOrType',1,'p_nameortype','parser.py',395),
  ('SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE','SwitchStmt',5,'p_switchstmt','parser.py',397),
  ('Prec5Expr_ -> UExpr','Prec5Expr_',1,'p_prec5expr_','parser.py',400),
  ('Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',401),
  ('Prec5Expr_ -> Prec5Expr_ MOD UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',402),
  ('Prec5Expr_ -> Prec5Expr_ SHL UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',403),
  ('Prec5Expr_ -> Prec5Expr_ SHR UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',404),
  ('Prec5Expr_ -> Prec5Expr_ AMPERS UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',405),
  ('Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',406),
  ('Prec5Expr_ -> Prec5Expr_ TIMES UExpr','Prec5Expr_',3,'p_prec5expr_','parser.py',407),
  ('Prec4Expr_ -> Prec5Expr_','Prec4Expr_',1,'p_prec4expr_','parser.py',409),
  ('Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',410),
  ('Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',411),
  ('Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',412),
  ('Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_','Prec4Expr_',3,'p_prec4expr_','parser.py',413),
  ('Prec3Expr_ -> Prec4Expr_','Prec3Expr_',1,'p_prec3expr_','parser.py',415),
  ('Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',416),
  ('Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',417),
  ('Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',418),
  ('Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',419),
  ('Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',420),
  ('Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_','Prec3Expr_',3,'p_prec3expr_','parser.py',421),
  ('Prec2Expr_ -> Prec3Expr_','Prec2Expr_',1,'p_prec2expr_','parser.py',424),
  ('Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_','Prec2Expr_',3,'p_prec2expr_','parser.py',425),
  ('Expr -> Prec2Expr_','Expr',1,'p_expr','parser.py',427),
  ('Expr -> Expr OROR Prec2Expr_','Expr',3,'p_expr','parser.py',428),
  ('UExpr -> PExpr','UExpr',1,'p_uexpr','parser.py',430),
  ('UExpr -> AMPERS UExpr','UExpr',2,'p_uexpr','parser.py',431),
  ('UExpr -> NOT UExpr','UExpr',2,'p_uexpr','parser.py',432),
  ('UExpr -> TIMES UExpr','UExpr',2,'p_uexpr','parser.py',433),
  ('UExpr -> PLUS UExpr','UExpr',2,'p_uexpr','parser.py',434),
  ('UExpr -> MINUS UExpr','UExpr',2,'p_uexpr','parser.py',435),
  ('UExpr -> XOR UExpr','UExpr',2,'p_uexpr','parser.py',436),
  ('ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK','ForCompExpr',5,'p_forcompexpr','parser.py',438),
  ('PseudoCall -> PExpr LPAREN RPAREN','PseudoCall',3,'p_pseudocall','parser.py',441),
  ('PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN','PseudoCall',5,'p_pseudocall','parser.py',442),
  ('PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN','PseudoCall',6,'p_pseudocall','parser.py',443),
]
