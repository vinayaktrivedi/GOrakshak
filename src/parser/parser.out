Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GO
    LMINUS
    SELECT
    CHAN
    AND_NOT

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
Rule 3     PackageClause -> PACKAGE IDENTIFIER SEMICOL
Rule 4     Imports -> <empty>
Rule 5     Imports -> Imports cmtlist Import SEMICOL
Rule 6     Import -> IMPORT ImportStmt
Rule 7     Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN
Rule 8     Import -> IMPORT LPAREN RPAREN
Rule 9     ImportStmt -> ImportHere STRING
Rule 10    ImportStmtList -> ImportStmt
Rule 11    ImportStmtList -> ImportStmtList SEMICOL ImportStmt
Rule 12    ImportHere -> <empty>
Rule 13    ImportHere -> IDENTIFIER
Rule 14    ImportHere -> DOT
Rule 15    Declaration -> CommonDecl
Rule 16    Declaration -> FuncDecl
Rule 17    Declaration -> NonDeclStmt
Rule 18    CommonDecl -> CONSTANT ConstDecl
Rule 19    CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN
Rule 20    CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
Rule 21    CommonDecl -> CONSTANT LPAREN RPAREN
Rule 22    CommonDecl -> VAR VarDecl
Rule 23    CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN
Rule 24    CommonDecl -> VAR LPAREN RPAREN
Rule 25    CommonDecl -> TYPE TypeDecl
Rule 26    CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN
Rule 27    CommonDecl -> TYPE LPAREN RPAREN
Rule 28    VarDecl -> DeclNameList NType
Rule 29    VarDecl -> DeclNameList NType EQUAL ExprList
Rule 30    VarDecl -> DeclNameList EQUAL ExprList
Rule 31    ConstDecl -> DeclNameList NType EQUAL ExprList
Rule 32    ConstDecl -> DeclNameList EQUAL ExprList
Rule 33    ConstDecl1 -> ConstDecl
Rule 34    ConstDecl1 -> DeclNameList NType
Rule 35    ConstDecl1 -> DeclNameList
Rule 36    TypeDeclName -> IDENTIFIER
Rule 37    TypeDecl -> TypeDeclName NType
Rule 38    SimpleStmt -> Expr
Rule 39    SimpleStmt -> Expr PLUSEQ Expr
Rule 40    SimpleStmt -> Expr MINUSEQ Expr
Rule 41    SimpleStmt -> Expr TIMESEQ Expr
Rule 42    SimpleStmt -> Expr DIVIDEEQ Expr
Rule 43    SimpleStmt -> Expr MODEQ Expr
Rule 44    SimpleStmt -> Expr OREQ Expr
Rule 45    SimpleStmt -> Expr AMPEQ Expr
Rule 46    SimpleStmt -> Expr CAREQ Expr
Rule 47    SimpleStmt -> Expr SHL_ASSIGN Expr
Rule 48    SimpleStmt -> Expr SHR_ASSIGN Expr
Rule 49    SimpleStmt -> Expr AMPCAREQ Expr
Rule 50    SimpleStmt -> ExprList EQUAL ExprList
Rule 51    SimpleStmt -> ExprList COLONEQ ExprList
Rule 52    SimpleStmt -> Expr PLUSPLUS
Rule 53    SimpleStmt -> Expr MINUSMIN
Rule 54    Case -> CASE ExprOrTypeList COLON
Rule 55    Case -> CASE ExprOrTypeList EQUAL Expr COLON
Rule 56    Case -> CASE ExprOrTypeList COLONEQ Expr COLON
Rule 57    Case -> DEFAULT COLON
Rule 58    CompoundStmt -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 59    CaseBlock -> Case StmtList
Rule 60    CaseBlockList -> <empty>
Rule 61    CaseBlockList -> CaseBlockList CaseBlock
Rule 62    LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 63    RangeStmt -> ExprList EQUAL RANGE Expr
Rule 64    RangeStmt -> ExprList COLONEQ RANGE Expr
Rule 65    RangeStmt -> RANGE Expr
Rule 66    ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
Rule 67    ForHeader -> OSimpleStmt
Rule 68    ForHeader -> RangeStmt
Rule 69    ForBody -> ForHeader LoopBody
Rule 70    ForStmt -> FOR ForBody
Rule 71    IfHeader -> OSimpleStmt
Rule 72    IfHeader -> OSimpleStmt SEMICOL OSimpleStmt
Rule 73    IfStmt -> IF IfHeader LoopBody ElseIfList Else
Rule 74    ElseIf -> ELSE IF IfHeader LoopBody
Rule 75    ElseIfList -> <empty>
Rule 76    ElseIfList -> ElseIfList ElseIf
Rule 77    Else -> <empty>
Rule 78    Else -> ELSE CompoundStmt
Rule 79    NType -> FuncType
Rule 80    NType -> OtherType
Rule 81    NType -> PtrType
Rule 82    NType -> DotName
Rule 83    NType -> LPAREN NType RPAREN
Rule 84    NType -> TYPE
Rule 85    NonExprType -> FuncType
Rule 86    NonExprType -> OtherType
Rule 87    NonExprType -> TIMES NonExprType
Rule 88    OtherType -> LBRACK OExpr RBRACK NType
Rule 89    OtherType -> MAP LBRACK NType RBRACK NType
Rule 90    OtherType -> StructType
Rule 91    OtherType -> InterfaceType
Rule 92    StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE
Rule 93    StructType -> STRUCT LBRACE RBRACE
Rule 94    InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
Rule 95    InterfaceType -> INTERFACE LBRACE RBRACE
Rule 96    FuncDecl -> FUNCTION FuncDecl_ FuncBody
Rule 97    FuncDecl_ -> IDENTIFIER ArgList FuncRes
Rule 98    FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
Rule 99    FuncType -> FUNCTION ArgList FuncRes
Rule 100   ArgList -> LPAREN OArgTypeListOComma RPAREN
Rule 101   ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN
Rule 102   FuncBody -> <empty>
Rule 103   FuncBody -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 104   FuncRes -> <empty>
Rule 105   FuncRes -> FuncRetType
Rule 106   FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT
Rule 107   StructDeclList -> StructDecl
Rule 108   StructDeclList -> StructDeclList SEMICOL StructDecl
Rule 109   InterfaceDeclList -> InterfaceDecl
Rule 110   InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl
Rule 111   StructDecl -> NewNameList NType OLiteral
Rule 112   StructDecl -> Embed OLiteral
Rule 113   StructDecl -> LPAREN Embed RPAREN OLiteral
Rule 114   StructDecl -> TIMES Embed OLiteral
Rule 115   StructDecl -> LPAREN TIMES Embed RPAREN OLiteral
Rule 116   StructDecl -> TIMES LPAREN Embed RPAREN OLiteral
Rule 117   InterfaceDecl -> NewName InDecl
Rule 118   InterfaceDecl -> IDENTIFIER
Rule 119   InterfaceDecl -> LPAREN IDENTIFIER RPAREN
Rule 120   InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes
Rule 121   LabelName -> NewName
Rule 122   NewName -> IDENTIFIER
Rule 123   PtrType -> TIMES NType
Rule 124   FuncRetType -> FuncType
Rule 125   FuncRetType -> OtherType
Rule 126   FuncRetType -> PtrType
Rule 127   FuncRetType -> DotName
Rule 128   FuncRetType -> TYPE
Rule 129   DotName -> Name
Rule 130   DotName -> Name DOT IDENTIFIER
Rule 131   OComma -> <empty>
Rule 132   OComma -> COMMA
Rule 133   OSemi -> <empty>
Rule 134   OSemi -> SEMICOL
Rule 135   OSimpleStmt -> <empty>
Rule 136   OSimpleStmt -> SimpleStmt
Rule 137   ONewName -> <empty>
Rule 138   ONewName -> NewName
Rule 139   OExpr -> <empty>
Rule 140   OExpr -> Expr
Rule 141   OExprList -> <empty>
Rule 142   OExprList -> ExprList
Rule 143   FuncLiteralDecl -> FuncType
Rule 144   FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
Rule 145   ExprList -> Expr
Rule 146   ExprList -> ExprList COMMA Expr
Rule 147   ExprOrTypeList -> ExprOrType
Rule 148   ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType
Rule 149   OLiteral -> <empty>
Rule 150   OLiteral -> Literal
Rule 151   Literal -> INTEGER
Rule 152   Literal -> FLOAT
Rule 153   Literal -> STRING
Rule 154   Embed -> IDENTIFIER
Rule 155   DeclList -> <empty>
Rule 156   DeclList -> DeclList cmtlist Declaration SEMICOL
Rule 157   VarDeclList -> VarDecl
Rule 158   VarDeclList -> VarDeclList SEMICOL VarDecl
Rule 159   ConstDeclList -> ConstDecl1
Rule 160   ConstDeclList -> ConstDeclList SEMICOL ConstDecl1
Rule 161   TypeDeclList -> TypeDecl
Rule 162   TypeDeclList -> TypeDeclList SEMICOL TypeDecl
Rule 163   DeclNameList -> DeclName
Rule 164   DeclNameList -> DeclNameList COMMA DeclName
Rule 165   StmtList -> Stmt SEMICOL
Rule 166   StmtList -> StmtList cmtlist Stmt SEMICOL
Rule 167   NewNameList -> NewName
Rule 168   NewNameList -> NewNameList COMMA NewName
Rule 169   KeyvalList -> Keyval
Rule 170   KeyvalList -> BareCompLitExpr
Rule 171   KeyvalList -> KeyvalList COMMA Keyval
Rule 172   KeyvalList -> KeyvalList COMMA BareCompLitExpr
Rule 173   BracedKeyvalList -> <empty>
Rule 174   BracedKeyvalList -> KeyvalList OComma
Rule 175   DeclName -> IDENTIFIER
Rule 176   Name -> IDENTIFIER
Rule 177   ArgType -> NameOrType
Rule 178   ArgType -> IDENTIFIER NameOrType
Rule 179   ArgType -> IDENTIFIER DotDotDot
Rule 180   ArgType -> DotDotDot
Rule 181   ArgTypeList -> ArgType
Rule 182   ArgTypeList -> ArgTypeList COMMA ArgType
Rule 183   OArgTypeListOComma -> <empty>
Rule 184   OArgTypeListOComma -> ArgTypeList OComma
Rule 185   Stmt -> <empty>
Rule 186   Stmt -> CompoundStmt
Rule 187   Stmt -> CommonDecl
Rule 188   Stmt -> NonDeclStmt
Rule 189   NonDeclStmt -> SimpleStmt
Rule 190   NonDeclStmt -> ForStmt
Rule 191   NonDeclStmt -> SwitchStmt
Rule 192   NonDeclStmt -> IfStmt
Rule 193   NonDeclStmt -> LabelName COLON Stmt
Rule 194   NonDeclStmt -> FALLTHROUGH
Rule 195   NonDeclStmt -> BREAK ONewName
Rule 196   NonDeclStmt -> CONTINUE ONewName
Rule 197   NonDeclStmt -> DEFER PseudoCall
Rule 198   NonDeclStmt -> GOTO NewName
Rule 199   NonDeclStmt -> RETURN OExprList
Rule 200   DotDotDot -> DDD
Rule 201   DotDotDot -> DDD NType
Rule 202   PExpr -> PExprNoParen
Rule 203   PExpr -> LPAREN ExprOrType RPAREN
Rule 204   PExprNoParen -> Literal
Rule 205   PExprNoParen -> Name
Rule 206   PExprNoParen -> PExpr DOT IDENTIFIER
Rule 207   PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN
Rule 208   PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN
Rule 209   PExprNoParen -> PExpr LBRACK Expr RBRACK
Rule 210   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK
Rule 211   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
Rule 212   PExprNoParen -> PseudoCall
Rule 213   PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
Rule 214   PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 215   PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 216   PExprNoParen -> FuncLiteral
Rule 217   PExprNoParen -> ForCompExpr
Rule 218   ConvType -> FuncType
Rule 219   ConvType -> OtherType
Rule 220   CompType -> OtherType
Rule 221   StartCompLit -> <empty>
Rule 222   Keyval -> Expr COLON CompLitExpr
Rule 223   BareCompLitExpr -> Expr
Rule 224   BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 225   CompLitExpr -> Expr
Rule 226   CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 227   ExprOrType -> Expr
Rule 228   ExprOrType -> NonExprType
Rule 229   NameOrType -> NType
Rule 230   SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE
Rule 231   Prec5Expr_ -> UExpr
Rule 232   Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr
Rule 233   Prec5Expr_ -> Prec5Expr_ MOD UExpr
Rule 234   Prec5Expr_ -> Prec5Expr_ SHL UExpr
Rule 235   Prec5Expr_ -> Prec5Expr_ SHR UExpr
Rule 236   Prec5Expr_ -> Prec5Expr_ AMPERS UExpr
Rule 237   Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr
Rule 238   Prec5Expr_ -> Prec5Expr_ TIMES UExpr
Rule 239   Prec4Expr_ -> Prec5Expr_
Rule 240   Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_
Rule 241   Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_
Rule 242   Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_
Rule 243   Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_
Rule 244   Prec3Expr_ -> Prec4Expr_
Rule 245   Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_
Rule 246   Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_
Rule 247   Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_
Rule 248   Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_
Rule 249   Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_
Rule 250   Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_
Rule 251   Prec2Expr_ -> Prec3Expr_
Rule 252   Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_
Rule 253   Expr -> Prec2Expr_
Rule 254   Expr -> Expr OROR Prec2Expr_
Rule 255   Expr -> CONSTANTS
Rule 256   UExpr -> PExpr
Rule 257   UExpr -> AMPERS UExpr
Rule 258   UExpr -> NOT UExpr
Rule 259   UExpr -> TIMES UExpr
Rule 260   UExpr -> PLUS UExpr
Rule 261   UExpr -> MINUS UExpr
Rule 262   UExpr -> XOR UExpr
Rule 263   ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK
Rule 264   PseudoCall -> PExpr LPAREN RPAREN
Rule 265   PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN
Rule 266   PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
Rule 267   cmtlist -> <empty>
Rule 268   cmtlist -> COMMENT cmtlist

Terminals, with rules where they appear

AMPAMP               : 252
AMPCAR               : 237
AMPCAREQ             : 49
AMPEQ                : 45
AMPERS               : 236 257
AND_NOT              : 
BREAK                : 195
CAREQ                : 46
CASE                 : 54 55 56
CHAN                 : 
COLON                : 54 55 56 57 193 210 211 211 222
COLONEQ              : 51 56 64
COMMA                : 132 146 148 164 168 171 172 182
COMMENT              : 268
CONSTANT             : 18 19 20 21
CONSTANTS            : 255
CONTINUE             : 196
DDD                  : 200 201 266
DEFAULT              : 57
DEFER                : 197
DIVIDE               : 232
DIVIDEEQ             : 42
DOT                  : 14 130 206 207 208
ELSE                 : 74 78
EQEQ                 : 245
EQUAL                : 29 30 31 32 50 55 63
FALLTHROUGH          : 194
FLOAT                : 152
FOR                  : 70
FUNCTION             : 96 99
GEQ                  : 248
GO                   : 
GOTO                 : 198
GREAT                : 249
IDENTIFIER           : 3 13 36 97 98 118 119 122 130 154 175 176 178 179 206
IF                   : 73 74
IMPORT               : 6 7 8
INTEGER              : 151
INTERFACE            : 94 95
LBRACE               : 58 62 92 93 94 95 103 144 230
LBRACK               : 88 89 209 210 211 263
LEFT_ANGLE           : 213
LEFT_LEFT            : 214 215 224 226
LEFT_OR              : 98 106
LEQ                  : 247
LESS                 : 250
LMINUS               : 
LPAREN               : 7 8 19 20 21 23 24 26 27 83 100 101 113 115 116 119 120 203 207 208 264 265 266
MAP                  : 89
MINUS                : 241 261
MINUSEQ              : 40
MINUSMIN             : 53
MOD                  : 233
MODEQ                : 43
NOT                  : 258
NOTEQ                : 246
OR                   : 243
OREQ                 : 44
OROR                 : 254
OR_RIGHT             : 98 106
PACKAGE              : 3
PIPE                 : 263
PLUS                 : 240 260
PLUSEQ               : 39
PLUSPLUS             : 52
RANGE                : 63 64 65
RBRACE               : 58 62 92 93 94 95 103 144 230
RBRACK               : 88 89 209 210 211 263
RETURN               : 199
RIGHT_ANGLE          : 213
RIGHT_RIGHT          : 214 215 224 226
RPAREN               : 7 8 19 20 21 23 24 26 27 83 100 101 113 115 116 119 120 203 207 208 264 265 266
SELECT               : 
SEMICOL              : 3 5 11 20 66 66 72 108 110 134 156 158 160 162 165 166
SHL                  : 234
SHL_ASSIGN           : 47
SHR                  : 235
SHR_ASSIGN           : 48
STRING               : 9 153
STRUCT               : 92 93
SWITCH               : 230
TIMES                : 87 114 115 116 123 238 259
TIMESEQ              : 41
TYPE                 : 25 26 27 84 128 208
VAR                  : 22 23 24
XOR                  : 242 262
error                : 

Nonterminals, with rules where they appear

ArgList              : 97 98 99 101
ArgType              : 181 182
ArgTypeList          : 182 184
BareCompLitExpr      : 170 172
BracedKeyvalList     : 214 215 224 226
Case                 : 59
CaseBlock            : 61
CaseBlockList        : 61 230
CommonDecl           : 15 187
CompLitExpr          : 222
CompType             : 214
CompoundStmt         : 78 186
ConstDecl            : 18 19 20 33
ConstDecl1           : 159 160
ConstDeclList        : 20 160
ConvType             : 213
DeclList             : 2 156
DeclName             : 163 164
DeclNameList         : 28 29 30 31 32 34 35 164
Declaration          : 156
DotDotDot            : 179 180
DotName              : 82 127
Else                 : 73
ElseIf               : 76
ElseIfList           : 73 76
Embed                : 112 113 114 115 116
Expr                 : 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 52 53 55 56 63 64 65 140 145 146 209 213 222 223 225 227 254 263
ExprList             : 29 30 31 32 50 50 51 51 63 64 142 146
ExprOrType           : 147 148 203 207
ExprOrTypeList       : 54 55 56 148 265 266
ForBody              : 70
ForCompExpr          : 217
ForHeader            : 69
ForStmt              : 190
FuncBody             : 96
FuncDecl             : 16
FuncDecl_            : 96
FuncLiteral          : 216
FuncLiteralDecl      : 144
FuncRes              : 97 98 99 120
FuncRetType          : 105
FuncType             : 79 85 124 143 218
IfHeader             : 73 74 230
IfStmt               : 192
Import               : 5
ImportHere           : 9
ImportStmt           : 6 10 11
ImportStmtList       : 7 11
Imports              : 2 5
InDecl               : 117
InterfaceDecl        : 109 110
InterfaceDeclList    : 94 110
InterfaceType        : 91
Keyval               : 169 171
KeyvalList           : 171 172 174
LabelName            : 193
Literal              : 150 204
LoopBody             : 69 73 74
NType                : 28 29 31 34 37 83 88 89 89 111 123 201 229
Name                 : 129 130 205
NameOrType           : 177 178
NewName              : 117 121 138 167 168 198
NewNameList          : 111 168
NonDeclStmt          : 17 188
NonExprType          : 87 228
OArgTypeListOComma   : 98 100 101 106 120
OComma               : 174 184 213 265 266
OExpr                : 88 210 210 211 211 211
OExprList            : 199
OLiteral             : 111 112 113 114 115 116
ONewName             : 195 196
OSemi                : 7 19 20 23 26 92 94
OSimpleStmt          : 66 66 66 67 71 72 72
OtherType            : 80 86 125 219 220
PExpr                : 206 207 208 209 210 211 215 256 264 265 266
PExprNoParen         : 202
PackageClause        : 2
Prec2Expr_           : 252 253 254
Prec3Expr_           : 245 246 247 248 249 250 251 252
Prec4Expr_           : 240 241 242 243 244 245 246 247 248 249 250
Prec5Expr_           : 232 233 234 235 236 237 238 239 240 241 242 243
PseudoCall           : 197 212
PtrType              : 81 126
RangeStmt            : 68 263
SimpleStmt           : 136 189
SourceFile           : 1
StartCompLit         : 
Stmt                 : 165 166 193
StmtList             : 58 59 62 103 144 166
StructDecl           : 107 108
StructDeclList       : 92 108
StructType           : 90
SwitchStmt           : 191
TypeDecl             : 25 161 162
TypeDeclList         : 26 162
TypeDeclName         : 37
UExpr                : 231 232 233 234 235 236 237 238 257 258 259 260 261 262
VarDecl              : 22 157 158
VarDeclList          : 23 158
cmtlist              : 2 2 2 2 5 58 58 62 62 103 103 144 144 156 166 268
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (2) SourceFile -> . cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    PACKAGE         reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 2
    SourceFile                     shift and go to state 3
    start                          shift and go to state 4

state 1

    (268) cmtlist -> COMMENT . cmtlist
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

  ! shift/reduce conflict for COMMENT resolved as shift
    PACKAGE         reduce using rule 267 (cmtlist -> .)
    IMPORT          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    $end            reduce using rule 267 (cmtlist -> .)
    LBRACE          reduce using rule 267 (cmtlist -> .)
    SEMICOL         reduce using rule 267 (cmtlist -> .)
    RBRACE          reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

  ! COMMENT         [ reduce using rule 267 (cmtlist -> .) ]

    cmtlist                        shift and go to state 5

state 2

    (2) SourceFile -> cmtlist . PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (3) PackageClause -> . PACKAGE IDENTIFIER SEMICOL

    PACKAGE         shift and go to state 7

    PackageClause                  shift and go to state 6

state 3

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 4

    (0) S' -> start .



state 5

    (268) cmtlist -> COMMENT cmtlist .

    RBRACE          reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    LBRACE          reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    CONSTANT        reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    VAR             reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    TYPE            reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    FALLTHROUGH     reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    BREAK           reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    CONTINUE        reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    DEFER           reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    GOTO            reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    RETURN          reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    FOR             reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    SWITCH          reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    IF              reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    CONSTANTS       reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    IDENTIFIER      reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    AMPERS          reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    NOT             reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    TIMES           reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    PLUS            reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    MINUS           reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    XOR             reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    LPAREN          reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    INTEGER         reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    FLOAT           reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    STRING          reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    LBRACK          reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    FUNCTION        reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    MAP             reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    STRUCT          reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    INTERFACE       reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    SEMICOL         reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    PACKAGE         reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    COMMENT         reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    IMPORT          reduce using rule 268 (cmtlist -> COMMENT cmtlist .)
    $end            reduce using rule 268 (cmtlist -> COMMENT cmtlist .)


state 6

    (2) SourceFile -> cmtlist PackageClause . cmtlist Imports cmtlist DeclList cmtlist
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

  ! shift/reduce conflict for COMMENT resolved as shift
    IMPORT          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    $end            reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

  ! COMMENT         [ reduce using rule 267 (cmtlist -> .) ]

    cmtlist                        shift and go to state 8

state 7

    (3) PackageClause -> PACKAGE . IDENTIFIER SEMICOL

    IDENTIFIER      shift and go to state 9


state 8

    (2) SourceFile -> cmtlist PackageClause cmtlist . Imports cmtlist DeclList cmtlist
    (4) Imports -> .
    (5) Imports -> . Imports cmtlist Import SEMICOL

    COMMENT         reduce using rule 4 (Imports -> .)
    IMPORT          reduce using rule 4 (Imports -> .)
    CONSTANT        reduce using rule 4 (Imports -> .)
    VAR             reduce using rule 4 (Imports -> .)
    TYPE            reduce using rule 4 (Imports -> .)
    FUNCTION        reduce using rule 4 (Imports -> .)
    FALLTHROUGH     reduce using rule 4 (Imports -> .)
    BREAK           reduce using rule 4 (Imports -> .)
    CONTINUE        reduce using rule 4 (Imports -> .)
    DEFER           reduce using rule 4 (Imports -> .)
    GOTO            reduce using rule 4 (Imports -> .)
    RETURN          reduce using rule 4 (Imports -> .)
    FOR             reduce using rule 4 (Imports -> .)
    SWITCH          reduce using rule 4 (Imports -> .)
    IF              reduce using rule 4 (Imports -> .)
    CONSTANTS       reduce using rule 4 (Imports -> .)
    IDENTIFIER      reduce using rule 4 (Imports -> .)
    AMPERS          reduce using rule 4 (Imports -> .)
    NOT             reduce using rule 4 (Imports -> .)
    TIMES           reduce using rule 4 (Imports -> .)
    PLUS            reduce using rule 4 (Imports -> .)
    MINUS           reduce using rule 4 (Imports -> .)
    XOR             reduce using rule 4 (Imports -> .)
    LPAREN          reduce using rule 4 (Imports -> .)
    INTEGER         reduce using rule 4 (Imports -> .)
    FLOAT           reduce using rule 4 (Imports -> .)
    STRING          reduce using rule 4 (Imports -> .)
    LBRACK          reduce using rule 4 (Imports -> .)
    MAP             reduce using rule 4 (Imports -> .)
    STRUCT          reduce using rule 4 (Imports -> .)
    INTERFACE       reduce using rule 4 (Imports -> .)
    $end            reduce using rule 4 (Imports -> .)

    Imports                        shift and go to state 10

state 9

    (3) PackageClause -> PACKAGE IDENTIFIER . SEMICOL

    SEMICOL         shift and go to state 11


state 10

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports . cmtlist DeclList cmtlist
    (5) Imports -> Imports . cmtlist Import SEMICOL
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

  ! shift/reduce conflict for COMMENT resolved as shift
    IMPORT          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    $end            reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

  ! COMMENT         [ reduce using rule 267 (cmtlist -> .) ]

    cmtlist                        shift and go to state 12

state 11

    (3) PackageClause -> PACKAGE IDENTIFIER SEMICOL .

    COMMENT         reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IMPORT          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANT        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    VAR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TYPE            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FUNCTION        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FALLTHROUGH     reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    BREAK           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONTINUE        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    DEFER           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    GOTO            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    RETURN          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FOR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    SWITCH          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IF              reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANTS       reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IDENTIFIER      reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    AMPERS          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    NOT             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TIMES           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    PLUS            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MINUS           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    XOR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LPAREN          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTEGER         reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FLOAT           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRING          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LBRACK          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MAP             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRUCT          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTERFACE       reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    $end            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)


state 12

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist . DeclList cmtlist
    (5) Imports -> Imports cmtlist . Import SEMICOL
    (155) DeclList -> .
    (156) DeclList -> . DeclList cmtlist Declaration SEMICOL
    (6) Import -> . IMPORT ImportStmt
    (7) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (8) Import -> . IMPORT LPAREN RPAREN

    COMMENT         reduce using rule 155 (DeclList -> .)
    CONSTANT        reduce using rule 155 (DeclList -> .)
    VAR             reduce using rule 155 (DeclList -> .)
    TYPE            reduce using rule 155 (DeclList -> .)
    FUNCTION        reduce using rule 155 (DeclList -> .)
    FALLTHROUGH     reduce using rule 155 (DeclList -> .)
    BREAK           reduce using rule 155 (DeclList -> .)
    CONTINUE        reduce using rule 155 (DeclList -> .)
    DEFER           reduce using rule 155 (DeclList -> .)
    GOTO            reduce using rule 155 (DeclList -> .)
    RETURN          reduce using rule 155 (DeclList -> .)
    FOR             reduce using rule 155 (DeclList -> .)
    SWITCH          reduce using rule 155 (DeclList -> .)
    IF              reduce using rule 155 (DeclList -> .)
    CONSTANTS       reduce using rule 155 (DeclList -> .)
    IDENTIFIER      reduce using rule 155 (DeclList -> .)
    AMPERS          reduce using rule 155 (DeclList -> .)
    NOT             reduce using rule 155 (DeclList -> .)
    TIMES           reduce using rule 155 (DeclList -> .)
    PLUS            reduce using rule 155 (DeclList -> .)
    MINUS           reduce using rule 155 (DeclList -> .)
    XOR             reduce using rule 155 (DeclList -> .)
    LPAREN          reduce using rule 155 (DeclList -> .)
    INTEGER         reduce using rule 155 (DeclList -> .)
    FLOAT           reduce using rule 155 (DeclList -> .)
    STRING          reduce using rule 155 (DeclList -> .)
    LBRACK          reduce using rule 155 (DeclList -> .)
    MAP             reduce using rule 155 (DeclList -> .)
    STRUCT          reduce using rule 155 (DeclList -> .)
    INTERFACE       reduce using rule 155 (DeclList -> .)
    $end            reduce using rule 155 (DeclList -> .)
    IMPORT          shift and go to state 14

    DeclList                       shift and go to state 13
    Import                         shift and go to state 15

state 13

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList . cmtlist
    (156) DeclList -> DeclList . cmtlist Declaration SEMICOL
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    $end            reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 16

state 14

    (6) Import -> IMPORT . ImportStmt
    (7) Import -> IMPORT . LPAREN ImportStmtList OSemi RPAREN
    (8) Import -> IMPORT . LPAREN RPAREN
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> .
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT

    LPAREN          shift and go to state 19
    STRING          reduce using rule 12 (ImportHere -> .)
    IDENTIFIER      shift and go to state 18
    DOT             shift and go to state 21

    ImportHere                     shift and go to state 17
    ImportStmt                     shift and go to state 20

state 15

    (5) Imports -> Imports cmtlist Import . SEMICOL

    SEMICOL         shift and go to state 22


state 16

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .
    (156) DeclList -> DeclList cmtlist . Declaration SEMICOL
    (15) Declaration -> . CommonDecl
    (16) Declaration -> . FuncDecl
    (17) Declaration -> . NonDeclStmt
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (96) FuncDecl -> . FUNCTION FuncDecl_ FuncBody
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    $end            reduce using rule 2 (SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .)
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FUNCTION        shift and go to state 47
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    CommonDecl                     shift and go to state 41
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    FuncLiteralDecl                shift and go to state 34
    FuncDecl                       shift and go to state 43
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Declaration                    shift and go to state 63
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NonDeclStmt                    shift and go to state 75
    Expr                           shift and go to state 76
    Prec5Expr_                     shift and go to state 32
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23

state 17

    (9) ImportStmt -> ImportHere . STRING

    STRING          shift and go to state 83


state 18

    (13) ImportHere -> IDENTIFIER .

    STRING          reduce using rule 13 (ImportHere -> IDENTIFIER .)


state 19

    (7) Import -> IMPORT LPAREN . ImportStmtList OSemi RPAREN
    (8) Import -> IMPORT LPAREN . RPAREN
    (10) ImportStmtList -> . ImportStmt
    (11) ImportStmtList -> . ImportStmtList SEMICOL ImportStmt
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> .
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT

    RPAREN          shift and go to state 84
    STRING          reduce using rule 12 (ImportHere -> .)
    IDENTIFIER      shift and go to state 18
    DOT             shift and go to state 21

    ImportHere                     shift and go to state 17
    ImportStmt                     shift and go to state 86
    ImportStmtList                 shift and go to state 85

state 20

    (6) Import -> IMPORT ImportStmt .

    SEMICOL         reduce using rule 6 (Import -> IMPORT ImportStmt .)


state 21

    (14) ImportHere -> DOT .

    STRING          reduce using rule 14 (ImportHere -> DOT .)


state 22

    (5) Imports -> Imports cmtlist Import SEMICOL .

    COMMENT         reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    IMPORT          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANT        reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    VAR             reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    TYPE            reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    FUNCTION        reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    FALLTHROUGH     reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    BREAK           reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    CONTINUE        reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    DEFER           reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    GOTO            reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    RETURN          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    FOR             reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    SWITCH          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    IF              reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANTS       reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    IDENTIFIER      reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    AMPERS          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    NOT             reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    TIMES           reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    PLUS            reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    MINUS           reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    XOR             reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    LPAREN          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    INTEGER         reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    FLOAT           reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    STRING          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    LBRACK          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    MAP             reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    STRUCT          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    INTERFACE       reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    $end            reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)


state 23

    (216) PExprNoParen -> FuncLiteral .

    DOT             reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    LBRACK          reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    LEFT_LEFT       reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    LPAREN          reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    DIVIDE          reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    MOD             reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    SHL             reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    SHR             reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    AMPERS          reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    AMPCAR          reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    TIMES           reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    PLUS            reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    MINUS           reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    XOR             reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    OR              reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    EQEQ            reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    NOTEQ           reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    LEQ             reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    GEQ             reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    GREAT           reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    LESS            reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    AMPAMP          reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    OROR            reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    SEMICOL         reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    LBRACE          reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    COMMA           reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    RBRACK          reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    PLUSEQ          reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    MINUSEQ         reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    TIMESEQ         reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    DIVIDEEQ        reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    MODEQ           reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    OREQ            reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    AMPEQ           reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    CAREQ           reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    SHL_ASSIGN      reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    SHR_ASSIGN      reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    AMPCAREQ        reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    PLUSPLUS        reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    MINUSMIN        reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    EQUAL           reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    COLONEQ         reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    PIPE            reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    RPAREN          reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    RIGHT_ANGLE     reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    COLON           reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    RIGHT_RIGHT     reduce using rule 216 (PExprNoParen -> FuncLiteral .)
    DDD             reduce using rule 216 (PExprNoParen -> FuncLiteral .)


state 24

    (251) Prec2Expr_ -> Prec3Expr_ .
    (245) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (246) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (248) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (249) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (250) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSEQ          reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSEQ         reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    TIMESEQ         reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    MODEQ           reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    OREQ            reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    AMPEQ           reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    CAREQ           reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    AMPCAREQ        reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSPLUS        reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSMIN        reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    OROR            reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    SEMICOL         reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    EQUAL           reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    COLONEQ         reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    COMMA           reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    RPAREN          reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    LBRACE          reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    COLON           reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACK          reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    DDD             reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    PIPE            reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 251 (Prec2Expr_ -> Prec3Expr_ .)
    EQEQ            shift and go to state 89
    NOTEQ           shift and go to state 92
    LEQ             shift and go to state 88
    GEQ             shift and go to state 87
    GREAT           shift and go to state 91
    LESS            shift and go to state 90


state 25

    (213) PExprNoParen -> ConvType . LEFT_ANGLE Expr OComma RIGHT_ANGLE

    LEFT_ANGLE      shift and go to state 93


state 26

    (219) ConvType -> OtherType .
    (220) CompType -> OtherType .

    LEFT_ANGLE      reduce using rule 219 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 220 (CompType -> OtherType .)


state 27

    (261) UExpr -> MINUS . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 96
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 28

    (197) NonDeclStmt -> DEFER . PseudoCall
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 97
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 98

state 29

    (194) NonDeclStmt -> FALLTHROUGH .

    SEMICOL         reduce using rule 194 (NonDeclStmt -> FALLTHROUGH .)


state 30

    (260) UExpr -> PLUS . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 99
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 31

    (193) NonDeclStmt -> LabelName . COLON Stmt

    COLON           shift and go to state 100


state 32

    (239) Prec4Expr_ -> Prec5Expr_ .
    (232) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (238) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    MINUS           reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    XOR             reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    OR              reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    EQEQ            reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    NOTEQ           reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    LEQ             reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    GEQ             reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    GREAT           reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    LESS            reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    AMPAMP          reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSEQ          reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSEQ         reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    TIMESEQ         reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    MODEQ           reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    OREQ            reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    AMPEQ           reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    CAREQ           reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    AMPCAREQ        reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSPLUS        reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSMIN        reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    OROR            reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    SEMICOL         reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    EQUAL           reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    COLONEQ         reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    COMMA           reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    LBRACE          reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    PIPE            reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACK          reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    RPAREN          reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    COLON           reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    DDD             reduce using rule 239 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDE          shift and go to state 102
    MOD             shift and go to state 107
    SHL             shift and go to state 106
    SHR             shift and go to state 101
    AMPERS          shift and go to state 104
    AMPCAR          shift and go to state 103
    TIMES           shift and go to state 105


state 33

    (253) Expr -> Prec2Expr_ .
    (252) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    OROR            reduce using rule 253 (Expr -> Prec2Expr_ .)
    COMMA           reduce using rule 253 (Expr -> Prec2Expr_ .)
    SEMICOL         reduce using rule 253 (Expr -> Prec2Expr_ .)
    RPAREN          reduce using rule 253 (Expr -> Prec2Expr_ .)
    PLUSEQ          reduce using rule 253 (Expr -> Prec2Expr_ .)
    MINUSEQ         reduce using rule 253 (Expr -> Prec2Expr_ .)
    TIMESEQ         reduce using rule 253 (Expr -> Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 253 (Expr -> Prec2Expr_ .)
    MODEQ           reduce using rule 253 (Expr -> Prec2Expr_ .)
    OREQ            reduce using rule 253 (Expr -> Prec2Expr_ .)
    AMPEQ           reduce using rule 253 (Expr -> Prec2Expr_ .)
    CAREQ           reduce using rule 253 (Expr -> Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 253 (Expr -> Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 253 (Expr -> Prec2Expr_ .)
    AMPCAREQ        reduce using rule 253 (Expr -> Prec2Expr_ .)
    PLUSPLUS        reduce using rule 253 (Expr -> Prec2Expr_ .)
    MINUSMIN        reduce using rule 253 (Expr -> Prec2Expr_ .)
    LBRACE          reduce using rule 253 (Expr -> Prec2Expr_ .)
    EQUAL           reduce using rule 253 (Expr -> Prec2Expr_ .)
    COLONEQ         reduce using rule 253 (Expr -> Prec2Expr_ .)
    DDD             reduce using rule 253 (Expr -> Prec2Expr_ .)
    COLON           reduce using rule 253 (Expr -> Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 253 (Expr -> Prec2Expr_ .)
    RBRACK          reduce using rule 253 (Expr -> Prec2Expr_ .)
    PIPE            reduce using rule 253 (Expr -> Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 253 (Expr -> Prec2Expr_ .)
    AMPAMP          shift and go to state 108


state 34

    (144) FuncLiteral -> FuncLiteralDecl . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 109


state 35

    (22) CommonDecl -> VAR . VarDecl
    (23) CommonDecl -> VAR . LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> VAR . LPAREN RPAREN
    (28) VarDecl -> . DeclNameList NType
    (29) VarDecl -> . DeclNameList NType EQUAL ExprList
    (30) VarDecl -> . DeclNameList EQUAL ExprList
    (163) DeclNameList -> . DeclName
    (164) DeclNameList -> . DeclNameList COMMA DeclName
    (175) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 113
    IDENTIFIER      shift and go to state 110

    DeclName                       shift and go to state 111
    VarDecl                        shift and go to state 112
    DeclNameList                   shift and go to state 114

state 36

    (50) SimpleStmt -> ExprList . EQUAL ExprList
    (51) SimpleStmt -> ExprList . COLONEQ ExprList
    (146) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 117
    COLONEQ         shift and go to state 116
    COMMA           shift and go to state 115


state 37

    (89) OtherType -> MAP . LBRACK NType RBRACK NType

    LBRACK          shift and go to state 118


state 38

    (18) CommonDecl -> CONSTANT . ConstDecl
    (19) CommonDecl -> CONSTANT . LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> CONSTANT . LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> CONSTANT . LPAREN RPAREN
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (163) DeclNameList -> . DeclName
    (164) DeclNameList -> . DeclNameList COMMA DeclName
    (175) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 110

    DeclName                       shift and go to state 111
    ConstDecl                      shift and go to state 121
    DeclNameList                   shift and go to state 120

state 39

    (257) UExpr -> AMPERS . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 122
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 40

    (244) Prec3Expr_ -> Prec4Expr_ .
    (240) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    NOTEQ           reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    LEQ             reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    GEQ             reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    GREAT           reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    LESS            reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    AMPAMP          reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    OROR            reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    COMMA           reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    SEMICOL         reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    RPAREN          reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    LBRACE          reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACK          reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    COLON           reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSEQ          reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSEQ         reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    TIMESEQ         reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    MODEQ           reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    OREQ            reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    AMPEQ           reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    CAREQ           reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    AMPCAREQ        reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSPLUS        reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSMIN        reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    EQUAL           reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    COLONEQ         reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    PIPE            reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    DDD             reduce using rule 244 (Prec3Expr_ -> Prec4Expr_ .)
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    XOR             shift and go to state 123
    OR              shift and go to state 124


state 41

    (15) Declaration -> CommonDecl .

    SEMICOL         reduce using rule 15 (Declaration -> CommonDecl .)


state 42

    (153) Literal -> STRING .

    DOT             reduce using rule 153 (Literal -> STRING .)
    LBRACK          reduce using rule 153 (Literal -> STRING .)
    LEFT_LEFT       reduce using rule 153 (Literal -> STRING .)
    LPAREN          reduce using rule 153 (Literal -> STRING .)
    DIVIDE          reduce using rule 153 (Literal -> STRING .)
    MOD             reduce using rule 153 (Literal -> STRING .)
    SHL             reduce using rule 153 (Literal -> STRING .)
    SHR             reduce using rule 153 (Literal -> STRING .)
    AMPERS          reduce using rule 153 (Literal -> STRING .)
    AMPCAR          reduce using rule 153 (Literal -> STRING .)
    TIMES           reduce using rule 153 (Literal -> STRING .)
    PLUS            reduce using rule 153 (Literal -> STRING .)
    MINUS           reduce using rule 153 (Literal -> STRING .)
    XOR             reduce using rule 153 (Literal -> STRING .)
    OR              reduce using rule 153 (Literal -> STRING .)
    EQEQ            reduce using rule 153 (Literal -> STRING .)
    NOTEQ           reduce using rule 153 (Literal -> STRING .)
    LEQ             reduce using rule 153 (Literal -> STRING .)
    GEQ             reduce using rule 153 (Literal -> STRING .)
    GREAT           reduce using rule 153 (Literal -> STRING .)
    LESS            reduce using rule 153 (Literal -> STRING .)
    AMPAMP          reduce using rule 153 (Literal -> STRING .)
    OROR            reduce using rule 153 (Literal -> STRING .)
    COMMA           reduce using rule 153 (Literal -> STRING .)
    SEMICOL         reduce using rule 153 (Literal -> STRING .)
    LBRACE          reduce using rule 153 (Literal -> STRING .)
    RBRACE          reduce using rule 153 (Literal -> STRING .)
    PLUSEQ          reduce using rule 153 (Literal -> STRING .)
    MINUSEQ         reduce using rule 153 (Literal -> STRING .)
    TIMESEQ         reduce using rule 153 (Literal -> STRING .)
    DIVIDEEQ        reduce using rule 153 (Literal -> STRING .)
    MODEQ           reduce using rule 153 (Literal -> STRING .)
    OREQ            reduce using rule 153 (Literal -> STRING .)
    AMPEQ           reduce using rule 153 (Literal -> STRING .)
    CAREQ           reduce using rule 153 (Literal -> STRING .)
    SHL_ASSIGN      reduce using rule 153 (Literal -> STRING .)
    SHR_ASSIGN      reduce using rule 153 (Literal -> STRING .)
    AMPCAREQ        reduce using rule 153 (Literal -> STRING .)
    PLUSPLUS        reduce using rule 153 (Literal -> STRING .)
    MINUSMIN        reduce using rule 153 (Literal -> STRING .)
    EQUAL           reduce using rule 153 (Literal -> STRING .)
    COLONEQ         reduce using rule 153 (Literal -> STRING .)
    RBRACK          reduce using rule 153 (Literal -> STRING .)
    PIPE            reduce using rule 153 (Literal -> STRING .)
    RPAREN          reduce using rule 153 (Literal -> STRING .)
    RIGHT_ANGLE     reduce using rule 153 (Literal -> STRING .)
    COLON           reduce using rule 153 (Literal -> STRING .)
    RIGHT_RIGHT     reduce using rule 153 (Literal -> STRING .)
    DDD             reduce using rule 153 (Literal -> STRING .)


state 43

    (16) Declaration -> FuncDecl .

    SEMICOL         reduce using rule 16 (Declaration -> FuncDecl .)


state 44

    (192) NonDeclStmt -> IfStmt .

    SEMICOL         reduce using rule 192 (NonDeclStmt -> IfStmt .)


state 45

    (121) LabelName -> NewName .

    COLON           reduce using rule 121 (LabelName -> NewName .)


state 46

    (151) Literal -> INTEGER .

    DOT             reduce using rule 151 (Literal -> INTEGER .)
    LBRACK          reduce using rule 151 (Literal -> INTEGER .)
    LEFT_LEFT       reduce using rule 151 (Literal -> INTEGER .)
    LPAREN          reduce using rule 151 (Literal -> INTEGER .)
    DIVIDE          reduce using rule 151 (Literal -> INTEGER .)
    MOD             reduce using rule 151 (Literal -> INTEGER .)
    SHL             reduce using rule 151 (Literal -> INTEGER .)
    SHR             reduce using rule 151 (Literal -> INTEGER .)
    AMPERS          reduce using rule 151 (Literal -> INTEGER .)
    AMPCAR          reduce using rule 151 (Literal -> INTEGER .)
    TIMES           reduce using rule 151 (Literal -> INTEGER .)
    PLUS            reduce using rule 151 (Literal -> INTEGER .)
    MINUS           reduce using rule 151 (Literal -> INTEGER .)
    XOR             reduce using rule 151 (Literal -> INTEGER .)
    OR              reduce using rule 151 (Literal -> INTEGER .)
    EQEQ            reduce using rule 151 (Literal -> INTEGER .)
    NOTEQ           reduce using rule 151 (Literal -> INTEGER .)
    LEQ             reduce using rule 151 (Literal -> INTEGER .)
    GEQ             reduce using rule 151 (Literal -> INTEGER .)
    GREAT           reduce using rule 151 (Literal -> INTEGER .)
    LESS            reduce using rule 151 (Literal -> INTEGER .)
    AMPAMP          reduce using rule 151 (Literal -> INTEGER .)
    OROR            reduce using rule 151 (Literal -> INTEGER .)
    COMMA           reduce using rule 151 (Literal -> INTEGER .)
    SEMICOL         reduce using rule 151 (Literal -> INTEGER .)
    LBRACE          reduce using rule 151 (Literal -> INTEGER .)
    RBRACE          reduce using rule 151 (Literal -> INTEGER .)
    PLUSEQ          reduce using rule 151 (Literal -> INTEGER .)
    MINUSEQ         reduce using rule 151 (Literal -> INTEGER .)
    TIMESEQ         reduce using rule 151 (Literal -> INTEGER .)
    DIVIDEEQ        reduce using rule 151 (Literal -> INTEGER .)
    MODEQ           reduce using rule 151 (Literal -> INTEGER .)
    OREQ            reduce using rule 151 (Literal -> INTEGER .)
    AMPEQ           reduce using rule 151 (Literal -> INTEGER .)
    CAREQ           reduce using rule 151 (Literal -> INTEGER .)
    SHL_ASSIGN      reduce using rule 151 (Literal -> INTEGER .)
    SHR_ASSIGN      reduce using rule 151 (Literal -> INTEGER .)
    AMPCAREQ        reduce using rule 151 (Literal -> INTEGER .)
    PLUSPLUS        reduce using rule 151 (Literal -> INTEGER .)
    MINUSMIN        reduce using rule 151 (Literal -> INTEGER .)
    EQUAL           reduce using rule 151 (Literal -> INTEGER .)
    COLONEQ         reduce using rule 151 (Literal -> INTEGER .)
    RBRACK          reduce using rule 151 (Literal -> INTEGER .)
    PIPE            reduce using rule 151 (Literal -> INTEGER .)
    RPAREN          reduce using rule 151 (Literal -> INTEGER .)
    RIGHT_ANGLE     reduce using rule 151 (Literal -> INTEGER .)
    COLON           reduce using rule 151 (Literal -> INTEGER .)
    RIGHT_RIGHT     reduce using rule 151 (Literal -> INTEGER .)
    DDD             reduce using rule 151 (Literal -> INTEGER .)


state 47

    (96) FuncDecl -> FUNCTION . FuncDecl_ FuncBody
    (99) FuncType -> FUNCTION . ArgList FuncRes
    (97) FuncDecl_ -> . IDENTIFIER ArgList FuncRes
    (98) FuncDecl_ -> . LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (100) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (101) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    IDENTIFIER      shift and go to state 131
    LEFT_OR         shift and go to state 130
    LPAREN          shift and go to state 129

    FuncDecl_                      shift and go to state 128
    ArgList                        shift and go to state 127

state 48

    (70) ForStmt -> FOR . ForBody
    (69) ForBody -> . ForHeader LoopBody
    (66) ForHeader -> . OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (67) ForHeader -> . OSimpleStmt
    (68) ForHeader -> . RangeStmt
    (135) OSimpleStmt -> .
    (136) OSimpleStmt -> . SimpleStmt
    (63) RangeStmt -> . ExprList EQUAL RANGE Expr
    (64) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (65) RangeStmt -> . RANGE Expr
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 135 (OSimpleStmt -> .)
    LBRACE          reduce using rule 135 (OSimpleStmt -> .)
    RANGE           shift and go to state 136
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    ForBody                        shift and go to state 135
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 137
    OSimpleStmt                    shift and go to state 132
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    FuncType                       shift and go to state 70
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    ForHeader                      shift and go to state 138
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 139
    PseudoCall                     shift and go to state 49
    RangeStmt                      shift and go to state 133
    ExprList                       shift and go to state 134
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 49

    (212) PExprNoParen -> PseudoCall .

    DOT             reduce using rule 212 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 212 (PExprNoParen -> PseudoCall .)
    LPAREN          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    DIVIDE          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    MOD             reduce using rule 212 (PExprNoParen -> PseudoCall .)
    SHL             reduce using rule 212 (PExprNoParen -> PseudoCall .)
    SHR             reduce using rule 212 (PExprNoParen -> PseudoCall .)
    AMPERS          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    AMPCAR          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    TIMES           reduce using rule 212 (PExprNoParen -> PseudoCall .)
    PLUS            reduce using rule 212 (PExprNoParen -> PseudoCall .)
    MINUS           reduce using rule 212 (PExprNoParen -> PseudoCall .)
    XOR             reduce using rule 212 (PExprNoParen -> PseudoCall .)
    OR              reduce using rule 212 (PExprNoParen -> PseudoCall .)
    EQEQ            reduce using rule 212 (PExprNoParen -> PseudoCall .)
    NOTEQ           reduce using rule 212 (PExprNoParen -> PseudoCall .)
    LEQ             reduce using rule 212 (PExprNoParen -> PseudoCall .)
    GEQ             reduce using rule 212 (PExprNoParen -> PseudoCall .)
    GREAT           reduce using rule 212 (PExprNoParen -> PseudoCall .)
    LESS            reduce using rule 212 (PExprNoParen -> PseudoCall .)
    AMPAMP          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    OROR            reduce using rule 212 (PExprNoParen -> PseudoCall .)
    SEMICOL         reduce using rule 212 (PExprNoParen -> PseudoCall .)
    LBRACE          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    COMMA           reduce using rule 212 (PExprNoParen -> PseudoCall .)
    RBRACK          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    PLUSEQ          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    MINUSEQ         reduce using rule 212 (PExprNoParen -> PseudoCall .)
    TIMESEQ         reduce using rule 212 (PExprNoParen -> PseudoCall .)
    DIVIDEEQ        reduce using rule 212 (PExprNoParen -> PseudoCall .)
    MODEQ           reduce using rule 212 (PExprNoParen -> PseudoCall .)
    OREQ            reduce using rule 212 (PExprNoParen -> PseudoCall .)
    AMPEQ           reduce using rule 212 (PExprNoParen -> PseudoCall .)
    CAREQ           reduce using rule 212 (PExprNoParen -> PseudoCall .)
    SHL_ASSIGN      reduce using rule 212 (PExprNoParen -> PseudoCall .)
    SHR_ASSIGN      reduce using rule 212 (PExprNoParen -> PseudoCall .)
    AMPCAREQ        reduce using rule 212 (PExprNoParen -> PseudoCall .)
    PLUSPLUS        reduce using rule 212 (PExprNoParen -> PseudoCall .)
    MINUSMIN        reduce using rule 212 (PExprNoParen -> PseudoCall .)
    EQUAL           reduce using rule 212 (PExprNoParen -> PseudoCall .)
    COLONEQ         reduce using rule 212 (PExprNoParen -> PseudoCall .)
    PIPE            reduce using rule 212 (PExprNoParen -> PseudoCall .)
    RPAREN          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    RIGHT_ANGLE     reduce using rule 212 (PExprNoParen -> PseudoCall .)
    COLON           reduce using rule 212 (PExprNoParen -> PseudoCall .)
    RIGHT_RIGHT     reduce using rule 212 (PExprNoParen -> PseudoCall .)
    DDD             reduce using rule 212 (PExprNoParen -> PseudoCall .)


state 50

    (94) InterfaceType -> INTERFACE . LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> INTERFACE . LBRACE RBRACE

    LBRACE          shift and go to state 140


state 51

    (204) PExprNoParen -> Literal .

    DOT             reduce using rule 204 (PExprNoParen -> Literal .)
    LBRACK          reduce using rule 204 (PExprNoParen -> Literal .)
    LEFT_LEFT       reduce using rule 204 (PExprNoParen -> Literal .)
    LPAREN          reduce using rule 204 (PExprNoParen -> Literal .)
    DIVIDE          reduce using rule 204 (PExprNoParen -> Literal .)
    MOD             reduce using rule 204 (PExprNoParen -> Literal .)
    SHL             reduce using rule 204 (PExprNoParen -> Literal .)
    SHR             reduce using rule 204 (PExprNoParen -> Literal .)
    AMPERS          reduce using rule 204 (PExprNoParen -> Literal .)
    AMPCAR          reduce using rule 204 (PExprNoParen -> Literal .)
    TIMES           reduce using rule 204 (PExprNoParen -> Literal .)
    PLUS            reduce using rule 204 (PExprNoParen -> Literal .)
    MINUS           reduce using rule 204 (PExprNoParen -> Literal .)
    XOR             reduce using rule 204 (PExprNoParen -> Literal .)
    OR              reduce using rule 204 (PExprNoParen -> Literal .)
    EQEQ            reduce using rule 204 (PExprNoParen -> Literal .)
    NOTEQ           reduce using rule 204 (PExprNoParen -> Literal .)
    LEQ             reduce using rule 204 (PExprNoParen -> Literal .)
    GEQ             reduce using rule 204 (PExprNoParen -> Literal .)
    GREAT           reduce using rule 204 (PExprNoParen -> Literal .)
    LESS            reduce using rule 204 (PExprNoParen -> Literal .)
    AMPAMP          reduce using rule 204 (PExprNoParen -> Literal .)
    OROR            reduce using rule 204 (PExprNoParen -> Literal .)
    SEMICOL         reduce using rule 204 (PExprNoParen -> Literal .)
    LBRACE          reduce using rule 204 (PExprNoParen -> Literal .)
    COMMA           reduce using rule 204 (PExprNoParen -> Literal .)
    RBRACK          reduce using rule 204 (PExprNoParen -> Literal .)
    PLUSEQ          reduce using rule 204 (PExprNoParen -> Literal .)
    MINUSEQ         reduce using rule 204 (PExprNoParen -> Literal .)
    TIMESEQ         reduce using rule 204 (PExprNoParen -> Literal .)
    DIVIDEEQ        reduce using rule 204 (PExprNoParen -> Literal .)
    MODEQ           reduce using rule 204 (PExprNoParen -> Literal .)
    OREQ            reduce using rule 204 (PExprNoParen -> Literal .)
    AMPEQ           reduce using rule 204 (PExprNoParen -> Literal .)
    CAREQ           reduce using rule 204 (PExprNoParen -> Literal .)
    SHL_ASSIGN      reduce using rule 204 (PExprNoParen -> Literal .)
    SHR_ASSIGN      reduce using rule 204 (PExprNoParen -> Literal .)
    AMPCAREQ        reduce using rule 204 (PExprNoParen -> Literal .)
    PLUSPLUS        reduce using rule 204 (PExprNoParen -> Literal .)
    MINUSMIN        reduce using rule 204 (PExprNoParen -> Literal .)
    EQUAL           reduce using rule 204 (PExprNoParen -> Literal .)
    COLONEQ         reduce using rule 204 (PExprNoParen -> Literal .)
    PIPE            reduce using rule 204 (PExprNoParen -> Literal .)
    RPAREN          reduce using rule 204 (PExprNoParen -> Literal .)
    RIGHT_ANGLE     reduce using rule 204 (PExprNoParen -> Literal .)
    COLON           reduce using rule 204 (PExprNoParen -> Literal .)
    RIGHT_RIGHT     reduce using rule 204 (PExprNoParen -> Literal .)
    DDD             reduce using rule 204 (PExprNoParen -> Literal .)


state 52

    (231) Prec5Expr_ -> UExpr .

    DIVIDE          reduce using rule 231 (Prec5Expr_ -> UExpr .)
    MOD             reduce using rule 231 (Prec5Expr_ -> UExpr .)
    SHL             reduce using rule 231 (Prec5Expr_ -> UExpr .)
    SHR             reduce using rule 231 (Prec5Expr_ -> UExpr .)
    AMPERS          reduce using rule 231 (Prec5Expr_ -> UExpr .)
    AMPCAR          reduce using rule 231 (Prec5Expr_ -> UExpr .)
    TIMES           reduce using rule 231 (Prec5Expr_ -> UExpr .)
    PLUS            reduce using rule 231 (Prec5Expr_ -> UExpr .)
    MINUS           reduce using rule 231 (Prec5Expr_ -> UExpr .)
    XOR             reduce using rule 231 (Prec5Expr_ -> UExpr .)
    OR              reduce using rule 231 (Prec5Expr_ -> UExpr .)
    EQEQ            reduce using rule 231 (Prec5Expr_ -> UExpr .)
    NOTEQ           reduce using rule 231 (Prec5Expr_ -> UExpr .)
    LEQ             reduce using rule 231 (Prec5Expr_ -> UExpr .)
    GEQ             reduce using rule 231 (Prec5Expr_ -> UExpr .)
    GREAT           reduce using rule 231 (Prec5Expr_ -> UExpr .)
    LESS            reduce using rule 231 (Prec5Expr_ -> UExpr .)
    AMPAMP          reduce using rule 231 (Prec5Expr_ -> UExpr .)
    COLON           reduce using rule 231 (Prec5Expr_ -> UExpr .)
    OROR            reduce using rule 231 (Prec5Expr_ -> UExpr .)
    COMMA           reduce using rule 231 (Prec5Expr_ -> UExpr .)
    RIGHT_RIGHT     reduce using rule 231 (Prec5Expr_ -> UExpr .)
    PLUSEQ          reduce using rule 231 (Prec5Expr_ -> UExpr .)
    MINUSEQ         reduce using rule 231 (Prec5Expr_ -> UExpr .)
    TIMESEQ         reduce using rule 231 (Prec5Expr_ -> UExpr .)
    DIVIDEEQ        reduce using rule 231 (Prec5Expr_ -> UExpr .)
    MODEQ           reduce using rule 231 (Prec5Expr_ -> UExpr .)
    OREQ            reduce using rule 231 (Prec5Expr_ -> UExpr .)
    AMPEQ           reduce using rule 231 (Prec5Expr_ -> UExpr .)
    CAREQ           reduce using rule 231 (Prec5Expr_ -> UExpr .)
    SHL_ASSIGN      reduce using rule 231 (Prec5Expr_ -> UExpr .)
    SHR_ASSIGN      reduce using rule 231 (Prec5Expr_ -> UExpr .)
    AMPCAREQ        reduce using rule 231 (Prec5Expr_ -> UExpr .)
    PLUSPLUS        reduce using rule 231 (Prec5Expr_ -> UExpr .)
    MINUSMIN        reduce using rule 231 (Prec5Expr_ -> UExpr .)
    SEMICOL         reduce using rule 231 (Prec5Expr_ -> UExpr .)
    EQUAL           reduce using rule 231 (Prec5Expr_ -> UExpr .)
    COLONEQ         reduce using rule 231 (Prec5Expr_ -> UExpr .)
    LBRACE          reduce using rule 231 (Prec5Expr_ -> UExpr .)
    PIPE            reduce using rule 231 (Prec5Expr_ -> UExpr .)
    RBRACK          reduce using rule 231 (Prec5Expr_ -> UExpr .)
    RPAREN          reduce using rule 231 (Prec5Expr_ -> UExpr .)
    RIGHT_ANGLE     reduce using rule 231 (Prec5Expr_ -> UExpr .)
    DDD             reduce using rule 231 (Prec5Expr_ -> UExpr .)


state 53

    (217) PExprNoParen -> ForCompExpr .

    DOT             reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    LBRACK          reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    LEFT_LEFT       reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    LPAREN          reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    DIVIDE          reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    MOD             reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    SHL             reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    SHR             reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    AMPERS          reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    AMPCAR          reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    TIMES           reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    PLUS            reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    MINUS           reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    XOR             reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    OR              reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    EQEQ            reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    NOTEQ           reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    LEQ             reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    GEQ             reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    GREAT           reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    LESS            reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    AMPAMP          reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    OROR            reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    SEMICOL         reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    LBRACE          reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    COMMA           reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    RBRACK          reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    PLUSEQ          reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    MINUSEQ         reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    TIMESEQ         reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    DIVIDEEQ        reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    MODEQ           reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    OREQ            reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    AMPEQ           reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    CAREQ           reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    SHL_ASSIGN      reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    SHR_ASSIGN      reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    AMPCAREQ        reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    PLUSPLUS        reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    MINUSMIN        reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    EQUAL           reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    COLONEQ         reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    PIPE            reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    RPAREN          reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    RIGHT_ANGLE     reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    COLON           reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    RIGHT_RIGHT     reduce using rule 217 (PExprNoParen -> ForCompExpr .)
    DDD             reduce using rule 217 (PExprNoParen -> ForCompExpr .)


state 54

    (25) CommonDecl -> TYPE . TypeDecl
    (26) CommonDecl -> TYPE . LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> TYPE . LPAREN RPAREN
    (37) TypeDecl -> . TypeDeclName NType
    (36) TypeDeclName -> . IDENTIFIER

    LPAREN          shift and go to state 142
    IDENTIFIER      shift and go to state 144

    TypeDecl                       shift and go to state 141
    TypeDeclName                   shift and go to state 143

state 55

    (191) NonDeclStmt -> SwitchStmt .

    SEMICOL         reduce using rule 191 (NonDeclStmt -> SwitchStmt .)


state 56

    (263) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (88) OtherType -> LBRACK . OExpr RBRACK NType
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (139) OExpr -> .
    (140) OExpr -> . Expr
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    RBRACK          reduce using rule 139 (OExpr -> .)
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 145
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 146
    PExpr                          shift and go to state 69

state 57

    (196) NonDeclStmt -> CONTINUE . ONewName
    (137) ONewName -> .
    (138) ONewName -> . NewName
    (122) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 137 (ONewName -> .)
    IDENTIFIER      shift and go to state 148

    NewName                        shift and go to state 147
    ONewName                       shift and go to state 149

state 58

    (258) UExpr -> NOT . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 150
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 59

    (255) Expr -> CONSTANTS .

    OROR            reduce using rule 255 (Expr -> CONSTANTS .)
    COMMA           reduce using rule 255 (Expr -> CONSTANTS .)
    SEMICOL         reduce using rule 255 (Expr -> CONSTANTS .)
    RPAREN          reduce using rule 255 (Expr -> CONSTANTS .)
    PLUSEQ          reduce using rule 255 (Expr -> CONSTANTS .)
    MINUSEQ         reduce using rule 255 (Expr -> CONSTANTS .)
    TIMESEQ         reduce using rule 255 (Expr -> CONSTANTS .)
    DIVIDEEQ        reduce using rule 255 (Expr -> CONSTANTS .)
    MODEQ           reduce using rule 255 (Expr -> CONSTANTS .)
    OREQ            reduce using rule 255 (Expr -> CONSTANTS .)
    AMPEQ           reduce using rule 255 (Expr -> CONSTANTS .)
    CAREQ           reduce using rule 255 (Expr -> CONSTANTS .)
    SHL_ASSIGN      reduce using rule 255 (Expr -> CONSTANTS .)
    SHR_ASSIGN      reduce using rule 255 (Expr -> CONSTANTS .)
    AMPCAREQ        reduce using rule 255 (Expr -> CONSTANTS .)
    PLUSPLUS        reduce using rule 255 (Expr -> CONSTANTS .)
    MINUSMIN        reduce using rule 255 (Expr -> CONSTANTS .)
    LBRACE          reduce using rule 255 (Expr -> CONSTANTS .)
    EQUAL           reduce using rule 255 (Expr -> CONSTANTS .)
    COLONEQ         reduce using rule 255 (Expr -> CONSTANTS .)
    DDD             reduce using rule 255 (Expr -> CONSTANTS .)
    COLON           reduce using rule 255 (Expr -> CONSTANTS .)
    RIGHT_RIGHT     reduce using rule 255 (Expr -> CONSTANTS .)
    RBRACK          reduce using rule 255 (Expr -> CONSTANTS .)
    PIPE            reduce using rule 255 (Expr -> CONSTANTS .)
    RIGHT_ANGLE     reduce using rule 255 (Expr -> CONSTANTS .)


state 60

    (202) PExpr -> PExprNoParen .

    DOT             reduce using rule 202 (PExpr -> PExprNoParen .)
    LBRACK          reduce using rule 202 (PExpr -> PExprNoParen .)
    LEFT_LEFT       reduce using rule 202 (PExpr -> PExprNoParen .)
    LPAREN          reduce using rule 202 (PExpr -> PExprNoParen .)
    DIVIDE          reduce using rule 202 (PExpr -> PExprNoParen .)
    MOD             reduce using rule 202 (PExpr -> PExprNoParen .)
    SHL             reduce using rule 202 (PExpr -> PExprNoParen .)
    SHR             reduce using rule 202 (PExpr -> PExprNoParen .)
    AMPERS          reduce using rule 202 (PExpr -> PExprNoParen .)
    AMPCAR          reduce using rule 202 (PExpr -> PExprNoParen .)
    TIMES           reduce using rule 202 (PExpr -> PExprNoParen .)
    PLUS            reduce using rule 202 (PExpr -> PExprNoParen .)
    MINUS           reduce using rule 202 (PExpr -> PExprNoParen .)
    XOR             reduce using rule 202 (PExpr -> PExprNoParen .)
    OR              reduce using rule 202 (PExpr -> PExprNoParen .)
    EQEQ            reduce using rule 202 (PExpr -> PExprNoParen .)
    NOTEQ           reduce using rule 202 (PExpr -> PExprNoParen .)
    LEQ             reduce using rule 202 (PExpr -> PExprNoParen .)
    GEQ             reduce using rule 202 (PExpr -> PExprNoParen .)
    GREAT           reduce using rule 202 (PExpr -> PExprNoParen .)
    LESS            reduce using rule 202 (PExpr -> PExprNoParen .)
    AMPAMP          reduce using rule 202 (PExpr -> PExprNoParen .)
    PLUSEQ          reduce using rule 202 (PExpr -> PExprNoParen .)
    MINUSEQ         reduce using rule 202 (PExpr -> PExprNoParen .)
    TIMESEQ         reduce using rule 202 (PExpr -> PExprNoParen .)
    DIVIDEEQ        reduce using rule 202 (PExpr -> PExprNoParen .)
    MODEQ           reduce using rule 202 (PExpr -> PExprNoParen .)
    OREQ            reduce using rule 202 (PExpr -> PExprNoParen .)
    AMPEQ           reduce using rule 202 (PExpr -> PExprNoParen .)
    CAREQ           reduce using rule 202 (PExpr -> PExprNoParen .)
    SHL_ASSIGN      reduce using rule 202 (PExpr -> PExprNoParen .)
    SHR_ASSIGN      reduce using rule 202 (PExpr -> PExprNoParen .)
    AMPCAREQ        reduce using rule 202 (PExpr -> PExprNoParen .)
    PLUSPLUS        reduce using rule 202 (PExpr -> PExprNoParen .)
    MINUSMIN        reduce using rule 202 (PExpr -> PExprNoParen .)
    OROR            reduce using rule 202 (PExpr -> PExprNoParen .)
    SEMICOL         reduce using rule 202 (PExpr -> PExprNoParen .)
    EQUAL           reduce using rule 202 (PExpr -> PExprNoParen .)
    COLONEQ         reduce using rule 202 (PExpr -> PExprNoParen .)
    COMMA           reduce using rule 202 (PExpr -> PExprNoParen .)
    LBRACE          reduce using rule 202 (PExpr -> PExprNoParen .)
    RBRACK          reduce using rule 202 (PExpr -> PExprNoParen .)
    RPAREN          reduce using rule 202 (PExpr -> PExprNoParen .)
    DDD             reduce using rule 202 (PExpr -> PExprNoParen .)
    COLON           reduce using rule 202 (PExpr -> PExprNoParen .)
    PIPE            reduce using rule 202 (PExpr -> PExprNoParen .)
    RIGHT_ANGLE     reduce using rule 202 (PExpr -> PExprNoParen .)
    RIGHT_RIGHT     reduce using rule 202 (PExpr -> PExprNoParen .)


state 61

    (199) NonDeclStmt -> RETURN . OExprList
    (141) OExprList -> .
    (142) OExprList -> . ExprList
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 141 (OExprList -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 151
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 152
    OExprList                      shift and go to state 153
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 62

    (230) SwitchStmt -> SWITCH . IfHeader LBRACE CaseBlockList RBRACE
    (71) IfHeader -> . OSimpleStmt
    (72) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (135) OSimpleStmt -> .
    (136) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 135 (OSimpleStmt -> .)
    LBRACE          reduce using rule 135 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 137
    OSimpleStmt                    shift and go to state 154
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    IfHeader                       shift and go to state 155
    PExpr                          shift and go to state 69

state 63

    (156) DeclList -> DeclList cmtlist Declaration . SEMICOL

    SEMICOL         shift and go to state 156


state 64

    (91) OtherType -> InterfaceType .

    RPAREN          reduce using rule 91 (OtherType -> InterfaceType .)
    DDD             reduce using rule 91 (OtherType -> InterfaceType .)
    COMMA           reduce using rule 91 (OtherType -> InterfaceType .)
    COLON           reduce using rule 91 (OtherType -> InterfaceType .)
    EQUAL           reduce using rule 91 (OtherType -> InterfaceType .)
    COLONEQ         reduce using rule 91 (OtherType -> InterfaceType .)
    LEFT_ANGLE      reduce using rule 91 (OtherType -> InterfaceType .)
    LEFT_LEFT       reduce using rule 91 (OtherType -> InterfaceType .)
    SEMICOL         reduce using rule 91 (OtherType -> InterfaceType .)
    RBRACE          reduce using rule 91 (OtherType -> InterfaceType .)
    RBRACK          reduce using rule 91 (OtherType -> InterfaceType .)
    OR_RIGHT        reduce using rule 91 (OtherType -> InterfaceType .)
    LBRACE          reduce using rule 91 (OtherType -> InterfaceType .)
    INTEGER         reduce using rule 91 (OtherType -> InterfaceType .)
    FLOAT           reduce using rule 91 (OtherType -> InterfaceType .)
    STRING          reduce using rule 91 (OtherType -> InterfaceType .)


state 65

    (122) NewName -> IDENTIFIER .
    (176) Name -> IDENTIFIER .

    COLON           reduce using rule 122 (NewName -> IDENTIFIER .)
    DOT             reduce using rule 176 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 176 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 176 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 176 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 176 (Name -> IDENTIFIER .)
    MOD             reduce using rule 176 (Name -> IDENTIFIER .)
    SHL             reduce using rule 176 (Name -> IDENTIFIER .)
    SHR             reduce using rule 176 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 176 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 176 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 176 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 176 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 176 (Name -> IDENTIFIER .)
    XOR             reduce using rule 176 (Name -> IDENTIFIER .)
    OR              reduce using rule 176 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 176 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 176 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 176 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 176 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 176 (Name -> IDENTIFIER .)
    LESS            reduce using rule 176 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 176 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 176 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 176 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 176 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 176 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 176 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 176 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 176 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 176 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 176 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 176 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 176 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 176 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 176 (Name -> IDENTIFIER .)
    OROR            reduce using rule 176 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 176 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 176 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 176 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 176 (Name -> IDENTIFIER .)


state 66

    (214) PExprNoParen -> CompType . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LEFT_LEFT       shift and go to state 157


state 67

    (90) OtherType -> StructType .

    RPAREN          reduce using rule 90 (OtherType -> StructType .)
    DDD             reduce using rule 90 (OtherType -> StructType .)
    COMMA           reduce using rule 90 (OtherType -> StructType .)
    COLON           reduce using rule 90 (OtherType -> StructType .)
    EQUAL           reduce using rule 90 (OtherType -> StructType .)
    COLONEQ         reduce using rule 90 (OtherType -> StructType .)
    LEFT_ANGLE      reduce using rule 90 (OtherType -> StructType .)
    LEFT_LEFT       reduce using rule 90 (OtherType -> StructType .)
    SEMICOL         reduce using rule 90 (OtherType -> StructType .)
    RBRACE          reduce using rule 90 (OtherType -> StructType .)
    RBRACK          reduce using rule 90 (OtherType -> StructType .)
    OR_RIGHT        reduce using rule 90 (OtherType -> StructType .)
    LBRACE          reduce using rule 90 (OtherType -> StructType .)
    INTEGER         reduce using rule 90 (OtherType -> StructType .)
    FLOAT           reduce using rule 90 (OtherType -> StructType .)
    STRING          reduce using rule 90 (OtherType -> StructType .)


state 68

    (195) NonDeclStmt -> BREAK . ONewName
    (137) ONewName -> .
    (138) ONewName -> . NewName
    (122) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 137 (ONewName -> .)
    IDENTIFIER      shift and go to state 148

    NewName                        shift and go to state 147
    ONewName                       shift and go to state 158

state 69

    (256) UExpr -> PExpr .
    (206) PExprNoParen -> PExpr . DOT IDENTIFIER
    (207) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> PExpr . DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (210) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (215) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (264) PseudoCall -> PExpr . LPAREN RPAREN
    (265) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN

    DIVIDE          reduce using rule 256 (UExpr -> PExpr .)
    MOD             reduce using rule 256 (UExpr -> PExpr .)
    SHL             reduce using rule 256 (UExpr -> PExpr .)
    SHR             reduce using rule 256 (UExpr -> PExpr .)
    AMPERS          reduce using rule 256 (UExpr -> PExpr .)
    AMPCAR          reduce using rule 256 (UExpr -> PExpr .)
    TIMES           reduce using rule 256 (UExpr -> PExpr .)
    PLUS            reduce using rule 256 (UExpr -> PExpr .)
    MINUS           reduce using rule 256 (UExpr -> PExpr .)
    XOR             reduce using rule 256 (UExpr -> PExpr .)
    OR              reduce using rule 256 (UExpr -> PExpr .)
    EQEQ            reduce using rule 256 (UExpr -> PExpr .)
    NOTEQ           reduce using rule 256 (UExpr -> PExpr .)
    LEQ             reduce using rule 256 (UExpr -> PExpr .)
    GEQ             reduce using rule 256 (UExpr -> PExpr .)
    GREAT           reduce using rule 256 (UExpr -> PExpr .)
    LESS            reduce using rule 256 (UExpr -> PExpr .)
    AMPAMP          reduce using rule 256 (UExpr -> PExpr .)
    OROR            reduce using rule 256 (UExpr -> PExpr .)
    COLON           reduce using rule 256 (UExpr -> PExpr .)
    EQUAL           reduce using rule 256 (UExpr -> PExpr .)
    COLONEQ         reduce using rule 256 (UExpr -> PExpr .)
    COMMA           reduce using rule 256 (UExpr -> PExpr .)
    PLUSEQ          reduce using rule 256 (UExpr -> PExpr .)
    MINUSEQ         reduce using rule 256 (UExpr -> PExpr .)
    TIMESEQ         reduce using rule 256 (UExpr -> PExpr .)
    DIVIDEEQ        reduce using rule 256 (UExpr -> PExpr .)
    MODEQ           reduce using rule 256 (UExpr -> PExpr .)
    OREQ            reduce using rule 256 (UExpr -> PExpr .)
    AMPEQ           reduce using rule 256 (UExpr -> PExpr .)
    CAREQ           reduce using rule 256 (UExpr -> PExpr .)
    SHL_ASSIGN      reduce using rule 256 (UExpr -> PExpr .)
    SHR_ASSIGN      reduce using rule 256 (UExpr -> PExpr .)
    AMPCAREQ        reduce using rule 256 (UExpr -> PExpr .)
    PLUSPLUS        reduce using rule 256 (UExpr -> PExpr .)
    MINUSMIN        reduce using rule 256 (UExpr -> PExpr .)
    SEMICOL         reduce using rule 256 (UExpr -> PExpr .)
    LBRACE          reduce using rule 256 (UExpr -> PExpr .)
    PIPE            reduce using rule 256 (UExpr -> PExpr .)
    RBRACK          reduce using rule 256 (UExpr -> PExpr .)
    RPAREN          reduce using rule 256 (UExpr -> PExpr .)
    RIGHT_ANGLE     reduce using rule 256 (UExpr -> PExpr .)
    RIGHT_RIGHT     reduce using rule 256 (UExpr -> PExpr .)
    DDD             reduce using rule 256 (UExpr -> PExpr .)
    DOT             shift and go to state 162
    LBRACK          shift and go to state 159
    LEFT_LEFT       shift and go to state 161
    LPAREN          shift and go to state 160


state 70

    (218) ConvType -> FuncType .
    (143) FuncLiteralDecl -> FuncType .

    LEFT_ANGLE      reduce using rule 218 (ConvType -> FuncType .)
    LBRACE          reduce using rule 143 (FuncLiteralDecl -> FuncType .)


state 71

    (189) NonDeclStmt -> SimpleStmt .

    SEMICOL         reduce using rule 189 (NonDeclStmt -> SimpleStmt .)


state 72

    (190) NonDeclStmt -> ForStmt .

    SEMICOL         reduce using rule 190 (NonDeclStmt -> ForStmt .)


state 73

    (198) NonDeclStmt -> GOTO . NewName
    (122) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 148

    NewName                        shift and go to state 163

state 74

    (205) PExprNoParen -> Name .

    DOT             reduce using rule 205 (PExprNoParen -> Name .)
    LBRACK          reduce using rule 205 (PExprNoParen -> Name .)
    LEFT_LEFT       reduce using rule 205 (PExprNoParen -> Name .)
    LPAREN          reduce using rule 205 (PExprNoParen -> Name .)
    DIVIDE          reduce using rule 205 (PExprNoParen -> Name .)
    MOD             reduce using rule 205 (PExprNoParen -> Name .)
    SHL             reduce using rule 205 (PExprNoParen -> Name .)
    SHR             reduce using rule 205 (PExprNoParen -> Name .)
    AMPERS          reduce using rule 205 (PExprNoParen -> Name .)
    AMPCAR          reduce using rule 205 (PExprNoParen -> Name .)
    TIMES           reduce using rule 205 (PExprNoParen -> Name .)
    PLUS            reduce using rule 205 (PExprNoParen -> Name .)
    MINUS           reduce using rule 205 (PExprNoParen -> Name .)
    XOR             reduce using rule 205 (PExprNoParen -> Name .)
    OR              reduce using rule 205 (PExprNoParen -> Name .)
    EQEQ            reduce using rule 205 (PExprNoParen -> Name .)
    NOTEQ           reduce using rule 205 (PExprNoParen -> Name .)
    LEQ             reduce using rule 205 (PExprNoParen -> Name .)
    GEQ             reduce using rule 205 (PExprNoParen -> Name .)
    GREAT           reduce using rule 205 (PExprNoParen -> Name .)
    LESS            reduce using rule 205 (PExprNoParen -> Name .)
    AMPAMP          reduce using rule 205 (PExprNoParen -> Name .)
    OROR            reduce using rule 205 (PExprNoParen -> Name .)
    SEMICOL         reduce using rule 205 (PExprNoParen -> Name .)
    LBRACE          reduce using rule 205 (PExprNoParen -> Name .)
    COMMA           reduce using rule 205 (PExprNoParen -> Name .)
    RBRACK          reduce using rule 205 (PExprNoParen -> Name .)
    PLUSEQ          reduce using rule 205 (PExprNoParen -> Name .)
    MINUSEQ         reduce using rule 205 (PExprNoParen -> Name .)
    TIMESEQ         reduce using rule 205 (PExprNoParen -> Name .)
    DIVIDEEQ        reduce using rule 205 (PExprNoParen -> Name .)
    MODEQ           reduce using rule 205 (PExprNoParen -> Name .)
    OREQ            reduce using rule 205 (PExprNoParen -> Name .)
    AMPEQ           reduce using rule 205 (PExprNoParen -> Name .)
    CAREQ           reduce using rule 205 (PExprNoParen -> Name .)
    SHL_ASSIGN      reduce using rule 205 (PExprNoParen -> Name .)
    SHR_ASSIGN      reduce using rule 205 (PExprNoParen -> Name .)
    AMPCAREQ        reduce using rule 205 (PExprNoParen -> Name .)
    PLUSPLUS        reduce using rule 205 (PExprNoParen -> Name .)
    MINUSMIN        reduce using rule 205 (PExprNoParen -> Name .)
    EQUAL           reduce using rule 205 (PExprNoParen -> Name .)
    COLONEQ         reduce using rule 205 (PExprNoParen -> Name .)
    PIPE            reduce using rule 205 (PExprNoParen -> Name .)
    RPAREN          reduce using rule 205 (PExprNoParen -> Name .)
    RIGHT_ANGLE     reduce using rule 205 (PExprNoParen -> Name .)
    COLON           reduce using rule 205 (PExprNoParen -> Name .)
    RIGHT_RIGHT     reduce using rule 205 (PExprNoParen -> Name .)
    DDD             reduce using rule 205 (PExprNoParen -> Name .)


state 75

    (17) Declaration -> NonDeclStmt .

    SEMICOL         reduce using rule 17 (Declaration -> NonDeclStmt .)


state 76

    (38) SimpleStmt -> Expr .
    (39) SimpleStmt -> Expr . PLUSEQ Expr
    (40) SimpleStmt -> Expr . MINUSEQ Expr
    (41) SimpleStmt -> Expr . TIMESEQ Expr
    (42) SimpleStmt -> Expr . DIVIDEEQ Expr
    (43) SimpleStmt -> Expr . MODEQ Expr
    (44) SimpleStmt -> Expr . OREQ Expr
    (45) SimpleStmt -> Expr . AMPEQ Expr
    (46) SimpleStmt -> Expr . CAREQ Expr
    (47) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (48) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (49) SimpleStmt -> Expr . AMPCAREQ Expr
    (52) SimpleStmt -> Expr . PLUSPLUS
    (53) SimpleStmt -> Expr . MINUSMIN
    (254) Expr -> Expr . OROR Prec2Expr_
    (145) ExprList -> Expr .

    SEMICOL         reduce using rule 38 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 38 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 167
    MINUSEQ         shift and go to state 171
    TIMESEQ         shift and go to state 166
    DIVIDEEQ        shift and go to state 177
    MODEQ           shift and go to state 168
    OREQ            shift and go to state 170
    AMPEQ           shift and go to state 173
    CAREQ           shift and go to state 165
    SHL_ASSIGN      shift and go to state 175
    SHR_ASSIGN      shift and go to state 169
    AMPCAREQ        shift and go to state 174
    PLUSPLUS        shift and go to state 176
    MINUSMIN        shift and go to state 172
    OROR            shift and go to state 164
    EQUAL           reduce using rule 145 (ExprList -> Expr .)
    COLONEQ         reduce using rule 145 (ExprList -> Expr .)
    COMMA           reduce using rule 145 (ExprList -> Expr .)


state 77

    (262) UExpr -> XOR . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 178
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 78

    (259) UExpr -> TIMES . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 179
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 79

    (203) PExpr -> LPAREN . ExprOrType RPAREN
    (227) ExprOrType -> . Expr
    (228) ExprOrType -> . NonExprType
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (143) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 182
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 186
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 180
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    ExprOrType                     shift and go to state 181
    NonExprType                    shift and go to state 183
    OtherType                      shift and go to state 184
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 185
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 80

    (73) IfStmt -> IF . IfHeader LoopBody ElseIfList Else
    (71) IfHeader -> . OSimpleStmt
    (72) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (135) OSimpleStmt -> .
    (136) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 135 (OSimpleStmt -> .)
    LBRACE          reduce using rule 135 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 137
    OSimpleStmt                    shift and go to state 154
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    IfHeader                       shift and go to state 187
    PExpr                          shift and go to state 69

state 81

    (92) StructType -> STRUCT . LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> STRUCT . LBRACE RBRACE

    LBRACE          shift and go to state 188


state 82

    (152) Literal -> FLOAT .

    DOT             reduce using rule 152 (Literal -> FLOAT .)
    LBRACK          reduce using rule 152 (Literal -> FLOAT .)
    LEFT_LEFT       reduce using rule 152 (Literal -> FLOAT .)
    LPAREN          reduce using rule 152 (Literal -> FLOAT .)
    DIVIDE          reduce using rule 152 (Literal -> FLOAT .)
    MOD             reduce using rule 152 (Literal -> FLOAT .)
    SHL             reduce using rule 152 (Literal -> FLOAT .)
    SHR             reduce using rule 152 (Literal -> FLOAT .)
    AMPERS          reduce using rule 152 (Literal -> FLOAT .)
    AMPCAR          reduce using rule 152 (Literal -> FLOAT .)
    TIMES           reduce using rule 152 (Literal -> FLOAT .)
    PLUS            reduce using rule 152 (Literal -> FLOAT .)
    MINUS           reduce using rule 152 (Literal -> FLOAT .)
    XOR             reduce using rule 152 (Literal -> FLOAT .)
    OR              reduce using rule 152 (Literal -> FLOAT .)
    EQEQ            reduce using rule 152 (Literal -> FLOAT .)
    NOTEQ           reduce using rule 152 (Literal -> FLOAT .)
    LEQ             reduce using rule 152 (Literal -> FLOAT .)
    GEQ             reduce using rule 152 (Literal -> FLOAT .)
    GREAT           reduce using rule 152 (Literal -> FLOAT .)
    LESS            reduce using rule 152 (Literal -> FLOAT .)
    AMPAMP          reduce using rule 152 (Literal -> FLOAT .)
    OROR            reduce using rule 152 (Literal -> FLOAT .)
    COMMA           reduce using rule 152 (Literal -> FLOAT .)
    SEMICOL         reduce using rule 152 (Literal -> FLOAT .)
    LBRACE          reduce using rule 152 (Literal -> FLOAT .)
    RBRACE          reduce using rule 152 (Literal -> FLOAT .)
    PLUSEQ          reduce using rule 152 (Literal -> FLOAT .)
    MINUSEQ         reduce using rule 152 (Literal -> FLOAT .)
    TIMESEQ         reduce using rule 152 (Literal -> FLOAT .)
    DIVIDEEQ        reduce using rule 152 (Literal -> FLOAT .)
    MODEQ           reduce using rule 152 (Literal -> FLOAT .)
    OREQ            reduce using rule 152 (Literal -> FLOAT .)
    AMPEQ           reduce using rule 152 (Literal -> FLOAT .)
    CAREQ           reduce using rule 152 (Literal -> FLOAT .)
    SHL_ASSIGN      reduce using rule 152 (Literal -> FLOAT .)
    SHR_ASSIGN      reduce using rule 152 (Literal -> FLOAT .)
    AMPCAREQ        reduce using rule 152 (Literal -> FLOAT .)
    PLUSPLUS        reduce using rule 152 (Literal -> FLOAT .)
    MINUSMIN        reduce using rule 152 (Literal -> FLOAT .)
    EQUAL           reduce using rule 152 (Literal -> FLOAT .)
    COLONEQ         reduce using rule 152 (Literal -> FLOAT .)
    RBRACK          reduce using rule 152 (Literal -> FLOAT .)
    PIPE            reduce using rule 152 (Literal -> FLOAT .)
    RPAREN          reduce using rule 152 (Literal -> FLOAT .)
    RIGHT_ANGLE     reduce using rule 152 (Literal -> FLOAT .)
    COLON           reduce using rule 152 (Literal -> FLOAT .)
    RIGHT_RIGHT     reduce using rule 152 (Literal -> FLOAT .)
    DDD             reduce using rule 152 (Literal -> FLOAT .)


state 83

    (9) ImportStmt -> ImportHere STRING .

    SEMICOL         reduce using rule 9 (ImportStmt -> ImportHere STRING .)
    RPAREN          reduce using rule 9 (ImportStmt -> ImportHere STRING .)


state 84

    (8) Import -> IMPORT LPAREN RPAREN .

    SEMICOL         reduce using rule 8 (Import -> IMPORT LPAREN RPAREN .)


state 85

    (7) Import -> IMPORT LPAREN ImportStmtList . OSemi RPAREN
    (11) ImportStmtList -> ImportStmtList . SEMICOL ImportStmt
    (133) OSemi -> .
    (134) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 189
    RPAREN          reduce using rule 133 (OSemi -> .)

    OSemi                          shift and go to state 190

state 86

    (10) ImportStmtList -> ImportStmt .

    SEMICOL         reduce using rule 10 (ImportStmtList -> ImportStmt .)
    RPAREN          reduce using rule 10 (ImportStmtList -> ImportStmt .)


state 87

    (248) Prec3Expr_ -> Prec3Expr_ GEQ . Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 191
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 88

    (247) Prec3Expr_ -> Prec3Expr_ LEQ . Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 192
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 89

    (245) Prec3Expr_ -> Prec3Expr_ EQEQ . Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 193
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 90

    (250) Prec3Expr_ -> Prec3Expr_ LESS . Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 194
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 91

    (249) Prec3Expr_ -> Prec3Expr_ GREAT . Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 195
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 92

    (246) Prec3Expr_ -> Prec3Expr_ NOTEQ . Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 196
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 93

    (213) PExprNoParen -> ConvType LEFT_ANGLE . Expr OComma RIGHT_ANGLE
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 197
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 94

    (176) Name -> IDENTIFIER .

    DOT             reduce using rule 176 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 176 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 176 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 176 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 176 (Name -> IDENTIFIER .)
    MOD             reduce using rule 176 (Name -> IDENTIFIER .)
    SHL             reduce using rule 176 (Name -> IDENTIFIER .)
    SHR             reduce using rule 176 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 176 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 176 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 176 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 176 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 176 (Name -> IDENTIFIER .)
    XOR             reduce using rule 176 (Name -> IDENTIFIER .)
    OR              reduce using rule 176 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 176 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 176 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 176 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 176 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 176 (Name -> IDENTIFIER .)
    LESS            reduce using rule 176 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 176 (Name -> IDENTIFIER .)
    OROR            reduce using rule 176 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 176 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 176 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 176 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 176 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 176 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 176 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 176 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 176 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 176 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 176 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 176 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 176 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 176 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 176 (Name -> IDENTIFIER .)
    LBRACE          reduce using rule 176 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 176 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 176 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 176 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 176 (Name -> IDENTIFIER .)
    PIPE            reduce using rule 176 (Name -> IDENTIFIER .)
    RBRACK          reduce using rule 176 (Name -> IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 176 (Name -> IDENTIFIER .)
    COLON           reduce using rule 176 (Name -> IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 176 (Name -> IDENTIFIER .)
    DDD             reduce using rule 176 (Name -> IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 176 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 176 (Name -> IDENTIFIER .)
    INTEGER         reduce using rule 176 (Name -> IDENTIFIER .)
    FLOAT           reduce using rule 176 (Name -> IDENTIFIER .)
    STRING          reduce using rule 176 (Name -> IDENTIFIER .)
    RBRACE          reduce using rule 176 (Name -> IDENTIFIER .)


state 95

    (99) FuncType -> FUNCTION . ArgList FuncRes
    (100) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (101) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 129

    ArgList                        shift and go to state 127

state 96

    (261) UExpr -> MINUS UExpr .

    DIVIDE          reduce using rule 261 (UExpr -> MINUS UExpr .)
    MOD             reduce using rule 261 (UExpr -> MINUS UExpr .)
    SHL             reduce using rule 261 (UExpr -> MINUS UExpr .)
    SHR             reduce using rule 261 (UExpr -> MINUS UExpr .)
    AMPERS          reduce using rule 261 (UExpr -> MINUS UExpr .)
    AMPCAR          reduce using rule 261 (UExpr -> MINUS UExpr .)
    TIMES           reduce using rule 261 (UExpr -> MINUS UExpr .)
    PLUS            reduce using rule 261 (UExpr -> MINUS UExpr .)
    MINUS           reduce using rule 261 (UExpr -> MINUS UExpr .)
    XOR             reduce using rule 261 (UExpr -> MINUS UExpr .)
    OR              reduce using rule 261 (UExpr -> MINUS UExpr .)
    EQEQ            reduce using rule 261 (UExpr -> MINUS UExpr .)
    NOTEQ           reduce using rule 261 (UExpr -> MINUS UExpr .)
    LEQ             reduce using rule 261 (UExpr -> MINUS UExpr .)
    GEQ             reduce using rule 261 (UExpr -> MINUS UExpr .)
    GREAT           reduce using rule 261 (UExpr -> MINUS UExpr .)
    LESS            reduce using rule 261 (UExpr -> MINUS UExpr .)
    AMPAMP          reduce using rule 261 (UExpr -> MINUS UExpr .)
    OROR            reduce using rule 261 (UExpr -> MINUS UExpr .)
    COLON           reduce using rule 261 (UExpr -> MINUS UExpr .)
    EQUAL           reduce using rule 261 (UExpr -> MINUS UExpr .)
    COLONEQ         reduce using rule 261 (UExpr -> MINUS UExpr .)
    COMMA           reduce using rule 261 (UExpr -> MINUS UExpr .)
    PLUSEQ          reduce using rule 261 (UExpr -> MINUS UExpr .)
    MINUSEQ         reduce using rule 261 (UExpr -> MINUS UExpr .)
    TIMESEQ         reduce using rule 261 (UExpr -> MINUS UExpr .)
    DIVIDEEQ        reduce using rule 261 (UExpr -> MINUS UExpr .)
    MODEQ           reduce using rule 261 (UExpr -> MINUS UExpr .)
    OREQ            reduce using rule 261 (UExpr -> MINUS UExpr .)
    AMPEQ           reduce using rule 261 (UExpr -> MINUS UExpr .)
    CAREQ           reduce using rule 261 (UExpr -> MINUS UExpr .)
    SHL_ASSIGN      reduce using rule 261 (UExpr -> MINUS UExpr .)
    SHR_ASSIGN      reduce using rule 261 (UExpr -> MINUS UExpr .)
    AMPCAREQ        reduce using rule 261 (UExpr -> MINUS UExpr .)
    PLUSPLUS        reduce using rule 261 (UExpr -> MINUS UExpr .)
    MINUSMIN        reduce using rule 261 (UExpr -> MINUS UExpr .)
    SEMICOL         reduce using rule 261 (UExpr -> MINUS UExpr .)
    LBRACE          reduce using rule 261 (UExpr -> MINUS UExpr .)
    PIPE            reduce using rule 261 (UExpr -> MINUS UExpr .)
    RBRACK          reduce using rule 261 (UExpr -> MINUS UExpr .)
    RPAREN          reduce using rule 261 (UExpr -> MINUS UExpr .)
    RIGHT_ANGLE     reduce using rule 261 (UExpr -> MINUS UExpr .)
    RIGHT_RIGHT     reduce using rule 261 (UExpr -> MINUS UExpr .)
    DDD             reduce using rule 261 (UExpr -> MINUS UExpr .)


state 97

    (197) NonDeclStmt -> DEFER PseudoCall .
    (212) PExprNoParen -> PseudoCall .

    SEMICOL         reduce using rule 197 (NonDeclStmt -> DEFER PseudoCall .)
    LPAREN          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    DOT             reduce using rule 212 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 212 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 212 (PExprNoParen -> PseudoCall .)


state 98

    (264) PseudoCall -> PExpr . LPAREN RPAREN
    (265) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN
    (206) PExprNoParen -> PExpr . DOT IDENTIFIER
    (207) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> PExpr . DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (210) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (215) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LPAREN          shift and go to state 160
    DOT             shift and go to state 162
    LBRACK          shift and go to state 159
    LEFT_LEFT       shift and go to state 161


state 99

    (260) UExpr -> PLUS UExpr .

    DIVIDE          reduce using rule 260 (UExpr -> PLUS UExpr .)
    MOD             reduce using rule 260 (UExpr -> PLUS UExpr .)
    SHL             reduce using rule 260 (UExpr -> PLUS UExpr .)
    SHR             reduce using rule 260 (UExpr -> PLUS UExpr .)
    AMPERS          reduce using rule 260 (UExpr -> PLUS UExpr .)
    AMPCAR          reduce using rule 260 (UExpr -> PLUS UExpr .)
    TIMES           reduce using rule 260 (UExpr -> PLUS UExpr .)
    PLUS            reduce using rule 260 (UExpr -> PLUS UExpr .)
    MINUS           reduce using rule 260 (UExpr -> PLUS UExpr .)
    XOR             reduce using rule 260 (UExpr -> PLUS UExpr .)
    OR              reduce using rule 260 (UExpr -> PLUS UExpr .)
    EQEQ            reduce using rule 260 (UExpr -> PLUS UExpr .)
    NOTEQ           reduce using rule 260 (UExpr -> PLUS UExpr .)
    LEQ             reduce using rule 260 (UExpr -> PLUS UExpr .)
    GEQ             reduce using rule 260 (UExpr -> PLUS UExpr .)
    GREAT           reduce using rule 260 (UExpr -> PLUS UExpr .)
    LESS            reduce using rule 260 (UExpr -> PLUS UExpr .)
    AMPAMP          reduce using rule 260 (UExpr -> PLUS UExpr .)
    OROR            reduce using rule 260 (UExpr -> PLUS UExpr .)
    COLON           reduce using rule 260 (UExpr -> PLUS UExpr .)
    EQUAL           reduce using rule 260 (UExpr -> PLUS UExpr .)
    COLONEQ         reduce using rule 260 (UExpr -> PLUS UExpr .)
    COMMA           reduce using rule 260 (UExpr -> PLUS UExpr .)
    PLUSEQ          reduce using rule 260 (UExpr -> PLUS UExpr .)
    MINUSEQ         reduce using rule 260 (UExpr -> PLUS UExpr .)
    TIMESEQ         reduce using rule 260 (UExpr -> PLUS UExpr .)
    DIVIDEEQ        reduce using rule 260 (UExpr -> PLUS UExpr .)
    MODEQ           reduce using rule 260 (UExpr -> PLUS UExpr .)
    OREQ            reduce using rule 260 (UExpr -> PLUS UExpr .)
    AMPEQ           reduce using rule 260 (UExpr -> PLUS UExpr .)
    CAREQ           reduce using rule 260 (UExpr -> PLUS UExpr .)
    SHL_ASSIGN      reduce using rule 260 (UExpr -> PLUS UExpr .)
    SHR_ASSIGN      reduce using rule 260 (UExpr -> PLUS UExpr .)
    AMPCAREQ        reduce using rule 260 (UExpr -> PLUS UExpr .)
    PLUSPLUS        reduce using rule 260 (UExpr -> PLUS UExpr .)
    MINUSMIN        reduce using rule 260 (UExpr -> PLUS UExpr .)
    SEMICOL         reduce using rule 260 (UExpr -> PLUS UExpr .)
    LBRACE          reduce using rule 260 (UExpr -> PLUS UExpr .)
    PIPE            reduce using rule 260 (UExpr -> PLUS UExpr .)
    RBRACK          reduce using rule 260 (UExpr -> PLUS UExpr .)
    RPAREN          reduce using rule 260 (UExpr -> PLUS UExpr .)
    RIGHT_ANGLE     reduce using rule 260 (UExpr -> PLUS UExpr .)
    RIGHT_RIGHT     reduce using rule 260 (UExpr -> PLUS UExpr .)
    DDD             reduce using rule 260 (UExpr -> PLUS UExpr .)


state 100

    (193) NonDeclStmt -> LabelName COLON . Stmt
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    FuncLiteralDecl                shift and go to state 34
    Stmt                           shift and go to state 198
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 101

    (235) Prec5Expr_ -> Prec5Expr_ SHR . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 203
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 102

    (232) Prec5Expr_ -> Prec5Expr_ DIVIDE . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 204
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 103

    (237) Prec5Expr_ -> Prec5Expr_ AMPCAR . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 205
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 104

    (236) Prec5Expr_ -> Prec5Expr_ AMPERS . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 206
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 105

    (238) Prec5Expr_ -> Prec5Expr_ TIMES . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 207
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 106

    (234) Prec5Expr_ -> Prec5Expr_ SHL . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 208
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 107

    (233) Prec5Expr_ -> Prec5Expr_ MOD . UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 209
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 108

    (252) Prec2Expr_ -> Prec2Expr_ AMPAMP . Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 210
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 109

    (144) FuncLiteral -> FuncLiteralDecl LBRACE . cmtlist StmtList cmtlist RBRACE
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    LBRACE          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    SEMICOL         reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 211

state 110

    (175) DeclName -> IDENTIFIER .

    EQUAL           reduce using rule 175 (DeclName -> IDENTIFIER .)
    COMMA           reduce using rule 175 (DeclName -> IDENTIFIER .)
    LPAREN          reduce using rule 175 (DeclName -> IDENTIFIER .)
    TYPE            reduce using rule 175 (DeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 175 (DeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 175 (DeclName -> IDENTIFIER .)
    MAP             reduce using rule 175 (DeclName -> IDENTIFIER .)
    TIMES           reduce using rule 175 (DeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 175 (DeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 175 (DeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 175 (DeclName -> IDENTIFIER .)
    SEMICOL         reduce using rule 175 (DeclName -> IDENTIFIER .)
    RPAREN          reduce using rule 175 (DeclName -> IDENTIFIER .)


state 111

    (163) DeclNameList -> DeclName .

    EQUAL           reduce using rule 163 (DeclNameList -> DeclName .)
    COMMA           reduce using rule 163 (DeclNameList -> DeclName .)
    LPAREN          reduce using rule 163 (DeclNameList -> DeclName .)
    TYPE            reduce using rule 163 (DeclNameList -> DeclName .)
    FUNCTION        reduce using rule 163 (DeclNameList -> DeclName .)
    LBRACK          reduce using rule 163 (DeclNameList -> DeclName .)
    MAP             reduce using rule 163 (DeclNameList -> DeclName .)
    TIMES           reduce using rule 163 (DeclNameList -> DeclName .)
    STRUCT          reduce using rule 163 (DeclNameList -> DeclName .)
    INTERFACE       reduce using rule 163 (DeclNameList -> DeclName .)
    IDENTIFIER      reduce using rule 163 (DeclNameList -> DeclName .)
    SEMICOL         reduce using rule 163 (DeclNameList -> DeclName .)
    RPAREN          reduce using rule 163 (DeclNameList -> DeclName .)


state 112

    (22) CommonDecl -> VAR VarDecl .

    SEMICOL         reduce using rule 22 (CommonDecl -> VAR VarDecl .)


state 113

    (23) CommonDecl -> VAR LPAREN . VarDeclList OSemi RPAREN
    (24) CommonDecl -> VAR LPAREN . RPAREN
    (157) VarDeclList -> . VarDecl
    (158) VarDeclList -> . VarDeclList SEMICOL VarDecl
    (28) VarDecl -> . DeclNameList NType
    (29) VarDecl -> . DeclNameList NType EQUAL ExprList
    (30) VarDecl -> . DeclNameList EQUAL ExprList
    (163) DeclNameList -> . DeclName
    (164) DeclNameList -> . DeclNameList COMMA DeclName
    (175) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 212
    IDENTIFIER      shift and go to state 110

    DeclName                       shift and go to state 111
    VarDecl                        shift and go to state 213
    VarDeclList                    shift and go to state 214
    DeclNameList                   shift and go to state 114

state 114

    (28) VarDecl -> DeclNameList . NType
    (29) VarDecl -> DeclNameList . NType EQUAL ExprList
    (30) VarDecl -> DeclNameList . EQUAL ExprList
    (164) DeclNameList -> DeclNameList . COMMA DeclName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    EQUAL           shift and go to state 216
    COMMA           shift and go to state 221
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    FuncType                       shift and go to state 215
    NType                          shift and go to state 223
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218
    Name                           shift and go to state 222

state 115

    (146) ExprList -> ExprList COMMA . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 227
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 116

    (51) SimpleStmt -> ExprList COLONEQ . ExprList
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 151
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 228
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 117

    (50) SimpleStmt -> ExprList EQUAL . ExprList
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 151
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 229
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 118

    (89) OtherType -> MAP LBRACK . NType RBRACK NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    Name                           shift and go to state 222
    FuncType                       shift and go to state 215
    NType                          shift and go to state 230
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218

state 119

    (19) CommonDecl -> CONSTANT LPAREN . ConstDecl OSemi RPAREN
    (20) CommonDecl -> CONSTANT LPAREN . ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> CONSTANT LPAREN . RPAREN
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (163) DeclNameList -> . DeclName
    (164) DeclNameList -> . DeclNameList COMMA DeclName
    (175) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 231
    IDENTIFIER      shift and go to state 110

    DeclName                       shift and go to state 111
    ConstDecl                      shift and go to state 232
    DeclNameList                   shift and go to state 120

state 120

    (31) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (32) ConstDecl -> DeclNameList . EQUAL ExprList
    (164) DeclNameList -> DeclNameList . COMMA DeclName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    EQUAL           shift and go to state 233
    COMMA           shift and go to state 221
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    FuncType                       shift and go to state 215
    NType                          shift and go to state 234
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218
    Name                           shift and go to state 222

state 121

    (18) CommonDecl -> CONSTANT ConstDecl .

    SEMICOL         reduce using rule 18 (CommonDecl -> CONSTANT ConstDecl .)


state 122

    (257) UExpr -> AMPERS UExpr .

    DIVIDE          reduce using rule 257 (UExpr -> AMPERS UExpr .)
    MOD             reduce using rule 257 (UExpr -> AMPERS UExpr .)
    SHL             reduce using rule 257 (UExpr -> AMPERS UExpr .)
    SHR             reduce using rule 257 (UExpr -> AMPERS UExpr .)
    AMPERS          reduce using rule 257 (UExpr -> AMPERS UExpr .)
    AMPCAR          reduce using rule 257 (UExpr -> AMPERS UExpr .)
    TIMES           reduce using rule 257 (UExpr -> AMPERS UExpr .)
    PLUS            reduce using rule 257 (UExpr -> AMPERS UExpr .)
    MINUS           reduce using rule 257 (UExpr -> AMPERS UExpr .)
    XOR             reduce using rule 257 (UExpr -> AMPERS UExpr .)
    OR              reduce using rule 257 (UExpr -> AMPERS UExpr .)
    EQEQ            reduce using rule 257 (UExpr -> AMPERS UExpr .)
    NOTEQ           reduce using rule 257 (UExpr -> AMPERS UExpr .)
    LEQ             reduce using rule 257 (UExpr -> AMPERS UExpr .)
    GEQ             reduce using rule 257 (UExpr -> AMPERS UExpr .)
    GREAT           reduce using rule 257 (UExpr -> AMPERS UExpr .)
    LESS            reduce using rule 257 (UExpr -> AMPERS UExpr .)
    AMPAMP          reduce using rule 257 (UExpr -> AMPERS UExpr .)
    OROR            reduce using rule 257 (UExpr -> AMPERS UExpr .)
    COLON           reduce using rule 257 (UExpr -> AMPERS UExpr .)
    EQUAL           reduce using rule 257 (UExpr -> AMPERS UExpr .)
    COLONEQ         reduce using rule 257 (UExpr -> AMPERS UExpr .)
    COMMA           reduce using rule 257 (UExpr -> AMPERS UExpr .)
    PLUSEQ          reduce using rule 257 (UExpr -> AMPERS UExpr .)
    MINUSEQ         reduce using rule 257 (UExpr -> AMPERS UExpr .)
    TIMESEQ         reduce using rule 257 (UExpr -> AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 257 (UExpr -> AMPERS UExpr .)
    MODEQ           reduce using rule 257 (UExpr -> AMPERS UExpr .)
    OREQ            reduce using rule 257 (UExpr -> AMPERS UExpr .)
    AMPEQ           reduce using rule 257 (UExpr -> AMPERS UExpr .)
    CAREQ           reduce using rule 257 (UExpr -> AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 257 (UExpr -> AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 257 (UExpr -> AMPERS UExpr .)
    AMPCAREQ        reduce using rule 257 (UExpr -> AMPERS UExpr .)
    PLUSPLUS        reduce using rule 257 (UExpr -> AMPERS UExpr .)
    MINUSMIN        reduce using rule 257 (UExpr -> AMPERS UExpr .)
    SEMICOL         reduce using rule 257 (UExpr -> AMPERS UExpr .)
    LBRACE          reduce using rule 257 (UExpr -> AMPERS UExpr .)
    PIPE            reduce using rule 257 (UExpr -> AMPERS UExpr .)
    RBRACK          reduce using rule 257 (UExpr -> AMPERS UExpr .)
    RPAREN          reduce using rule 257 (UExpr -> AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 257 (UExpr -> AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 257 (UExpr -> AMPERS UExpr .)
    DDD             reduce using rule 257 (UExpr -> AMPERS UExpr .)


state 123

    (242) Prec4Expr_ -> Prec4Expr_ XOR . Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 235
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 124

    (243) Prec4Expr_ -> Prec4Expr_ OR . Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 236
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 125

    (240) Prec4Expr_ -> Prec4Expr_ PLUS . Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 237
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 126

    (241) Prec4Expr_ -> Prec4Expr_ MINUS . Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 238
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 127

    (99) FuncType -> FUNCTION ArgList . FuncRes
    (101) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (104) FuncRes -> .
    (105) FuncRes -> . FuncRetType
    (106) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (124) FuncRetType -> . FuncType
    (125) FuncRetType -> . OtherType
    (126) FuncRetType -> . PtrType
    (127) FuncRetType -> . DotName
    (128) FuncRetType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    LPAREN          shift and go to state 239
    LEFT_ANGLE      reduce using rule 104 (FuncRes -> .)
    LBRACE          reduce using rule 104 (FuncRes -> .)
    RPAREN          reduce using rule 104 (FuncRes -> .)
    EQUAL           reduce using rule 104 (FuncRes -> .)
    SEMICOL         reduce using rule 104 (FuncRes -> .)
    RBRACK          reduce using rule 104 (FuncRes -> .)
    COMMA           reduce using rule 104 (FuncRes -> .)
    OR_RIGHT        reduce using rule 104 (FuncRes -> .)
    DDD             reduce using rule 104 (FuncRes -> .)
    COLON           reduce using rule 104 (FuncRes -> .)
    COLONEQ         reduce using rule 104 (FuncRes -> .)
    LEFT_LEFT       reduce using rule 104 (FuncRes -> .)
    INTEGER         reduce using rule 104 (FuncRes -> .)
    FLOAT           reduce using rule 104 (FuncRes -> .)
    STRING          reduce using rule 104 (FuncRes -> .)
    RBRACE          reduce using rule 104 (FuncRes -> .)
    LEFT_OR         shift and go to state 245
    TYPE            shift and go to state 247
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    DotName                        shift and go to state 246
    Name                           shift and go to state 222
    FuncType                       shift and go to state 240
    OtherType                      shift and go to state 243
    InterfaceType                  shift and go to state 64
    FuncRes                        shift and go to state 244
    PtrType                        shift and go to state 241
    FuncRetType                    shift and go to state 242

state 128

    (96) FuncDecl -> FUNCTION FuncDecl_ . FuncBody
    (102) FuncBody -> .
    (103) FuncBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    SEMICOL         reduce using rule 102 (FuncBody -> .)
    LBRACE          shift and go to state 248

    FuncBody                       shift and go to state 249

state 129

    (100) ArgList -> LPAREN . OArgTypeListOComma RPAREN
    (183) OArgTypeListOComma -> .
    (184) OArgTypeListOComma -> . ArgTypeList OComma
    (181) ArgTypeList -> . ArgType
    (182) ArgTypeList -> . ArgTypeList COMMA ArgType
    (177) ArgType -> . NameOrType
    (178) ArgType -> . IDENTIFIER NameOrType
    (179) ArgType -> . IDENTIFIER DotDotDot
    (180) ArgType -> . DotDotDot
    (229) NameOrType -> . NType
    (200) DotDotDot -> . DDD
    (201) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    RPAREN          reduce using rule 183 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 255
    DDD             shift and go to state 257
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    StructType                     shift and go to state 67
    DotName                        shift and go to state 218
    OArgTypeListOComma             shift and go to state 252
    Name                           shift and go to state 222
    DotDotDot                      shift and go to state 253
    NType                          shift and go to state 256
    NameOrType                     shift and go to state 254
    ArgTypeList                    shift and go to state 250
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    ArgType                        shift and go to state 251
    FuncType                       shift and go to state 215

state 130

    (98) FuncDecl_ -> LEFT_OR . OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (183) OArgTypeListOComma -> .
    (184) OArgTypeListOComma -> . ArgTypeList OComma
    (181) ArgTypeList -> . ArgType
    (182) ArgTypeList -> . ArgTypeList COMMA ArgType
    (177) ArgType -> . NameOrType
    (178) ArgType -> . IDENTIFIER NameOrType
    (179) ArgType -> . IDENTIFIER DotDotDot
    (180) ArgType -> . DotDotDot
    (229) NameOrType -> . NType
    (200) DotDotDot -> . DDD
    (201) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 183 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 255
    DDD             shift and go to state 257
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    StructType                     shift and go to state 67
    DotName                        shift and go to state 218
    OArgTypeListOComma             shift and go to state 258
    Name                           shift and go to state 222
    DotDotDot                      shift and go to state 253
    NType                          shift and go to state 256
    NameOrType                     shift and go to state 254
    ArgTypeList                    shift and go to state 250
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    ArgType                        shift and go to state 251
    FuncType                       shift and go to state 215

state 131

    (97) FuncDecl_ -> IDENTIFIER . ArgList FuncRes
    (100) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (101) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 129

    ArgList                        shift and go to state 259

state 132

    (66) ForHeader -> OSimpleStmt . SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (67) ForHeader -> OSimpleStmt .

    SEMICOL         shift and go to state 260
    LBRACE          reduce using rule 67 (ForHeader -> OSimpleStmt .)


state 133

    (68) ForHeader -> RangeStmt .

    LBRACE          reduce using rule 68 (ForHeader -> RangeStmt .)


state 134

    (63) RangeStmt -> ExprList . EQUAL RANGE Expr
    (64) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (50) SimpleStmt -> ExprList . EQUAL ExprList
    (51) SimpleStmt -> ExprList . COLONEQ ExprList
    (146) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 261
    COLONEQ         shift and go to state 262
    COMMA           shift and go to state 115


state 135

    (70) ForStmt -> FOR ForBody .

    SEMICOL         reduce using rule 70 (ForStmt -> FOR ForBody .)


state 136

    (65) RangeStmt -> RANGE . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 263
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 137

    (136) OSimpleStmt -> SimpleStmt .

    LBRACE          reduce using rule 136 (OSimpleStmt -> SimpleStmt .)
    SEMICOL         reduce using rule 136 (OSimpleStmt -> SimpleStmt .)


state 138

    (69) ForBody -> ForHeader . LoopBody
    (62) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 264

    LoopBody                       shift and go to state 265

state 139

    (38) SimpleStmt -> Expr .
    (39) SimpleStmt -> Expr . PLUSEQ Expr
    (40) SimpleStmt -> Expr . MINUSEQ Expr
    (41) SimpleStmt -> Expr . TIMESEQ Expr
    (42) SimpleStmt -> Expr . DIVIDEEQ Expr
    (43) SimpleStmt -> Expr . MODEQ Expr
    (44) SimpleStmt -> Expr . OREQ Expr
    (45) SimpleStmt -> Expr . AMPEQ Expr
    (46) SimpleStmt -> Expr . CAREQ Expr
    (47) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (48) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (49) SimpleStmt -> Expr . AMPCAREQ Expr
    (52) SimpleStmt -> Expr . PLUSPLUS
    (53) SimpleStmt -> Expr . MINUSMIN
    (145) ExprList -> Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 38 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 38 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 167
    MINUSEQ         shift and go to state 171
    TIMESEQ         shift and go to state 166
    DIVIDEEQ        shift and go to state 177
    MODEQ           shift and go to state 168
    OREQ            shift and go to state 170
    AMPEQ           shift and go to state 173
    CAREQ           shift and go to state 165
    SHL_ASSIGN      shift and go to state 175
    SHR_ASSIGN      shift and go to state 169
    AMPCAREQ        shift and go to state 174
    PLUSPLUS        shift and go to state 176
    MINUSMIN        shift and go to state 172
    EQUAL           reduce using rule 145 (ExprList -> Expr .)
    COLONEQ         reduce using rule 145 (ExprList -> Expr .)
    COMMA           reduce using rule 145 (ExprList -> Expr .)
    OROR            shift and go to state 164


state 140

    (94) InterfaceType -> INTERFACE LBRACE . InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> INTERFACE LBRACE . RBRACE
    (109) InterfaceDeclList -> . InterfaceDecl
    (110) InterfaceDeclList -> . InterfaceDeclList SEMICOL InterfaceDecl
    (117) InterfaceDecl -> . NewName InDecl
    (118) InterfaceDecl -> . IDENTIFIER
    (119) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (122) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 266
    IDENTIFIER      shift and go to state 271
    LPAREN          shift and go to state 270

    InterfaceDecl                  shift and go to state 267
    NewName                        shift and go to state 269
    InterfaceDeclList              shift and go to state 268

state 141

    (25) CommonDecl -> TYPE TypeDecl .

    SEMICOL         reduce using rule 25 (CommonDecl -> TYPE TypeDecl .)


state 142

    (26) CommonDecl -> TYPE LPAREN . TypeDeclList OSemi RPAREN
    (27) CommonDecl -> TYPE LPAREN . RPAREN
    (161) TypeDeclList -> . TypeDecl
    (162) TypeDeclList -> . TypeDeclList SEMICOL TypeDecl
    (37) TypeDecl -> . TypeDeclName NType
    (36) TypeDeclName -> . IDENTIFIER

    RPAREN          shift and go to state 274
    IDENTIFIER      shift and go to state 144

    TypeDeclList                   shift and go to state 273
    TypeDecl                       shift and go to state 272
    TypeDeclName                   shift and go to state 143

state 143

    (37) TypeDecl -> TypeDeclName . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    Name                           shift and go to state 222
    FuncType                       shift and go to state 215
    NType                          shift and go to state 275
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218

state 144

    (36) TypeDeclName -> IDENTIFIER .

    LPAREN          reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    TYPE            reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    MAP             reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    TIMES           reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 36 (TypeDeclName -> IDENTIFIER .)


state 145

    (263) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (254) Expr -> Expr . OROR Prec2Expr_
    (140) OExpr -> Expr .

    PIPE            shift and go to state 276
    OROR            shift and go to state 164
    RBRACK          reduce using rule 140 (OExpr -> Expr .)


state 146

    (88) OtherType -> LBRACK OExpr . RBRACK NType

    RBRACK          shift and go to state 277


state 147

    (138) ONewName -> NewName .

    SEMICOL         reduce using rule 138 (ONewName -> NewName .)


state 148

    (122) NewName -> IDENTIFIER .

    COMMA           reduce using rule 122 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 122 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 122 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 122 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 122 (NewName -> IDENTIFIER .)
    MAP             reduce using rule 122 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 122 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 122 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 122 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 122 (NewName -> IDENTIFIER .)
    SEMICOL         reduce using rule 122 (NewName -> IDENTIFIER .)


state 149

    (196) NonDeclStmt -> CONTINUE ONewName .

    SEMICOL         reduce using rule 196 (NonDeclStmt -> CONTINUE ONewName .)


state 150

    (258) UExpr -> NOT UExpr .

    DIVIDE          reduce using rule 258 (UExpr -> NOT UExpr .)
    MOD             reduce using rule 258 (UExpr -> NOT UExpr .)
    SHL             reduce using rule 258 (UExpr -> NOT UExpr .)
    SHR             reduce using rule 258 (UExpr -> NOT UExpr .)
    AMPERS          reduce using rule 258 (UExpr -> NOT UExpr .)
    AMPCAR          reduce using rule 258 (UExpr -> NOT UExpr .)
    TIMES           reduce using rule 258 (UExpr -> NOT UExpr .)
    PLUS            reduce using rule 258 (UExpr -> NOT UExpr .)
    MINUS           reduce using rule 258 (UExpr -> NOT UExpr .)
    XOR             reduce using rule 258 (UExpr -> NOT UExpr .)
    OR              reduce using rule 258 (UExpr -> NOT UExpr .)
    EQEQ            reduce using rule 258 (UExpr -> NOT UExpr .)
    NOTEQ           reduce using rule 258 (UExpr -> NOT UExpr .)
    LEQ             reduce using rule 258 (UExpr -> NOT UExpr .)
    GEQ             reduce using rule 258 (UExpr -> NOT UExpr .)
    GREAT           reduce using rule 258 (UExpr -> NOT UExpr .)
    LESS            reduce using rule 258 (UExpr -> NOT UExpr .)
    AMPAMP          reduce using rule 258 (UExpr -> NOT UExpr .)
    OROR            reduce using rule 258 (UExpr -> NOT UExpr .)
    COLON           reduce using rule 258 (UExpr -> NOT UExpr .)
    EQUAL           reduce using rule 258 (UExpr -> NOT UExpr .)
    COLONEQ         reduce using rule 258 (UExpr -> NOT UExpr .)
    COMMA           reduce using rule 258 (UExpr -> NOT UExpr .)
    PLUSEQ          reduce using rule 258 (UExpr -> NOT UExpr .)
    MINUSEQ         reduce using rule 258 (UExpr -> NOT UExpr .)
    TIMESEQ         reduce using rule 258 (UExpr -> NOT UExpr .)
    DIVIDEEQ        reduce using rule 258 (UExpr -> NOT UExpr .)
    MODEQ           reduce using rule 258 (UExpr -> NOT UExpr .)
    OREQ            reduce using rule 258 (UExpr -> NOT UExpr .)
    AMPEQ           reduce using rule 258 (UExpr -> NOT UExpr .)
    CAREQ           reduce using rule 258 (UExpr -> NOT UExpr .)
    SHL_ASSIGN      reduce using rule 258 (UExpr -> NOT UExpr .)
    SHR_ASSIGN      reduce using rule 258 (UExpr -> NOT UExpr .)
    AMPCAREQ        reduce using rule 258 (UExpr -> NOT UExpr .)
    PLUSPLUS        reduce using rule 258 (UExpr -> NOT UExpr .)
    MINUSMIN        reduce using rule 258 (UExpr -> NOT UExpr .)
    SEMICOL         reduce using rule 258 (UExpr -> NOT UExpr .)
    LBRACE          reduce using rule 258 (UExpr -> NOT UExpr .)
    PIPE            reduce using rule 258 (UExpr -> NOT UExpr .)
    RBRACK          reduce using rule 258 (UExpr -> NOT UExpr .)
    RPAREN          reduce using rule 258 (UExpr -> NOT UExpr .)
    RIGHT_ANGLE     reduce using rule 258 (UExpr -> NOT UExpr .)
    RIGHT_RIGHT     reduce using rule 258 (UExpr -> NOT UExpr .)
    DDD             reduce using rule 258 (UExpr -> NOT UExpr .)


state 151

    (145) ExprList -> Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 145 (ExprList -> Expr .)
    SEMICOL         reduce using rule 145 (ExprList -> Expr .)
    RPAREN          reduce using rule 145 (ExprList -> Expr .)
    LBRACE          reduce using rule 145 (ExprList -> Expr .)
    EQUAL           reduce using rule 145 (ExprList -> Expr .)
    COLONEQ         reduce using rule 145 (ExprList -> Expr .)
    OROR            shift and go to state 164


state 152

    (142) OExprList -> ExprList .
    (146) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 142 (OExprList -> ExprList .)
    COMMA           shift and go to state 115


state 153

    (199) NonDeclStmt -> RETURN OExprList .

    SEMICOL         reduce using rule 199 (NonDeclStmt -> RETURN OExprList .)


state 154

    (71) IfHeader -> OSimpleStmt .
    (72) IfHeader -> OSimpleStmt . SEMICOL OSimpleStmt

    LBRACE          reduce using rule 71 (IfHeader -> OSimpleStmt .)
    SEMICOL         shift and go to state 278


state 155

    (230) SwitchStmt -> SWITCH IfHeader . LBRACE CaseBlockList RBRACE

    LBRACE          shift and go to state 279


state 156

    (156) DeclList -> DeclList cmtlist Declaration SEMICOL .

    COMMENT         reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANT        reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    VAR             reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TYPE            reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FUNCTION        reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    BREAK           reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONTINUE        reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    DEFER           reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    GOTO            reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    RETURN          reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FOR             reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    SWITCH          reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IF              reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANTS       reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    AMPERS          reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    NOT             reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TIMES           reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    PLUS            reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    MINUS           reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    XOR             reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LPAREN          reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTEGER         reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FLOAT           reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRING          reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LBRACK          reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    MAP             reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRUCT          reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTERFACE       reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    $end            reduce using rule 156 (DeclList -> DeclList cmtlist Declaration SEMICOL .)


state 157

    (214) PExprNoParen -> CompType LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (173) BracedKeyvalList -> .
    (174) BracedKeyvalList -> . KeyvalList OComma
    (169) KeyvalList -> . Keyval
    (170) KeyvalList -> . BareCompLitExpr
    (171) KeyvalList -> . KeyvalList COMMA Keyval
    (172) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (222) Keyval -> . Expr COLON CompLitExpr
    (223) BareCompLitExpr -> . Expr
    (224) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 173 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 281
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    FuncLiteral                    shift and go to state 23
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    PExprNoParen                   shift and go to state 60
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 280
    PseudoCall                     shift and go to state 49
    KeyvalList                     shift and go to state 282
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Keyval                         shift and go to state 283
    BareCompLitExpr                shift and go to state 285
    PExpr                          shift and go to state 69
    BracedKeyvalList               shift and go to state 284

state 158

    (195) NonDeclStmt -> BREAK ONewName .

    SEMICOL         reduce using rule 195 (NonDeclStmt -> BREAK ONewName .)


state 159

    (209) PExprNoParen -> PExpr LBRACK . Expr RBRACK
    (210) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr COLON OExpr RBRACK
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (139) OExpr -> .
    (140) OExpr -> . Expr
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    COLON           reduce using rule 139 (OExpr -> .)
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 286
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 287
    PExpr                          shift and go to state 69

state 160

    (264) PseudoCall -> PExpr LPAREN . RPAREN
    (265) PseudoCall -> PExpr LPAREN . ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> PExpr LPAREN . ExprOrTypeList DDD OComma RPAREN
    (147) ExprOrTypeList -> . ExprOrType
    (148) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (227) ExprOrType -> . Expr
    (228) ExprOrType -> . NonExprType
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (143) FuncLiteralDecl -> . FuncType

    RPAREN          shift and go to state 290
    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 182
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 186
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 180
    Prec4Expr_                     shift and go to state 40
    ExprOrTypeList                 shift and go to state 288
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    ExprOrType                     shift and go to state 289
    NonExprType                    shift and go to state 183
    OtherType                      shift and go to state 184
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 185
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 161

    (215) PExprNoParen -> PExpr LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (173) BracedKeyvalList -> .
    (174) BracedKeyvalList -> . KeyvalList OComma
    (169) KeyvalList -> . Keyval
    (170) KeyvalList -> . BareCompLitExpr
    (171) KeyvalList -> . KeyvalList COMMA Keyval
    (172) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (222) Keyval -> . Expr COLON CompLitExpr
    (223) BareCompLitExpr -> . Expr
    (224) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 173 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 281
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    FuncLiteral                    shift and go to state 23
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    PExprNoParen                   shift and go to state 60
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 280
    PseudoCall                     shift and go to state 49
    KeyvalList                     shift and go to state 282
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Keyval                         shift and go to state 283
    BareCompLitExpr                shift and go to state 285
    PExpr                          shift and go to state 69
    BracedKeyvalList               shift and go to state 291

state 162

    (206) PExprNoParen -> PExpr DOT . IDENTIFIER
    (207) PExprNoParen -> PExpr DOT . LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> PExpr DOT . LPAREN TYPE RPAREN

    IDENTIFIER      shift and go to state 293
    LPAREN          shift and go to state 292


state 163

    (198) NonDeclStmt -> GOTO NewName .

    SEMICOL         reduce using rule 198 (NonDeclStmt -> GOTO NewName .)


state 164

    (254) Expr -> Expr OROR . Prec2Expr_
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 294
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 165

    (46) SimpleStmt -> Expr CAREQ . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 295
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 166

    (41) SimpleStmt -> Expr TIMESEQ . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 296
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 167

    (39) SimpleStmt -> Expr PLUSEQ . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 297
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 168

    (43) SimpleStmt -> Expr MODEQ . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 298
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 169

    (48) SimpleStmt -> Expr SHR_ASSIGN . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 299
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 170

    (44) SimpleStmt -> Expr OREQ . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 300
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 171

    (40) SimpleStmt -> Expr MINUSEQ . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 301
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 172

    (53) SimpleStmt -> Expr MINUSMIN .

    SEMICOL         reduce using rule 53 (SimpleStmt -> Expr MINUSMIN .)
    LBRACE          reduce using rule 53 (SimpleStmt -> Expr MINUSMIN .)


state 173

    (45) SimpleStmt -> Expr AMPEQ . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 302
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 174

    (49) SimpleStmt -> Expr AMPCAREQ . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 303
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 175

    (47) SimpleStmt -> Expr SHL_ASSIGN . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 304
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 176

    (52) SimpleStmt -> Expr PLUSPLUS .

    SEMICOL         reduce using rule 52 (SimpleStmt -> Expr PLUSPLUS .)
    LBRACE          reduce using rule 52 (SimpleStmt -> Expr PLUSPLUS .)


state 177

    (42) SimpleStmt -> Expr DIVIDEEQ . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 305
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 178

    (262) UExpr -> XOR UExpr .

    DIVIDE          reduce using rule 262 (UExpr -> XOR UExpr .)
    MOD             reduce using rule 262 (UExpr -> XOR UExpr .)
    SHL             reduce using rule 262 (UExpr -> XOR UExpr .)
    SHR             reduce using rule 262 (UExpr -> XOR UExpr .)
    AMPERS          reduce using rule 262 (UExpr -> XOR UExpr .)
    AMPCAR          reduce using rule 262 (UExpr -> XOR UExpr .)
    TIMES           reduce using rule 262 (UExpr -> XOR UExpr .)
    PLUS            reduce using rule 262 (UExpr -> XOR UExpr .)
    MINUS           reduce using rule 262 (UExpr -> XOR UExpr .)
    XOR             reduce using rule 262 (UExpr -> XOR UExpr .)
    OR              reduce using rule 262 (UExpr -> XOR UExpr .)
    EQEQ            reduce using rule 262 (UExpr -> XOR UExpr .)
    NOTEQ           reduce using rule 262 (UExpr -> XOR UExpr .)
    LEQ             reduce using rule 262 (UExpr -> XOR UExpr .)
    GEQ             reduce using rule 262 (UExpr -> XOR UExpr .)
    GREAT           reduce using rule 262 (UExpr -> XOR UExpr .)
    LESS            reduce using rule 262 (UExpr -> XOR UExpr .)
    AMPAMP          reduce using rule 262 (UExpr -> XOR UExpr .)
    OROR            reduce using rule 262 (UExpr -> XOR UExpr .)
    COLON           reduce using rule 262 (UExpr -> XOR UExpr .)
    EQUAL           reduce using rule 262 (UExpr -> XOR UExpr .)
    COLONEQ         reduce using rule 262 (UExpr -> XOR UExpr .)
    COMMA           reduce using rule 262 (UExpr -> XOR UExpr .)
    PLUSEQ          reduce using rule 262 (UExpr -> XOR UExpr .)
    MINUSEQ         reduce using rule 262 (UExpr -> XOR UExpr .)
    TIMESEQ         reduce using rule 262 (UExpr -> XOR UExpr .)
    DIVIDEEQ        reduce using rule 262 (UExpr -> XOR UExpr .)
    MODEQ           reduce using rule 262 (UExpr -> XOR UExpr .)
    OREQ            reduce using rule 262 (UExpr -> XOR UExpr .)
    AMPEQ           reduce using rule 262 (UExpr -> XOR UExpr .)
    CAREQ           reduce using rule 262 (UExpr -> XOR UExpr .)
    SHL_ASSIGN      reduce using rule 262 (UExpr -> XOR UExpr .)
    SHR_ASSIGN      reduce using rule 262 (UExpr -> XOR UExpr .)
    AMPCAREQ        reduce using rule 262 (UExpr -> XOR UExpr .)
    PLUSPLUS        reduce using rule 262 (UExpr -> XOR UExpr .)
    MINUSMIN        reduce using rule 262 (UExpr -> XOR UExpr .)
    SEMICOL         reduce using rule 262 (UExpr -> XOR UExpr .)
    LBRACE          reduce using rule 262 (UExpr -> XOR UExpr .)
    PIPE            reduce using rule 262 (UExpr -> XOR UExpr .)
    RBRACK          reduce using rule 262 (UExpr -> XOR UExpr .)
    RPAREN          reduce using rule 262 (UExpr -> XOR UExpr .)
    RIGHT_ANGLE     reduce using rule 262 (UExpr -> XOR UExpr .)
    RIGHT_RIGHT     reduce using rule 262 (UExpr -> XOR UExpr .)
    DDD             reduce using rule 262 (UExpr -> XOR UExpr .)


state 179

    (259) UExpr -> TIMES UExpr .

    DIVIDE          reduce using rule 259 (UExpr -> TIMES UExpr .)
    MOD             reduce using rule 259 (UExpr -> TIMES UExpr .)
    SHL             reduce using rule 259 (UExpr -> TIMES UExpr .)
    SHR             reduce using rule 259 (UExpr -> TIMES UExpr .)
    AMPERS          reduce using rule 259 (UExpr -> TIMES UExpr .)
    AMPCAR          reduce using rule 259 (UExpr -> TIMES UExpr .)
    TIMES           reduce using rule 259 (UExpr -> TIMES UExpr .)
    PLUS            reduce using rule 259 (UExpr -> TIMES UExpr .)
    MINUS           reduce using rule 259 (UExpr -> TIMES UExpr .)
    XOR             reduce using rule 259 (UExpr -> TIMES UExpr .)
    OR              reduce using rule 259 (UExpr -> TIMES UExpr .)
    EQEQ            reduce using rule 259 (UExpr -> TIMES UExpr .)
    NOTEQ           reduce using rule 259 (UExpr -> TIMES UExpr .)
    LEQ             reduce using rule 259 (UExpr -> TIMES UExpr .)
    GEQ             reduce using rule 259 (UExpr -> TIMES UExpr .)
    GREAT           reduce using rule 259 (UExpr -> TIMES UExpr .)
    LESS            reduce using rule 259 (UExpr -> TIMES UExpr .)
    AMPAMP          reduce using rule 259 (UExpr -> TIMES UExpr .)
    OROR            reduce using rule 259 (UExpr -> TIMES UExpr .)
    COLON           reduce using rule 259 (UExpr -> TIMES UExpr .)
    EQUAL           reduce using rule 259 (UExpr -> TIMES UExpr .)
    COLONEQ         reduce using rule 259 (UExpr -> TIMES UExpr .)
    COMMA           reduce using rule 259 (UExpr -> TIMES UExpr .)
    PLUSEQ          reduce using rule 259 (UExpr -> TIMES UExpr .)
    MINUSEQ         reduce using rule 259 (UExpr -> TIMES UExpr .)
    TIMESEQ         reduce using rule 259 (UExpr -> TIMES UExpr .)
    DIVIDEEQ        reduce using rule 259 (UExpr -> TIMES UExpr .)
    MODEQ           reduce using rule 259 (UExpr -> TIMES UExpr .)
    OREQ            reduce using rule 259 (UExpr -> TIMES UExpr .)
    AMPEQ           reduce using rule 259 (UExpr -> TIMES UExpr .)
    CAREQ           reduce using rule 259 (UExpr -> TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 259 (UExpr -> TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 259 (UExpr -> TIMES UExpr .)
    AMPCAREQ        reduce using rule 259 (UExpr -> TIMES UExpr .)
    PLUSPLUS        reduce using rule 259 (UExpr -> TIMES UExpr .)
    MINUSMIN        reduce using rule 259 (UExpr -> TIMES UExpr .)
    SEMICOL         reduce using rule 259 (UExpr -> TIMES UExpr .)
    LBRACE          reduce using rule 259 (UExpr -> TIMES UExpr .)
    PIPE            reduce using rule 259 (UExpr -> TIMES UExpr .)
    RBRACK          reduce using rule 259 (UExpr -> TIMES UExpr .)
    RPAREN          reduce using rule 259 (UExpr -> TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 259 (UExpr -> TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 259 (UExpr -> TIMES UExpr .)
    DDD             reduce using rule 259 (UExpr -> TIMES UExpr .)


state 180

    (85) NonExprType -> FuncType .
    (218) ConvType -> FuncType .
    (143) FuncLiteralDecl -> FuncType .

    DDD             reduce using rule 85 (NonExprType -> FuncType .)
    COMMA           reduce using rule 85 (NonExprType -> FuncType .)
    RPAREN          reduce using rule 85 (NonExprType -> FuncType .)
    COLON           reduce using rule 85 (NonExprType -> FuncType .)
    EQUAL           reduce using rule 85 (NonExprType -> FuncType .)
    COLONEQ         reduce using rule 85 (NonExprType -> FuncType .)
    LEFT_ANGLE      reduce using rule 218 (ConvType -> FuncType .)
    LBRACE          reduce using rule 143 (FuncLiteralDecl -> FuncType .)


state 181

    (203) PExpr -> LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 306


state 182

    (87) NonExprType -> TIMES . NonExprType
    (259) UExpr -> TIMES . UExpr
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (143) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 182
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 186
    MAP             shift and go to state 37
    LPAREN          shift and go to state 79
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 180
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    NonExprType                    shift and go to state 307
    OtherType                      shift and go to state 184
    InterfaceType                  shift and go to state 64
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    FuncLiteralDecl                shift and go to state 34
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 179
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 183

    (228) ExprOrType -> NonExprType .

    COLON           reduce using rule 228 (ExprOrType -> NonExprType .)
    EQUAL           reduce using rule 228 (ExprOrType -> NonExprType .)
    COLONEQ         reduce using rule 228 (ExprOrType -> NonExprType .)
    COMMA           reduce using rule 228 (ExprOrType -> NonExprType .)
    DDD             reduce using rule 228 (ExprOrType -> NonExprType .)
    RPAREN          reduce using rule 228 (ExprOrType -> NonExprType .)


state 184

    (86) NonExprType -> OtherType .
    (219) ConvType -> OtherType .
    (220) CompType -> OtherType .

    DDD             reduce using rule 86 (NonExprType -> OtherType .)
    COMMA           reduce using rule 86 (NonExprType -> OtherType .)
    RPAREN          reduce using rule 86 (NonExprType -> OtherType .)
    COLON           reduce using rule 86 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 86 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 86 (NonExprType -> OtherType .)
    LEFT_ANGLE      reduce using rule 219 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 220 (CompType -> OtherType .)


state 185

    (227) ExprOrType -> Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    COLON           reduce using rule 227 (ExprOrType -> Expr .)
    EQUAL           reduce using rule 227 (ExprOrType -> Expr .)
    COLONEQ         reduce using rule 227 (ExprOrType -> Expr .)
    COMMA           reduce using rule 227 (ExprOrType -> Expr .)
    DDD             reduce using rule 227 (ExprOrType -> Expr .)
    RPAREN          reduce using rule 227 (ExprOrType -> Expr .)
    OROR            shift and go to state 164


state 186

    (88) OtherType -> LBRACK . OExpr RBRACK NType
    (263) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (139) OExpr -> .
    (140) OExpr -> . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 139 (OExpr -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 308
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 146
    PExpr                          shift and go to state 69

state 187

    (73) IfStmt -> IF IfHeader . LoopBody ElseIfList Else
    (62) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 264

    LoopBody                       shift and go to state 309

state 188

    (92) StructType -> STRUCT LBRACE . StructDeclList OSemi RBRACE
    (93) StructType -> STRUCT LBRACE . RBRACE
    (107) StructDeclList -> . StructDecl
    (108) StructDeclList -> . StructDeclList SEMICOL StructDecl
    (111) StructDecl -> . NewNameList NType OLiteral
    (112) StructDecl -> . Embed OLiteral
    (113) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (114) StructDecl -> . TIMES Embed OLiteral
    (115) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (116) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (167) NewNameList -> . NewName
    (168) NewNameList -> . NewNameList COMMA NewName
    (154) Embed -> . IDENTIFIER
    (122) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 318
    LPAREN          shift and go to state 313
    TIMES           shift and go to state 312
    IDENTIFIER      shift and go to state 316

    NewName                        shift and go to state 310
    StructDecl                     shift and go to state 311
    NewNameList                    shift and go to state 314
    StructDeclList                 shift and go to state 315
    Embed                          shift and go to state 317

state 189

    (11) ImportStmtList -> ImportStmtList SEMICOL . ImportStmt
    (134) OSemi -> SEMICOL .
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> .
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT

    RPAREN          reduce using rule 134 (OSemi -> SEMICOL .)
    STRING          reduce using rule 12 (ImportHere -> .)
    IDENTIFIER      shift and go to state 18
    DOT             shift and go to state 21

    ImportStmt                     shift and go to state 319
    ImportHere                     shift and go to state 17

state 190

    (7) Import -> IMPORT LPAREN ImportStmtList OSemi . RPAREN

    RPAREN          shift and go to state 320


state 191

    (248) Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .
    (240) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LEQ             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GEQ             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GREAT           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LESS            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OROR            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COMMA           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RPAREN          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LBRACE          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACK          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLON           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MODEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OREQ            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    CAREQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    EQUAL           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PIPE            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DDD             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    XOR             shift and go to state 123
    OR              shift and go to state 124


state 192

    (247) Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .
    (240) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LEQ             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GEQ             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GREAT           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LESS            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OROR            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COMMA           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RPAREN          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LBRACE          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACK          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLON           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MODEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OREQ            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    CAREQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    EQUAL           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PIPE            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DDD             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    XOR             shift and go to state 123
    OR              shift and go to state 124


state 193

    (245) Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .
    (240) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LEQ             reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GEQ             reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GREAT           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LESS            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OROR            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COMMA           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RPAREN          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LBRACE          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACK          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLON           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MODEQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OREQ            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    CAREQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    EQUAL           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PIPE            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DDD             reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    XOR             shift and go to state 123
    OR              shift and go to state 124


state 194

    (250) Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .
    (240) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    NOTEQ           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LEQ             reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GEQ             reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GREAT           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LESS            reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPAMP          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OROR            reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COMMA           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SEMICOL         reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RPAREN          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LBRACE          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACK          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLON           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSEQ          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSEQ         reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    TIMESEQ         reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MODEQ           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OREQ            reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPEQ           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    CAREQ           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPCAREQ        reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSPLUS        reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSMIN        reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    EQUAL           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLONEQ         reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PIPE            reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DDD             reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    XOR             shift and go to state 123
    OR              shift and go to state 124


state 195

    (249) Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .
    (240) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    NOTEQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LEQ             reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GEQ             reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GREAT           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LESS            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPAMP          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OROR            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COMMA           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SEMICOL         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RPAREN          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LBRACE          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACK          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLON           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSEQ          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSEQ         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    TIMESEQ         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MODEQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OREQ            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPEQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    CAREQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPCAREQ        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSPLUS        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSMIN        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    EQUAL           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLONEQ         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PIPE            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DDD             reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    XOR             shift and go to state 123
    OR              shift and go to state 124


state 196

    (246) Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .
    (240) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LEQ             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GEQ             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GREAT           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LESS            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OROR            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COMMA           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RPAREN          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LBRACE          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACK          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLON           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MODEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OREQ            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    CAREQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    EQUAL           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PIPE            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DDD             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    XOR             shift and go to state 123
    OR              shift and go to state 124


state 197

    (213) PExprNoParen -> ConvType LEFT_ANGLE Expr . OComma RIGHT_ANGLE
    (254) Expr -> Expr . OROR Prec2Expr_
    (131) OComma -> .
    (132) OComma -> . COMMA

    OROR            shift and go to state 164
    RIGHT_ANGLE     reduce using rule 131 (OComma -> .)
    COMMA           shift and go to state 322

    OComma                         shift and go to state 321

state 198

    (193) NonDeclStmt -> LabelName COLON Stmt .

    SEMICOL         reduce using rule 193 (NonDeclStmt -> LabelName COLON Stmt .)


state 199

    (187) Stmt -> CommonDecl .

    SEMICOL         reduce using rule 187 (Stmt -> CommonDecl .)


state 200

    (58) CompoundStmt -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    LBRACE          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    SEMICOL         reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 323

state 201

    (186) Stmt -> CompoundStmt .

    SEMICOL         reduce using rule 186 (Stmt -> CompoundStmt .)


state 202

    (188) Stmt -> NonDeclStmt .

    SEMICOL         reduce using rule 188 (Stmt -> NonDeclStmt .)


state 203

    (235) Prec5Expr_ -> Prec5Expr_ SHR UExpr .

    DIVIDE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MOD             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPERS          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAR          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMES           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUS            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUS           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    XOR             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OR              reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQEQ            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    NOTEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LEQ             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GEQ             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GREAT           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LESS            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPAMP          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLON           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OROR            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COMMA           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_RIGHT     reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSEQ          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMESEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DIVIDEEQ        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MODEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OREQ            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    CAREQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL_ASSIGN      reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR_ASSIGN      reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAREQ        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSPLUS        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSMIN        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SEMICOL         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQUAL           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLONEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LBRACE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PIPE            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACK          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RPAREN          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_ANGLE     reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DDD             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)


state 204

    (232) Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .

    DIVIDE          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MOD             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPERS          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAR          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMES           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUS            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUS           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    XOR             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OR              reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQEQ            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    NOTEQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LEQ             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GEQ             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GREAT           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LESS            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPAMP          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLON           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OROR            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COMMA           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_RIGHT     reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSEQ          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSEQ         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMESEQ         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DIVIDEEQ        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MODEQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OREQ            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPEQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    CAREQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL_ASSIGN      reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR_ASSIGN      reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAREQ        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSPLUS        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSMIN        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SEMICOL         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQUAL           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLONEQ         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LBRACE          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PIPE            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACK          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RPAREN          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_ANGLE     reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DDD             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)


state 205

    (237) Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .

    DIVIDE          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MOD             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPERS          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAR          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMES           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUS            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUS           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    XOR             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OR              reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQEQ            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    NOTEQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LEQ             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GEQ             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GREAT           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LESS            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPAMP          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLON           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OROR            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COMMA           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_RIGHT     reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSEQ          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSEQ         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMESEQ         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DIVIDEEQ        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MODEQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OREQ            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPEQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    CAREQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL_ASSIGN      reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR_ASSIGN      reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAREQ        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSPLUS        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSMIN        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SEMICOL         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQUAL           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLONEQ         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LBRACE          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PIPE            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACK          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RPAREN          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_ANGLE     reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DDD             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)


state 206

    (236) Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .

    DIVIDE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MOD             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPERS          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAR          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMES           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUS            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUS           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    XOR             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OR              reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQEQ            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    NOTEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LEQ             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GEQ             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GREAT           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LESS            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPAMP          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLON           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OROR            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COMMA           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSEQ          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMESEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MODEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OREQ            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    CAREQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAREQ        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSPLUS        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSMIN        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SEMICOL         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQUAL           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLONEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LBRACE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PIPE            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACK          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RPAREN          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DDD             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)


state 207

    (238) Prec5Expr_ -> Prec5Expr_ TIMES UExpr .

    DIVIDE          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MOD             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPERS          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAR          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMES           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUS            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUS           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    XOR             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OR              reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQEQ            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    NOTEQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LEQ             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GEQ             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GREAT           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LESS            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPAMP          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLON           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OROR            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COMMA           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSEQ          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSEQ         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMESEQ         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DIVIDEEQ        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MODEQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OREQ            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPEQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    CAREQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAREQ        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSPLUS        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSMIN        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SEMICOL         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQUAL           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLONEQ         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LBRACE          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PIPE            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACK          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RPAREN          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DDD             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)


state 208

    (234) Prec5Expr_ -> Prec5Expr_ SHL UExpr .

    DIVIDE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MOD             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPERS          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAR          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMES           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUS            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUS           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    XOR             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OR              reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQEQ            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    NOTEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LEQ             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GEQ             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GREAT           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LESS            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPAMP          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLON           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OROR            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COMMA           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_RIGHT     reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSEQ          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMESEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DIVIDEEQ        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MODEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OREQ            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    CAREQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL_ASSIGN      reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR_ASSIGN      reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAREQ        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSPLUS        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSMIN        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SEMICOL         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQUAL           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLONEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LBRACE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PIPE            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACK          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RPAREN          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_ANGLE     reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DDD             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)


state 209

    (233) Prec5Expr_ -> Prec5Expr_ MOD UExpr .

    DIVIDE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MOD             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPERS          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAR          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMES           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUS            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUS           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    XOR             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OR              reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQEQ            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    NOTEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LEQ             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GEQ             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GREAT           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LESS            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPAMP          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLON           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OROR            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COMMA           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_RIGHT     reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSEQ          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMESEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DIVIDEEQ        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MODEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OREQ            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    CAREQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL_ASSIGN      reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR_ASSIGN      reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAREQ        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSPLUS        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSMIN        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SEMICOL         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQUAL           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLONEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LBRACE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PIPE            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACK          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RPAREN          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_ANGLE     reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DDD             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)


state 210

    (252) Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .
    (245) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (246) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (248) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (249) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (250) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSEQ          reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSEQ         reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    TIMESEQ         reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MODEQ           reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OREQ            reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPEQ           reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    CAREQ           reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPCAREQ        reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSPLUS        reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSMIN        reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OROR            reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SEMICOL         reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQUAL           reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLONEQ         reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COMMA           reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RPAREN          reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    LBRACE          reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLON           reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACK          reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DDD             reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PIPE            reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 252 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQEQ            shift and go to state 89
    NOTEQ           shift and go to state 92
    LEQ             shift and go to state 88
    GEQ             shift and go to state 87
    GREAT           shift and go to state 91
    LESS            shift and go to state 90


state 211

    (144) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist . StmtList cmtlist RBRACE
    (165) StmtList -> . Stmt SEMICOL
    (166) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    StmtList                       shift and go to state 325
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    NonDeclStmt                    shift and go to state 202
    Stmt                           shift and go to state 324
    FuncLiteralDecl                shift and go to state 34
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NewName                        shift and go to state 45
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 212

    (24) CommonDecl -> VAR LPAREN RPAREN .

    SEMICOL         reduce using rule 24 (CommonDecl -> VAR LPAREN RPAREN .)


state 213

    (157) VarDeclList -> VarDecl .

    SEMICOL         reduce using rule 157 (VarDeclList -> VarDecl .)
    RPAREN          reduce using rule 157 (VarDeclList -> VarDecl .)


state 214

    (23) CommonDecl -> VAR LPAREN VarDeclList . OSemi RPAREN
    (158) VarDeclList -> VarDeclList . SEMICOL VarDecl
    (133) OSemi -> .
    (134) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 326
    RPAREN          reduce using rule 133 (OSemi -> .)

    OSemi                          shift and go to state 327

state 215

    (79) NType -> FuncType .

    RBRACK          reduce using rule 79 (NType -> FuncType .)
    LEFT_ANGLE      reduce using rule 79 (NType -> FuncType .)
    LBRACE          reduce using rule 79 (NType -> FuncType .)
    RPAREN          reduce using rule 79 (NType -> FuncType .)
    EQUAL           reduce using rule 79 (NType -> FuncType .)
    SEMICOL         reduce using rule 79 (NType -> FuncType .)
    COMMA           reduce using rule 79 (NType -> FuncType .)
    OR_RIGHT        reduce using rule 79 (NType -> FuncType .)
    DDD             reduce using rule 79 (NType -> FuncType .)
    COLON           reduce using rule 79 (NType -> FuncType .)
    COLONEQ         reduce using rule 79 (NType -> FuncType .)
    LEFT_LEFT       reduce using rule 79 (NType -> FuncType .)
    INTEGER         reduce using rule 79 (NType -> FuncType .)
    FLOAT           reduce using rule 79 (NType -> FuncType .)
    STRING          reduce using rule 79 (NType -> FuncType .)
    RBRACE          reduce using rule 79 (NType -> FuncType .)


state 216

    (30) VarDecl -> DeclNameList EQUAL . ExprList
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 151
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 328
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 217

    (81) NType -> PtrType .

    RBRACK          reduce using rule 81 (NType -> PtrType .)
    LEFT_ANGLE      reduce using rule 81 (NType -> PtrType .)
    LBRACE          reduce using rule 81 (NType -> PtrType .)
    RPAREN          reduce using rule 81 (NType -> PtrType .)
    EQUAL           reduce using rule 81 (NType -> PtrType .)
    SEMICOL         reduce using rule 81 (NType -> PtrType .)
    COMMA           reduce using rule 81 (NType -> PtrType .)
    OR_RIGHT        reduce using rule 81 (NType -> PtrType .)
    DDD             reduce using rule 81 (NType -> PtrType .)
    COLON           reduce using rule 81 (NType -> PtrType .)
    COLONEQ         reduce using rule 81 (NType -> PtrType .)
    LEFT_LEFT       reduce using rule 81 (NType -> PtrType .)
    INTEGER         reduce using rule 81 (NType -> PtrType .)
    FLOAT           reduce using rule 81 (NType -> PtrType .)
    STRING          reduce using rule 81 (NType -> PtrType .)
    RBRACE          reduce using rule 81 (NType -> PtrType .)


state 218

    (82) NType -> DotName .

    RBRACK          reduce using rule 82 (NType -> DotName .)
    LEFT_ANGLE      reduce using rule 82 (NType -> DotName .)
    LBRACE          reduce using rule 82 (NType -> DotName .)
    RPAREN          reduce using rule 82 (NType -> DotName .)
    EQUAL           reduce using rule 82 (NType -> DotName .)
    SEMICOL         reduce using rule 82 (NType -> DotName .)
    COMMA           reduce using rule 82 (NType -> DotName .)
    OR_RIGHT        reduce using rule 82 (NType -> DotName .)
    DDD             reduce using rule 82 (NType -> DotName .)
    COLON           reduce using rule 82 (NType -> DotName .)
    COLONEQ         reduce using rule 82 (NType -> DotName .)
    LEFT_LEFT       reduce using rule 82 (NType -> DotName .)
    INTEGER         reduce using rule 82 (NType -> DotName .)
    FLOAT           reduce using rule 82 (NType -> DotName .)
    STRING          reduce using rule 82 (NType -> DotName .)
    RBRACE          reduce using rule 82 (NType -> DotName .)


state 219

    (123) PtrType -> TIMES . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    Name                           shift and go to state 222
    FuncType                       shift and go to state 215
    NType                          shift and go to state 329
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218

state 220

    (80) NType -> OtherType .

    RBRACK          reduce using rule 80 (NType -> OtherType .)
    LEFT_ANGLE      reduce using rule 80 (NType -> OtherType .)
    LBRACE          reduce using rule 80 (NType -> OtherType .)
    RPAREN          reduce using rule 80 (NType -> OtherType .)
    EQUAL           reduce using rule 80 (NType -> OtherType .)
    SEMICOL         reduce using rule 80 (NType -> OtherType .)
    COMMA           reduce using rule 80 (NType -> OtherType .)
    OR_RIGHT        reduce using rule 80 (NType -> OtherType .)
    DDD             reduce using rule 80 (NType -> OtherType .)
    COLON           reduce using rule 80 (NType -> OtherType .)
    COLONEQ         reduce using rule 80 (NType -> OtherType .)
    LEFT_LEFT       reduce using rule 80 (NType -> OtherType .)
    INTEGER         reduce using rule 80 (NType -> OtherType .)
    FLOAT           reduce using rule 80 (NType -> OtherType .)
    STRING          reduce using rule 80 (NType -> OtherType .)
    RBRACE          reduce using rule 80 (NType -> OtherType .)


state 221

    (164) DeclNameList -> DeclNameList COMMA . DeclName
    (175) DeclName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 110

    DeclName                       shift and go to state 330

state 222

    (129) DotName -> Name .
    (130) DotName -> Name . DOT IDENTIFIER

    LEFT_ANGLE      reduce using rule 129 (DotName -> Name .)
    LBRACE          reduce using rule 129 (DotName -> Name .)
    RPAREN          reduce using rule 129 (DotName -> Name .)
    EQUAL           reduce using rule 129 (DotName -> Name .)
    SEMICOL         reduce using rule 129 (DotName -> Name .)
    RBRACK          reduce using rule 129 (DotName -> Name .)
    COMMA           reduce using rule 129 (DotName -> Name .)
    OR_RIGHT        reduce using rule 129 (DotName -> Name .)
    DDD             reduce using rule 129 (DotName -> Name .)
    COLON           reduce using rule 129 (DotName -> Name .)
    COLONEQ         reduce using rule 129 (DotName -> Name .)
    LEFT_LEFT       reduce using rule 129 (DotName -> Name .)
    INTEGER         reduce using rule 129 (DotName -> Name .)
    FLOAT           reduce using rule 129 (DotName -> Name .)
    STRING          reduce using rule 129 (DotName -> Name .)
    RBRACE          reduce using rule 129 (DotName -> Name .)
    DOT             shift and go to state 331


state 223

    (28) VarDecl -> DeclNameList NType .
    (29) VarDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 28 (VarDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 28 (VarDecl -> DeclNameList NType .)
    EQUAL           shift and go to state 332


state 224

    (83) NType -> LPAREN . NType RPAREN
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    Name                           shift and go to state 222
    FuncType                       shift and go to state 215
    NType                          shift and go to state 333
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218

state 225

    (88) OtherType -> LBRACK . OExpr RBRACK NType
    (139) OExpr -> .
    (140) OExpr -> . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 139 (OExpr -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 334
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 146
    PExpr                          shift and go to state 69

state 226

    (84) NType -> TYPE .

    RBRACK          reduce using rule 84 (NType -> TYPE .)
    LEFT_ANGLE      reduce using rule 84 (NType -> TYPE .)
    LBRACE          reduce using rule 84 (NType -> TYPE .)
    RPAREN          reduce using rule 84 (NType -> TYPE .)
    EQUAL           reduce using rule 84 (NType -> TYPE .)
    SEMICOL         reduce using rule 84 (NType -> TYPE .)
    COMMA           reduce using rule 84 (NType -> TYPE .)
    OR_RIGHT        reduce using rule 84 (NType -> TYPE .)
    DDD             reduce using rule 84 (NType -> TYPE .)
    COLON           reduce using rule 84 (NType -> TYPE .)
    COLONEQ         reduce using rule 84 (NType -> TYPE .)
    LEFT_LEFT       reduce using rule 84 (NType -> TYPE .)
    INTEGER         reduce using rule 84 (NType -> TYPE .)
    FLOAT           reduce using rule 84 (NType -> TYPE .)
    STRING          reduce using rule 84 (NType -> TYPE .)
    RBRACE          reduce using rule 84 (NType -> TYPE .)


state 227

    (146) ExprList -> ExprList COMMA Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    EQUAL           reduce using rule 146 (ExprList -> ExprList COMMA Expr .)
    COLONEQ         reduce using rule 146 (ExprList -> ExprList COMMA Expr .)
    COMMA           reduce using rule 146 (ExprList -> ExprList COMMA Expr .)
    SEMICOL         reduce using rule 146 (ExprList -> ExprList COMMA Expr .)
    RPAREN          reduce using rule 146 (ExprList -> ExprList COMMA Expr .)
    LBRACE          reduce using rule 146 (ExprList -> ExprList COMMA Expr .)
    OROR            shift and go to state 164


state 228

    (51) SimpleStmt -> ExprList COLONEQ ExprList .
    (146) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 51 (SimpleStmt -> ExprList COLONEQ ExprList .)
    LBRACE          reduce using rule 51 (SimpleStmt -> ExprList COLONEQ ExprList .)
    COMMA           shift and go to state 115


state 229

    (50) SimpleStmt -> ExprList EQUAL ExprList .
    (146) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 50 (SimpleStmt -> ExprList EQUAL ExprList .)
    LBRACE          reduce using rule 50 (SimpleStmt -> ExprList EQUAL ExprList .)
    COMMA           shift and go to state 115


state 230

    (89) OtherType -> MAP LBRACK NType . RBRACK NType

    RBRACK          shift and go to state 335


state 231

    (21) CommonDecl -> CONSTANT LPAREN RPAREN .

    SEMICOL         reduce using rule 21 (CommonDecl -> CONSTANT LPAREN RPAREN .)


state 232

    (19) CommonDecl -> CONSTANT LPAREN ConstDecl . OSemi RPAREN
    (20) CommonDecl -> CONSTANT LPAREN ConstDecl . SEMICOL ConstDeclList OSemi RPAREN
    (133) OSemi -> .
    (134) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 337
    RPAREN          reduce using rule 133 (OSemi -> .)

    OSemi                          shift and go to state 336

state 233

    (32) ConstDecl -> DeclNameList EQUAL . ExprList
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 151
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 338
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 234

    (31) ConstDecl -> DeclNameList NType . EQUAL ExprList

    EQUAL           shift and go to state 339


state 235

    (242) Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .
    (232) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (238) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUS           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    XOR             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OR              reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQEQ            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    NOTEQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LEQ             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GEQ             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GREAT           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LESS            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPAMP          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSEQ          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSEQ         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    TIMESEQ         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MODEQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OREQ            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPEQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    CAREQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSMIN        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OROR            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SEMICOL         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQUAL           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLONEQ         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COMMA           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LBRACE          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PIPE            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACK          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RPAREN          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLON           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DDD             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDE          shift and go to state 102
    MOD             shift and go to state 107
    SHL             shift and go to state 106
    SHR             shift and go to state 101
    AMPERS          shift and go to state 104
    AMPCAR          shift and go to state 103
    TIMES           shift and go to state 105


state 236

    (243) Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .
    (232) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (238) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUS           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    XOR             reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OR              reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQEQ            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    NOTEQ           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LEQ             reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GEQ             reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GREAT           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LESS            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPAMP          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSEQ          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSEQ         reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    TIMESEQ         reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MODEQ           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OREQ            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPEQ           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    CAREQ           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSMIN        reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OROR            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SEMICOL         reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQUAL           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLONEQ         reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COMMA           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LBRACE          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PIPE            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACK          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RPAREN          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLON           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DDD             reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDE          shift and go to state 102
    MOD             shift and go to state 107
    SHL             shift and go to state 106
    SHR             shift and go to state 101
    AMPERS          shift and go to state 104
    AMPCAR          shift and go to state 103
    TIMES           shift and go to state 105


state 237

    (240) Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .
    (232) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (238) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUS           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    XOR             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OR              reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQEQ            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    NOTEQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LEQ             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GEQ             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GREAT           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LESS            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPAMP          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MODEQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OREQ            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPEQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    CAREQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OROR            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SEMICOL         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQUAL           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLONEQ         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COMMA           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LBRACE          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PIPE            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACK          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RPAREN          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLON           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DDD             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDE          shift and go to state 102
    MOD             shift and go to state 107
    SHL             shift and go to state 106
    SHR             shift and go to state 101
    AMPERS          shift and go to state 104
    AMPCAR          shift and go to state 103
    TIMES           shift and go to state 105


state 238

    (241) Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .
    (232) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (238) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUS           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    XOR             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OR              reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQEQ            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    NOTEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LEQ             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GEQ             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GREAT           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LESS            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPAMP          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MODEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OREQ            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    CAREQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OROR            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SEMICOL         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQUAL           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLONEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COMMA           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LBRACE          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PIPE            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACK          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RPAREN          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLON           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DDD             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDE          shift and go to state 102
    MOD             shift and go to state 107
    SHL             shift and go to state 106
    SHR             shift and go to state 101
    AMPERS          shift and go to state 104
    AMPCAR          shift and go to state 103
    TIMES           shift and go to state 105


state 239

    (101) ArgList -> ArgList LPAREN . OArgTypeListOComma RPAREN
    (183) OArgTypeListOComma -> .
    (184) OArgTypeListOComma -> . ArgTypeList OComma
    (181) ArgTypeList -> . ArgType
    (182) ArgTypeList -> . ArgTypeList COMMA ArgType
    (177) ArgType -> . NameOrType
    (178) ArgType -> . IDENTIFIER NameOrType
    (179) ArgType -> . IDENTIFIER DotDotDot
    (180) ArgType -> . DotDotDot
    (229) NameOrType -> . NType
    (200) DotDotDot -> . DDD
    (201) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    RPAREN          reduce using rule 183 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 255
    DDD             shift and go to state 257
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    StructType                     shift and go to state 67
    DotName                        shift and go to state 218
    ArgType                        shift and go to state 251
    Name                           shift and go to state 222
    DotDotDot                      shift and go to state 253
    NType                          shift and go to state 256
    NameOrType                     shift and go to state 254
    ArgTypeList                    shift and go to state 250
    OtherType                      shift and go to state 220
    OArgTypeListOComma             shift and go to state 340
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    FuncType                       shift and go to state 215

state 240

    (124) FuncRetType -> FuncType .

    LBRACE          reduce using rule 124 (FuncRetType -> FuncType .)
    SEMICOL         reduce using rule 124 (FuncRetType -> FuncType .)
    LEFT_ANGLE      reduce using rule 124 (FuncRetType -> FuncType .)
    RPAREN          reduce using rule 124 (FuncRetType -> FuncType .)
    EQUAL           reduce using rule 124 (FuncRetType -> FuncType .)
    RBRACK          reduce using rule 124 (FuncRetType -> FuncType .)
    COMMA           reduce using rule 124 (FuncRetType -> FuncType .)
    OR_RIGHT        reduce using rule 124 (FuncRetType -> FuncType .)
    DDD             reduce using rule 124 (FuncRetType -> FuncType .)
    COLON           reduce using rule 124 (FuncRetType -> FuncType .)
    COLONEQ         reduce using rule 124 (FuncRetType -> FuncType .)
    LEFT_LEFT       reduce using rule 124 (FuncRetType -> FuncType .)
    INTEGER         reduce using rule 124 (FuncRetType -> FuncType .)
    FLOAT           reduce using rule 124 (FuncRetType -> FuncType .)
    STRING          reduce using rule 124 (FuncRetType -> FuncType .)
    RBRACE          reduce using rule 124 (FuncRetType -> FuncType .)


state 241

    (126) FuncRetType -> PtrType .

    LBRACE          reduce using rule 126 (FuncRetType -> PtrType .)
    SEMICOL         reduce using rule 126 (FuncRetType -> PtrType .)
    LEFT_ANGLE      reduce using rule 126 (FuncRetType -> PtrType .)
    RPAREN          reduce using rule 126 (FuncRetType -> PtrType .)
    EQUAL           reduce using rule 126 (FuncRetType -> PtrType .)
    RBRACK          reduce using rule 126 (FuncRetType -> PtrType .)
    COMMA           reduce using rule 126 (FuncRetType -> PtrType .)
    OR_RIGHT        reduce using rule 126 (FuncRetType -> PtrType .)
    DDD             reduce using rule 126 (FuncRetType -> PtrType .)
    COLON           reduce using rule 126 (FuncRetType -> PtrType .)
    COLONEQ         reduce using rule 126 (FuncRetType -> PtrType .)
    LEFT_LEFT       reduce using rule 126 (FuncRetType -> PtrType .)
    INTEGER         reduce using rule 126 (FuncRetType -> PtrType .)
    FLOAT           reduce using rule 126 (FuncRetType -> PtrType .)
    STRING          reduce using rule 126 (FuncRetType -> PtrType .)
    RBRACE          reduce using rule 126 (FuncRetType -> PtrType .)


state 242

    (105) FuncRes -> FuncRetType .

    LBRACE          reduce using rule 105 (FuncRes -> FuncRetType .)
    SEMICOL         reduce using rule 105 (FuncRes -> FuncRetType .)
    LEFT_ANGLE      reduce using rule 105 (FuncRes -> FuncRetType .)
    RPAREN          reduce using rule 105 (FuncRes -> FuncRetType .)
    EQUAL           reduce using rule 105 (FuncRes -> FuncRetType .)
    RBRACK          reduce using rule 105 (FuncRes -> FuncRetType .)
    COMMA           reduce using rule 105 (FuncRes -> FuncRetType .)
    OR_RIGHT        reduce using rule 105 (FuncRes -> FuncRetType .)
    DDD             reduce using rule 105 (FuncRes -> FuncRetType .)
    COLON           reduce using rule 105 (FuncRes -> FuncRetType .)
    COLONEQ         reduce using rule 105 (FuncRes -> FuncRetType .)
    LEFT_LEFT       reduce using rule 105 (FuncRes -> FuncRetType .)
    INTEGER         reduce using rule 105 (FuncRes -> FuncRetType .)
    FLOAT           reduce using rule 105 (FuncRes -> FuncRetType .)
    STRING          reduce using rule 105 (FuncRes -> FuncRetType .)
    RBRACE          reduce using rule 105 (FuncRes -> FuncRetType .)


state 243

    (125) FuncRetType -> OtherType .

    LBRACE          reduce using rule 125 (FuncRetType -> OtherType .)
    SEMICOL         reduce using rule 125 (FuncRetType -> OtherType .)
    LEFT_ANGLE      reduce using rule 125 (FuncRetType -> OtherType .)
    RPAREN          reduce using rule 125 (FuncRetType -> OtherType .)
    EQUAL           reduce using rule 125 (FuncRetType -> OtherType .)
    RBRACK          reduce using rule 125 (FuncRetType -> OtherType .)
    COMMA           reduce using rule 125 (FuncRetType -> OtherType .)
    OR_RIGHT        reduce using rule 125 (FuncRetType -> OtherType .)
    DDD             reduce using rule 125 (FuncRetType -> OtherType .)
    COLON           reduce using rule 125 (FuncRetType -> OtherType .)
    COLONEQ         reduce using rule 125 (FuncRetType -> OtherType .)
    LEFT_LEFT       reduce using rule 125 (FuncRetType -> OtherType .)
    INTEGER         reduce using rule 125 (FuncRetType -> OtherType .)
    FLOAT           reduce using rule 125 (FuncRetType -> OtherType .)
    STRING          reduce using rule 125 (FuncRetType -> OtherType .)
    RBRACE          reduce using rule 125 (FuncRetType -> OtherType .)


state 244

    (99) FuncType -> FUNCTION ArgList FuncRes .

    LEFT_ANGLE      reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    LBRACE          reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    COMMA           reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    OR_RIGHT        reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    RPAREN          reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    INTEGER         reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    FLOAT           reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    STRING          reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    SEMICOL         reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACE          reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    EQUAL           reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACK          reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    DDD             reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    COLON           reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    COLONEQ         reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    LEFT_LEFT       reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)


state 245

    (106) FuncRes -> LEFT_OR . OArgTypeListOComma OR_RIGHT
    (183) OArgTypeListOComma -> .
    (184) OArgTypeListOComma -> . ArgTypeList OComma
    (181) ArgTypeList -> . ArgType
    (182) ArgTypeList -> . ArgTypeList COMMA ArgType
    (177) ArgType -> . NameOrType
    (178) ArgType -> . IDENTIFIER NameOrType
    (179) ArgType -> . IDENTIFIER DotDotDot
    (180) ArgType -> . DotDotDot
    (229) NameOrType -> . NType
    (200) DotDotDot -> . DDD
    (201) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 183 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 255
    DDD             shift and go to state 257
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    StructType                     shift and go to state 67
    DotName                        shift and go to state 218
    OArgTypeListOComma             shift and go to state 341
    Name                           shift and go to state 222
    DotDotDot                      shift and go to state 253
    NType                          shift and go to state 256
    NameOrType                     shift and go to state 254
    ArgTypeList                    shift and go to state 250
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    ArgType                        shift and go to state 251
    FuncType                       shift and go to state 215

state 246

    (127) FuncRetType -> DotName .

    LBRACE          reduce using rule 127 (FuncRetType -> DotName .)
    SEMICOL         reduce using rule 127 (FuncRetType -> DotName .)
    LEFT_ANGLE      reduce using rule 127 (FuncRetType -> DotName .)
    RPAREN          reduce using rule 127 (FuncRetType -> DotName .)
    EQUAL           reduce using rule 127 (FuncRetType -> DotName .)
    RBRACK          reduce using rule 127 (FuncRetType -> DotName .)
    COMMA           reduce using rule 127 (FuncRetType -> DotName .)
    OR_RIGHT        reduce using rule 127 (FuncRetType -> DotName .)
    DDD             reduce using rule 127 (FuncRetType -> DotName .)
    COLON           reduce using rule 127 (FuncRetType -> DotName .)
    COLONEQ         reduce using rule 127 (FuncRetType -> DotName .)
    LEFT_LEFT       reduce using rule 127 (FuncRetType -> DotName .)
    INTEGER         reduce using rule 127 (FuncRetType -> DotName .)
    FLOAT           reduce using rule 127 (FuncRetType -> DotName .)
    STRING          reduce using rule 127 (FuncRetType -> DotName .)
    RBRACE          reduce using rule 127 (FuncRetType -> DotName .)


state 247

    (128) FuncRetType -> TYPE .

    LBRACE          reduce using rule 128 (FuncRetType -> TYPE .)
    SEMICOL         reduce using rule 128 (FuncRetType -> TYPE .)
    LEFT_ANGLE      reduce using rule 128 (FuncRetType -> TYPE .)
    RPAREN          reduce using rule 128 (FuncRetType -> TYPE .)
    EQUAL           reduce using rule 128 (FuncRetType -> TYPE .)
    RBRACK          reduce using rule 128 (FuncRetType -> TYPE .)
    COMMA           reduce using rule 128 (FuncRetType -> TYPE .)
    OR_RIGHT        reduce using rule 128 (FuncRetType -> TYPE .)
    DDD             reduce using rule 128 (FuncRetType -> TYPE .)
    COLON           reduce using rule 128 (FuncRetType -> TYPE .)
    COLONEQ         reduce using rule 128 (FuncRetType -> TYPE .)
    LEFT_LEFT       reduce using rule 128 (FuncRetType -> TYPE .)
    INTEGER         reduce using rule 128 (FuncRetType -> TYPE .)
    FLOAT           reduce using rule 128 (FuncRetType -> TYPE .)
    STRING          reduce using rule 128 (FuncRetType -> TYPE .)
    RBRACE          reduce using rule 128 (FuncRetType -> TYPE .)


state 248

    (103) FuncBody -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    LBRACE          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    SEMICOL         reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 342

state 249

    (96) FuncDecl -> FUNCTION FuncDecl_ FuncBody .

    SEMICOL         reduce using rule 96 (FuncDecl -> FUNCTION FuncDecl_ FuncBody .)


state 250

    (184) OArgTypeListOComma -> ArgTypeList . OComma
    (182) ArgTypeList -> ArgTypeList . COMMA ArgType
    (131) OComma -> .
    (132) OComma -> . COMMA

    COMMA           shift and go to state 343
    RPAREN          reduce using rule 131 (OComma -> .)
    OR_RIGHT        reduce using rule 131 (OComma -> .)

    OComma                         shift and go to state 344

state 251

    (181) ArgTypeList -> ArgType .

    COMMA           reduce using rule 181 (ArgTypeList -> ArgType .)
    OR_RIGHT        reduce using rule 181 (ArgTypeList -> ArgType .)
    RPAREN          reduce using rule 181 (ArgTypeList -> ArgType .)


state 252

    (100) ArgList -> LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 345


state 253

    (180) ArgType -> DotDotDot .

    COMMA           reduce using rule 180 (ArgType -> DotDotDot .)
    RPAREN          reduce using rule 180 (ArgType -> DotDotDot .)
    OR_RIGHT        reduce using rule 180 (ArgType -> DotDotDot .)


state 254

    (177) ArgType -> NameOrType .

    COMMA           reduce using rule 177 (ArgType -> NameOrType .)
    RPAREN          reduce using rule 177 (ArgType -> NameOrType .)
    OR_RIGHT        reduce using rule 177 (ArgType -> NameOrType .)


state 255

    (178) ArgType -> IDENTIFIER . NameOrType
    (179) ArgType -> IDENTIFIER . DotDotDot
    (176) Name -> IDENTIFIER .
    (229) NameOrType -> . NType
    (200) DotDotDot -> . DDD
    (201) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    DOT             reduce using rule 176 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 176 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 176 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 176 (Name -> IDENTIFIER .)
    DDD             shift and go to state 257
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    Name                           shift and go to state 222
    DotDotDot                      shift and go to state 346
    NType                          shift and go to state 256
    NameOrType                     shift and go to state 347
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218
    FuncType                       shift and go to state 215

state 256

    (229) NameOrType -> NType .

    COMMA           reduce using rule 229 (NameOrType -> NType .)
    OR_RIGHT        reduce using rule 229 (NameOrType -> NType .)
    RPAREN          reduce using rule 229 (NameOrType -> NType .)


state 257

    (200) DotDotDot -> DDD .
    (201) DotDotDot -> DDD . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    COMMA           reduce using rule 200 (DotDotDot -> DDD .)
    OR_RIGHT        reduce using rule 200 (DotDotDot -> DDD .)
    RPAREN          reduce using rule 200 (DotDotDot -> DDD .)
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    Name                           shift and go to state 222
    FuncType                       shift and go to state 215
    NType                          shift and go to state 348
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218

state 258

    (98) FuncDecl_ -> LEFT_OR OArgTypeListOComma . OR_RIGHT IDENTIFIER ArgList FuncRes

    OR_RIGHT        shift and go to state 349


state 259

    (97) FuncDecl_ -> IDENTIFIER ArgList . FuncRes
    (101) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (104) FuncRes -> .
    (105) FuncRes -> . FuncRetType
    (106) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (124) FuncRetType -> . FuncType
    (125) FuncRetType -> . OtherType
    (126) FuncRetType -> . PtrType
    (127) FuncRetType -> . DotName
    (128) FuncRetType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    LPAREN          shift and go to state 239
    LBRACE          reduce using rule 104 (FuncRes -> .)
    SEMICOL         reduce using rule 104 (FuncRes -> .)
    LEFT_OR         shift and go to state 245
    TYPE            shift and go to state 247
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    DotName                        shift and go to state 246
    Name                           shift and go to state 222
    FuncType                       shift and go to state 240
    OtherType                      shift and go to state 243
    InterfaceType                  shift and go to state 64
    FuncRes                        shift and go to state 350
    PtrType                        shift and go to state 241
    FuncRetType                    shift and go to state 242

state 260

    (66) ForHeader -> OSimpleStmt SEMICOL . OSimpleStmt SEMICOL OSimpleStmt
    (135) OSimpleStmt -> .
    (136) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 135 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 137
    OSimpleStmt                    shift and go to state 351
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 261

    (63) RangeStmt -> ExprList EQUAL . RANGE Expr
    (50) SimpleStmt -> ExprList EQUAL . ExprList
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RANGE           shift and go to state 352
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 151
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 229
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 262

    (64) RangeStmt -> ExprList COLONEQ . RANGE Expr
    (51) SimpleStmt -> ExprList COLONEQ . ExprList
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RANGE           shift and go to state 353
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 151
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 228
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 263

    (65) RangeStmt -> RANGE Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 65 (RangeStmt -> RANGE Expr .)
    RBRACK          reduce using rule 65 (RangeStmt -> RANGE Expr .)
    OROR            shift and go to state 164


state 264

    (62) LoopBody -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    LBRACE          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    SEMICOL         reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 354

state 265

    (69) ForBody -> ForHeader LoopBody .

    SEMICOL         reduce using rule 69 (ForBody -> ForHeader LoopBody .)


state 266

    (95) InterfaceType -> INTERFACE LBRACE RBRACE .

    LEFT_ANGLE      reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    EQUAL           reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    SEMICOL         reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RPAREN          reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COMMA           reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LBRACE          reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACK          reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    DDD             reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLON           reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLONEQ         reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    INTEGER         reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    FLOAT           reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    STRING          reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACE          reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)


state 267

    (109) InterfaceDeclList -> InterfaceDecl .

    SEMICOL         reduce using rule 109 (InterfaceDeclList -> InterfaceDecl .)
    RBRACE          reduce using rule 109 (InterfaceDeclList -> InterfaceDecl .)


state 268

    (94) InterfaceType -> INTERFACE LBRACE InterfaceDeclList . OSemi RBRACE
    (110) InterfaceDeclList -> InterfaceDeclList . SEMICOL InterfaceDecl
    (133) OSemi -> .
    (134) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 355
    RBRACE          reduce using rule 133 (OSemi -> .)

    OSemi                          shift and go to state 356

state 269

    (117) InterfaceDecl -> NewName . InDecl
    (120) InDecl -> . LPAREN OArgTypeListOComma RPAREN FuncRes

    LPAREN          shift and go to state 357

    InDecl                         shift and go to state 358

state 270

    (119) InterfaceDecl -> LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 359


state 271

    (118) InterfaceDecl -> IDENTIFIER .
    (122) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 118 (InterfaceDecl -> IDENTIFIER .)
    RBRACE          reduce using rule 118 (InterfaceDecl -> IDENTIFIER .)
    LPAREN          reduce using rule 122 (NewName -> IDENTIFIER .)


state 272

    (161) TypeDeclList -> TypeDecl .

    SEMICOL         reduce using rule 161 (TypeDeclList -> TypeDecl .)
    RPAREN          reduce using rule 161 (TypeDeclList -> TypeDecl .)


state 273

    (26) CommonDecl -> TYPE LPAREN TypeDeclList . OSemi RPAREN
    (162) TypeDeclList -> TypeDeclList . SEMICOL TypeDecl
    (133) OSemi -> .
    (134) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 360
    RPAREN          reduce using rule 133 (OSemi -> .)

    OSemi                          shift and go to state 361

state 274

    (27) CommonDecl -> TYPE LPAREN RPAREN .

    SEMICOL         reduce using rule 27 (CommonDecl -> TYPE LPAREN RPAREN .)


state 275

    (37) TypeDecl -> TypeDeclName NType .

    SEMICOL         reduce using rule 37 (TypeDecl -> TypeDeclName NType .)
    RPAREN          reduce using rule 37 (TypeDecl -> TypeDeclName NType .)


state 276

    (263) ForCompExpr -> LBRACK Expr PIPE . RangeStmt RBRACK
    (63) RangeStmt -> . ExprList EQUAL RANGE Expr
    (64) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (65) RangeStmt -> . RANGE Expr
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RANGE           shift and go to state 136
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 151
    PseudoCall                     shift and go to state 49
    RangeStmt                      shift and go to state 362
    ExprList                       shift and go to state 363
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 277

    (88) OtherType -> LBRACK OExpr RBRACK . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    Name                           shift and go to state 222
    FuncType                       shift and go to state 215
    NType                          shift and go to state 364
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218

state 278

    (72) IfHeader -> OSimpleStmt SEMICOL . OSimpleStmt
    (135) OSimpleStmt -> .
    (136) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    LBRACE          reduce using rule 135 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 137
    OSimpleStmt                    shift and go to state 365
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 279

    (230) SwitchStmt -> SWITCH IfHeader LBRACE . CaseBlockList RBRACE
    (60) CaseBlockList -> .
    (61) CaseBlockList -> . CaseBlockList CaseBlock

    RBRACE          reduce using rule 60 (CaseBlockList -> .)
    CASE            reduce using rule 60 (CaseBlockList -> .)
    DEFAULT         reduce using rule 60 (CaseBlockList -> .)

    CaseBlockList                  shift and go to state 366

state 280

    (222) Keyval -> Expr . COLON CompLitExpr
    (223) BareCompLitExpr -> Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 367
    COMMA           reduce using rule 223 (BareCompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 223 (BareCompLitExpr -> Expr .)
    OROR            shift and go to state 164


state 281

    (224) BareCompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (173) BracedKeyvalList -> .
    (174) BracedKeyvalList -> . KeyvalList OComma
    (169) KeyvalList -> . Keyval
    (170) KeyvalList -> . BareCompLitExpr
    (171) KeyvalList -> . KeyvalList COMMA Keyval
    (172) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (222) Keyval -> . Expr COLON CompLitExpr
    (223) BareCompLitExpr -> . Expr
    (224) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 173 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 281
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    FuncLiteral                    shift and go to state 23
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    PExprNoParen                   shift and go to state 60
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 280
    PseudoCall                     shift and go to state 49
    KeyvalList                     shift and go to state 282
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Keyval                         shift and go to state 283
    BareCompLitExpr                shift and go to state 285
    PExpr                          shift and go to state 69
    BracedKeyvalList               shift and go to state 368

state 282

    (174) BracedKeyvalList -> KeyvalList . OComma
    (171) KeyvalList -> KeyvalList . COMMA Keyval
    (172) KeyvalList -> KeyvalList . COMMA BareCompLitExpr
    (131) OComma -> .
    (132) OComma -> . COMMA

    COMMA           shift and go to state 369
    RIGHT_RIGHT     reduce using rule 131 (OComma -> .)

    OComma                         shift and go to state 370

state 283

    (169) KeyvalList -> Keyval .

    COMMA           reduce using rule 169 (KeyvalList -> Keyval .)
    RIGHT_RIGHT     reduce using rule 169 (KeyvalList -> Keyval .)


state 284

    (214) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 371


state 285

    (170) KeyvalList -> BareCompLitExpr .

    COMMA           reduce using rule 170 (KeyvalList -> BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 170 (KeyvalList -> BareCompLitExpr .)


state 286

    (209) PExprNoParen -> PExpr LBRACK Expr . RBRACK
    (254) Expr -> Expr . OROR Prec2Expr_
    (140) OExpr -> Expr .

    RBRACK          shift and go to state 372
    OROR            shift and go to state 164
    COLON           reduce using rule 140 (OExpr -> Expr .)


state 287

    (210) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr RBRACK
    (211) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr COLON OExpr RBRACK

    COLON           shift and go to state 373


state 288

    (265) PseudoCall -> PExpr LPAREN ExprOrTypeList . OComma RPAREN
    (266) PseudoCall -> PExpr LPAREN ExprOrTypeList . DDD OComma RPAREN
    (148) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType
    (131) OComma -> .
    (132) OComma -> . COMMA

    DDD             shift and go to state 376
    COMMA           shift and go to state 375
    RPAREN          reduce using rule 131 (OComma -> .)

    OComma                         shift and go to state 374

state 289

    (147) ExprOrTypeList -> ExprOrType .

    DDD             reduce using rule 147 (ExprOrTypeList -> ExprOrType .)
    COMMA           reduce using rule 147 (ExprOrTypeList -> ExprOrType .)
    RPAREN          reduce using rule 147 (ExprOrTypeList -> ExprOrType .)
    COLON           reduce using rule 147 (ExprOrTypeList -> ExprOrType .)
    EQUAL           reduce using rule 147 (ExprOrTypeList -> ExprOrType .)
    COLONEQ         reduce using rule 147 (ExprOrTypeList -> ExprOrType .)


state 290

    (264) PseudoCall -> PExpr LPAREN RPAREN .

    DOT             reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACK          reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEFT_LEFT       reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    LPAREN          reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDE          reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    MOD             reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL             reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR             reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPERS          reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAR          reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMES           reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUS            reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUS           reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    XOR             reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    OR              reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQEQ            reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    NOTEQ           reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEQ             reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    GEQ             reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    GREAT           reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    LESS            reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPAMP          reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    OROR            reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    SEMICOL         reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACE          reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSEQ          reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSEQ         reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMESEQ         reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDEEQ        reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    MODEQ           reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    OREQ            reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPEQ           reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    CAREQ           reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAREQ        reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSMIN        reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQUAL           reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLONEQ         reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    COMMA           reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    PIPE            reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACK          reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    RPAREN          reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_ANGLE     reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLON           reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_RIGHT     reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)
    DDD             reduce using rule 264 (PseudoCall -> PExpr LPAREN RPAREN .)


state 291

    (215) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 377


state 292

    (207) PExprNoParen -> PExpr DOT LPAREN . ExprOrType RPAREN
    (208) PExprNoParen -> PExpr DOT LPAREN . TYPE RPAREN
    (227) ExprOrType -> . Expr
    (228) ExprOrType -> . NonExprType
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (143) FuncLiteralDecl -> . FuncType

    TYPE            shift and go to state 379
    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 182
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 186
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 180
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    ExprOrType                     shift and go to state 378
    NonExprType                    shift and go to state 183
    OtherType                      shift and go to state 184
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 185
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 293

    (206) PExprNoParen -> PExpr DOT IDENTIFIER .

    DOT             reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACK          reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LPAREN          reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDE          reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MOD             reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL             reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR             reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPERS          reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAR          reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMES           reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUS            reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUS           reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    XOR             reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OR              reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQEQ            reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    NOTEQ           reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEQ             reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GEQ             reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GREAT           reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LESS            reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPAMP          reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OROR            reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SEMICOL         reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACE          reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COMMA           reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACK          reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MODEQ           reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OREQ            reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPEQ           reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    CAREQ           reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAREQ        reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQUAL           reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLONEQ         reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PIPE            reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RPAREN          reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLON           reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DDD             reduce using rule 206 (PExprNoParen -> PExpr DOT IDENTIFIER .)


state 294

    (254) Expr -> Expr OROR Prec2Expr_ .
    (252) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    OROR            reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    COMMA           reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    SEMICOL         reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    RPAREN          reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSEQ          reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSEQ         reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    TIMESEQ         reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    MODEQ           reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    OREQ            reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    AMPEQ           reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    CAREQ           reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    AMPCAREQ        reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSPLUS        reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSMIN        reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    LBRACE          reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    EQUAL           reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    COLONEQ         reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    DDD             reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    COLON           reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACK          reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    PIPE            reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 254 (Expr -> Expr OROR Prec2Expr_ .)
    AMPAMP          shift and go to state 108


state 295

    (46) SimpleStmt -> Expr CAREQ Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 46 (SimpleStmt -> Expr CAREQ Expr .)
    LBRACE          reduce using rule 46 (SimpleStmt -> Expr CAREQ Expr .)
    OROR            shift and go to state 164


state 296

    (41) SimpleStmt -> Expr TIMESEQ Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr TIMESEQ Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr TIMESEQ Expr .)
    OROR            shift and go to state 164


state 297

    (39) SimpleStmt -> Expr PLUSEQ Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 39 (SimpleStmt -> Expr PLUSEQ Expr .)
    LBRACE          reduce using rule 39 (SimpleStmt -> Expr PLUSEQ Expr .)
    OROR            shift and go to state 164


state 298

    (43) SimpleStmt -> Expr MODEQ Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 43 (SimpleStmt -> Expr MODEQ Expr .)
    LBRACE          reduce using rule 43 (SimpleStmt -> Expr MODEQ Expr .)
    OROR            shift and go to state 164


state 299

    (48) SimpleStmt -> Expr SHR_ASSIGN Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 48 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    LBRACE          reduce using rule 48 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    OROR            shift and go to state 164


state 300

    (44) SimpleStmt -> Expr OREQ Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 44 (SimpleStmt -> Expr OREQ Expr .)
    LBRACE          reduce using rule 44 (SimpleStmt -> Expr OREQ Expr .)
    OROR            shift and go to state 164


state 301

    (40) SimpleStmt -> Expr MINUSEQ Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 40 (SimpleStmt -> Expr MINUSEQ Expr .)
    LBRACE          reduce using rule 40 (SimpleStmt -> Expr MINUSEQ Expr .)
    OROR            shift and go to state 164


state 302

    (45) SimpleStmt -> Expr AMPEQ Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 45 (SimpleStmt -> Expr AMPEQ Expr .)
    LBRACE          reduce using rule 45 (SimpleStmt -> Expr AMPEQ Expr .)
    OROR            shift and go to state 164


state 303

    (49) SimpleStmt -> Expr AMPCAREQ Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 49 (SimpleStmt -> Expr AMPCAREQ Expr .)
    LBRACE          reduce using rule 49 (SimpleStmt -> Expr AMPCAREQ Expr .)
    OROR            shift and go to state 164


state 304

    (47) SimpleStmt -> Expr SHL_ASSIGN Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 47 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    LBRACE          reduce using rule 47 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    OROR            shift and go to state 164


state 305

    (42) SimpleStmt -> Expr DIVIDEEQ Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 42 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    LBRACE          reduce using rule 42 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    OROR            shift and go to state 164


state 306

    (203) PExpr -> LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 203 (PExpr -> LPAREN ExprOrType RPAREN .)


state 307

    (87) NonExprType -> TIMES NonExprType .

    DDD             reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    COMMA           reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    RPAREN          reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    COLON           reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    EQUAL           reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    COLONEQ         reduce using rule 87 (NonExprType -> TIMES NonExprType .)


state 308

    (263) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (140) OExpr -> Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    PIPE            shift and go to state 276
    RBRACK          reduce using rule 140 (OExpr -> Expr .)
    OROR            shift and go to state 164


state 309

    (73) IfStmt -> IF IfHeader LoopBody . ElseIfList Else
    (75) ElseIfList -> .
    (76) ElseIfList -> . ElseIfList ElseIf

    ELSE            reduce using rule 75 (ElseIfList -> .)
    SEMICOL         reduce using rule 75 (ElseIfList -> .)

    ElseIfList                     shift and go to state 380

state 310

    (167) NewNameList -> NewName .

    COMMA           reduce using rule 167 (NewNameList -> NewName .)
    LPAREN          reduce using rule 167 (NewNameList -> NewName .)
    TYPE            reduce using rule 167 (NewNameList -> NewName .)
    FUNCTION        reduce using rule 167 (NewNameList -> NewName .)
    LBRACK          reduce using rule 167 (NewNameList -> NewName .)
    MAP             reduce using rule 167 (NewNameList -> NewName .)
    TIMES           reduce using rule 167 (NewNameList -> NewName .)
    STRUCT          reduce using rule 167 (NewNameList -> NewName .)
    INTERFACE       reduce using rule 167 (NewNameList -> NewName .)
    IDENTIFIER      reduce using rule 167 (NewNameList -> NewName .)


state 311

    (107) StructDeclList -> StructDecl .

    SEMICOL         reduce using rule 107 (StructDeclList -> StructDecl .)
    RBRACE          reduce using rule 107 (StructDeclList -> StructDecl .)


state 312

    (114) StructDecl -> TIMES . Embed OLiteral
    (116) StructDecl -> TIMES . LPAREN Embed RPAREN OLiteral
    (154) Embed -> . IDENTIFIER

    LPAREN          shift and go to state 381
    IDENTIFIER      shift and go to state 383

    Embed                          shift and go to state 382

state 313

    (113) StructDecl -> LPAREN . Embed RPAREN OLiteral
    (115) StructDecl -> LPAREN . TIMES Embed RPAREN OLiteral
    (154) Embed -> . IDENTIFIER

    TIMES           shift and go to state 384
    IDENTIFIER      shift and go to state 383

    Embed                          shift and go to state 385

state 314

    (111) StructDecl -> NewNameList . NType OLiteral
    (168) NewNameList -> NewNameList . COMMA NewName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    COMMA           shift and go to state 386
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    Name                           shift and go to state 222
    FuncType                       shift and go to state 215
    NType                          shift and go to state 387
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218

state 315

    (92) StructType -> STRUCT LBRACE StructDeclList . OSemi RBRACE
    (108) StructDeclList -> StructDeclList . SEMICOL StructDecl
    (133) OSemi -> .
    (134) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 388
    RBRACE          reduce using rule 133 (OSemi -> .)

    OSemi                          shift and go to state 389

state 316

    (154) Embed -> IDENTIFIER .
    (122) NewName -> IDENTIFIER .

    INTEGER         reduce using rule 154 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 154 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 154 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 154 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 154 (Embed -> IDENTIFIER .)
    COMMA           reduce using rule 122 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 122 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 122 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 122 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 122 (NewName -> IDENTIFIER .)
    MAP             reduce using rule 122 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 122 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 122 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 122 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 122 (NewName -> IDENTIFIER .)


state 317

    (112) StructDecl -> Embed . OLiteral
    (149) OLiteral -> .
    (150) OLiteral -> . Literal
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING

    SEMICOL         reduce using rule 149 (OLiteral -> .)
    RBRACE          reduce using rule 149 (OLiteral -> .)
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42

    OLiteral                       shift and go to state 391
    Literal                        shift and go to state 390

state 318

    (93) StructType -> STRUCT LBRACE RBRACE .

    LEFT_ANGLE      reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    COMMA           reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    RPAREN          reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    SEMICOL         reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACE          reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    LBRACE          reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    DDD             reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    EQUAL           reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACK          reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    COLON           reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    COLONEQ         reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    INTEGER         reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    FLOAT           reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    STRING          reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)


state 319

    (11) ImportStmtList -> ImportStmtList SEMICOL ImportStmt .

    SEMICOL         reduce using rule 11 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)
    RPAREN          reduce using rule 11 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)


state 320

    (7) Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .

    SEMICOL         reduce using rule 7 (Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .)


state 321

    (213) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma . RIGHT_ANGLE

    RIGHT_ANGLE     shift and go to state 392


state 322

    (132) OComma -> COMMA .

    RIGHT_ANGLE     reduce using rule 132 (OComma -> COMMA .)
    RPAREN          reduce using rule 132 (OComma -> COMMA .)


state 323

    (58) CompoundStmt -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (165) StmtList -> . Stmt SEMICOL
    (166) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    StmtList                       shift and go to state 393
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    FuncLiteralDecl                shift and go to state 34
    Stmt                           shift and go to state 324
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 324

    (165) StmtList -> Stmt . SEMICOL

    SEMICOL         shift and go to state 394


state 325

    (144) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList . cmtlist RBRACE
    (166) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    RBRACE          reduce using rule 267 (cmtlist -> .)
    LBRACE          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    SEMICOL         reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 395

state 326

    (158) VarDeclList -> VarDeclList SEMICOL . VarDecl
    (134) OSemi -> SEMICOL .
    (28) VarDecl -> . DeclNameList NType
    (29) VarDecl -> . DeclNameList NType EQUAL ExprList
    (30) VarDecl -> . DeclNameList EQUAL ExprList
    (163) DeclNameList -> . DeclName
    (164) DeclNameList -> . DeclNameList COMMA DeclName
    (175) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 134 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 110

    DeclName                       shift and go to state 111
    VarDecl                        shift and go to state 396
    DeclNameList                   shift and go to state 114

state 327

    (23) CommonDecl -> VAR LPAREN VarDeclList OSemi . RPAREN

    RPAREN          shift and go to state 397


state 328

    (30) VarDecl -> DeclNameList EQUAL ExprList .
    (146) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 30 (VarDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 30 (VarDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 115


state 329

    (123) PtrType -> TIMES NType .

    LEFT_ANGLE      reduce using rule 123 (PtrType -> TIMES NType .)
    LBRACE          reduce using rule 123 (PtrType -> TIMES NType .)
    RPAREN          reduce using rule 123 (PtrType -> TIMES NType .)
    EQUAL           reduce using rule 123 (PtrType -> TIMES NType .)
    SEMICOL         reduce using rule 123 (PtrType -> TIMES NType .)
    RBRACK          reduce using rule 123 (PtrType -> TIMES NType .)
    COMMA           reduce using rule 123 (PtrType -> TIMES NType .)
    OR_RIGHT        reduce using rule 123 (PtrType -> TIMES NType .)
    DDD             reduce using rule 123 (PtrType -> TIMES NType .)
    COLON           reduce using rule 123 (PtrType -> TIMES NType .)
    COLONEQ         reduce using rule 123 (PtrType -> TIMES NType .)
    LEFT_LEFT       reduce using rule 123 (PtrType -> TIMES NType .)
    INTEGER         reduce using rule 123 (PtrType -> TIMES NType .)
    FLOAT           reduce using rule 123 (PtrType -> TIMES NType .)
    STRING          reduce using rule 123 (PtrType -> TIMES NType .)
    RBRACE          reduce using rule 123 (PtrType -> TIMES NType .)


state 330

    (164) DeclNameList -> DeclNameList COMMA DeclName .

    EQUAL           reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    COMMA           reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    LPAREN          reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    TYPE            reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    FUNCTION        reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    LBRACK          reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    MAP             reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    TIMES           reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    STRUCT          reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    INTERFACE       reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    IDENTIFIER      reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    SEMICOL         reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)
    RPAREN          reduce using rule 164 (DeclNameList -> DeclNameList COMMA DeclName .)


state 331

    (130) DotName -> Name DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 398


state 332

    (29) VarDecl -> DeclNameList NType EQUAL . ExprList
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 151
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 399
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 333

    (83) NType -> LPAREN NType . RPAREN

    RPAREN          shift and go to state 400


state 334

    (140) OExpr -> Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 140 (OExpr -> Expr .)
    COLON           reduce using rule 140 (OExpr -> Expr .)
    OROR            shift and go to state 164


state 335

    (89) OtherType -> MAP LBRACK NType RBRACK . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    Name                           shift and go to state 222
    FuncType                       shift and go to state 215
    NType                          shift and go to state 401
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218

state 336

    (19) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi . RPAREN

    RPAREN          shift and go to state 402


state 337

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL . ConstDeclList OSemi RPAREN
    (134) OSemi -> SEMICOL .
    (159) ConstDeclList -> . ConstDecl1
    (160) ConstDeclList -> . ConstDeclList SEMICOL ConstDecl1
    (33) ConstDecl1 -> . ConstDecl
    (34) ConstDecl1 -> . DeclNameList NType
    (35) ConstDecl1 -> . DeclNameList
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (163) DeclNameList -> . DeclName
    (164) DeclNameList -> . DeclNameList COMMA DeclName
    (175) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 134 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 110

    ConstDecl1                     shift and go to state 405
    DeclName                       shift and go to state 111
    ConstDecl                      shift and go to state 406
    ConstDeclList                  shift and go to state 403
    DeclNameList                   shift and go to state 404

state 338

    (32) ConstDecl -> DeclNameList EQUAL ExprList .
    (146) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 32 (ConstDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 32 (ConstDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 115


state 339

    (31) ConstDecl -> DeclNameList NType EQUAL . ExprList
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 151
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 407
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 340

    (101) ArgList -> ArgList LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 408


state 341

    (106) FuncRes -> LEFT_OR OArgTypeListOComma . OR_RIGHT

    OR_RIGHT        shift and go to state 409


state 342

    (103) FuncBody -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (165) StmtList -> . Stmt SEMICOL
    (166) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    StmtList                       shift and go to state 410
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    FuncLiteralDecl                shift and go to state 34
    Stmt                           shift and go to state 324
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 343

    (182) ArgTypeList -> ArgTypeList COMMA . ArgType
    (132) OComma -> COMMA .
    (177) ArgType -> . NameOrType
    (178) ArgType -> . IDENTIFIER NameOrType
    (179) ArgType -> . IDENTIFIER DotDotDot
    (180) ArgType -> . DotDotDot
    (229) NameOrType -> . NType
    (200) DotDotDot -> . DDD
    (201) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    RPAREN          reduce using rule 132 (OComma -> COMMA .)
    OR_RIGHT        reduce using rule 132 (OComma -> COMMA .)
    IDENTIFIER      shift and go to state 255
    DDD             shift and go to state 257
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    StructType                     shift and go to state 67
    DotName                        shift and go to state 218
    Name                           shift and go to state 222
    DotDotDot                      shift and go to state 253
    NType                          shift and go to state 256
    NameOrType                     shift and go to state 254
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    ArgType                        shift and go to state 411
    FuncType                       shift and go to state 215

state 344

    (184) OArgTypeListOComma -> ArgTypeList OComma .

    RPAREN          reduce using rule 184 (OArgTypeListOComma -> ArgTypeList OComma .)
    OR_RIGHT        reduce using rule 184 (OArgTypeListOComma -> ArgTypeList OComma .)


state 345

    (100) ArgList -> LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    MAP             reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACK          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)


state 346

    (179) ArgType -> IDENTIFIER DotDotDot .

    COMMA           reduce using rule 179 (ArgType -> IDENTIFIER DotDotDot .)
    RPAREN          reduce using rule 179 (ArgType -> IDENTIFIER DotDotDot .)
    OR_RIGHT        reduce using rule 179 (ArgType -> IDENTIFIER DotDotDot .)


state 347

    (178) ArgType -> IDENTIFIER NameOrType .

    COMMA           reduce using rule 178 (ArgType -> IDENTIFIER NameOrType .)
    RPAREN          reduce using rule 178 (ArgType -> IDENTIFIER NameOrType .)
    OR_RIGHT        reduce using rule 178 (ArgType -> IDENTIFIER NameOrType .)


state 348

    (201) DotDotDot -> DDD NType .

    COMMA           reduce using rule 201 (DotDotDot -> DDD NType .)
    OR_RIGHT        reduce using rule 201 (DotDotDot -> DDD NType .)
    RPAREN          reduce using rule 201 (DotDotDot -> DDD NType .)


state 349

    (98) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT . IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 412


state 350

    (97) FuncDecl_ -> IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 97 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 97 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)


state 351

    (66) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt . SEMICOL OSimpleStmt

    SEMICOL         shift and go to state 413


state 352

    (63) RangeStmt -> ExprList EQUAL RANGE . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 414
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 353

    (64) RangeStmt -> ExprList COLONEQ RANGE . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 415
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 354

    (62) LoopBody -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (165) StmtList -> . Stmt SEMICOL
    (166) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    StmtList                       shift and go to state 416
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    FuncLiteralDecl                shift and go to state 34
    Stmt                           shift and go to state 324
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 355

    (110) InterfaceDeclList -> InterfaceDeclList SEMICOL . InterfaceDecl
    (134) OSemi -> SEMICOL .
    (117) InterfaceDecl -> . NewName InDecl
    (118) InterfaceDecl -> . IDENTIFIER
    (119) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (122) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 134 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 271
    LPAREN          shift and go to state 270

    InterfaceDecl                  shift and go to state 417
    NewName                        shift and go to state 269

state 356

    (94) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi . RBRACE

    RBRACE          shift and go to state 418


state 357

    (120) InDecl -> LPAREN . OArgTypeListOComma RPAREN FuncRes
    (183) OArgTypeListOComma -> .
    (184) OArgTypeListOComma -> . ArgTypeList OComma
    (181) ArgTypeList -> . ArgType
    (182) ArgTypeList -> . ArgTypeList COMMA ArgType
    (177) ArgType -> . NameOrType
    (178) ArgType -> . IDENTIFIER NameOrType
    (179) ArgType -> . IDENTIFIER DotDotDot
    (180) ArgType -> . DotDotDot
    (229) NameOrType -> . NType
    (200) DotDotDot -> . DDD
    (201) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    RPAREN          reduce using rule 183 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 255
    DDD             shift and go to state 257
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    StructType                     shift and go to state 67
    DotName                        shift and go to state 218
    OArgTypeListOComma             shift and go to state 419
    Name                           shift and go to state 222
    DotDotDot                      shift and go to state 253
    NType                          shift and go to state 256
    NameOrType                     shift and go to state 254
    ArgTypeList                    shift and go to state 250
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    ArgType                        shift and go to state 251
    FuncType                       shift and go to state 215

state 358

    (117) InterfaceDecl -> NewName InDecl .

    SEMICOL         reduce using rule 117 (InterfaceDecl -> NewName InDecl .)
    RBRACE          reduce using rule 117 (InterfaceDecl -> NewName InDecl .)


state 359

    (119) InterfaceDecl -> LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 420


state 360

    (162) TypeDeclList -> TypeDeclList SEMICOL . TypeDecl
    (134) OSemi -> SEMICOL .
    (37) TypeDecl -> . TypeDeclName NType
    (36) TypeDeclName -> . IDENTIFIER

    RPAREN          reduce using rule 134 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 144

    TypeDeclName                   shift and go to state 143
    TypeDecl                       shift and go to state 421

state 361

    (26) CommonDecl -> TYPE LPAREN TypeDeclList OSemi . RPAREN

    RPAREN          shift and go to state 422


state 362

    (263) ForCompExpr -> LBRACK Expr PIPE RangeStmt . RBRACK

    RBRACK          shift and go to state 423


state 363

    (63) RangeStmt -> ExprList . EQUAL RANGE Expr
    (64) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (146) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 424
    COLONEQ         shift and go to state 425
    COMMA           shift and go to state 115


state 364

    (88) OtherType -> LBRACK OExpr RBRACK NType .

    RPAREN          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    DDD             reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    COMMA           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLON           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    EQUAL           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLONEQ         reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_ANGLE      reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_LEFT       reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    SEMICOL         reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACE          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACK          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    OR_RIGHT        reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    LBRACE          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    INTEGER         reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    FLOAT           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    STRING          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)


state 365

    (72) IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 72 (IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .)


state 366

    (230) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList . RBRACE
    (61) CaseBlockList -> CaseBlockList . CaseBlock
    (59) CaseBlock -> . Case StmtList
    (54) Case -> . CASE ExprOrTypeList COLON
    (55) Case -> . CASE ExprOrTypeList EQUAL Expr COLON
    (56) Case -> . CASE ExprOrTypeList COLONEQ Expr COLON
    (57) Case -> . DEFAULT COLON

    RBRACE          shift and go to state 428
    CASE            shift and go to state 427
    DEFAULT         shift and go to state 429

    Case                           shift and go to state 426
    CaseBlock                      shift and go to state 430

state 367

    (222) Keyval -> Expr COLON . CompLitExpr
    (225) CompLitExpr -> . Expr
    (226) CompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    LEFT_LEFT       shift and go to state 433
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompLitExpr                    shift and go to state 431
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 432
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Prec3Expr_                     shift and go to state 24
    PExpr                          shift and go to state 69

state 368

    (224) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 434


state 369

    (171) KeyvalList -> KeyvalList COMMA . Keyval
    (172) KeyvalList -> KeyvalList COMMA . BareCompLitExpr
    (132) OComma -> COMMA .
    (222) Keyval -> . Expr COLON CompLitExpr
    (223) BareCompLitExpr -> . Expr
    (224) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 132 (OComma -> COMMA .)
    LEFT_LEFT       shift and go to state 281
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    FuncLiteral                    shift and go to state 23
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    PExprNoParen                   shift and go to state 60
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 280
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Keyval                         shift and go to state 435
    BareCompLitExpr                shift and go to state 436
    PExpr                          shift and go to state 69

state 370

    (174) BracedKeyvalList -> KeyvalList OComma .

    RIGHT_RIGHT     reduce using rule 174 (BracedKeyvalList -> KeyvalList OComma .)


state 371

    (214) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 214 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 372

    (209) PExprNoParen -> PExpr LBRACK Expr RBRACK .

    DOT             reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACK          reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEFT_LEFT       reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LPAREN          reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDE          reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MOD             reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL             reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR             reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPERS          reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAR          reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMES           reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUS            reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUS           reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    XOR             reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OR              reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQEQ            reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    NOTEQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEQ             reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GEQ             reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GREAT           reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LESS            reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPAMP          reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OROR            reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SEMICOL         reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACE          reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COMMA           reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACK          reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSEQ          reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSEQ         reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMESEQ         reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDEEQ        reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MODEQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OREQ            reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPEQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    CAREQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAREQ        reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSPLUS        reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSMIN        reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQUAL           reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLONEQ         reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PIPE            reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RPAREN          reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_ANGLE     reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLON           reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_RIGHT     reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DDD             reduce using rule 209 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)


state 373

    (210) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr RBRACK
    (211) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr COLON OExpr RBRACK
    (139) OExpr -> .
    (140) OExpr -> . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 139 (OExpr -> .)
    COLON           reduce using rule 139 (OExpr -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 334
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 437
    PExpr                          shift and go to state 69

state 374

    (265) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma . RPAREN

    RPAREN          shift and go to state 438


state 375

    (148) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (132) OComma -> COMMA .
    (227) ExprOrType -> . Expr
    (228) ExprOrType -> . NonExprType
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (143) FuncLiteralDecl -> . FuncType

    RPAREN          reduce using rule 132 (OComma -> COMMA .)
    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 182
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 186
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 180
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    ExprOrType                     shift and go to state 439
    NonExprType                    shift and go to state 183
    OtherType                      shift and go to state 184
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 185
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 376

    (266) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD . OComma RPAREN
    (131) OComma -> .
    (132) OComma -> . COMMA

    RPAREN          reduce using rule 131 (OComma -> .)
    COMMA           shift and go to state 322

    OComma                         shift and go to state 440

state 377

    (215) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 215 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 378

    (207) PExprNoParen -> PExpr DOT LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 441


state 379

    (208) PExprNoParen -> PExpr DOT LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 442


state 380

    (73) IfStmt -> IF IfHeader LoopBody ElseIfList . Else
    (76) ElseIfList -> ElseIfList . ElseIf
    (77) Else -> .
    (78) Else -> . ELSE CompoundStmt
    (74) ElseIf -> . ELSE IF IfHeader LoopBody

    SEMICOL         reduce using rule 77 (Else -> .)
    ELSE            shift and go to state 445

    Else                           shift and go to state 443
    ElseIf                         shift and go to state 444

state 381

    (116) StructDecl -> TIMES LPAREN . Embed RPAREN OLiteral
    (154) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 383

    Embed                          shift and go to state 446

state 382

    (114) StructDecl -> TIMES Embed . OLiteral
    (149) OLiteral -> .
    (150) OLiteral -> . Literal
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING

    SEMICOL         reduce using rule 149 (OLiteral -> .)
    RBRACE          reduce using rule 149 (OLiteral -> .)
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42

    OLiteral                       shift and go to state 447
    Literal                        shift and go to state 390

state 383

    (154) Embed -> IDENTIFIER .

    RPAREN          reduce using rule 154 (Embed -> IDENTIFIER .)
    INTEGER         reduce using rule 154 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 154 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 154 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 154 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 154 (Embed -> IDENTIFIER .)


state 384

    (115) StructDecl -> LPAREN TIMES . Embed RPAREN OLiteral
    (154) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 383

    Embed                          shift and go to state 448

state 385

    (113) StructDecl -> LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 449


state 386

    (168) NewNameList -> NewNameList COMMA . NewName
    (122) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 148

    NewName                        shift and go to state 450

state 387

    (111) StructDecl -> NewNameList NType . OLiteral
    (149) OLiteral -> .
    (150) OLiteral -> . Literal
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING

    SEMICOL         reduce using rule 149 (OLiteral -> .)
    RBRACE          reduce using rule 149 (OLiteral -> .)
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42

    Literal                        shift and go to state 390
    OLiteral                       shift and go to state 451

state 388

    (108) StructDeclList -> StructDeclList SEMICOL . StructDecl
    (134) OSemi -> SEMICOL .
    (111) StructDecl -> . NewNameList NType OLiteral
    (112) StructDecl -> . Embed OLiteral
    (113) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (114) StructDecl -> . TIMES Embed OLiteral
    (115) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (116) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (167) NewNameList -> . NewName
    (168) NewNameList -> . NewNameList COMMA NewName
    (154) Embed -> . IDENTIFIER
    (122) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 134 (OSemi -> SEMICOL .)
    LPAREN          shift and go to state 313
    TIMES           shift and go to state 312
    IDENTIFIER      shift and go to state 316

    NewName                        shift and go to state 310
    StructDecl                     shift and go to state 452
    NewNameList                    shift and go to state 314
    Embed                          shift and go to state 317

state 389

    (92) StructType -> STRUCT LBRACE StructDeclList OSemi . RBRACE

    RBRACE          shift and go to state 453


state 390

    (150) OLiteral -> Literal .

    SEMICOL         reduce using rule 150 (OLiteral -> Literal .)
    RBRACE          reduce using rule 150 (OLiteral -> Literal .)


state 391

    (112) StructDecl -> Embed OLiteral .

    SEMICOL         reduce using rule 112 (StructDecl -> Embed OLiteral .)
    RBRACE          reduce using rule 112 (StructDecl -> Embed OLiteral .)


state 392

    (213) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .

    DOT             reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACK          reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEFT_LEFT       reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LPAREN          reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDE          reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MOD             reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL             reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR             reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPERS          reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAR          reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMES           reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUS            reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUS           reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    XOR             reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OR              reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQEQ            reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    NOTEQ           reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEQ             reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GEQ             reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GREAT           reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LESS            reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPAMP          reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OROR            reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SEMICOL         reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACE          reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COMMA           reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACK          reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSEQ          reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSEQ         reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMESEQ         reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDEEQ        reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MODEQ           reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OREQ            reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPEQ           reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    CAREQ           reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL_ASSIGN      reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR_ASSIGN      reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAREQ        reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSPLUS        reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSMIN        reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQUAL           reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLONEQ         reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PIPE            reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RPAREN          reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_ANGLE     reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLON           reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_RIGHT     reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DDD             reduce using rule 213 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)


state 393

    (58) CompoundStmt -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (166) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    RBRACE          reduce using rule 267 (cmtlist -> .)
    LBRACE          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    SEMICOL         reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 454

state 394

    (165) StmtList -> Stmt SEMICOL .

    COMMENT         reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    RBRACE          reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    LBRACE          reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    CONSTANT        reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    VAR             reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    TYPE            reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    BREAK           reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    CONTINUE        reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    DEFER           reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    GOTO            reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    RETURN          reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    FOR             reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    SWITCH          reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    IF              reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    CONSTANTS       reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    AMPERS          reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    NOT             reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    TIMES           reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    PLUS            reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    MINUS           reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    XOR             reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    LPAREN          reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    INTEGER         reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    FLOAT           reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    STRING          reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    LBRACK          reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    FUNCTION        reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    MAP             reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    STRUCT          reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    INTERFACE       reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    SEMICOL         reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    CASE            reduce using rule 165 (StmtList -> Stmt SEMICOL .)
    DEFAULT         reduce using rule 165 (StmtList -> Stmt SEMICOL .)


state 395

    (144) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist . RBRACE
    (166) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          shift and go to state 456
    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    NonDeclStmt                    shift and go to state 202
    Stmt                           shift and go to state 455
    FuncLiteralDecl                shift and go to state 34
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NewName                        shift and go to state 45
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 396

    (158) VarDeclList -> VarDeclList SEMICOL VarDecl .

    SEMICOL         reduce using rule 158 (VarDeclList -> VarDeclList SEMICOL VarDecl .)
    RPAREN          reduce using rule 158 (VarDeclList -> VarDeclList SEMICOL VarDecl .)


state 397

    (23) CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 23 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)


state 398

    (130) DotName -> Name DOT IDENTIFIER .

    LEFT_ANGLE      reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    LBRACE          reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    RPAREN          reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    EQUAL           reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    SEMICOL         reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    RBRACK          reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    COMMA           reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    OR_RIGHT        reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    DDD             reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    COLON           reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    COLONEQ         reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    INTEGER         reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    FLOAT           reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    STRING          reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)
    RBRACE          reduce using rule 130 (DotName -> Name DOT IDENTIFIER .)


state 399

    (29) VarDecl -> DeclNameList NType EQUAL ExprList .
    (146) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 29 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 29 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 115


state 400

    (83) NType -> LPAREN NType RPAREN .

    RBRACK          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    LEFT_ANGLE      reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    LBRACE          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    RPAREN          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    EQUAL           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    SEMICOL         reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    COMMA           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    OR_RIGHT        reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    DDD             reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    COLON           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    COLONEQ         reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    LEFT_LEFT       reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    INTEGER         reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    FLOAT           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    STRING          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    RBRACE          reduce using rule 83 (NType -> LPAREN NType RPAREN .)


state 401

    (89) OtherType -> MAP LBRACK NType RBRACK NType .

    RPAREN          reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    DDD             reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    COMMA           reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    COLON           reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    EQUAL           reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    COLONEQ         reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    LEFT_ANGLE      reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    LEFT_LEFT       reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    SEMICOL         reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    RBRACE          reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    RBRACK          reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    OR_RIGHT        reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    LBRACE          reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    INTEGER         reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    FLOAT           reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    STRING          reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)


state 402

    (19) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .

    SEMICOL         reduce using rule 19 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)


state 403

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList . OSemi RPAREN
    (160) ConstDeclList -> ConstDeclList . SEMICOL ConstDecl1
    (133) OSemi -> .
    (134) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 458
    RPAREN          reduce using rule 133 (OSemi -> .)

    OSemi                          shift and go to state 457

state 404

    (34) ConstDecl1 -> DeclNameList . NType
    (35) ConstDecl1 -> DeclNameList .
    (31) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (32) ConstDecl -> DeclNameList . EQUAL ExprList
    (164) DeclNameList -> DeclNameList . COMMA DeclName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 35 (ConstDecl1 -> DeclNameList .)
    RPAREN          reduce using rule 35 (ConstDecl1 -> DeclNameList .)
    EQUAL           shift and go to state 233
    COMMA           shift and go to state 221
    LPAREN          shift and go to state 224
    TYPE            shift and go to state 226
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    FuncType                       shift and go to state 215
    NType                          shift and go to state 459
    OtherType                      shift and go to state 220
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 217
    DotName                        shift and go to state 218
    Name                           shift and go to state 222

state 405

    (159) ConstDeclList -> ConstDecl1 .

    SEMICOL         reduce using rule 159 (ConstDeclList -> ConstDecl1 .)
    RPAREN          reduce using rule 159 (ConstDeclList -> ConstDecl1 .)


state 406

    (33) ConstDecl1 -> ConstDecl .

    SEMICOL         reduce using rule 33 (ConstDecl1 -> ConstDecl .)
    RPAREN          reduce using rule 33 (ConstDecl1 -> ConstDecl .)


state 407

    (31) ConstDecl -> DeclNameList NType EQUAL ExprList .
    (146) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 31 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 31 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 115


state 408

    (101) ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    MAP             reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACK          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)


state 409

    (106) FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .

    LBRACE          reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    SEMICOL         reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_ANGLE      reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RPAREN          reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    EQUAL           reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACK          reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COMMA           reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    OR_RIGHT        reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    DDD             reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLON           reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLONEQ         reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_LEFT       reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    INTEGER         reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    FLOAT           reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    STRING          reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACE          reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)


state 410

    (103) FuncBody -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (166) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    RBRACE          reduce using rule 267 (cmtlist -> .)
    LBRACE          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    SEMICOL         reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 460

state 411

    (182) ArgTypeList -> ArgTypeList COMMA ArgType .

    COMMA           reduce using rule 182 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    OR_RIGHT        reduce using rule 182 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    RPAREN          reduce using rule 182 (ArgTypeList -> ArgTypeList COMMA ArgType .)


state 412

    (98) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER . ArgList FuncRes
    (100) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (101) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 129

    ArgList                        shift and go to state 461

state 413

    (66) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL . OSimpleStmt
    (135) OSimpleStmt -> .
    (136) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    LBRACE          reduce using rule 135 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 137
    OSimpleStmt                    shift and go to state 462
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 414

    (63) RangeStmt -> ExprList EQUAL RANGE Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 63 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    RBRACK          reduce using rule 63 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    OROR            shift and go to state 164


state 415

    (64) RangeStmt -> ExprList COLONEQ RANGE Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 64 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    RBRACK          reduce using rule 64 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    OROR            shift and go to state 164


state 416

    (62) LoopBody -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (166) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    RBRACE          reduce using rule 267 (cmtlist -> .)
    LBRACE          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    SEMICOL         reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 463

state 417

    (110) InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .

    SEMICOL         reduce using rule 110 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)
    RBRACE          reduce using rule 110 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)


state 418

    (94) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .

    LEFT_ANGLE      reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COMMA           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LBRACE          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACK          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    DDD             reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLON           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    STRING          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)


state 419

    (120) InDecl -> LPAREN OArgTypeListOComma . RPAREN FuncRes

    RPAREN          shift and go to state 464


state 420

    (119) InterfaceDecl -> LPAREN IDENTIFIER RPAREN .

    SEMICOL         reduce using rule 119 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)
    RBRACE          reduce using rule 119 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)


state 421

    (162) TypeDeclList -> TypeDeclList SEMICOL TypeDecl .

    SEMICOL         reduce using rule 162 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)
    RPAREN          reduce using rule 162 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)


state 422

    (26) CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 26 (CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .)


state 423

    (263) ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .

    DOT             reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACK          reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEFT_LEFT       reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LPAREN          reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDE          reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MOD             reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL             reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR             reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPERS          reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAR          reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMES           reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUS            reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUS           reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    XOR             reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OR              reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQEQ            reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    NOTEQ           reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEQ             reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GEQ             reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GREAT           reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LESS            reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPAMP          reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSEQ          reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSEQ         reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMESEQ         reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDEEQ        reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MODEQ           reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OREQ            reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPEQ           reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    CAREQ           reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL_ASSIGN      reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR_ASSIGN      reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAREQ        reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSPLUS        reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSMIN        reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OROR            reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SEMICOL         reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACE          reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQUAL           reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLONEQ         reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COMMA           reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RPAREN          reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PIPE            reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACK          reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_ANGLE     reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLON           reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_RIGHT     reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DDD             reduce using rule 263 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)


state 424

    (63) RangeStmt -> ExprList EQUAL . RANGE Expr

    RANGE           shift and go to state 352


state 425

    (64) RangeStmt -> ExprList COLONEQ . RANGE Expr

    RANGE           shift and go to state 353


state 426

    (59) CaseBlock -> Case . StmtList
    (165) StmtList -> . Stmt SEMICOL
    (166) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    StmtList                       shift and go to state 465
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    FuncLiteralDecl                shift and go to state 34
    Stmt                           shift and go to state 324
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 427

    (54) Case -> CASE . ExprOrTypeList COLON
    (55) Case -> CASE . ExprOrTypeList EQUAL Expr COLON
    (56) Case -> CASE . ExprOrTypeList COLONEQ Expr COLON
    (147) ExprOrTypeList -> . ExprOrType
    (148) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (227) ExprOrType -> . Expr
    (228) ExprOrType -> . NonExprType
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (143) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 182
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 186
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 180
    Prec4Expr_                     shift and go to state 40
    ExprOrTypeList                 shift and go to state 466
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    ExprOrType                     shift and go to state 289
    NonExprType                    shift and go to state 183
    OtherType                      shift and go to state 184
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 185
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 428

    (230) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .

    SEMICOL         reduce using rule 230 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)


state 429

    (57) Case -> DEFAULT . COLON

    COLON           shift and go to state 467


state 430

    (61) CaseBlockList -> CaseBlockList CaseBlock .

    RBRACE          reduce using rule 61 (CaseBlockList -> CaseBlockList CaseBlock .)
    CASE            reduce using rule 61 (CaseBlockList -> CaseBlockList CaseBlock .)
    DEFAULT         reduce using rule 61 (CaseBlockList -> CaseBlockList CaseBlock .)


state 431

    (222) Keyval -> Expr COLON CompLitExpr .

    COMMA           reduce using rule 222 (Keyval -> Expr COLON CompLitExpr .)
    RIGHT_RIGHT     reduce using rule 222 (Keyval -> Expr COLON CompLitExpr .)


state 432

    (225) CompLitExpr -> Expr .
    (254) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 225 (CompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 225 (CompLitExpr -> Expr .)
    OROR            shift and go to state 164


state 433

    (226) CompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (173) BracedKeyvalList -> .
    (174) BracedKeyvalList -> . KeyvalList OComma
    (169) KeyvalList -> . Keyval
    (170) KeyvalList -> . BareCompLitExpr
    (171) KeyvalList -> . KeyvalList COMMA Keyval
    (172) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (222) Keyval -> . Expr COLON CompLitExpr
    (223) BareCompLitExpr -> . Expr
    (224) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 173 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 281
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    FuncLiteral                    shift and go to state 23
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    PExprNoParen                   shift and go to state 60
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 280
    PseudoCall                     shift and go to state 49
    KeyvalList                     shift and go to state 282
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Keyval                         shift and go to state 283
    BareCompLitExpr                shift and go to state 285
    PExpr                          shift and go to state 69
    BracedKeyvalList               shift and go to state 468

state 434

    (224) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 224 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 224 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 435

    (171) KeyvalList -> KeyvalList COMMA Keyval .

    COMMA           reduce using rule 171 (KeyvalList -> KeyvalList COMMA Keyval .)
    RIGHT_RIGHT     reduce using rule 171 (KeyvalList -> KeyvalList COMMA Keyval .)


state 436

    (172) KeyvalList -> KeyvalList COMMA BareCompLitExpr .

    COMMA           reduce using rule 172 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 172 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)


state 437

    (210) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . RBRACK
    (211) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . COLON OExpr RBRACK

    RBRACK          shift and go to state 469
    COLON           shift and go to state 470


state 438

    (265) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .

    DOT             reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACK          reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEFT_LEFT       reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LPAREN          reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDE          reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MOD             reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL             reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR             reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPERS          reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAR          reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMES           reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUS            reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUS           reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    XOR             reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OR              reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQEQ            reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    NOTEQ           reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEQ             reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GEQ             reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GREAT           reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LESS            reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPAMP          reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OROR            reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SEMICOL         reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACE          reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSEQ          reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSEQ         reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMESEQ         reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDEEQ        reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MODEQ           reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OREQ            reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPEQ           reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    CAREQ           reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAREQ        reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSPLUS        reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSMIN        reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQUAL           reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLONEQ         reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COMMA           reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PIPE            reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACK          reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RPAREN          reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLON           reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DDD             reduce using rule 265 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)


state 439

    (148) ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .

    DDD             reduce using rule 148 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COMMA           reduce using rule 148 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    RPAREN          reduce using rule 148 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLON           reduce using rule 148 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    EQUAL           reduce using rule 148 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLONEQ         reduce using rule 148 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)


state 440

    (266) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma . RPAREN

    RPAREN          shift and go to state 471


state 441

    (207) PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)


state 442

    (208) PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .

    DOT             reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LBRACK          reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LEFT_LEFT       reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LPAREN          reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DIVIDE          reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MOD             reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHL             reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHR             reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPERS          reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPCAR          reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    TIMES           reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUS            reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUS           reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    XOR             reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OR              reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    EQEQ            reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    NOTEQ           reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LEQ             reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    GEQ             reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    GREAT           reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LESS            reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPAMP          reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OROR            reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SEMICOL         reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LBRACE          reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COMMA           reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RBRACK          reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUSEQ          reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUSEQ         reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    TIMESEQ         reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DIVIDEEQ        reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MODEQ           reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OREQ            reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPEQ           reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    CAREQ           reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHL_ASSIGN      reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHR_ASSIGN      reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPCAREQ        reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUSPLUS        reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUSMIN        reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    EQUAL           reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COLONEQ         reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PIPE            reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RPAREN          reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RIGHT_ANGLE     reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COLON           reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RIGHT_RIGHT     reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DDD             reduce using rule 208 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)


state 443

    (73) IfStmt -> IF IfHeader LoopBody ElseIfList Else .

    SEMICOL         reduce using rule 73 (IfStmt -> IF IfHeader LoopBody ElseIfList Else .)


state 444

    (76) ElseIfList -> ElseIfList ElseIf .

    ELSE            reduce using rule 76 (ElseIfList -> ElseIfList ElseIf .)
    SEMICOL         reduce using rule 76 (ElseIfList -> ElseIfList ElseIf .)


state 445

    (78) Else -> ELSE . CompoundStmt
    (74) ElseIf -> ELSE . IF IfHeader LoopBody
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE

    IF              shift and go to state 473
    LBRACE          shift and go to state 200

    CompoundStmt                   shift and go to state 472

state 446

    (116) StructDecl -> TIMES LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 474


state 447

    (114) StructDecl -> TIMES Embed OLiteral .

    SEMICOL         reduce using rule 114 (StructDecl -> TIMES Embed OLiteral .)
    RBRACE          reduce using rule 114 (StructDecl -> TIMES Embed OLiteral .)


state 448

    (115) StructDecl -> LPAREN TIMES Embed . RPAREN OLiteral

    RPAREN          shift and go to state 475


state 449

    (113) StructDecl -> LPAREN Embed RPAREN . OLiteral
    (149) OLiteral -> .
    (150) OLiteral -> . Literal
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING

    SEMICOL         reduce using rule 149 (OLiteral -> .)
    RBRACE          reduce using rule 149 (OLiteral -> .)
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42

    OLiteral                       shift and go to state 476
    Literal                        shift and go to state 390

state 450

    (168) NewNameList -> NewNameList COMMA NewName .

    COMMA           reduce using rule 168 (NewNameList -> NewNameList COMMA NewName .)
    LPAREN          reduce using rule 168 (NewNameList -> NewNameList COMMA NewName .)
    TYPE            reduce using rule 168 (NewNameList -> NewNameList COMMA NewName .)
    FUNCTION        reduce using rule 168 (NewNameList -> NewNameList COMMA NewName .)
    LBRACK          reduce using rule 168 (NewNameList -> NewNameList COMMA NewName .)
    MAP             reduce using rule 168 (NewNameList -> NewNameList COMMA NewName .)
    TIMES           reduce using rule 168 (NewNameList -> NewNameList COMMA NewName .)
    STRUCT          reduce using rule 168 (NewNameList -> NewNameList COMMA NewName .)
    INTERFACE       reduce using rule 168 (NewNameList -> NewNameList COMMA NewName .)
    IDENTIFIER      reduce using rule 168 (NewNameList -> NewNameList COMMA NewName .)


state 451

    (111) StructDecl -> NewNameList NType OLiteral .

    SEMICOL         reduce using rule 111 (StructDecl -> NewNameList NType OLiteral .)
    RBRACE          reduce using rule 111 (StructDecl -> NewNameList NType OLiteral .)


state 452

    (108) StructDeclList -> StructDeclList SEMICOL StructDecl .

    SEMICOL         reduce using rule 108 (StructDeclList -> StructDeclList SEMICOL StructDecl .)
    RBRACE          reduce using rule 108 (StructDeclList -> StructDeclList SEMICOL StructDecl .)


state 453

    (92) StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .

    LEFT_ANGLE      reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COMMA           reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LBRACE          reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    DDD             reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACK          reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLON           reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    STRING          reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)


state 454

    (58) CompoundStmt -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (166) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          shift and go to state 477
    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    FuncLiteralDecl                shift and go to state 34
    Stmt                           shift and go to state 455
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 455

    (166) StmtList -> StmtList cmtlist Stmt . SEMICOL

    SEMICOL         shift and go to state 478


state 456

    (144) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .

    DOT             reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACK          reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEFT_LEFT       reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LPAREN          reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDE          reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MOD             reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL             reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR             reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPERS          reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAR          reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMES           reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUS            reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUS           reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    XOR             reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OR              reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQEQ            reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    NOTEQ           reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEQ             reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GEQ             reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GREAT           reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LESS            reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPAMP          reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACK          reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OROR            reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLON           reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSEQ          reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSEQ         reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMESEQ         reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDEEQ        reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MODEQ           reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OREQ            reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPEQ           reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    CAREQ           reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL_ASSIGN      reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR_ASSIGN      reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAREQ        reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSPLUS        reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSMIN        reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SEMICOL         reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQUAL           reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLONEQ         reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COMMA           reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACE          reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_ANGLE     reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RPAREN          reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PIPE            reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_RIGHT     reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DDD             reduce using rule 144 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)


state 457

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi . RPAREN

    RPAREN          shift and go to state 479


state 458

    (160) ConstDeclList -> ConstDeclList SEMICOL . ConstDecl1
    (134) OSemi -> SEMICOL .
    (33) ConstDecl1 -> . ConstDecl
    (34) ConstDecl1 -> . DeclNameList NType
    (35) ConstDecl1 -> . DeclNameList
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (163) DeclNameList -> . DeclName
    (164) DeclNameList -> . DeclNameList COMMA DeclName
    (175) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 134 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 110

    ConstDecl1                     shift and go to state 480
    DeclName                       shift and go to state 111
    DeclNameList                   shift and go to state 404
    ConstDecl                      shift and go to state 406

state 459

    (34) ConstDecl1 -> DeclNameList NType .
    (31) ConstDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 34 (ConstDecl1 -> DeclNameList NType .)
    RPAREN          reduce using rule 34 (ConstDecl1 -> DeclNameList NType .)
    EQUAL           shift and go to state 339


state 460

    (103) FuncBody -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (166) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          shift and go to state 481
    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    FuncLiteralDecl                shift and go to state 34
    Stmt                           shift and go to state 455
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 461

    (98) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList . FuncRes
    (101) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (104) FuncRes -> .
    (105) FuncRes -> . FuncRetType
    (106) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (124) FuncRetType -> . FuncType
    (125) FuncRetType -> . OtherType
    (126) FuncRetType -> . PtrType
    (127) FuncRetType -> . DotName
    (128) FuncRetType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    LPAREN          shift and go to state 239
    LBRACE          reduce using rule 104 (FuncRes -> .)
    SEMICOL         reduce using rule 104 (FuncRes -> .)
    LEFT_OR         shift and go to state 245
    TYPE            shift and go to state 247
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    DotName                        shift and go to state 246
    Name                           shift and go to state 222
    FuncType                       shift and go to state 240
    OtherType                      shift and go to state 243
    InterfaceType                  shift and go to state 64
    FuncRes                        shift and go to state 482
    PtrType                        shift and go to state 241
    FuncRetType                    shift and go to state 242

state 462

    (66) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 66 (ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .)


state 463

    (62) LoopBody -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (166) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          shift and go to state 483
    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    FuncLiteralDecl                shift and go to state 34
    Stmt                           shift and go to state 455
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 464

    (120) InDecl -> LPAREN OArgTypeListOComma RPAREN . FuncRes
    (104) FuncRes -> .
    (105) FuncRes -> . FuncRetType
    (106) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (124) FuncRetType -> . FuncType
    (125) FuncRetType -> . OtherType
    (126) FuncRetType -> . PtrType
    (127) FuncRetType -> . DotName
    (128) FuncRetType -> . TYPE
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (129) DotName -> . Name
    (130) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (176) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 104 (FuncRes -> .)
    RBRACE          reduce using rule 104 (FuncRes -> .)
    LEFT_OR         shift and go to state 245
    TYPE            shift and go to state 247
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 225
    MAP             shift and go to state 37
    TIMES           shift and go to state 219
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    IDENTIFIER      shift and go to state 94

    StructType                     shift and go to state 67
    DotName                        shift and go to state 246
    Name                           shift and go to state 222
    FuncType                       shift and go to state 240
    OtherType                      shift and go to state 243
    InterfaceType                  shift and go to state 64
    PtrType                        shift and go to state 241
    FuncRes                        shift and go to state 484
    FuncRetType                    shift and go to state 242

state 465

    (59) CaseBlock -> Case StmtList .
    (166) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (267) cmtlist -> .
    (268) cmtlist -> . COMMENT cmtlist

    RBRACE          reduce using rule 59 (CaseBlock -> Case StmtList .)
    CASE            reduce using rule 59 (CaseBlock -> Case StmtList .)
    DEFAULT         reduce using rule 59 (CaseBlock -> Case StmtList .)
    LBRACE          reduce using rule 267 (cmtlist -> .)
    CONSTANT        reduce using rule 267 (cmtlist -> .)
    VAR             reduce using rule 267 (cmtlist -> .)
    TYPE            reduce using rule 267 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 267 (cmtlist -> .)
    BREAK           reduce using rule 267 (cmtlist -> .)
    CONTINUE        reduce using rule 267 (cmtlist -> .)
    DEFER           reduce using rule 267 (cmtlist -> .)
    GOTO            reduce using rule 267 (cmtlist -> .)
    RETURN          reduce using rule 267 (cmtlist -> .)
    FOR             reduce using rule 267 (cmtlist -> .)
    SWITCH          reduce using rule 267 (cmtlist -> .)
    IF              reduce using rule 267 (cmtlist -> .)
    CONSTANTS       reduce using rule 267 (cmtlist -> .)
    IDENTIFIER      reduce using rule 267 (cmtlist -> .)
    AMPERS          reduce using rule 267 (cmtlist -> .)
    NOT             reduce using rule 267 (cmtlist -> .)
    TIMES           reduce using rule 267 (cmtlist -> .)
    PLUS            reduce using rule 267 (cmtlist -> .)
    MINUS           reduce using rule 267 (cmtlist -> .)
    XOR             reduce using rule 267 (cmtlist -> .)
    LPAREN          reduce using rule 267 (cmtlist -> .)
    INTEGER         reduce using rule 267 (cmtlist -> .)
    FLOAT           reduce using rule 267 (cmtlist -> .)
    STRING          reduce using rule 267 (cmtlist -> .)
    LBRACK          reduce using rule 267 (cmtlist -> .)
    FUNCTION        reduce using rule 267 (cmtlist -> .)
    MAP             reduce using rule 267 (cmtlist -> .)
    STRUCT          reduce using rule 267 (cmtlist -> .)
    INTERFACE       reduce using rule 267 (cmtlist -> .)
    SEMICOL         reduce using rule 267 (cmtlist -> .)
    COMMENT         shift and go to state 1

    cmtlist                        shift and go to state 485

state 466

    (54) Case -> CASE ExprOrTypeList . COLON
    (55) Case -> CASE ExprOrTypeList . EQUAL Expr COLON
    (56) Case -> CASE ExprOrTypeList . COLONEQ Expr COLON
    (148) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType

    COLON           shift and go to state 488
    EQUAL           shift and go to state 486
    COLONEQ         shift and go to state 487
    COMMA           shift and go to state 489


state 467

    (57) Case -> DEFAULT COLON .

    LBRACE          reduce using rule 57 (Case -> DEFAULT COLON .)
    CONSTANT        reduce using rule 57 (Case -> DEFAULT COLON .)
    VAR             reduce using rule 57 (Case -> DEFAULT COLON .)
    TYPE            reduce using rule 57 (Case -> DEFAULT COLON .)
    FALLTHROUGH     reduce using rule 57 (Case -> DEFAULT COLON .)
    BREAK           reduce using rule 57 (Case -> DEFAULT COLON .)
    CONTINUE        reduce using rule 57 (Case -> DEFAULT COLON .)
    DEFER           reduce using rule 57 (Case -> DEFAULT COLON .)
    GOTO            reduce using rule 57 (Case -> DEFAULT COLON .)
    RETURN          reduce using rule 57 (Case -> DEFAULT COLON .)
    FOR             reduce using rule 57 (Case -> DEFAULT COLON .)
    SWITCH          reduce using rule 57 (Case -> DEFAULT COLON .)
    IF              reduce using rule 57 (Case -> DEFAULT COLON .)
    CONSTANTS       reduce using rule 57 (Case -> DEFAULT COLON .)
    IDENTIFIER      reduce using rule 57 (Case -> DEFAULT COLON .)
    AMPERS          reduce using rule 57 (Case -> DEFAULT COLON .)
    NOT             reduce using rule 57 (Case -> DEFAULT COLON .)
    TIMES           reduce using rule 57 (Case -> DEFAULT COLON .)
    PLUS            reduce using rule 57 (Case -> DEFAULT COLON .)
    MINUS           reduce using rule 57 (Case -> DEFAULT COLON .)
    XOR             reduce using rule 57 (Case -> DEFAULT COLON .)
    LPAREN          reduce using rule 57 (Case -> DEFAULT COLON .)
    INTEGER         reduce using rule 57 (Case -> DEFAULT COLON .)
    FLOAT           reduce using rule 57 (Case -> DEFAULT COLON .)
    STRING          reduce using rule 57 (Case -> DEFAULT COLON .)
    LBRACK          reduce using rule 57 (Case -> DEFAULT COLON .)
    FUNCTION        reduce using rule 57 (Case -> DEFAULT COLON .)
    MAP             reduce using rule 57 (Case -> DEFAULT COLON .)
    STRUCT          reduce using rule 57 (Case -> DEFAULT COLON .)
    INTERFACE       reduce using rule 57 (Case -> DEFAULT COLON .)
    SEMICOL         reduce using rule 57 (Case -> DEFAULT COLON .)


state 468

    (226) CompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 490


state 469

    (210) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)


state 470

    (211) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON . OExpr RBRACK
    (139) OExpr -> .
    (140) OExpr -> . Expr
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 139 (OExpr -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 334
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 491
    PExpr                          shift and go to state 69

state 471

    (266) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .

    DOT             reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACK          reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEFT_LEFT       reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LPAREN          reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDE          reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MOD             reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL             reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR             reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPERS          reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAR          reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMES           reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUS            reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUS           reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    XOR             reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OR              reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQEQ            reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    NOTEQ           reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEQ             reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GEQ             reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GREAT           reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LESS            reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPAMP          reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OROR            reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SEMICOL         reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACE          reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSEQ          reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSEQ         reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMESEQ         reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDEEQ        reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MODEQ           reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OREQ            reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPEQ           reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    CAREQ           reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAREQ        reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSPLUS        reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSMIN        reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQUAL           reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLONEQ         reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COMMA           reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PIPE            reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACK          reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RPAREN          reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLON           reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DDD             reduce using rule 266 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)


state 472

    (78) Else -> ELSE CompoundStmt .

    SEMICOL         reduce using rule 78 (Else -> ELSE CompoundStmt .)


state 473

    (74) ElseIf -> ELSE IF . IfHeader LoopBody
    (71) IfHeader -> . OSimpleStmt
    (72) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (135) OSimpleStmt -> .
    (136) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 135 (OSimpleStmt -> .)
    LBRACE          reduce using rule 135 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 137
    OSimpleStmt                    shift and go to state 154
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    IfHeader                       shift and go to state 492
    PExpr                          shift and go to state 69

state 474

    (116) StructDecl -> TIMES LPAREN Embed RPAREN . OLiteral
    (149) OLiteral -> .
    (150) OLiteral -> . Literal
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING

    SEMICOL         reduce using rule 149 (OLiteral -> .)
    RBRACE          reduce using rule 149 (OLiteral -> .)
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42

    OLiteral                       shift and go to state 493
    Literal                        shift and go to state 390

state 475

    (115) StructDecl -> LPAREN TIMES Embed RPAREN . OLiteral
    (149) OLiteral -> .
    (150) OLiteral -> . Literal
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING

    SEMICOL         reduce using rule 149 (OLiteral -> .)
    RBRACE          reduce using rule 149 (OLiteral -> .)
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42

    OLiteral                       shift and go to state 494
    Literal                        shift and go to state 390

state 476

    (113) StructDecl -> LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 113 (StructDecl -> LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 113 (StructDecl -> LPAREN Embed RPAREN OLiteral .)


state 477

    (58) CompoundStmt -> LBRACE cmtlist StmtList cmtlist RBRACE .

    SEMICOL         reduce using rule 58 (CompoundStmt -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 478

    (166) StmtList -> StmtList cmtlist Stmt SEMICOL .

    COMMENT         reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    RBRACE          reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACE          reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANT        reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    VAR             reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TYPE            reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    BREAK           reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONTINUE        reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    DEFER           reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    GOTO            reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    RETURN          reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FOR             reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SWITCH          reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IF              reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANTS       reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    AMPERS          reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    NOT             reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TIMES           reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    PLUS            reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    MINUS           reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    XOR             reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LPAREN          reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTEGER         reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FLOAT           reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRING          reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACK          reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FUNCTION        reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    MAP             reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRUCT          reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTERFACE       reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SEMICOL         reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CASE            reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    DEFAULT         reduce using rule 166 (StmtList -> StmtList cmtlist Stmt SEMICOL .)


state 479

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 20 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)


state 480

    (160) ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .

    SEMICOL         reduce using rule 160 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)
    RPAREN          reduce using rule 160 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)


state 481

    (103) FuncBody -> LBRACE cmtlist StmtList cmtlist RBRACE .

    SEMICOL         reduce using rule 103 (FuncBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 482

    (98) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 98 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 98 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)


state 483

    (62) LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .

    SEMICOL         reduce using rule 62 (LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)
    ELSE            reduce using rule 62 (LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 484

    (120) InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .

    SEMICOL         reduce using rule 120 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)
    RBRACE          reduce using rule 120 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)


state 485

    (166) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (185) Stmt -> .
    (186) Stmt -> . CompoundStmt
    (187) Stmt -> . CommonDecl
    (188) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (189) NonDeclStmt -> . SimpleStmt
    (190) NonDeclStmt -> . ForStmt
    (191) NonDeclStmt -> . SwitchStmt
    (192) NonDeclStmt -> . IfStmt
    (193) NonDeclStmt -> . LabelName COLON Stmt
    (194) NonDeclStmt -> . FALLTHROUGH
    (195) NonDeclStmt -> . BREAK ONewName
    (196) NonDeclStmt -> . CONTINUE ONewName
    (197) NonDeclStmt -> . DEFER PseudoCall
    (198) NonDeclStmt -> . GOTO NewName
    (199) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (230) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (145) ExprList -> . Expr
    (146) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 185 (Stmt -> .)
    LBRACE          shift and go to state 200
    CONSTANT        shift and go to state 38
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 29
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 57
    DEFER           shift and go to state 28
    GOTO            shift and go to state 73
    RETURN          shift and go to state 61
    FOR             shift and go to state 48
    SWITCH          shift and go to state 62
    IF              shift and go to state 80
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 65
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 40
    SimpleStmt                     shift and go to state 71
    Prec3Expr_                     shift and go to state 24
    ForStmt                        shift and go to state 72
    CommonDecl                     shift and go to state 199
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    IfStmt                         shift and go to state 44
    FuncType                       shift and go to state 70
    FuncLiteralDecl                shift and go to state 34
    Stmt                           shift and go to state 455
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 64
    LabelName                      shift and go to state 31
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 76
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 69
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    CompoundStmt                   shift and go to state 201

state 486

    (55) Case -> CASE ExprOrTypeList EQUAL . Expr COLON
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 495
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 487

    (56) Case -> CASE ExprOrTypeList COLONEQ . Expr COLON
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (143) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    CONSTANTS       shift and go to state 59
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    TIMES           shift and go to state 78
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94
    LBRACK          shift and go to state 56
    FUNCTION        shift and go to state 95
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 70
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    OtherType                      shift and go to state 26
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 496
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 488

    (54) Case -> CASE ExprOrTypeList COLON .

    LBRACE          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANT        reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    VAR             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    TYPE            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FALLTHROUGH     reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    BREAK           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    CONTINUE        reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    DEFER           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    GOTO            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    RETURN          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FOR             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    SWITCH          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    IF              reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANTS       reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    IDENTIFIER      reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    AMPERS          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    NOT             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    TIMES           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    PLUS            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    MINUS           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    XOR             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    LPAREN          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    INTEGER         reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FLOAT           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    STRING          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    LBRACK          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FUNCTION        reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    MAP             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    STRUCT          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    INTERFACE       reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    SEMICOL         reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)


state 489

    (148) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (227) ExprOrType -> . Expr
    (228) ExprOrType -> . NonExprType
    (253) Expr -> . Prec2Expr_
    (254) Expr -> . Expr OROR Prec2Expr_
    (255) Expr -> . CONSTANTS
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (251) Prec2Expr_ -> . Prec3Expr_
    (252) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (244) Prec3Expr_ -> . Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (239) Prec4Expr_ -> . Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (231) Prec5Expr_ -> . UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (256) UExpr -> . PExpr
    (257) UExpr -> . AMPERS UExpr
    (258) UExpr -> . NOT UExpr
    (259) UExpr -> . TIMES UExpr
    (260) UExpr -> . PLUS UExpr
    (261) UExpr -> . MINUS UExpr
    (262) UExpr -> . XOR UExpr
    (202) PExpr -> . PExprNoParen
    (203) PExpr -> . LPAREN ExprOrType RPAREN
    (204) PExprNoParen -> . Literal
    (205) PExprNoParen -> . Name
    (206) PExprNoParen -> . PExpr DOT IDENTIFIER
    (207) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (208) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (209) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (212) PExprNoParen -> . PseudoCall
    (213) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (214) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (216) PExprNoParen -> . FuncLiteral
    (217) PExprNoParen -> . ForCompExpr
    (151) Literal -> . INTEGER
    (152) Literal -> . FLOAT
    (153) Literal -> . STRING
    (176) Name -> . IDENTIFIER
    (264) PseudoCall -> . PExpr LPAREN RPAREN
    (265) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (266) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (218) ConvType -> . FuncType
    (219) ConvType -> . OtherType
    (220) CompType -> . OtherType
    (144) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (263) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (143) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 182
    FUNCTION        shift and go to state 95
    LBRACK          shift and go to state 186
    MAP             shift and go to state 37
    STRUCT          shift and go to state 81
    INTERFACE       shift and go to state 50
    AMPERS          shift and go to state 39
    NOT             shift and go to state 58
    PLUS            shift and go to state 30
    MINUS           shift and go to state 27
    XOR             shift and go to state 77
    LPAREN          shift and go to state 79
    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 82
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 94

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 180
    Prec4Expr_                     shift and go to state 40
    Prec3Expr_                     shift and go to state 24
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 23
    ConvType                       shift and go to state 25
    ExprOrType                     shift and go to state 439
    NonExprType                    shift and go to state 183
    OtherType                      shift and go to state 184
    InterfaceType                  shift and go to state 64
    Prec5Expr_                     shift and go to state 32
    CompType                       shift and go to state 66
    StructType                     shift and go to state 67
    Name                           shift and go to state 74
    Prec2Expr_                     shift and go to state 33
    FuncLiteralDecl                shift and go to state 34
    Expr                           shift and go to state 185
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 69

state 490

    (226) CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 226 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 226 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 491

    (211) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr . RBRACK

    RBRACK          shift and go to state 497


state 492

    (74) ElseIf -> ELSE IF IfHeader . LoopBody
    (62) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 264

    LoopBody                       shift and go to state 498

state 493

    (116) StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 116 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 116 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)


state 494

    (115) StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 115 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 115 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)


state 495

    (55) Case -> CASE ExprOrTypeList EQUAL Expr . COLON
    (254) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 499
    OROR            shift and go to state 164


state 496

    (56) Case -> CASE ExprOrTypeList COLONEQ Expr . COLON
    (254) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 500
    OROR            shift and go to state 164


state 497

    (211) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 211 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)


state 498

    (74) ElseIf -> ELSE IF IfHeader LoopBody .

    ELSE            reduce using rule 74 (ElseIf -> ELSE IF IfHeader LoopBody .)
    SEMICOL         reduce using rule 74 (ElseIf -> ELSE IF IfHeader LoopBody .)


state 499

    (55) Case -> CASE ExprOrTypeList EQUAL Expr COLON .

    LBRACE          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANT        reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    VAR             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TYPE            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FALLTHROUGH     reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    BREAK           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONTINUE        reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    DEFER           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    GOTO            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    RETURN          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FOR             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SWITCH          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IF              reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANTS       reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IDENTIFIER      reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    AMPERS          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    NOT             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TIMES           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    PLUS            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MINUS           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    XOR             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LPAREN          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTEGER         reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FLOAT           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRING          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LBRACK          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FUNCTION        reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MAP             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRUCT          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTERFACE       reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SEMICOL         reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)


state 500

    (56) Case -> CASE ExprOrTypeList COLONEQ Expr COLON .

    LBRACE          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANT        reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    VAR             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TYPE            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FALLTHROUGH     reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    BREAK           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONTINUE        reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    DEFER           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    GOTO            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    RETURN          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FOR             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SWITCH          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IF              reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANTS       reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IDENTIFIER      reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    AMPERS          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    NOT             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TIMES           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    PLUS            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MINUS           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    XOR             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LPAREN          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTEGER         reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FLOAT           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRING          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LBRACK          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FUNCTION        reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MAP             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRUCT          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTERFACE       reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SEMICOL         reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT in state 1 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 6 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 10 resolved as shift
