Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GO
    COMMENT
    LMINUS
    SELECT
    CONSTANTS
    CHAN
    AND_NOT

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     SourceFile -> PackageClause Imports DeclList
Rule 3     PackageClause -> PACKAGE IDENTIFIER SEMICOL
Rule 4     Imports -> <empty>
Rule 5     Imports -> Imports Import SEMICOL
Rule 6     Import -> IMPORT ImportStmt
Rule 7     Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN
Rule 8     Import -> IMPORT LPAREN RPAREN
Rule 9     ImportStmt -> ImportHere STRING
Rule 10    ImportStmtList -> ImportStmt
Rule 11    ImportStmtList -> ImportStmtList SEMICOL ImportStmt
Rule 12    ImportHere -> <empty>
Rule 13    ImportHere -> IDENTIFIER
Rule 14    ImportHere -> DOT
Rule 15    Declaration -> CommonDecl
Rule 16    Declaration -> FuncDecl
Rule 17    Declaration -> NonDeclStmt
Rule 18    CommonDecl -> CONSTANT ConstDecl
Rule 19    CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN
Rule 20    CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
Rule 21    CommonDecl -> CONSTANT LPAREN RPAREN
Rule 22    CommonDecl -> VAR VarDecl
Rule 23    CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN
Rule 24    CommonDecl -> VAR LPAREN RPAREN
Rule 25    CommonDecl -> TYPE TypeDecl
Rule 26    CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN
Rule 27    CommonDecl -> TYPE LPAREN RPAREN
Rule 28    VarDecl -> DeclNameList NType
Rule 29    VarDecl -> DeclNameList NType EQUAL ExprList
Rule 30    VarDecl -> DeclNameList EQUAL ExprList
Rule 31    ConstDecl -> DeclNameList NType EQUAL ExprList
Rule 32    ConstDecl -> DeclNameList EQUAL ExprList
Rule 33    ConstDecl1 -> ConstDecl
Rule 34    ConstDecl1 -> DeclNameList NType
Rule 35    ConstDecl1 -> DeclNameList
Rule 36    TypeDeclName -> IDENTIFIER
Rule 37    TypeDecl -> TypeDeclName NType
Rule 38    SimpleStmt -> Expr
Rule 39    SimpleStmt -> Expr PLUSEQ Expr
Rule 40    SimpleStmt -> Expr MINUSEQ Expr
Rule 41    SimpleStmt -> Expr TIMESEQ Expr
Rule 42    SimpleStmt -> Expr DIVIDEEQ Expr
Rule 43    SimpleStmt -> Expr MODEQ Expr
Rule 44    SimpleStmt -> Expr OREQ Expr
Rule 45    SimpleStmt -> Expr AMPEQ Expr
Rule 46    SimpleStmt -> Expr CAREQ Expr
Rule 47    SimpleStmt -> Expr SHL_ASSIGN Expr
Rule 48    SimpleStmt -> Expr SHR_ASSIGN Expr
Rule 49    SimpleStmt -> Expr AMPCAREQ Expr
Rule 50    SimpleStmt -> ExprList EQUAL ExprList
Rule 51    SimpleStmt -> ExprList COLONEQ ExprList
Rule 52    SimpleStmt -> Expr PLUSPLUS
Rule 53    SimpleStmt -> Expr MINUSMIN
Rule 54    Case -> CASE ExprOrTypeList COLON
Rule 55    Case -> CASE ExprOrTypeList EQUAL Expr COLON
Rule 56    Case -> CASE ExprOrTypeList COLONEQ Expr COLON
Rule 57    Case -> DEFAULT COLON
Rule 58    CompoundStmt -> LBRACE StmtList RBRACE
Rule 59    CaseBlock -> Case StmtList
Rule 60    CaseBlockList -> <empty>
Rule 61    CaseBlockList -> CaseBlockList CaseBlock
Rule 62    LoopBody -> LBRACE StmtList RBRACE
Rule 63    RangeStmt -> ExprList EQUAL RANGE Expr
Rule 64    RangeStmt -> ExprList COLONEQ RANGE Expr
Rule 65    RangeStmt -> RANGE Expr
Rule 66    ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
Rule 67    ForHeader -> OSimpleStmt
Rule 68    ForHeader -> RangeStmt
Rule 69    ForBody -> ForHeader LoopBody
Rule 70    ForStmt -> FOR ForBody
Rule 71    IfHeader -> OSimpleStmt
Rule 72    IfHeader -> OSimpleStmt SEMICOL OSimpleStmt
Rule 73    IfStmt -> IF IfHeader LoopBody ElseIfList Else
Rule 74    ElseIf -> ELSE IF IfHeader LoopBody
Rule 75    ElseIfList -> <empty>
Rule 76    ElseIfList -> ElseIfList ElseIf
Rule 77    Else -> <empty>
Rule 78    Else -> ELSE CompoundStmt
Rule 79    NType -> FuncType
Rule 80    NType -> OtherType
Rule 81    NType -> PtrType
Rule 82    NType -> DotName
Rule 83    NType -> LPAREN NType RPAREN
Rule 84    NonExprType -> FuncType
Rule 85    NonExprType -> OtherType
Rule 86    NonExprType -> TIMES NonExprType
Rule 87    OtherType -> LBRACK OExpr RBRACK NType
Rule 88    OtherType -> MAP LBRACK NType RBRACK NType
Rule 89    OtherType -> StructType
Rule 90    OtherType -> InterfaceType
Rule 91    StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE
Rule 92    StructType -> STRUCT LBRACE RBRACE
Rule 93    InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
Rule 94    InterfaceType -> INTERFACE LBRACE RBRACE
Rule 95    FuncDecl -> FUNCTION FuncDecl_ FuncBody
Rule 96    FuncDecl_ -> IDENTIFIER ArgList FuncRes
Rule 97    FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
Rule 98    FuncType -> FUNCTION ArgList FuncRes
Rule 99    ArgList -> LPAREN OArgTypeListOComma RPAREN
Rule 100   ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN
Rule 101   FuncBody -> <empty>
Rule 102   FuncBody -> LBRACE StmtList RBRACE
Rule 103   FuncRes -> <empty>
Rule 104   FuncRes -> FuncRetType
Rule 105   FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT
Rule 106   StructDeclList -> StructDecl
Rule 107   StructDeclList -> StructDeclList SEMICOL StructDecl
Rule 108   InterfaceDeclList -> InterfaceDecl
Rule 109   InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl
Rule 110   StructDecl -> NewNameList NType OLiteral
Rule 111   StructDecl -> Embed OLiteral
Rule 112   StructDecl -> LPAREN Embed RPAREN OLiteral
Rule 113   StructDecl -> TIMES Embed OLiteral
Rule 114   StructDecl -> LPAREN TIMES Embed RPAREN OLiteral
Rule 115   StructDecl -> TIMES LPAREN Embed RPAREN OLiteral
Rule 116   InterfaceDecl -> NewName InDecl
Rule 117   InterfaceDecl -> IDENTIFIER
Rule 118   InterfaceDecl -> LPAREN IDENTIFIER RPAREN
Rule 119   InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes
Rule 120   LabelName -> NewName
Rule 121   NewName -> IDENTIFIER
Rule 122   PtrType -> TIMES NType
Rule 123   FuncRetType -> FuncType
Rule 124   FuncRetType -> OtherType
Rule 125   FuncRetType -> PtrType
Rule 126   FuncRetType -> DotName
Rule 127   DotName -> Name
Rule 128   DotName -> Name DOT IDENTIFIER
Rule 129   OComma -> <empty>
Rule 130   OComma -> COMMA
Rule 131   OSemi -> <empty>
Rule 132   OSemi -> SEMICOL
Rule 133   OSimpleStmt -> <empty>
Rule 134   OSimpleStmt -> SimpleStmt
Rule 135   ONewName -> <empty>
Rule 136   ONewName -> NewName
Rule 137   OExpr -> <empty>
Rule 138   OExpr -> Expr
Rule 139   OExprList -> <empty>
Rule 140   OExprList -> ExprList
Rule 141   FuncLiteralDecl -> FuncType
Rule 142   FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE
Rule 143   ExprList -> Expr
Rule 144   ExprList -> ExprList COMMA Expr
Rule 145   ExprOrTypeList -> ExprOrType
Rule 146   ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType
Rule 147   OLiteral -> <empty>
Rule 148   OLiteral -> Literal
Rule 149   Literal -> INTEGER
Rule 150   Literal -> FLOAT
Rule 151   Literal -> STRING
Rule 152   Embed -> IDENTIFIER
Rule 153   DeclList -> <empty>
Rule 154   DeclList -> DeclList Declaration SEMICOL
Rule 155   VarDeclList -> VarDecl
Rule 156   VarDeclList -> VarDeclList SEMICOL VarDecl
Rule 157   ConstDeclList -> ConstDecl1
Rule 158   ConstDeclList -> ConstDeclList SEMICOL ConstDecl1
Rule 159   TypeDeclList -> TypeDecl
Rule 160   TypeDeclList -> TypeDeclList SEMICOL TypeDecl
Rule 161   DeclNameList -> DeclName
Rule 162   DeclNameList -> DeclNameList COMMA DeclName
Rule 163   StmtList -> Stmt
Rule 164   StmtList -> StmtList SEMICOL Stmt
Rule 165   NewNameList -> NewName
Rule 166   NewNameList -> NewNameList COMMA NewName
Rule 167   KeyvalList -> Keyval
Rule 168   KeyvalList -> BareCompLitExpr
Rule 169   KeyvalList -> KeyvalList COMMA Keyval
Rule 170   KeyvalList -> KeyvalList COMMA BareCompLitExpr
Rule 171   BracedKeyvalList -> <empty>
Rule 172   BracedKeyvalList -> KeyvalList OComma
Rule 173   DeclName -> IDENTIFIER
Rule 174   Name -> IDENTIFIER
Rule 175   ArgType -> NameOrType
Rule 176   ArgType -> IDENTIFIER NameOrType
Rule 177   ArgType -> IDENTIFIER DotDotDot
Rule 178   ArgType -> DotDotDot
Rule 179   ArgTypeList -> ArgType
Rule 180   ArgTypeList -> ArgTypeList COMMA ArgType
Rule 181   OArgTypeListOComma -> <empty>
Rule 182   OArgTypeListOComma -> ArgTypeList OComma
Rule 183   Stmt -> <empty>
Rule 184   Stmt -> CompoundStmt
Rule 185   Stmt -> CommonDecl
Rule 186   Stmt -> NonDeclStmt
Rule 187   NonDeclStmt -> SimpleStmt
Rule 188   NonDeclStmt -> ForStmt
Rule 189   NonDeclStmt -> SwitchStmt
Rule 190   NonDeclStmt -> IfStmt
Rule 191   NonDeclStmt -> LabelName COLON Stmt
Rule 192   NonDeclStmt -> FALLTHROUGH
Rule 193   NonDeclStmt -> BREAK ONewName
Rule 194   NonDeclStmt -> CONTINUE ONewName
Rule 195   NonDeclStmt -> DEFER PseudoCall
Rule 196   NonDeclStmt -> GOTO NewName
Rule 197   NonDeclStmt -> RETURN OExprList
Rule 198   DotDotDot -> DDD
Rule 199   DotDotDot -> DDD NType
Rule 200   PExpr -> PExprNoParen
Rule 201   PExpr -> LPAREN ExprOrType RPAREN
Rule 202   PExprNoParen -> Literal
Rule 203   PExprNoParen -> Name
Rule 204   PExprNoParen -> PExpr DOT IDENTIFIER
Rule 205   PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN
Rule 206   PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN
Rule 207   PExprNoParen -> PExpr LBRACK Expr RBRACK
Rule 208   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK
Rule 209   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
Rule 210   PExprNoParen -> PseudoCall
Rule 211   PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
Rule 212   PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 213   PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 214   PExprNoParen -> FuncLiteral
Rule 215   PExprNoParen -> ForCompExpr
Rule 216   ConvType -> FuncType
Rule 217   ConvType -> OtherType
Rule 218   CompType -> OtherType
Rule 219   StartCompLit -> <empty>
Rule 220   Keyval -> Expr COLON CompLitExpr
Rule 221   BareCompLitExpr -> Expr
Rule 222   BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 223   CompLitExpr -> Expr
Rule 224   CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 225   ExprOrType -> Expr
Rule 226   ExprOrType -> NonExprType
Rule 227   NameOrType -> NType
Rule 228   SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE
Rule 229   Prec5Expr_ -> UExpr
Rule 230   Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr
Rule 231   Prec5Expr_ -> Prec5Expr_ MOD UExpr
Rule 232   Prec5Expr_ -> Prec5Expr_ SHL UExpr
Rule 233   Prec5Expr_ -> Prec5Expr_ SHR UExpr
Rule 234   Prec5Expr_ -> Prec5Expr_ AMPERS UExpr
Rule 235   Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr
Rule 236   Prec5Expr_ -> Prec5Expr_ TIMES UExpr
Rule 237   Prec4Expr_ -> Prec5Expr_
Rule 238   Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_
Rule 239   Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_
Rule 240   Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_
Rule 241   Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_
Rule 242   Prec3Expr_ -> Prec4Expr_
Rule 243   Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_
Rule 244   Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_
Rule 245   Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_
Rule 246   Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_
Rule 247   Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_
Rule 248   Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_
Rule 249   Prec2Expr_ -> Prec3Expr_
Rule 250   Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_
Rule 251   Expr -> Prec2Expr_
Rule 252   Expr -> Expr OROR Prec2Expr_
Rule 253   UExpr -> PExpr
Rule 254   UExpr -> AMPERS UExpr
Rule 255   UExpr -> NOT UExpr
Rule 256   UExpr -> TIMES UExpr
Rule 257   UExpr -> PLUS UExpr
Rule 258   UExpr -> MINUS UExpr
Rule 259   UExpr -> XOR UExpr
Rule 260   ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK
Rule 261   PseudoCall -> PExpr LPAREN RPAREN
Rule 262   PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN
Rule 263   PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN

Terminals, with rules where they appear

AMPAMP               : 250
AMPCAR               : 235
AMPCAREQ             : 49
AMPEQ                : 45
AMPERS               : 234 254
AND_NOT              : 
BREAK                : 193
CAREQ                : 46
CASE                 : 54 55 56
CHAN                 : 
COLON                : 54 55 56 57 191 208 209 209 220
COLONEQ              : 51 56 64
COMMA                : 130 144 146 162 166 169 170 180
COMMENT              : 
CONSTANT             : 18 19 20 21
CONSTANTS            : 
CONTINUE             : 194
DDD                  : 198 199 263
DEFAULT              : 57
DEFER                : 195
DIVIDE               : 230
DIVIDEEQ             : 42
DOT                  : 14 128 204 205 206
ELSE                 : 74 78
EQEQ                 : 243
EQUAL                : 29 30 31 32 50 55 63
FALLTHROUGH          : 192
FLOAT                : 150
FOR                  : 70
FUNCTION             : 95 98
GEQ                  : 246
GO                   : 
GOTO                 : 196
GREAT                : 247
IDENTIFIER           : 3 13 36 96 97 117 118 121 128 152 173 174 176 177 204
IF                   : 73 74
IMPORT               : 6 7 8
INTEGER              : 149
INTERFACE            : 93 94
LBRACE               : 58 62 91 92 93 94 102 142 228
LBRACK               : 87 88 207 208 209 260
LEFT_ANGLE           : 211
LEFT_LEFT            : 212 213 222 224
LEFT_OR              : 97 105
LEQ                  : 245
LESS                 : 248
LMINUS               : 
LPAREN               : 7 8 19 20 21 23 24 26 27 83 99 100 112 114 115 118 119 201 205 206 261 262 263
MAP                  : 88
MINUS                : 239 258
MINUSEQ              : 40
MINUSMIN             : 53
MOD                  : 231
MODEQ                : 43
NOT                  : 255
NOTEQ                : 244
OR                   : 241
OREQ                 : 44
OROR                 : 252
OR_RIGHT             : 97 105
PACKAGE              : 3
PIPE                 : 260
PLUS                 : 238 257
PLUSEQ               : 39
PLUSPLUS             : 52
RANGE                : 63 64 65
RBRACE               : 58 62 91 92 93 94 102 142 228
RBRACK               : 87 88 207 208 209 260
RETURN               : 197
RIGHT_ANGLE          : 211
RIGHT_RIGHT          : 212 213 222 224
RPAREN               : 7 8 19 20 21 23 24 26 27 83 99 100 112 114 115 118 119 201 205 206 261 262 263
SELECT               : 
SEMICOL              : 3 5 11 20 66 66 72 107 109 132 154 156 158 160 164
SHL                  : 232
SHL_ASSIGN           : 47
SHR                  : 233
SHR_ASSIGN           : 48
STRING               : 9 151
STRUCT               : 91 92
SWITCH               : 228
TIMES                : 86 113 114 115 122 236 256
TIMESEQ              : 41
TYPE                 : 25 26 27 206
VAR                  : 22 23 24
XOR                  : 240 259
error                : 

Nonterminals, with rules where they appear

ArgList              : 96 97 98 100
ArgType              : 179 180
ArgTypeList          : 180 182
BareCompLitExpr      : 168 170
BracedKeyvalList     : 212 213 222 224
Case                 : 59
CaseBlock            : 61
CaseBlockList        : 61 228
CommonDecl           : 15 185
CompLitExpr          : 220
CompType             : 212
CompoundStmt         : 78 184
ConstDecl            : 18 19 20 33
ConstDecl1           : 157 158
ConstDeclList        : 20 158
ConvType             : 211
DeclList             : 2 154
DeclName             : 161 162
DeclNameList         : 28 29 30 31 32 34 35 162
Declaration          : 154
DotDotDot            : 177 178
DotName              : 82 126
Else                 : 73
ElseIf               : 76
ElseIfList           : 73 76
Embed                : 111 112 113 114 115
Expr                 : 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 52 53 55 56 63 64 65 138 143 144 207 211 220 221 223 225 252 260
ExprList             : 29 30 31 32 50 50 51 51 63 64 140 144
ExprOrType           : 145 146 201 205
ExprOrTypeList       : 54 55 56 146 262 263
ForBody              : 70
ForCompExpr          : 215
ForHeader            : 69
ForStmt              : 188
FuncBody             : 95
FuncDecl             : 16
FuncDecl_            : 95
FuncLiteral          : 214
FuncLiteralDecl      : 142
FuncRes              : 96 97 98 119
FuncRetType          : 104
FuncType             : 79 84 123 141 216
IfHeader             : 73 74 228
IfStmt               : 190
Import               : 5
ImportHere           : 9
ImportStmt           : 6 10 11
ImportStmtList       : 7 11
Imports              : 2 5
InDecl               : 116
InterfaceDecl        : 108 109
InterfaceDeclList    : 93 109
InterfaceType        : 90
Keyval               : 167 169
KeyvalList           : 169 170 172
LabelName            : 191
Literal              : 148 202
LoopBody             : 69 73 74
NType                : 28 29 31 34 37 83 87 88 88 110 122 199 227
Name                 : 127 128 203
NameOrType           : 175 176
NewName              : 116 120 136 165 166 196
NewNameList          : 110 166
NonDeclStmt          : 17 186
NonExprType          : 86 226
OArgTypeListOComma   : 97 99 100 105 119
OComma               : 172 182 211 262 263
OExpr                : 87 208 208 209 209 209
OExprList            : 197
OLiteral             : 110 111 112 113 114 115
ONewName             : 193 194
OSemi                : 7 19 20 23 26 91 93
OSimpleStmt          : 66 66 66 67 71 72 72
OtherType            : 80 85 124 217 218
PExpr                : 204 205 206 207 208 209 213 253 261 262 263
PExprNoParen         : 200
PackageClause        : 2
Prec2Expr_           : 250 251 252
Prec3Expr_           : 243 244 245 246 247 248 249 250
Prec4Expr_           : 238 239 240 241 242 243 244 245 246 247 248
Prec5Expr_           : 230 231 232 233 234 235 236 237 238 239 240 241
PseudoCall           : 195 210
PtrType              : 81 125
RangeStmt            : 68 260
SimpleStmt           : 134 187
SourceFile           : 1
StartCompLit         : 
Stmt                 : 163 164 191
StmtList             : 58 59 62 102 142 164
StructDecl           : 106 107
StructDeclList       : 91 107
StructType           : 89
SwitchStmt           : 189
TypeDecl             : 25 159 160
TypeDeclList         : 26 160
TypeDeclName         : 37
UExpr                : 229 230 231 232 233 234 235 236 254 255 256 257 258 259
VarDecl              : 22 155 156
VarDeclList          : 23 156
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (2) SourceFile -> . PackageClause Imports DeclList
    (3) PackageClause -> . PACKAGE IDENTIFIER SEMICOL

    PACKAGE         shift and go to state 2

    start                          shift and go to state 4
    PackageClause                  shift and go to state 1
    SourceFile                     shift and go to state 3

state 1

    (2) SourceFile -> PackageClause . Imports DeclList
    (4) Imports -> .
    (5) Imports -> . Imports Import SEMICOL

    IMPORT          reduce using rule 4 (Imports -> .)
    CONSTANT        reduce using rule 4 (Imports -> .)
    VAR             reduce using rule 4 (Imports -> .)
    TYPE            reduce using rule 4 (Imports -> .)
    FUNCTION        reduce using rule 4 (Imports -> .)
    FALLTHROUGH     reduce using rule 4 (Imports -> .)
    BREAK           reduce using rule 4 (Imports -> .)
    CONTINUE        reduce using rule 4 (Imports -> .)
    DEFER           reduce using rule 4 (Imports -> .)
    GOTO            reduce using rule 4 (Imports -> .)
    RETURN          reduce using rule 4 (Imports -> .)
    FOR             reduce using rule 4 (Imports -> .)
    SWITCH          reduce using rule 4 (Imports -> .)
    IF              reduce using rule 4 (Imports -> .)
    IDENTIFIER      reduce using rule 4 (Imports -> .)
    AMPERS          reduce using rule 4 (Imports -> .)
    NOT             reduce using rule 4 (Imports -> .)
    TIMES           reduce using rule 4 (Imports -> .)
    PLUS            reduce using rule 4 (Imports -> .)
    MINUS           reduce using rule 4 (Imports -> .)
    XOR             reduce using rule 4 (Imports -> .)
    LPAREN          reduce using rule 4 (Imports -> .)
    INTEGER         reduce using rule 4 (Imports -> .)
    FLOAT           reduce using rule 4 (Imports -> .)
    STRING          reduce using rule 4 (Imports -> .)
    LBRACK          reduce using rule 4 (Imports -> .)
    MAP             reduce using rule 4 (Imports -> .)
    STRUCT          reduce using rule 4 (Imports -> .)
    INTERFACE       reduce using rule 4 (Imports -> .)
    $end            reduce using rule 4 (Imports -> .)

    Imports                        shift and go to state 5

state 2

    (3) PackageClause -> PACKAGE . IDENTIFIER SEMICOL

    IDENTIFIER      shift and go to state 6


state 3

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 4

    (0) S' -> start .



state 5

    (2) SourceFile -> PackageClause Imports . DeclList
    (5) Imports -> Imports . Import SEMICOL
    (153) DeclList -> .
    (154) DeclList -> . DeclList Declaration SEMICOL
    (6) Import -> . IMPORT ImportStmt
    (7) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (8) Import -> . IMPORT LPAREN RPAREN

    CONSTANT        reduce using rule 153 (DeclList -> .)
    VAR             reduce using rule 153 (DeclList -> .)
    TYPE            reduce using rule 153 (DeclList -> .)
    FUNCTION        reduce using rule 153 (DeclList -> .)
    FALLTHROUGH     reduce using rule 153 (DeclList -> .)
    BREAK           reduce using rule 153 (DeclList -> .)
    CONTINUE        reduce using rule 153 (DeclList -> .)
    DEFER           reduce using rule 153 (DeclList -> .)
    GOTO            reduce using rule 153 (DeclList -> .)
    RETURN          reduce using rule 153 (DeclList -> .)
    FOR             reduce using rule 153 (DeclList -> .)
    SWITCH          reduce using rule 153 (DeclList -> .)
    IF              reduce using rule 153 (DeclList -> .)
    IDENTIFIER      reduce using rule 153 (DeclList -> .)
    AMPERS          reduce using rule 153 (DeclList -> .)
    NOT             reduce using rule 153 (DeclList -> .)
    TIMES           reduce using rule 153 (DeclList -> .)
    PLUS            reduce using rule 153 (DeclList -> .)
    MINUS           reduce using rule 153 (DeclList -> .)
    XOR             reduce using rule 153 (DeclList -> .)
    LPAREN          reduce using rule 153 (DeclList -> .)
    INTEGER         reduce using rule 153 (DeclList -> .)
    FLOAT           reduce using rule 153 (DeclList -> .)
    STRING          reduce using rule 153 (DeclList -> .)
    LBRACK          reduce using rule 153 (DeclList -> .)
    MAP             reduce using rule 153 (DeclList -> .)
    STRUCT          reduce using rule 153 (DeclList -> .)
    INTERFACE       reduce using rule 153 (DeclList -> .)
    $end            reduce using rule 153 (DeclList -> .)
    IMPORT          shift and go to state 8

    DeclList                       shift and go to state 7
    Import                         shift and go to state 9

state 6

    (3) PackageClause -> PACKAGE IDENTIFIER . SEMICOL

    SEMICOL         shift and go to state 10


state 7

    (2) SourceFile -> PackageClause Imports DeclList .
    (154) DeclList -> DeclList . Declaration SEMICOL
    (15) Declaration -> . CommonDecl
    (16) Declaration -> . FuncDecl
    (17) Declaration -> . NonDeclStmt
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (95) FuncDecl -> . FUNCTION FuncDecl_ FuncBody
    (187) NonDeclStmt -> . SimpleStmt
    (188) NonDeclStmt -> . ForStmt
    (189) NonDeclStmt -> . SwitchStmt
    (190) NonDeclStmt -> . IfStmt
    (191) NonDeclStmt -> . LabelName COLON Stmt
    (192) NonDeclStmt -> . FALLTHROUGH
    (193) NonDeclStmt -> . BREAK ONewName
    (194) NonDeclStmt -> . CONTINUE ONewName
    (195) NonDeclStmt -> . DEFER PseudoCall
    (196) NonDeclStmt -> . GOTO NewName
    (197) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (228) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (120) LabelName -> . NewName
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (121) NewName -> . IDENTIFIER
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    $end            reduce using rule 2 (SourceFile -> PackageClause Imports DeclList .)
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    TYPE            shift and go to state 42
    FUNCTION        shift and go to state 35
    FALLTHROUGH     shift and go to state 17
    BREAK           shift and go to state 55
    CONTINUE        shift and go to state 45
    DEFER           shift and go to state 16
    GOTO            shift and go to state 60
    RETURN          shift and go to state 48
    FOR             shift and go to state 36
    SWITCH          shift and go to state 49
    IF              shift and go to state 67
    IDENTIFIER      shift and go to state 52
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    LBRACK          shift and go to state 44
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 58
    Prec3Expr_                     shift and go to state 12
    ForStmt                        shift and go to state 59
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    IfStmt                         shift and go to state 32
    FuncType                       shift and go to state 57
    FuncLiteralDecl                shift and go to state 22
    FuncDecl                       shift and go to state 31
    NewName                        shift and go to state 33
    InterfaceType                  shift and go to state 51
    LabelName                      shift and go to state 19
    Declaration                    shift and go to state 50
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    NonDeclStmt                    shift and go to state 62
    Expr                           shift and go to state 63
    Prec5Expr_                     shift and go to state 20
    PseudoCall                     shift and go to state 37
    PExpr                          shift and go to state 56
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11

state 8

    (6) Import -> IMPORT . ImportStmt
    (7) Import -> IMPORT . LPAREN ImportStmtList OSemi RPAREN
    (8) Import -> IMPORT . LPAREN RPAREN
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> .
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT

    LPAREN          shift and go to state 72
    STRING          reduce using rule 12 (ImportHere -> .)
    IDENTIFIER      shift and go to state 71
    DOT             shift and go to state 74

    ImportHere                     shift and go to state 70
    ImportStmt                     shift and go to state 73

state 9

    (5) Imports -> Imports Import . SEMICOL

    SEMICOL         shift and go to state 75


state 10

    (3) PackageClause -> PACKAGE IDENTIFIER SEMICOL .

    IMPORT          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANT        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    VAR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TYPE            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FUNCTION        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FALLTHROUGH     reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    BREAK           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONTINUE        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    DEFER           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    GOTO            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    RETURN          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FOR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    SWITCH          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IF              reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IDENTIFIER      reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    AMPERS          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    NOT             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TIMES           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    PLUS            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MINUS           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    XOR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LPAREN          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTEGER         reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FLOAT           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRING          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LBRACK          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MAP             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRUCT          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTERFACE       reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    $end            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)


state 11

    (214) PExprNoParen -> FuncLiteral .

    DOT             reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    LBRACK          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    LEFT_LEFT       reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    LPAREN          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    DIVIDE          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    MOD             reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    SHL             reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    SHR             reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    AMPERS          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    AMPCAR          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    TIMES           reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    PLUS            reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    MINUS           reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    XOR             reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    OR              reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    EQEQ            reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    NOTEQ           reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    LEQ             reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    GEQ             reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    GREAT           reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    LESS            reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    AMPAMP          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    OROR            reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    RPAREN          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    DDD             reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    COMMA           reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    COLON           reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    EQUAL           reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    COLONEQ         reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    PLUSEQ          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    MINUSEQ         reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    TIMESEQ         reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    DIVIDEEQ        reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    MODEQ           reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    OREQ            reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    AMPEQ           reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    CAREQ           reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    SHL_ASSIGN      reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    SHR_ASSIGN      reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    AMPCAREQ        reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    PLUSPLUS        reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    MINUSMIN        reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    LBRACE          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    SEMICOL         reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    RBRACE          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    CASE            reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    DEFAULT         reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    RIGHT_RIGHT     reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    PIPE            reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    RBRACK          reduce using rule 214 (PExprNoParen -> FuncLiteral .)
    RIGHT_ANGLE     reduce using rule 214 (PExprNoParen -> FuncLiteral .)


state 12

    (249) Prec2Expr_ -> Prec3Expr_ .
    (243) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (244) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (246) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (247) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (248) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    OROR            reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    LBRACE          reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACK          reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    COLON           reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    EQUAL           reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    COLONEQ         reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    COMMA           reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSEQ          reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSEQ         reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    TIMESEQ         reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    MODEQ           reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    OREQ            reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    AMPEQ           reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    CAREQ           reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    AMPCAREQ        reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSPLUS        reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSMIN        reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    SEMICOL         reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    RPAREN          reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACE          reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    CASE            reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    DEFAULT         reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    PIPE            reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    DDD             reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 249 (Prec2Expr_ -> Prec3Expr_ .)
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 81
    LEQ             shift and go to state 77
    GEQ             shift and go to state 76
    GREAT           shift and go to state 80
    LESS            shift and go to state 79


state 13

    (211) PExprNoParen -> ConvType . LEFT_ANGLE Expr OComma RIGHT_ANGLE

    LEFT_ANGLE      shift and go to state 82


state 14

    (217) ConvType -> OtherType .
    (218) CompType -> OtherType .

    LEFT_ANGLE      reduce using rule 217 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 218 (CompType -> OtherType .)


state 15

    (258) UExpr -> MINUS . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 85
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 16

    (195) NonDeclStmt -> DEFER . PseudoCall
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 86
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 87

state 17

    (192) NonDeclStmt -> FALLTHROUGH .

    RBRACE          reduce using rule 192 (NonDeclStmt -> FALLTHROUGH .)
    SEMICOL         reduce using rule 192 (NonDeclStmt -> FALLTHROUGH .)
    CASE            reduce using rule 192 (NonDeclStmt -> FALLTHROUGH .)
    DEFAULT         reduce using rule 192 (NonDeclStmt -> FALLTHROUGH .)


state 18

    (257) UExpr -> PLUS . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 88
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 19

    (191) NonDeclStmt -> LabelName . COLON Stmt

    COLON           shift and go to state 89


state 20

    (237) Prec4Expr_ -> Prec5Expr_ .
    (230) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (231) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (232) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    MINUS           reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    XOR             reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    OR              reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    EQEQ            reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    NOTEQ           reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    LEQ             reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    GEQ             reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    GREAT           reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    LESS            reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    AMPAMP          reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSEQ          reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSEQ         reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    TIMESEQ         reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    MODEQ           reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    OREQ            reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    AMPEQ           reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    CAREQ           reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    AMPCAREQ        reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSPLUS        reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSMIN        reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    OROR            reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACE          reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    SEMICOL         reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    EQUAL           reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    COLONEQ         reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    COMMA           reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    CASE            reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    DEFAULT         reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    LBRACE          reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    PIPE            reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACK          reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    RPAREN          reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    COLON           reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    DDD             reduce using rule 237 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDE          shift and go to state 91
    MOD             shift and go to state 96
    SHL             shift and go to state 95
    SHR             shift and go to state 90
    AMPERS          shift and go to state 93
    AMPCAR          shift and go to state 92
    TIMES           shift and go to state 94


state 21

    (251) Expr -> Prec2Expr_ .
    (250) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    PLUSEQ          reduce using rule 251 (Expr -> Prec2Expr_ .)
    MINUSEQ         reduce using rule 251 (Expr -> Prec2Expr_ .)
    TIMESEQ         reduce using rule 251 (Expr -> Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 251 (Expr -> Prec2Expr_ .)
    MODEQ           reduce using rule 251 (Expr -> Prec2Expr_ .)
    OREQ            reduce using rule 251 (Expr -> Prec2Expr_ .)
    AMPEQ           reduce using rule 251 (Expr -> Prec2Expr_ .)
    CAREQ           reduce using rule 251 (Expr -> Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 251 (Expr -> Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 251 (Expr -> Prec2Expr_ .)
    AMPCAREQ        reduce using rule 251 (Expr -> Prec2Expr_ .)
    PLUSPLUS        reduce using rule 251 (Expr -> Prec2Expr_ .)
    MINUSMIN        reduce using rule 251 (Expr -> Prec2Expr_ .)
    OROR            reduce using rule 251 (Expr -> Prec2Expr_ .)
    SEMICOL         reduce using rule 251 (Expr -> Prec2Expr_ .)
    RBRACE          reduce using rule 251 (Expr -> Prec2Expr_ .)
    CASE            reduce using rule 251 (Expr -> Prec2Expr_ .)
    DEFAULT         reduce using rule 251 (Expr -> Prec2Expr_ .)
    EQUAL           reduce using rule 251 (Expr -> Prec2Expr_ .)
    COLONEQ         reduce using rule 251 (Expr -> Prec2Expr_ .)
    COMMA           reduce using rule 251 (Expr -> Prec2Expr_ .)
    LBRACE          reduce using rule 251 (Expr -> Prec2Expr_ .)
    RBRACK          reduce using rule 251 (Expr -> Prec2Expr_ .)
    COLON           reduce using rule 251 (Expr -> Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 251 (Expr -> Prec2Expr_ .)
    RPAREN          reduce using rule 251 (Expr -> Prec2Expr_ .)
    DDD             reduce using rule 251 (Expr -> Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 251 (Expr -> Prec2Expr_ .)
    PIPE            reduce using rule 251 (Expr -> Prec2Expr_ .)
    AMPAMP          shift and go to state 97


state 22

    (142) FuncLiteral -> FuncLiteralDecl . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 98


state 23

    (22) CommonDecl -> VAR . VarDecl
    (23) CommonDecl -> VAR . LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> VAR . LPAREN RPAREN
    (28) VarDecl -> . DeclNameList NType
    (29) VarDecl -> . DeclNameList NType EQUAL ExprList
    (30) VarDecl -> . DeclNameList EQUAL ExprList
    (161) DeclNameList -> . DeclName
    (162) DeclNameList -> . DeclNameList COMMA DeclName
    (173) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 102
    IDENTIFIER      shift and go to state 99

    DeclName                       shift and go to state 100
    VarDecl                        shift and go to state 101
    DeclNameList                   shift and go to state 103

state 24

    (50) SimpleStmt -> ExprList . EQUAL ExprList
    (51) SimpleStmt -> ExprList . COLONEQ ExprList
    (144) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 106
    COLONEQ         shift and go to state 105
    COMMA           shift and go to state 104


state 25

    (88) OtherType -> MAP . LBRACK NType RBRACK NType

    LBRACK          shift and go to state 107


state 26

    (18) CommonDecl -> CONSTANT . ConstDecl
    (19) CommonDecl -> CONSTANT . LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> CONSTANT . LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> CONSTANT . LPAREN RPAREN
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (161) DeclNameList -> . DeclName
    (162) DeclNameList -> . DeclNameList COMMA DeclName
    (173) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 108
    IDENTIFIER      shift and go to state 99

    DeclName                       shift and go to state 100
    ConstDecl                      shift and go to state 110
    DeclNameList                   shift and go to state 109

state 27

    (254) UExpr -> AMPERS . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 111
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 28

    (242) Prec3Expr_ -> Prec4Expr_ .
    (238) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (239) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    NOTEQ           reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    LEQ             reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    GEQ             reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    GREAT           reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    LESS            reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    AMPAMP          reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    OROR            reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    DDD             reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    COMMA           reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    RPAREN          reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    COLON           reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSEQ          reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSEQ         reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    TIMESEQ         reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    MODEQ           reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    OREQ            reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    AMPEQ           reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    CAREQ           reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    AMPCAREQ        reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSPLUS        reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSMIN        reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACE          reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    SEMICOL         reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    EQUAL           reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    COLONEQ         reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    LBRACE          reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    CASE            reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    DEFAULT         reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    PIPE            reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACK          reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 242 (Prec3Expr_ -> Prec4Expr_ .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    XOR             shift and go to state 112
    OR              shift and go to state 113


state 29

    (15) Declaration -> CommonDecl .

    SEMICOL         reduce using rule 15 (Declaration -> CommonDecl .)


state 30

    (151) Literal -> STRING .

    DOT             reduce using rule 151 (Literal -> STRING .)
    LBRACK          reduce using rule 151 (Literal -> STRING .)
    LEFT_LEFT       reduce using rule 151 (Literal -> STRING .)
    LPAREN          reduce using rule 151 (Literal -> STRING .)
    DIVIDE          reduce using rule 151 (Literal -> STRING .)
    MOD             reduce using rule 151 (Literal -> STRING .)
    SHL             reduce using rule 151 (Literal -> STRING .)
    SHR             reduce using rule 151 (Literal -> STRING .)
    AMPERS          reduce using rule 151 (Literal -> STRING .)
    AMPCAR          reduce using rule 151 (Literal -> STRING .)
    TIMES           reduce using rule 151 (Literal -> STRING .)
    PLUS            reduce using rule 151 (Literal -> STRING .)
    MINUS           reduce using rule 151 (Literal -> STRING .)
    XOR             reduce using rule 151 (Literal -> STRING .)
    OR              reduce using rule 151 (Literal -> STRING .)
    EQEQ            reduce using rule 151 (Literal -> STRING .)
    NOTEQ           reduce using rule 151 (Literal -> STRING .)
    LEQ             reduce using rule 151 (Literal -> STRING .)
    GEQ             reduce using rule 151 (Literal -> STRING .)
    GREAT           reduce using rule 151 (Literal -> STRING .)
    LESS            reduce using rule 151 (Literal -> STRING .)
    AMPAMP          reduce using rule 151 (Literal -> STRING .)
    OROR            reduce using rule 151 (Literal -> STRING .)
    SEMICOL         reduce using rule 151 (Literal -> STRING .)
    LBRACE          reduce using rule 151 (Literal -> STRING .)
    RBRACE          reduce using rule 151 (Literal -> STRING .)
    CASE            reduce using rule 151 (Literal -> STRING .)
    DEFAULT         reduce using rule 151 (Literal -> STRING .)
    COMMA           reduce using rule 151 (Literal -> STRING .)
    RPAREN          reduce using rule 151 (Literal -> STRING .)
    PLUSEQ          reduce using rule 151 (Literal -> STRING .)
    MINUSEQ         reduce using rule 151 (Literal -> STRING .)
    TIMESEQ         reduce using rule 151 (Literal -> STRING .)
    DIVIDEEQ        reduce using rule 151 (Literal -> STRING .)
    MODEQ           reduce using rule 151 (Literal -> STRING .)
    OREQ            reduce using rule 151 (Literal -> STRING .)
    AMPEQ           reduce using rule 151 (Literal -> STRING .)
    CAREQ           reduce using rule 151 (Literal -> STRING .)
    SHL_ASSIGN      reduce using rule 151 (Literal -> STRING .)
    SHR_ASSIGN      reduce using rule 151 (Literal -> STRING .)
    AMPCAREQ        reduce using rule 151 (Literal -> STRING .)
    PLUSPLUS        reduce using rule 151 (Literal -> STRING .)
    MINUSMIN        reduce using rule 151 (Literal -> STRING .)
    EQUAL           reduce using rule 151 (Literal -> STRING .)
    COLONEQ         reduce using rule 151 (Literal -> STRING .)
    PIPE            reduce using rule 151 (Literal -> STRING .)
    RBRACK          reduce using rule 151 (Literal -> STRING .)
    RIGHT_ANGLE     reduce using rule 151 (Literal -> STRING .)
    COLON           reduce using rule 151 (Literal -> STRING .)
    RIGHT_RIGHT     reduce using rule 151 (Literal -> STRING .)
    DDD             reduce using rule 151 (Literal -> STRING .)


state 31

    (16) Declaration -> FuncDecl .

    SEMICOL         reduce using rule 16 (Declaration -> FuncDecl .)


state 32

    (190) NonDeclStmt -> IfStmt .

    RBRACE          reduce using rule 190 (NonDeclStmt -> IfStmt .)
    SEMICOL         reduce using rule 190 (NonDeclStmt -> IfStmt .)
    CASE            reduce using rule 190 (NonDeclStmt -> IfStmt .)
    DEFAULT         reduce using rule 190 (NonDeclStmt -> IfStmt .)


state 33

    (120) LabelName -> NewName .

    COLON           reduce using rule 120 (LabelName -> NewName .)


state 34

    (149) Literal -> INTEGER .

    DOT             reduce using rule 149 (Literal -> INTEGER .)
    LBRACK          reduce using rule 149 (Literal -> INTEGER .)
    LEFT_LEFT       reduce using rule 149 (Literal -> INTEGER .)
    LPAREN          reduce using rule 149 (Literal -> INTEGER .)
    DIVIDE          reduce using rule 149 (Literal -> INTEGER .)
    MOD             reduce using rule 149 (Literal -> INTEGER .)
    SHL             reduce using rule 149 (Literal -> INTEGER .)
    SHR             reduce using rule 149 (Literal -> INTEGER .)
    AMPERS          reduce using rule 149 (Literal -> INTEGER .)
    AMPCAR          reduce using rule 149 (Literal -> INTEGER .)
    TIMES           reduce using rule 149 (Literal -> INTEGER .)
    PLUS            reduce using rule 149 (Literal -> INTEGER .)
    MINUS           reduce using rule 149 (Literal -> INTEGER .)
    XOR             reduce using rule 149 (Literal -> INTEGER .)
    OR              reduce using rule 149 (Literal -> INTEGER .)
    EQEQ            reduce using rule 149 (Literal -> INTEGER .)
    NOTEQ           reduce using rule 149 (Literal -> INTEGER .)
    LEQ             reduce using rule 149 (Literal -> INTEGER .)
    GEQ             reduce using rule 149 (Literal -> INTEGER .)
    GREAT           reduce using rule 149 (Literal -> INTEGER .)
    LESS            reduce using rule 149 (Literal -> INTEGER .)
    AMPAMP          reduce using rule 149 (Literal -> INTEGER .)
    OROR            reduce using rule 149 (Literal -> INTEGER .)
    SEMICOL         reduce using rule 149 (Literal -> INTEGER .)
    LBRACE          reduce using rule 149 (Literal -> INTEGER .)
    RBRACE          reduce using rule 149 (Literal -> INTEGER .)
    CASE            reduce using rule 149 (Literal -> INTEGER .)
    DEFAULT         reduce using rule 149 (Literal -> INTEGER .)
    COMMA           reduce using rule 149 (Literal -> INTEGER .)
    RPAREN          reduce using rule 149 (Literal -> INTEGER .)
    PLUSEQ          reduce using rule 149 (Literal -> INTEGER .)
    MINUSEQ         reduce using rule 149 (Literal -> INTEGER .)
    TIMESEQ         reduce using rule 149 (Literal -> INTEGER .)
    DIVIDEEQ        reduce using rule 149 (Literal -> INTEGER .)
    MODEQ           reduce using rule 149 (Literal -> INTEGER .)
    OREQ            reduce using rule 149 (Literal -> INTEGER .)
    AMPEQ           reduce using rule 149 (Literal -> INTEGER .)
    CAREQ           reduce using rule 149 (Literal -> INTEGER .)
    SHL_ASSIGN      reduce using rule 149 (Literal -> INTEGER .)
    SHR_ASSIGN      reduce using rule 149 (Literal -> INTEGER .)
    AMPCAREQ        reduce using rule 149 (Literal -> INTEGER .)
    PLUSPLUS        reduce using rule 149 (Literal -> INTEGER .)
    MINUSMIN        reduce using rule 149 (Literal -> INTEGER .)
    EQUAL           reduce using rule 149 (Literal -> INTEGER .)
    COLONEQ         reduce using rule 149 (Literal -> INTEGER .)
    PIPE            reduce using rule 149 (Literal -> INTEGER .)
    RBRACK          reduce using rule 149 (Literal -> INTEGER .)
    RIGHT_ANGLE     reduce using rule 149 (Literal -> INTEGER .)
    COLON           reduce using rule 149 (Literal -> INTEGER .)
    RIGHT_RIGHT     reduce using rule 149 (Literal -> INTEGER .)
    DDD             reduce using rule 149 (Literal -> INTEGER .)


state 35

    (95) FuncDecl -> FUNCTION . FuncDecl_ FuncBody
    (98) FuncType -> FUNCTION . ArgList FuncRes
    (96) FuncDecl_ -> . IDENTIFIER ArgList FuncRes
    (97) FuncDecl_ -> . LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (99) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (100) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    IDENTIFIER      shift and go to state 120
    LEFT_OR         shift and go to state 119
    LPAREN          shift and go to state 118

    FuncDecl_                      shift and go to state 117
    ArgList                        shift and go to state 116

state 36

    (70) ForStmt -> FOR . ForBody
    (69) ForBody -> . ForHeader LoopBody
    (66) ForHeader -> . OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (67) ForHeader -> . OSimpleStmt
    (68) ForHeader -> . RangeStmt
    (133) OSimpleStmt -> .
    (134) OSimpleStmt -> . SimpleStmt
    (63) RangeStmt -> . ExprList EQUAL RANGE Expr
    (64) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (65) RangeStmt -> . RANGE Expr
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 133 (OSimpleStmt -> .)
    LBRACE          reduce using rule 133 (OSimpleStmt -> .)
    RANGE           shift and go to state 125
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    ForBody                        shift and go to state 124
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 126
    OSimpleStmt                    shift and go to state 121
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    FuncType                       shift and go to state 57
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    ForHeader                      shift and go to state 127
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 128
    PseudoCall                     shift and go to state 37
    RangeStmt                      shift and go to state 122
    ExprList                       shift and go to state 123
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 37

    (210) PExprNoParen -> PseudoCall .

    DOT             reduce using rule 210 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 210 (PExprNoParen -> PseudoCall .)
    LPAREN          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    DIVIDE          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    MOD             reduce using rule 210 (PExprNoParen -> PseudoCall .)
    SHL             reduce using rule 210 (PExprNoParen -> PseudoCall .)
    SHR             reduce using rule 210 (PExprNoParen -> PseudoCall .)
    AMPERS          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    AMPCAR          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    TIMES           reduce using rule 210 (PExprNoParen -> PseudoCall .)
    PLUS            reduce using rule 210 (PExprNoParen -> PseudoCall .)
    MINUS           reduce using rule 210 (PExprNoParen -> PseudoCall .)
    XOR             reduce using rule 210 (PExprNoParen -> PseudoCall .)
    OR              reduce using rule 210 (PExprNoParen -> PseudoCall .)
    EQEQ            reduce using rule 210 (PExprNoParen -> PseudoCall .)
    NOTEQ           reduce using rule 210 (PExprNoParen -> PseudoCall .)
    LEQ             reduce using rule 210 (PExprNoParen -> PseudoCall .)
    GEQ             reduce using rule 210 (PExprNoParen -> PseudoCall .)
    GREAT           reduce using rule 210 (PExprNoParen -> PseudoCall .)
    LESS            reduce using rule 210 (PExprNoParen -> PseudoCall .)
    AMPAMP          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    OROR            reduce using rule 210 (PExprNoParen -> PseudoCall .)
    RPAREN          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    DDD             reduce using rule 210 (PExprNoParen -> PseudoCall .)
    COMMA           reduce using rule 210 (PExprNoParen -> PseudoCall .)
    COLON           reduce using rule 210 (PExprNoParen -> PseudoCall .)
    EQUAL           reduce using rule 210 (PExprNoParen -> PseudoCall .)
    COLONEQ         reduce using rule 210 (PExprNoParen -> PseudoCall .)
    PLUSEQ          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    MINUSEQ         reduce using rule 210 (PExprNoParen -> PseudoCall .)
    TIMESEQ         reduce using rule 210 (PExprNoParen -> PseudoCall .)
    DIVIDEEQ        reduce using rule 210 (PExprNoParen -> PseudoCall .)
    MODEQ           reduce using rule 210 (PExprNoParen -> PseudoCall .)
    OREQ            reduce using rule 210 (PExprNoParen -> PseudoCall .)
    AMPEQ           reduce using rule 210 (PExprNoParen -> PseudoCall .)
    CAREQ           reduce using rule 210 (PExprNoParen -> PseudoCall .)
    SHL_ASSIGN      reduce using rule 210 (PExprNoParen -> PseudoCall .)
    SHR_ASSIGN      reduce using rule 210 (PExprNoParen -> PseudoCall .)
    AMPCAREQ        reduce using rule 210 (PExprNoParen -> PseudoCall .)
    PLUSPLUS        reduce using rule 210 (PExprNoParen -> PseudoCall .)
    MINUSMIN        reduce using rule 210 (PExprNoParen -> PseudoCall .)
    LBRACE          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    SEMICOL         reduce using rule 210 (PExprNoParen -> PseudoCall .)
    RBRACE          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    CASE            reduce using rule 210 (PExprNoParen -> PseudoCall .)
    DEFAULT         reduce using rule 210 (PExprNoParen -> PseudoCall .)
    RIGHT_RIGHT     reduce using rule 210 (PExprNoParen -> PseudoCall .)
    PIPE            reduce using rule 210 (PExprNoParen -> PseudoCall .)
    RBRACK          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    RIGHT_ANGLE     reduce using rule 210 (PExprNoParen -> PseudoCall .)


state 38

    (93) InterfaceType -> INTERFACE . LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> INTERFACE . LBRACE RBRACE

    LBRACE          shift and go to state 129


state 39

    (202) PExprNoParen -> Literal .

    DOT             reduce using rule 202 (PExprNoParen -> Literal .)
    LBRACK          reduce using rule 202 (PExprNoParen -> Literal .)
    LEFT_LEFT       reduce using rule 202 (PExprNoParen -> Literal .)
    LPAREN          reduce using rule 202 (PExprNoParen -> Literal .)
    DIVIDE          reduce using rule 202 (PExprNoParen -> Literal .)
    MOD             reduce using rule 202 (PExprNoParen -> Literal .)
    SHL             reduce using rule 202 (PExprNoParen -> Literal .)
    SHR             reduce using rule 202 (PExprNoParen -> Literal .)
    AMPERS          reduce using rule 202 (PExprNoParen -> Literal .)
    AMPCAR          reduce using rule 202 (PExprNoParen -> Literal .)
    TIMES           reduce using rule 202 (PExprNoParen -> Literal .)
    PLUS            reduce using rule 202 (PExprNoParen -> Literal .)
    MINUS           reduce using rule 202 (PExprNoParen -> Literal .)
    XOR             reduce using rule 202 (PExprNoParen -> Literal .)
    OR              reduce using rule 202 (PExprNoParen -> Literal .)
    EQEQ            reduce using rule 202 (PExprNoParen -> Literal .)
    NOTEQ           reduce using rule 202 (PExprNoParen -> Literal .)
    LEQ             reduce using rule 202 (PExprNoParen -> Literal .)
    GEQ             reduce using rule 202 (PExprNoParen -> Literal .)
    GREAT           reduce using rule 202 (PExprNoParen -> Literal .)
    LESS            reduce using rule 202 (PExprNoParen -> Literal .)
    AMPAMP          reduce using rule 202 (PExprNoParen -> Literal .)
    OROR            reduce using rule 202 (PExprNoParen -> Literal .)
    RPAREN          reduce using rule 202 (PExprNoParen -> Literal .)
    DDD             reduce using rule 202 (PExprNoParen -> Literal .)
    COMMA           reduce using rule 202 (PExprNoParen -> Literal .)
    COLON           reduce using rule 202 (PExprNoParen -> Literal .)
    EQUAL           reduce using rule 202 (PExprNoParen -> Literal .)
    COLONEQ         reduce using rule 202 (PExprNoParen -> Literal .)
    PLUSEQ          reduce using rule 202 (PExprNoParen -> Literal .)
    MINUSEQ         reduce using rule 202 (PExprNoParen -> Literal .)
    TIMESEQ         reduce using rule 202 (PExprNoParen -> Literal .)
    DIVIDEEQ        reduce using rule 202 (PExprNoParen -> Literal .)
    MODEQ           reduce using rule 202 (PExprNoParen -> Literal .)
    OREQ            reduce using rule 202 (PExprNoParen -> Literal .)
    AMPEQ           reduce using rule 202 (PExprNoParen -> Literal .)
    CAREQ           reduce using rule 202 (PExprNoParen -> Literal .)
    SHL_ASSIGN      reduce using rule 202 (PExprNoParen -> Literal .)
    SHR_ASSIGN      reduce using rule 202 (PExprNoParen -> Literal .)
    AMPCAREQ        reduce using rule 202 (PExprNoParen -> Literal .)
    PLUSPLUS        reduce using rule 202 (PExprNoParen -> Literal .)
    MINUSMIN        reduce using rule 202 (PExprNoParen -> Literal .)
    LBRACE          reduce using rule 202 (PExprNoParen -> Literal .)
    SEMICOL         reduce using rule 202 (PExprNoParen -> Literal .)
    RBRACE          reduce using rule 202 (PExprNoParen -> Literal .)
    CASE            reduce using rule 202 (PExprNoParen -> Literal .)
    DEFAULT         reduce using rule 202 (PExprNoParen -> Literal .)
    RIGHT_RIGHT     reduce using rule 202 (PExprNoParen -> Literal .)
    PIPE            reduce using rule 202 (PExprNoParen -> Literal .)
    RBRACK          reduce using rule 202 (PExprNoParen -> Literal .)
    RIGHT_ANGLE     reduce using rule 202 (PExprNoParen -> Literal .)


state 40

    (229) Prec5Expr_ -> UExpr .

    DIVIDE          reduce using rule 229 (Prec5Expr_ -> UExpr .)
    MOD             reduce using rule 229 (Prec5Expr_ -> UExpr .)
    SHL             reduce using rule 229 (Prec5Expr_ -> UExpr .)
    SHR             reduce using rule 229 (Prec5Expr_ -> UExpr .)
    AMPERS          reduce using rule 229 (Prec5Expr_ -> UExpr .)
    AMPCAR          reduce using rule 229 (Prec5Expr_ -> UExpr .)
    TIMES           reduce using rule 229 (Prec5Expr_ -> UExpr .)
    PLUS            reduce using rule 229 (Prec5Expr_ -> UExpr .)
    MINUS           reduce using rule 229 (Prec5Expr_ -> UExpr .)
    XOR             reduce using rule 229 (Prec5Expr_ -> UExpr .)
    OR              reduce using rule 229 (Prec5Expr_ -> UExpr .)
    EQEQ            reduce using rule 229 (Prec5Expr_ -> UExpr .)
    NOTEQ           reduce using rule 229 (Prec5Expr_ -> UExpr .)
    LEQ             reduce using rule 229 (Prec5Expr_ -> UExpr .)
    GEQ             reduce using rule 229 (Prec5Expr_ -> UExpr .)
    GREAT           reduce using rule 229 (Prec5Expr_ -> UExpr .)
    LESS            reduce using rule 229 (Prec5Expr_ -> UExpr .)
    AMPAMP          reduce using rule 229 (Prec5Expr_ -> UExpr .)
    OROR            reduce using rule 229 (Prec5Expr_ -> UExpr .)
    SEMICOL         reduce using rule 229 (Prec5Expr_ -> UExpr .)
    LBRACE          reduce using rule 229 (Prec5Expr_ -> UExpr .)
    RBRACE          reduce using rule 229 (Prec5Expr_ -> UExpr .)
    CASE            reduce using rule 229 (Prec5Expr_ -> UExpr .)
    DEFAULT         reduce using rule 229 (Prec5Expr_ -> UExpr .)
    COMMA           reduce using rule 229 (Prec5Expr_ -> UExpr .)
    PLUSEQ          reduce using rule 229 (Prec5Expr_ -> UExpr .)
    MINUSEQ         reduce using rule 229 (Prec5Expr_ -> UExpr .)
    TIMESEQ         reduce using rule 229 (Prec5Expr_ -> UExpr .)
    DIVIDEEQ        reduce using rule 229 (Prec5Expr_ -> UExpr .)
    MODEQ           reduce using rule 229 (Prec5Expr_ -> UExpr .)
    OREQ            reduce using rule 229 (Prec5Expr_ -> UExpr .)
    AMPEQ           reduce using rule 229 (Prec5Expr_ -> UExpr .)
    CAREQ           reduce using rule 229 (Prec5Expr_ -> UExpr .)
    SHL_ASSIGN      reduce using rule 229 (Prec5Expr_ -> UExpr .)
    SHR_ASSIGN      reduce using rule 229 (Prec5Expr_ -> UExpr .)
    AMPCAREQ        reduce using rule 229 (Prec5Expr_ -> UExpr .)
    PLUSPLUS        reduce using rule 229 (Prec5Expr_ -> UExpr .)
    MINUSMIN        reduce using rule 229 (Prec5Expr_ -> UExpr .)
    EQUAL           reduce using rule 229 (Prec5Expr_ -> UExpr .)
    COLONEQ         reduce using rule 229 (Prec5Expr_ -> UExpr .)
    RBRACK          reduce using rule 229 (Prec5Expr_ -> UExpr .)
    RPAREN          reduce using rule 229 (Prec5Expr_ -> UExpr .)
    COLON           reduce using rule 229 (Prec5Expr_ -> UExpr .)
    RIGHT_RIGHT     reduce using rule 229 (Prec5Expr_ -> UExpr .)
    PIPE            reduce using rule 229 (Prec5Expr_ -> UExpr .)
    RIGHT_ANGLE     reduce using rule 229 (Prec5Expr_ -> UExpr .)
    DDD             reduce using rule 229 (Prec5Expr_ -> UExpr .)


state 41

    (215) PExprNoParen -> ForCompExpr .

    DOT             reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    LBRACK          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    LEFT_LEFT       reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    LPAREN          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    DIVIDE          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    MOD             reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    SHL             reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    SHR             reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    AMPERS          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    AMPCAR          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    TIMES           reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    PLUS            reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    MINUS           reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    XOR             reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    OR              reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    EQEQ            reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    NOTEQ           reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    LEQ             reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    GEQ             reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    GREAT           reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    LESS            reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    AMPAMP          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    OROR            reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    RPAREN          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    DDD             reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    COMMA           reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    COLON           reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    EQUAL           reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    COLONEQ         reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    PLUSEQ          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    MINUSEQ         reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    TIMESEQ         reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    DIVIDEEQ        reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    MODEQ           reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    OREQ            reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    AMPEQ           reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    CAREQ           reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    SHL_ASSIGN      reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    SHR_ASSIGN      reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    AMPCAREQ        reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    PLUSPLUS        reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    MINUSMIN        reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    LBRACE          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    SEMICOL         reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    RBRACE          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    CASE            reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    DEFAULT         reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    RIGHT_RIGHT     reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    PIPE            reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    RBRACK          reduce using rule 215 (PExprNoParen -> ForCompExpr .)
    RIGHT_ANGLE     reduce using rule 215 (PExprNoParen -> ForCompExpr .)


state 42

    (25) CommonDecl -> TYPE . TypeDecl
    (26) CommonDecl -> TYPE . LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> TYPE . LPAREN RPAREN
    (37) TypeDecl -> . TypeDeclName NType
    (36) TypeDeclName -> . IDENTIFIER

    LPAREN          shift and go to state 131
    IDENTIFIER      shift and go to state 133

    TypeDecl                       shift and go to state 130
    TypeDeclName                   shift and go to state 132

state 43

    (189) NonDeclStmt -> SwitchStmt .

    RBRACE          reduce using rule 189 (NonDeclStmt -> SwitchStmt .)
    SEMICOL         reduce using rule 189 (NonDeclStmt -> SwitchStmt .)
    CASE            reduce using rule 189 (NonDeclStmt -> SwitchStmt .)
    DEFAULT         reduce using rule 189 (NonDeclStmt -> SwitchStmt .)


state 44

    (260) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (87) OtherType -> LBRACK . OExpr RBRACK NType
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (137) OExpr -> .
    (138) OExpr -> . Expr
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 137 (OExpr -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 134
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    OExpr                          shift and go to state 135
    PExpr                          shift and go to state 56

state 45

    (194) NonDeclStmt -> CONTINUE . ONewName
    (135) ONewName -> .
    (136) ONewName -> . NewName
    (121) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 135 (ONewName -> .)
    RBRACE          reduce using rule 135 (ONewName -> .)
    CASE            reduce using rule 135 (ONewName -> .)
    DEFAULT         reduce using rule 135 (ONewName -> .)
    IDENTIFIER      shift and go to state 137

    NewName                        shift and go to state 136
    ONewName                       shift and go to state 138

state 46

    (255) UExpr -> NOT . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 139
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 47

    (200) PExpr -> PExprNoParen .

    DOT             reduce using rule 200 (PExpr -> PExprNoParen .)
    LBRACK          reduce using rule 200 (PExpr -> PExprNoParen .)
    LEFT_LEFT       reduce using rule 200 (PExpr -> PExprNoParen .)
    LPAREN          reduce using rule 200 (PExpr -> PExprNoParen .)
    DIVIDE          reduce using rule 200 (PExpr -> PExprNoParen .)
    MOD             reduce using rule 200 (PExpr -> PExprNoParen .)
    SHL             reduce using rule 200 (PExpr -> PExprNoParen .)
    SHR             reduce using rule 200 (PExpr -> PExprNoParen .)
    AMPERS          reduce using rule 200 (PExpr -> PExprNoParen .)
    AMPCAR          reduce using rule 200 (PExpr -> PExprNoParen .)
    TIMES           reduce using rule 200 (PExpr -> PExprNoParen .)
    PLUS            reduce using rule 200 (PExpr -> PExprNoParen .)
    MINUS           reduce using rule 200 (PExpr -> PExprNoParen .)
    XOR             reduce using rule 200 (PExpr -> PExprNoParen .)
    OR              reduce using rule 200 (PExpr -> PExprNoParen .)
    EQEQ            reduce using rule 200 (PExpr -> PExprNoParen .)
    NOTEQ           reduce using rule 200 (PExpr -> PExprNoParen .)
    LEQ             reduce using rule 200 (PExpr -> PExprNoParen .)
    GEQ             reduce using rule 200 (PExpr -> PExprNoParen .)
    GREAT           reduce using rule 200 (PExpr -> PExprNoParen .)
    LESS            reduce using rule 200 (PExpr -> PExprNoParen .)
    AMPAMP          reduce using rule 200 (PExpr -> PExprNoParen .)
    COLON           reduce using rule 200 (PExpr -> PExprNoParen .)
    OROR            reduce using rule 200 (PExpr -> PExprNoParen .)
    COMMA           reduce using rule 200 (PExpr -> PExprNoParen .)
    SEMICOL         reduce using rule 200 (PExpr -> PExprNoParen .)
    RBRACE          reduce using rule 200 (PExpr -> PExprNoParen .)
    CASE            reduce using rule 200 (PExpr -> PExprNoParen .)
    DEFAULT         reduce using rule 200 (PExpr -> PExprNoParen .)
    RPAREN          reduce using rule 200 (PExpr -> PExprNoParen .)
    RIGHT_RIGHT     reduce using rule 200 (PExpr -> PExprNoParen .)
    LBRACE          reduce using rule 200 (PExpr -> PExprNoParen .)
    PLUSEQ          reduce using rule 200 (PExpr -> PExprNoParen .)
    MINUSEQ         reduce using rule 200 (PExpr -> PExprNoParen .)
    TIMESEQ         reduce using rule 200 (PExpr -> PExprNoParen .)
    DIVIDEEQ        reduce using rule 200 (PExpr -> PExprNoParen .)
    MODEQ           reduce using rule 200 (PExpr -> PExprNoParen .)
    OREQ            reduce using rule 200 (PExpr -> PExprNoParen .)
    AMPEQ           reduce using rule 200 (PExpr -> PExprNoParen .)
    CAREQ           reduce using rule 200 (PExpr -> PExprNoParen .)
    SHL_ASSIGN      reduce using rule 200 (PExpr -> PExprNoParen .)
    SHR_ASSIGN      reduce using rule 200 (PExpr -> PExprNoParen .)
    AMPCAREQ        reduce using rule 200 (PExpr -> PExprNoParen .)
    PLUSPLUS        reduce using rule 200 (PExpr -> PExprNoParen .)
    MINUSMIN        reduce using rule 200 (PExpr -> PExprNoParen .)
    EQUAL           reduce using rule 200 (PExpr -> PExprNoParen .)
    COLONEQ         reduce using rule 200 (PExpr -> PExprNoParen .)
    PIPE            reduce using rule 200 (PExpr -> PExprNoParen .)
    RBRACK          reduce using rule 200 (PExpr -> PExprNoParen .)
    RIGHT_ANGLE     reduce using rule 200 (PExpr -> PExprNoParen .)
    DDD             reduce using rule 200 (PExpr -> PExprNoParen .)


state 48

    (197) NonDeclStmt -> RETURN . OExprList
    (139) OExprList -> .
    (140) OExprList -> . ExprList
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 139 (OExprList -> .)
    RBRACE          reduce using rule 139 (OExprList -> .)
    CASE            reduce using rule 139 (OExprList -> .)
    DEFAULT         reduce using rule 139 (OExprList -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 141
    OExprList                      shift and go to state 142
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 49

    (228) SwitchStmt -> SWITCH . IfHeader LBRACE CaseBlockList RBRACE
    (71) IfHeader -> . OSimpleStmt
    (72) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (133) OSimpleStmt -> .
    (134) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 133 (OSimpleStmt -> .)
    LBRACE          reduce using rule 133 (OSimpleStmt -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 126
    OSimpleStmt                    shift and go to state 143
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    IfHeader                       shift and go to state 144
    PExpr                          shift and go to state 56

state 50

    (154) DeclList -> DeclList Declaration . SEMICOL

    SEMICOL         shift and go to state 145


state 51

    (90) OtherType -> InterfaceType .

    LEFT_ANGLE      reduce using rule 90 (OtherType -> InterfaceType .)
    LEFT_LEFT       reduce using rule 90 (OtherType -> InterfaceType .)
    RPAREN          reduce using rule 90 (OtherType -> InterfaceType .)
    DDD             reduce using rule 90 (OtherType -> InterfaceType .)
    COMMA           reduce using rule 90 (OtherType -> InterfaceType .)
    COLON           reduce using rule 90 (OtherType -> InterfaceType .)
    EQUAL           reduce using rule 90 (OtherType -> InterfaceType .)
    COLONEQ         reduce using rule 90 (OtherType -> InterfaceType .)
    OR_RIGHT        reduce using rule 90 (OtherType -> InterfaceType .)
    SEMICOL         reduce using rule 90 (OtherType -> InterfaceType .)
    RBRACK          reduce using rule 90 (OtherType -> InterfaceType .)
    RBRACE          reduce using rule 90 (OtherType -> InterfaceType .)
    LBRACE          reduce using rule 90 (OtherType -> InterfaceType .)
    CASE            reduce using rule 90 (OtherType -> InterfaceType .)
    DEFAULT         reduce using rule 90 (OtherType -> InterfaceType .)
    INTEGER         reduce using rule 90 (OtherType -> InterfaceType .)
    FLOAT           reduce using rule 90 (OtherType -> InterfaceType .)
    STRING          reduce using rule 90 (OtherType -> InterfaceType .)


state 52

    (121) NewName -> IDENTIFIER .
    (174) Name -> IDENTIFIER .

    COLON           reduce using rule 121 (NewName -> IDENTIFIER .)
    DOT             reduce using rule 174 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 174 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 174 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 174 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 174 (Name -> IDENTIFIER .)
    MOD             reduce using rule 174 (Name -> IDENTIFIER .)
    SHL             reduce using rule 174 (Name -> IDENTIFIER .)
    SHR             reduce using rule 174 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 174 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 174 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 174 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 174 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 174 (Name -> IDENTIFIER .)
    XOR             reduce using rule 174 (Name -> IDENTIFIER .)
    OR              reduce using rule 174 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 174 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 174 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 174 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 174 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 174 (Name -> IDENTIFIER .)
    LESS            reduce using rule 174 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 174 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 174 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 174 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 174 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 174 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 174 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 174 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 174 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 174 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 174 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 174 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 174 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 174 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 174 (Name -> IDENTIFIER .)
    OROR            reduce using rule 174 (Name -> IDENTIFIER .)
    RBRACE          reduce using rule 174 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 174 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 174 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 174 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 174 (Name -> IDENTIFIER .)
    CASE            reduce using rule 174 (Name -> IDENTIFIER .)
    DEFAULT         reduce using rule 174 (Name -> IDENTIFIER .)


state 53

    (212) PExprNoParen -> CompType . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LEFT_LEFT       shift and go to state 146


state 54

    (89) OtherType -> StructType .

    LEFT_ANGLE      reduce using rule 89 (OtherType -> StructType .)
    LEFT_LEFT       reduce using rule 89 (OtherType -> StructType .)
    RPAREN          reduce using rule 89 (OtherType -> StructType .)
    DDD             reduce using rule 89 (OtherType -> StructType .)
    COMMA           reduce using rule 89 (OtherType -> StructType .)
    COLON           reduce using rule 89 (OtherType -> StructType .)
    EQUAL           reduce using rule 89 (OtherType -> StructType .)
    COLONEQ         reduce using rule 89 (OtherType -> StructType .)
    OR_RIGHT        reduce using rule 89 (OtherType -> StructType .)
    SEMICOL         reduce using rule 89 (OtherType -> StructType .)
    RBRACK          reduce using rule 89 (OtherType -> StructType .)
    RBRACE          reduce using rule 89 (OtherType -> StructType .)
    LBRACE          reduce using rule 89 (OtherType -> StructType .)
    CASE            reduce using rule 89 (OtherType -> StructType .)
    DEFAULT         reduce using rule 89 (OtherType -> StructType .)
    INTEGER         reduce using rule 89 (OtherType -> StructType .)
    FLOAT           reduce using rule 89 (OtherType -> StructType .)
    STRING          reduce using rule 89 (OtherType -> StructType .)


state 55

    (193) NonDeclStmt -> BREAK . ONewName
    (135) ONewName -> .
    (136) ONewName -> . NewName
    (121) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 135 (ONewName -> .)
    RBRACE          reduce using rule 135 (ONewName -> .)
    CASE            reduce using rule 135 (ONewName -> .)
    DEFAULT         reduce using rule 135 (ONewName -> .)
    IDENTIFIER      shift and go to state 137

    NewName                        shift and go to state 136
    ONewName                       shift and go to state 147

state 56

    (253) UExpr -> PExpr .
    (204) PExprNoParen -> PExpr . DOT IDENTIFIER
    (205) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> PExpr . DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (208) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (261) PseudoCall -> PExpr . LPAREN RPAREN
    (262) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN

    DIVIDE          reduce using rule 253 (UExpr -> PExpr .)
    MOD             reduce using rule 253 (UExpr -> PExpr .)
    SHL             reduce using rule 253 (UExpr -> PExpr .)
    SHR             reduce using rule 253 (UExpr -> PExpr .)
    AMPERS          reduce using rule 253 (UExpr -> PExpr .)
    AMPCAR          reduce using rule 253 (UExpr -> PExpr .)
    TIMES           reduce using rule 253 (UExpr -> PExpr .)
    PLUS            reduce using rule 253 (UExpr -> PExpr .)
    MINUS           reduce using rule 253 (UExpr -> PExpr .)
    XOR             reduce using rule 253 (UExpr -> PExpr .)
    OR              reduce using rule 253 (UExpr -> PExpr .)
    EQEQ            reduce using rule 253 (UExpr -> PExpr .)
    NOTEQ           reduce using rule 253 (UExpr -> PExpr .)
    LEQ             reduce using rule 253 (UExpr -> PExpr .)
    GEQ             reduce using rule 253 (UExpr -> PExpr .)
    GREAT           reduce using rule 253 (UExpr -> PExpr .)
    LESS            reduce using rule 253 (UExpr -> PExpr .)
    AMPAMP          reduce using rule 253 (UExpr -> PExpr .)
    OROR            reduce using rule 253 (UExpr -> PExpr .)
    DDD             reduce using rule 253 (UExpr -> PExpr .)
    COMMA           reduce using rule 253 (UExpr -> PExpr .)
    RPAREN          reduce using rule 253 (UExpr -> PExpr .)
    PLUSEQ          reduce using rule 253 (UExpr -> PExpr .)
    MINUSEQ         reduce using rule 253 (UExpr -> PExpr .)
    TIMESEQ         reduce using rule 253 (UExpr -> PExpr .)
    DIVIDEEQ        reduce using rule 253 (UExpr -> PExpr .)
    MODEQ           reduce using rule 253 (UExpr -> PExpr .)
    OREQ            reduce using rule 253 (UExpr -> PExpr .)
    AMPEQ           reduce using rule 253 (UExpr -> PExpr .)
    CAREQ           reduce using rule 253 (UExpr -> PExpr .)
    SHL_ASSIGN      reduce using rule 253 (UExpr -> PExpr .)
    SHR_ASSIGN      reduce using rule 253 (UExpr -> PExpr .)
    AMPCAREQ        reduce using rule 253 (UExpr -> PExpr .)
    PLUSPLUS        reduce using rule 253 (UExpr -> PExpr .)
    MINUSMIN        reduce using rule 253 (UExpr -> PExpr .)
    SEMICOL         reduce using rule 253 (UExpr -> PExpr .)
    EQUAL           reduce using rule 253 (UExpr -> PExpr .)
    COLONEQ         reduce using rule 253 (UExpr -> PExpr .)
    LBRACE          reduce using rule 253 (UExpr -> PExpr .)
    PIPE            reduce using rule 253 (UExpr -> PExpr .)
    RBRACK          reduce using rule 253 (UExpr -> PExpr .)
    RBRACE          reduce using rule 253 (UExpr -> PExpr .)
    CASE            reduce using rule 253 (UExpr -> PExpr .)
    DEFAULT         reduce using rule 253 (UExpr -> PExpr .)
    RIGHT_ANGLE     reduce using rule 253 (UExpr -> PExpr .)
    COLON           reduce using rule 253 (UExpr -> PExpr .)
    RIGHT_RIGHT     reduce using rule 253 (UExpr -> PExpr .)
    DOT             shift and go to state 151
    LBRACK          shift and go to state 148
    LEFT_LEFT       shift and go to state 150
    LPAREN          shift and go to state 149


state 57

    (216) ConvType -> FuncType .
    (141) FuncLiteralDecl -> FuncType .

    LEFT_ANGLE      reduce using rule 216 (ConvType -> FuncType .)
    LBRACE          reduce using rule 141 (FuncLiteralDecl -> FuncType .)


state 58

    (187) NonDeclStmt -> SimpleStmt .

    RBRACE          reduce using rule 187 (NonDeclStmt -> SimpleStmt .)
    SEMICOL         reduce using rule 187 (NonDeclStmt -> SimpleStmt .)
    CASE            reduce using rule 187 (NonDeclStmt -> SimpleStmt .)
    DEFAULT         reduce using rule 187 (NonDeclStmt -> SimpleStmt .)


state 59

    (188) NonDeclStmt -> ForStmt .

    RBRACE          reduce using rule 188 (NonDeclStmt -> ForStmt .)
    SEMICOL         reduce using rule 188 (NonDeclStmt -> ForStmt .)
    CASE            reduce using rule 188 (NonDeclStmt -> ForStmt .)
    DEFAULT         reduce using rule 188 (NonDeclStmt -> ForStmt .)


state 60

    (196) NonDeclStmt -> GOTO . NewName
    (121) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 137

    NewName                        shift and go to state 152

state 61

    (203) PExprNoParen -> Name .

    DOT             reduce using rule 203 (PExprNoParen -> Name .)
    LBRACK          reduce using rule 203 (PExprNoParen -> Name .)
    LEFT_LEFT       reduce using rule 203 (PExprNoParen -> Name .)
    LPAREN          reduce using rule 203 (PExprNoParen -> Name .)
    DIVIDE          reduce using rule 203 (PExprNoParen -> Name .)
    MOD             reduce using rule 203 (PExprNoParen -> Name .)
    SHL             reduce using rule 203 (PExprNoParen -> Name .)
    SHR             reduce using rule 203 (PExprNoParen -> Name .)
    AMPERS          reduce using rule 203 (PExprNoParen -> Name .)
    AMPCAR          reduce using rule 203 (PExprNoParen -> Name .)
    TIMES           reduce using rule 203 (PExprNoParen -> Name .)
    PLUS            reduce using rule 203 (PExprNoParen -> Name .)
    MINUS           reduce using rule 203 (PExprNoParen -> Name .)
    XOR             reduce using rule 203 (PExprNoParen -> Name .)
    OR              reduce using rule 203 (PExprNoParen -> Name .)
    EQEQ            reduce using rule 203 (PExprNoParen -> Name .)
    NOTEQ           reduce using rule 203 (PExprNoParen -> Name .)
    LEQ             reduce using rule 203 (PExprNoParen -> Name .)
    GEQ             reduce using rule 203 (PExprNoParen -> Name .)
    GREAT           reduce using rule 203 (PExprNoParen -> Name .)
    LESS            reduce using rule 203 (PExprNoParen -> Name .)
    AMPAMP          reduce using rule 203 (PExprNoParen -> Name .)
    OROR            reduce using rule 203 (PExprNoParen -> Name .)
    RPAREN          reduce using rule 203 (PExprNoParen -> Name .)
    DDD             reduce using rule 203 (PExprNoParen -> Name .)
    COMMA           reduce using rule 203 (PExprNoParen -> Name .)
    COLON           reduce using rule 203 (PExprNoParen -> Name .)
    EQUAL           reduce using rule 203 (PExprNoParen -> Name .)
    COLONEQ         reduce using rule 203 (PExprNoParen -> Name .)
    PLUSEQ          reduce using rule 203 (PExprNoParen -> Name .)
    MINUSEQ         reduce using rule 203 (PExprNoParen -> Name .)
    TIMESEQ         reduce using rule 203 (PExprNoParen -> Name .)
    DIVIDEEQ        reduce using rule 203 (PExprNoParen -> Name .)
    MODEQ           reduce using rule 203 (PExprNoParen -> Name .)
    OREQ            reduce using rule 203 (PExprNoParen -> Name .)
    AMPEQ           reduce using rule 203 (PExprNoParen -> Name .)
    CAREQ           reduce using rule 203 (PExprNoParen -> Name .)
    SHL_ASSIGN      reduce using rule 203 (PExprNoParen -> Name .)
    SHR_ASSIGN      reduce using rule 203 (PExprNoParen -> Name .)
    AMPCAREQ        reduce using rule 203 (PExprNoParen -> Name .)
    PLUSPLUS        reduce using rule 203 (PExprNoParen -> Name .)
    MINUSMIN        reduce using rule 203 (PExprNoParen -> Name .)
    LBRACE          reduce using rule 203 (PExprNoParen -> Name .)
    SEMICOL         reduce using rule 203 (PExprNoParen -> Name .)
    RBRACE          reduce using rule 203 (PExprNoParen -> Name .)
    CASE            reduce using rule 203 (PExprNoParen -> Name .)
    DEFAULT         reduce using rule 203 (PExprNoParen -> Name .)
    RIGHT_RIGHT     reduce using rule 203 (PExprNoParen -> Name .)
    PIPE            reduce using rule 203 (PExprNoParen -> Name .)
    RBRACK          reduce using rule 203 (PExprNoParen -> Name .)
    RIGHT_ANGLE     reduce using rule 203 (PExprNoParen -> Name .)


state 62

    (17) Declaration -> NonDeclStmt .

    SEMICOL         reduce using rule 17 (Declaration -> NonDeclStmt .)


state 63

    (38) SimpleStmt -> Expr .
    (39) SimpleStmt -> Expr . PLUSEQ Expr
    (40) SimpleStmt -> Expr . MINUSEQ Expr
    (41) SimpleStmt -> Expr . TIMESEQ Expr
    (42) SimpleStmt -> Expr . DIVIDEEQ Expr
    (43) SimpleStmt -> Expr . MODEQ Expr
    (44) SimpleStmt -> Expr . OREQ Expr
    (45) SimpleStmt -> Expr . AMPEQ Expr
    (46) SimpleStmt -> Expr . CAREQ Expr
    (47) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (48) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (49) SimpleStmt -> Expr . AMPCAREQ Expr
    (52) SimpleStmt -> Expr . PLUSPLUS
    (53) SimpleStmt -> Expr . MINUSMIN
    (252) Expr -> Expr . OROR Prec2Expr_
    (143) ExprList -> Expr .

    SEMICOL         reduce using rule 38 (SimpleStmt -> Expr .)
    RBRACE          reduce using rule 38 (SimpleStmt -> Expr .)
    CASE            reduce using rule 38 (SimpleStmt -> Expr .)
    DEFAULT         reduce using rule 38 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 38 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 156
    MINUSEQ         shift and go to state 160
    TIMESEQ         shift and go to state 155
    DIVIDEEQ        shift and go to state 166
    MODEQ           shift and go to state 157
    OREQ            shift and go to state 159
    AMPEQ           shift and go to state 162
    CAREQ           shift and go to state 154
    SHL_ASSIGN      shift and go to state 164
    SHR_ASSIGN      shift and go to state 158
    AMPCAREQ        shift and go to state 163
    PLUSPLUS        shift and go to state 165
    MINUSMIN        shift and go to state 161
    OROR            shift and go to state 153
    EQUAL           reduce using rule 143 (ExprList -> Expr .)
    COLONEQ         reduce using rule 143 (ExprList -> Expr .)
    COMMA           reduce using rule 143 (ExprList -> Expr .)


state 64

    (259) UExpr -> XOR . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 167
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 65

    (256) UExpr -> TIMES . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 168
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 66

    (201) PExpr -> LPAREN . ExprOrType RPAREN
    (225) ExprOrType -> . Expr
    (226) ExprOrType -> . NonExprType
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (84) NonExprType -> . FuncType
    (85) NonExprType -> . OtherType
    (86) NonExprType -> . TIMES NonExprType
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (141) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 171
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 175
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 169
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    ExprOrType                     shift and go to state 170
    NonExprType                    shift and go to state 172
    OtherType                      shift and go to state 173
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 174
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 67

    (73) IfStmt -> IF . IfHeader LoopBody ElseIfList Else
    (71) IfHeader -> . OSimpleStmt
    (72) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (133) OSimpleStmt -> .
    (134) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 133 (OSimpleStmt -> .)
    LBRACE          reduce using rule 133 (OSimpleStmt -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 126
    OSimpleStmt                    shift and go to state 143
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    IfHeader                       shift and go to state 176
    PExpr                          shift and go to state 56

state 68

    (91) StructType -> STRUCT . LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> STRUCT . LBRACE RBRACE

    LBRACE          shift and go to state 177


state 69

    (150) Literal -> FLOAT .

    DOT             reduce using rule 150 (Literal -> FLOAT .)
    LBRACK          reduce using rule 150 (Literal -> FLOAT .)
    LEFT_LEFT       reduce using rule 150 (Literal -> FLOAT .)
    LPAREN          reduce using rule 150 (Literal -> FLOAT .)
    DIVIDE          reduce using rule 150 (Literal -> FLOAT .)
    MOD             reduce using rule 150 (Literal -> FLOAT .)
    SHL             reduce using rule 150 (Literal -> FLOAT .)
    SHR             reduce using rule 150 (Literal -> FLOAT .)
    AMPERS          reduce using rule 150 (Literal -> FLOAT .)
    AMPCAR          reduce using rule 150 (Literal -> FLOAT .)
    TIMES           reduce using rule 150 (Literal -> FLOAT .)
    PLUS            reduce using rule 150 (Literal -> FLOAT .)
    MINUS           reduce using rule 150 (Literal -> FLOAT .)
    XOR             reduce using rule 150 (Literal -> FLOAT .)
    OR              reduce using rule 150 (Literal -> FLOAT .)
    EQEQ            reduce using rule 150 (Literal -> FLOAT .)
    NOTEQ           reduce using rule 150 (Literal -> FLOAT .)
    LEQ             reduce using rule 150 (Literal -> FLOAT .)
    GEQ             reduce using rule 150 (Literal -> FLOAT .)
    GREAT           reduce using rule 150 (Literal -> FLOAT .)
    LESS            reduce using rule 150 (Literal -> FLOAT .)
    AMPAMP          reduce using rule 150 (Literal -> FLOAT .)
    OROR            reduce using rule 150 (Literal -> FLOAT .)
    SEMICOL         reduce using rule 150 (Literal -> FLOAT .)
    LBRACE          reduce using rule 150 (Literal -> FLOAT .)
    RBRACE          reduce using rule 150 (Literal -> FLOAT .)
    CASE            reduce using rule 150 (Literal -> FLOAT .)
    DEFAULT         reduce using rule 150 (Literal -> FLOAT .)
    COMMA           reduce using rule 150 (Literal -> FLOAT .)
    RPAREN          reduce using rule 150 (Literal -> FLOAT .)
    PLUSEQ          reduce using rule 150 (Literal -> FLOAT .)
    MINUSEQ         reduce using rule 150 (Literal -> FLOAT .)
    TIMESEQ         reduce using rule 150 (Literal -> FLOAT .)
    DIVIDEEQ        reduce using rule 150 (Literal -> FLOAT .)
    MODEQ           reduce using rule 150 (Literal -> FLOAT .)
    OREQ            reduce using rule 150 (Literal -> FLOAT .)
    AMPEQ           reduce using rule 150 (Literal -> FLOAT .)
    CAREQ           reduce using rule 150 (Literal -> FLOAT .)
    SHL_ASSIGN      reduce using rule 150 (Literal -> FLOAT .)
    SHR_ASSIGN      reduce using rule 150 (Literal -> FLOAT .)
    AMPCAREQ        reduce using rule 150 (Literal -> FLOAT .)
    PLUSPLUS        reduce using rule 150 (Literal -> FLOAT .)
    MINUSMIN        reduce using rule 150 (Literal -> FLOAT .)
    EQUAL           reduce using rule 150 (Literal -> FLOAT .)
    COLONEQ         reduce using rule 150 (Literal -> FLOAT .)
    PIPE            reduce using rule 150 (Literal -> FLOAT .)
    RBRACK          reduce using rule 150 (Literal -> FLOAT .)
    RIGHT_ANGLE     reduce using rule 150 (Literal -> FLOAT .)
    COLON           reduce using rule 150 (Literal -> FLOAT .)
    RIGHT_RIGHT     reduce using rule 150 (Literal -> FLOAT .)
    DDD             reduce using rule 150 (Literal -> FLOAT .)


state 70

    (9) ImportStmt -> ImportHere . STRING

    STRING          shift and go to state 178


state 71

    (13) ImportHere -> IDENTIFIER .

    STRING          reduce using rule 13 (ImportHere -> IDENTIFIER .)


state 72

    (7) Import -> IMPORT LPAREN . ImportStmtList OSemi RPAREN
    (8) Import -> IMPORT LPAREN . RPAREN
    (10) ImportStmtList -> . ImportStmt
    (11) ImportStmtList -> . ImportStmtList SEMICOL ImportStmt
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> .
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT

    RPAREN          shift and go to state 179
    STRING          reduce using rule 12 (ImportHere -> .)
    IDENTIFIER      shift and go to state 71
    DOT             shift and go to state 74

    ImportHere                     shift and go to state 70
    ImportStmt                     shift and go to state 181
    ImportStmtList                 shift and go to state 180

state 73

    (6) Import -> IMPORT ImportStmt .

    SEMICOL         reduce using rule 6 (Import -> IMPORT ImportStmt .)


state 74

    (14) ImportHere -> DOT .

    STRING          reduce using rule 14 (ImportHere -> DOT .)


state 75

    (5) Imports -> Imports Import SEMICOL .

    IMPORT          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    CONSTANT        reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    VAR             reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    TYPE            reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    FUNCTION        reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    FALLTHROUGH     reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    BREAK           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    CONTINUE        reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    DEFER           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    GOTO            reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    RETURN          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    FOR             reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    SWITCH          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    IF              reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    IDENTIFIER      reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    AMPERS          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    NOT             reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    TIMES           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    PLUS            reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    MINUS           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    XOR             reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    LPAREN          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    INTEGER         reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    FLOAT           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    STRING          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    LBRACK          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    MAP             reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    STRUCT          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    INTERFACE       reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    $end            reduce using rule 5 (Imports -> Imports Import SEMICOL .)


state 76

    (246) Prec3Expr_ -> Prec3Expr_ GEQ . Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 182
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 77

    (245) Prec3Expr_ -> Prec3Expr_ LEQ . Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 183
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 78

    (243) Prec3Expr_ -> Prec3Expr_ EQEQ . Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 184
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 79

    (248) Prec3Expr_ -> Prec3Expr_ LESS . Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 185
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 80

    (247) Prec3Expr_ -> Prec3Expr_ GREAT . Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 186
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 81

    (244) Prec3Expr_ -> Prec3Expr_ NOTEQ . Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 187
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 82

    (211) PExprNoParen -> ConvType LEFT_ANGLE . Expr OComma RIGHT_ANGLE
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 188
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 83

    (174) Name -> IDENTIFIER .

    DOT             reduce using rule 174 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 174 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 174 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 174 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 174 (Name -> IDENTIFIER .)
    MOD             reduce using rule 174 (Name -> IDENTIFIER .)
    SHL             reduce using rule 174 (Name -> IDENTIFIER .)
    SHR             reduce using rule 174 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 174 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 174 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 174 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 174 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 174 (Name -> IDENTIFIER .)
    XOR             reduce using rule 174 (Name -> IDENTIFIER .)
    OR              reduce using rule 174 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 174 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 174 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 174 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 174 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 174 (Name -> IDENTIFIER .)
    LESS            reduce using rule 174 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 174 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 174 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 174 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 174 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 174 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 174 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 174 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 174 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 174 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 174 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 174 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 174 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 174 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 174 (Name -> IDENTIFIER .)
    OROR            reduce using rule 174 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 174 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 174 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 174 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 174 (Name -> IDENTIFIER .)
    LBRACE          reduce using rule 174 (Name -> IDENTIFIER .)
    PIPE            reduce using rule 174 (Name -> IDENTIFIER .)
    RBRACK          reduce using rule 174 (Name -> IDENTIFIER .)
    RBRACE          reduce using rule 174 (Name -> IDENTIFIER .)
    CASE            reduce using rule 174 (Name -> IDENTIFIER .)
    DEFAULT         reduce using rule 174 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 174 (Name -> IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 174 (Name -> IDENTIFIER .)
    COLON           reduce using rule 174 (Name -> IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 174 (Name -> IDENTIFIER .)
    DDD             reduce using rule 174 (Name -> IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 174 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 174 (Name -> IDENTIFIER .)
    INTEGER         reduce using rule 174 (Name -> IDENTIFIER .)
    FLOAT           reduce using rule 174 (Name -> IDENTIFIER .)
    STRING          reduce using rule 174 (Name -> IDENTIFIER .)


state 84

    (98) FuncType -> FUNCTION . ArgList FuncRes
    (99) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (100) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 118

    ArgList                        shift and go to state 116

state 85

    (258) UExpr -> MINUS UExpr .

    DIVIDE          reduce using rule 258 (UExpr -> MINUS UExpr .)
    MOD             reduce using rule 258 (UExpr -> MINUS UExpr .)
    SHL             reduce using rule 258 (UExpr -> MINUS UExpr .)
    SHR             reduce using rule 258 (UExpr -> MINUS UExpr .)
    AMPERS          reduce using rule 258 (UExpr -> MINUS UExpr .)
    AMPCAR          reduce using rule 258 (UExpr -> MINUS UExpr .)
    TIMES           reduce using rule 258 (UExpr -> MINUS UExpr .)
    PLUS            reduce using rule 258 (UExpr -> MINUS UExpr .)
    MINUS           reduce using rule 258 (UExpr -> MINUS UExpr .)
    XOR             reduce using rule 258 (UExpr -> MINUS UExpr .)
    OR              reduce using rule 258 (UExpr -> MINUS UExpr .)
    EQEQ            reduce using rule 258 (UExpr -> MINUS UExpr .)
    NOTEQ           reduce using rule 258 (UExpr -> MINUS UExpr .)
    LEQ             reduce using rule 258 (UExpr -> MINUS UExpr .)
    GEQ             reduce using rule 258 (UExpr -> MINUS UExpr .)
    GREAT           reduce using rule 258 (UExpr -> MINUS UExpr .)
    LESS            reduce using rule 258 (UExpr -> MINUS UExpr .)
    AMPAMP          reduce using rule 258 (UExpr -> MINUS UExpr .)
    OROR            reduce using rule 258 (UExpr -> MINUS UExpr .)
    DDD             reduce using rule 258 (UExpr -> MINUS UExpr .)
    COMMA           reduce using rule 258 (UExpr -> MINUS UExpr .)
    RPAREN          reduce using rule 258 (UExpr -> MINUS UExpr .)
    PLUSEQ          reduce using rule 258 (UExpr -> MINUS UExpr .)
    MINUSEQ         reduce using rule 258 (UExpr -> MINUS UExpr .)
    TIMESEQ         reduce using rule 258 (UExpr -> MINUS UExpr .)
    DIVIDEEQ        reduce using rule 258 (UExpr -> MINUS UExpr .)
    MODEQ           reduce using rule 258 (UExpr -> MINUS UExpr .)
    OREQ            reduce using rule 258 (UExpr -> MINUS UExpr .)
    AMPEQ           reduce using rule 258 (UExpr -> MINUS UExpr .)
    CAREQ           reduce using rule 258 (UExpr -> MINUS UExpr .)
    SHL_ASSIGN      reduce using rule 258 (UExpr -> MINUS UExpr .)
    SHR_ASSIGN      reduce using rule 258 (UExpr -> MINUS UExpr .)
    AMPCAREQ        reduce using rule 258 (UExpr -> MINUS UExpr .)
    PLUSPLUS        reduce using rule 258 (UExpr -> MINUS UExpr .)
    MINUSMIN        reduce using rule 258 (UExpr -> MINUS UExpr .)
    SEMICOL         reduce using rule 258 (UExpr -> MINUS UExpr .)
    EQUAL           reduce using rule 258 (UExpr -> MINUS UExpr .)
    COLONEQ         reduce using rule 258 (UExpr -> MINUS UExpr .)
    LBRACE          reduce using rule 258 (UExpr -> MINUS UExpr .)
    PIPE            reduce using rule 258 (UExpr -> MINUS UExpr .)
    RBRACK          reduce using rule 258 (UExpr -> MINUS UExpr .)
    RBRACE          reduce using rule 258 (UExpr -> MINUS UExpr .)
    CASE            reduce using rule 258 (UExpr -> MINUS UExpr .)
    DEFAULT         reduce using rule 258 (UExpr -> MINUS UExpr .)
    RIGHT_ANGLE     reduce using rule 258 (UExpr -> MINUS UExpr .)
    COLON           reduce using rule 258 (UExpr -> MINUS UExpr .)
    RIGHT_RIGHT     reduce using rule 258 (UExpr -> MINUS UExpr .)


state 86

    (195) NonDeclStmt -> DEFER PseudoCall .
    (210) PExprNoParen -> PseudoCall .

    RBRACE          reduce using rule 195 (NonDeclStmt -> DEFER PseudoCall .)
    SEMICOL         reduce using rule 195 (NonDeclStmt -> DEFER PseudoCall .)
    CASE            reduce using rule 195 (NonDeclStmt -> DEFER PseudoCall .)
    DEFAULT         reduce using rule 195 (NonDeclStmt -> DEFER PseudoCall .)
    LPAREN          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    DOT             reduce using rule 210 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 210 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 210 (PExprNoParen -> PseudoCall .)


state 87

    (261) PseudoCall -> PExpr . LPAREN RPAREN
    (262) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN
    (204) PExprNoParen -> PExpr . DOT IDENTIFIER
    (205) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> PExpr . DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (208) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LPAREN          shift and go to state 149
    DOT             shift and go to state 151
    LBRACK          shift and go to state 148
    LEFT_LEFT       shift and go to state 150


state 88

    (257) UExpr -> PLUS UExpr .

    DIVIDE          reduce using rule 257 (UExpr -> PLUS UExpr .)
    MOD             reduce using rule 257 (UExpr -> PLUS UExpr .)
    SHL             reduce using rule 257 (UExpr -> PLUS UExpr .)
    SHR             reduce using rule 257 (UExpr -> PLUS UExpr .)
    AMPERS          reduce using rule 257 (UExpr -> PLUS UExpr .)
    AMPCAR          reduce using rule 257 (UExpr -> PLUS UExpr .)
    TIMES           reduce using rule 257 (UExpr -> PLUS UExpr .)
    PLUS            reduce using rule 257 (UExpr -> PLUS UExpr .)
    MINUS           reduce using rule 257 (UExpr -> PLUS UExpr .)
    XOR             reduce using rule 257 (UExpr -> PLUS UExpr .)
    OR              reduce using rule 257 (UExpr -> PLUS UExpr .)
    EQEQ            reduce using rule 257 (UExpr -> PLUS UExpr .)
    NOTEQ           reduce using rule 257 (UExpr -> PLUS UExpr .)
    LEQ             reduce using rule 257 (UExpr -> PLUS UExpr .)
    GEQ             reduce using rule 257 (UExpr -> PLUS UExpr .)
    GREAT           reduce using rule 257 (UExpr -> PLUS UExpr .)
    LESS            reduce using rule 257 (UExpr -> PLUS UExpr .)
    AMPAMP          reduce using rule 257 (UExpr -> PLUS UExpr .)
    OROR            reduce using rule 257 (UExpr -> PLUS UExpr .)
    DDD             reduce using rule 257 (UExpr -> PLUS UExpr .)
    COMMA           reduce using rule 257 (UExpr -> PLUS UExpr .)
    RPAREN          reduce using rule 257 (UExpr -> PLUS UExpr .)
    PLUSEQ          reduce using rule 257 (UExpr -> PLUS UExpr .)
    MINUSEQ         reduce using rule 257 (UExpr -> PLUS UExpr .)
    TIMESEQ         reduce using rule 257 (UExpr -> PLUS UExpr .)
    DIVIDEEQ        reduce using rule 257 (UExpr -> PLUS UExpr .)
    MODEQ           reduce using rule 257 (UExpr -> PLUS UExpr .)
    OREQ            reduce using rule 257 (UExpr -> PLUS UExpr .)
    AMPEQ           reduce using rule 257 (UExpr -> PLUS UExpr .)
    CAREQ           reduce using rule 257 (UExpr -> PLUS UExpr .)
    SHL_ASSIGN      reduce using rule 257 (UExpr -> PLUS UExpr .)
    SHR_ASSIGN      reduce using rule 257 (UExpr -> PLUS UExpr .)
    AMPCAREQ        reduce using rule 257 (UExpr -> PLUS UExpr .)
    PLUSPLUS        reduce using rule 257 (UExpr -> PLUS UExpr .)
    MINUSMIN        reduce using rule 257 (UExpr -> PLUS UExpr .)
    SEMICOL         reduce using rule 257 (UExpr -> PLUS UExpr .)
    EQUAL           reduce using rule 257 (UExpr -> PLUS UExpr .)
    COLONEQ         reduce using rule 257 (UExpr -> PLUS UExpr .)
    LBRACE          reduce using rule 257 (UExpr -> PLUS UExpr .)
    PIPE            reduce using rule 257 (UExpr -> PLUS UExpr .)
    RBRACK          reduce using rule 257 (UExpr -> PLUS UExpr .)
    RBRACE          reduce using rule 257 (UExpr -> PLUS UExpr .)
    CASE            reduce using rule 257 (UExpr -> PLUS UExpr .)
    DEFAULT         reduce using rule 257 (UExpr -> PLUS UExpr .)
    RIGHT_ANGLE     reduce using rule 257 (UExpr -> PLUS UExpr .)
    COLON           reduce using rule 257 (UExpr -> PLUS UExpr .)
    RIGHT_RIGHT     reduce using rule 257 (UExpr -> PLUS UExpr .)


state 89

    (191) NonDeclStmt -> LabelName COLON . Stmt
    (183) Stmt -> .
    (184) Stmt -> . CompoundStmt
    (185) Stmt -> . CommonDecl
    (186) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE StmtList RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (187) NonDeclStmt -> . SimpleStmt
    (188) NonDeclStmt -> . ForStmt
    (189) NonDeclStmt -> . SwitchStmt
    (190) NonDeclStmt -> . IfStmt
    (191) NonDeclStmt -> . LabelName COLON Stmt
    (192) NonDeclStmt -> . FALLTHROUGH
    (193) NonDeclStmt -> . BREAK ONewName
    (194) NonDeclStmt -> . CONTINUE ONewName
    (195) NonDeclStmt -> . DEFER PseudoCall
    (196) NonDeclStmt -> . GOTO NewName
    (197) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (228) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (120) LabelName -> . NewName
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (121) NewName -> . IDENTIFIER
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 183 (Stmt -> .)
    RBRACE          reduce using rule 183 (Stmt -> .)
    CASE            reduce using rule 183 (Stmt -> .)
    DEFAULT         reduce using rule 183 (Stmt -> .)
    LBRACE          shift and go to state 191
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    TYPE            shift and go to state 42
    FALLTHROUGH     shift and go to state 17
    BREAK           shift and go to state 55
    CONTINUE        shift and go to state 45
    DEFER           shift and go to state 16
    GOTO            shift and go to state 60
    RETURN          shift and go to state 48
    FOR             shift and go to state 36
    SWITCH          shift and go to state 49
    IF              shift and go to state 67
    IDENTIFIER      shift and go to state 52
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 58
    Prec3Expr_                     shift and go to state 12
    ForStmt                        shift and go to state 59
    CommonDecl                     shift and go to state 190
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    IfStmt                         shift and go to state 32
    FuncType                       shift and go to state 57
    FuncLiteralDecl                shift and go to state 22
    Stmt                           shift and go to state 189
    NewName                        shift and go to state 33
    InterfaceType                  shift and go to state 51
    LabelName                      shift and go to state 19
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    NonDeclStmt                    shift and go to state 193
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    PExpr                          shift and go to state 56
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    CompoundStmt                   shift and go to state 192

state 90

    (233) Prec5Expr_ -> Prec5Expr_ SHR . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 194
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 91

    (230) Prec5Expr_ -> Prec5Expr_ DIVIDE . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 195
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 92

    (235) Prec5Expr_ -> Prec5Expr_ AMPCAR . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 196
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 93

    (234) Prec5Expr_ -> Prec5Expr_ AMPERS . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 197
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 94

    (236) Prec5Expr_ -> Prec5Expr_ TIMES . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 198
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 95

    (232) Prec5Expr_ -> Prec5Expr_ SHL . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 199
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 96

    (231) Prec5Expr_ -> Prec5Expr_ MOD . UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 200
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 97

    (250) Prec2Expr_ -> Prec2Expr_ AMPAMP . Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 201
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 98

    (142) FuncLiteral -> FuncLiteralDecl LBRACE . StmtList RBRACE
    (163) StmtList -> . Stmt
    (164) StmtList -> . StmtList SEMICOL Stmt
    (183) Stmt -> .
    (184) Stmt -> . CompoundStmt
    (185) Stmt -> . CommonDecl
    (186) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE StmtList RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (187) NonDeclStmt -> . SimpleStmt
    (188) NonDeclStmt -> . ForStmt
    (189) NonDeclStmt -> . SwitchStmt
    (190) NonDeclStmt -> . IfStmt
    (191) NonDeclStmt -> . LabelName COLON Stmt
    (192) NonDeclStmt -> . FALLTHROUGH
    (193) NonDeclStmt -> . BREAK ONewName
    (194) NonDeclStmt -> . CONTINUE ONewName
    (195) NonDeclStmt -> . DEFER PseudoCall
    (196) NonDeclStmt -> . GOTO NewName
    (197) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (228) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (120) LabelName -> . NewName
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (121) NewName -> . IDENTIFIER
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          reduce using rule 183 (Stmt -> .)
    SEMICOL         reduce using rule 183 (Stmt -> .)
    LBRACE          shift and go to state 191
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    TYPE            shift and go to state 42
    FALLTHROUGH     shift and go to state 17
    BREAK           shift and go to state 55
    CONTINUE        shift and go to state 45
    DEFER           shift and go to state 16
    GOTO            shift and go to state 60
    RETURN          shift and go to state 48
    FOR             shift and go to state 36
    SWITCH          shift and go to state 49
    IF              shift and go to state 67
    IDENTIFIER      shift and go to state 52
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 58
    Prec3Expr_                     shift and go to state 12
    ForStmt                        shift and go to state 59
    StmtList                       shift and go to state 203
    CommonDecl                     shift and go to state 190
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    IfStmt                         shift and go to state 32
    FuncType                       shift and go to state 57
    NonDeclStmt                    shift and go to state 193
    Stmt                           shift and go to state 202
    FuncLiteralDecl                shift and go to state 22
    InterfaceType                  shift and go to state 51
    LabelName                      shift and go to state 19
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    NewName                        shift and go to state 33
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    PExpr                          shift and go to state 56
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    CompoundStmt                   shift and go to state 192

state 99

    (173) DeclName -> IDENTIFIER .

    EQUAL           reduce using rule 173 (DeclName -> IDENTIFIER .)
    COMMA           reduce using rule 173 (DeclName -> IDENTIFIER .)
    LPAREN          reduce using rule 173 (DeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 173 (DeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 173 (DeclName -> IDENTIFIER .)
    MAP             reduce using rule 173 (DeclName -> IDENTIFIER .)
    TIMES           reduce using rule 173 (DeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 173 (DeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 173 (DeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 173 (DeclName -> IDENTIFIER .)
    SEMICOL         reduce using rule 173 (DeclName -> IDENTIFIER .)
    RPAREN          reduce using rule 173 (DeclName -> IDENTIFIER .)


state 100

    (161) DeclNameList -> DeclName .

    EQUAL           reduce using rule 161 (DeclNameList -> DeclName .)
    COMMA           reduce using rule 161 (DeclNameList -> DeclName .)
    LPAREN          reduce using rule 161 (DeclNameList -> DeclName .)
    FUNCTION        reduce using rule 161 (DeclNameList -> DeclName .)
    LBRACK          reduce using rule 161 (DeclNameList -> DeclName .)
    MAP             reduce using rule 161 (DeclNameList -> DeclName .)
    TIMES           reduce using rule 161 (DeclNameList -> DeclName .)
    STRUCT          reduce using rule 161 (DeclNameList -> DeclName .)
    INTERFACE       reduce using rule 161 (DeclNameList -> DeclName .)
    IDENTIFIER      reduce using rule 161 (DeclNameList -> DeclName .)
    SEMICOL         reduce using rule 161 (DeclNameList -> DeclName .)
    RPAREN          reduce using rule 161 (DeclNameList -> DeclName .)


state 101

    (22) CommonDecl -> VAR VarDecl .

    SEMICOL         reduce using rule 22 (CommonDecl -> VAR VarDecl .)
    RBRACE          reduce using rule 22 (CommonDecl -> VAR VarDecl .)
    CASE            reduce using rule 22 (CommonDecl -> VAR VarDecl .)
    DEFAULT         reduce using rule 22 (CommonDecl -> VAR VarDecl .)


state 102

    (23) CommonDecl -> VAR LPAREN . VarDeclList OSemi RPAREN
    (24) CommonDecl -> VAR LPAREN . RPAREN
    (155) VarDeclList -> . VarDecl
    (156) VarDeclList -> . VarDeclList SEMICOL VarDecl
    (28) VarDecl -> . DeclNameList NType
    (29) VarDecl -> . DeclNameList NType EQUAL ExprList
    (30) VarDecl -> . DeclNameList EQUAL ExprList
    (161) DeclNameList -> . DeclName
    (162) DeclNameList -> . DeclNameList COMMA DeclName
    (173) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 204
    IDENTIFIER      shift and go to state 99

    DeclName                       shift and go to state 100
    VarDecl                        shift and go to state 205
    VarDeclList                    shift and go to state 206
    DeclNameList                   shift and go to state 103

state 103

    (28) VarDecl -> DeclNameList . NType
    (29) VarDecl -> DeclNameList . NType EQUAL ExprList
    (30) VarDecl -> DeclNameList . EQUAL ExprList
    (162) DeclNameList -> DeclNameList . COMMA DeclName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    EQUAL           shift and go to state 208
    COMMA           shift and go to state 213
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    FuncType                       shift and go to state 207
    NType                          shift and go to state 215
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210
    Name                           shift and go to state 214

state 104

    (144) ExprList -> ExprList COMMA . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 218
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 105

    (51) SimpleStmt -> ExprList COLONEQ . ExprList
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 219
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 106

    (50) SimpleStmt -> ExprList EQUAL . ExprList
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 220
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 107

    (88) OtherType -> MAP LBRACK . NType RBRACK NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    Name                           shift and go to state 214
    FuncType                       shift and go to state 207
    NType                          shift and go to state 221
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210

state 108

    (19) CommonDecl -> CONSTANT LPAREN . ConstDecl OSemi RPAREN
    (20) CommonDecl -> CONSTANT LPAREN . ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> CONSTANT LPAREN . RPAREN
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (161) DeclNameList -> . DeclName
    (162) DeclNameList -> . DeclNameList COMMA DeclName
    (173) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 222
    IDENTIFIER      shift and go to state 99

    DeclName                       shift and go to state 100
    ConstDecl                      shift and go to state 223
    DeclNameList                   shift and go to state 109

state 109

    (31) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (32) ConstDecl -> DeclNameList . EQUAL ExprList
    (162) DeclNameList -> DeclNameList . COMMA DeclName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    EQUAL           shift and go to state 224
    COMMA           shift and go to state 213
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    FuncType                       shift and go to state 207
    NType                          shift and go to state 225
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210
    Name                           shift and go to state 214

state 110

    (18) CommonDecl -> CONSTANT ConstDecl .

    SEMICOL         reduce using rule 18 (CommonDecl -> CONSTANT ConstDecl .)
    RBRACE          reduce using rule 18 (CommonDecl -> CONSTANT ConstDecl .)
    CASE            reduce using rule 18 (CommonDecl -> CONSTANT ConstDecl .)
    DEFAULT         reduce using rule 18 (CommonDecl -> CONSTANT ConstDecl .)


state 111

    (254) UExpr -> AMPERS UExpr .

    DIVIDE          reduce using rule 254 (UExpr -> AMPERS UExpr .)
    MOD             reduce using rule 254 (UExpr -> AMPERS UExpr .)
    SHL             reduce using rule 254 (UExpr -> AMPERS UExpr .)
    SHR             reduce using rule 254 (UExpr -> AMPERS UExpr .)
    AMPERS          reduce using rule 254 (UExpr -> AMPERS UExpr .)
    AMPCAR          reduce using rule 254 (UExpr -> AMPERS UExpr .)
    TIMES           reduce using rule 254 (UExpr -> AMPERS UExpr .)
    PLUS            reduce using rule 254 (UExpr -> AMPERS UExpr .)
    MINUS           reduce using rule 254 (UExpr -> AMPERS UExpr .)
    XOR             reduce using rule 254 (UExpr -> AMPERS UExpr .)
    OR              reduce using rule 254 (UExpr -> AMPERS UExpr .)
    EQEQ            reduce using rule 254 (UExpr -> AMPERS UExpr .)
    NOTEQ           reduce using rule 254 (UExpr -> AMPERS UExpr .)
    LEQ             reduce using rule 254 (UExpr -> AMPERS UExpr .)
    GEQ             reduce using rule 254 (UExpr -> AMPERS UExpr .)
    GREAT           reduce using rule 254 (UExpr -> AMPERS UExpr .)
    LESS            reduce using rule 254 (UExpr -> AMPERS UExpr .)
    AMPAMP          reduce using rule 254 (UExpr -> AMPERS UExpr .)
    OROR            reduce using rule 254 (UExpr -> AMPERS UExpr .)
    DDD             reduce using rule 254 (UExpr -> AMPERS UExpr .)
    COMMA           reduce using rule 254 (UExpr -> AMPERS UExpr .)
    RPAREN          reduce using rule 254 (UExpr -> AMPERS UExpr .)
    PLUSEQ          reduce using rule 254 (UExpr -> AMPERS UExpr .)
    MINUSEQ         reduce using rule 254 (UExpr -> AMPERS UExpr .)
    TIMESEQ         reduce using rule 254 (UExpr -> AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 254 (UExpr -> AMPERS UExpr .)
    MODEQ           reduce using rule 254 (UExpr -> AMPERS UExpr .)
    OREQ            reduce using rule 254 (UExpr -> AMPERS UExpr .)
    AMPEQ           reduce using rule 254 (UExpr -> AMPERS UExpr .)
    CAREQ           reduce using rule 254 (UExpr -> AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 254 (UExpr -> AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 254 (UExpr -> AMPERS UExpr .)
    AMPCAREQ        reduce using rule 254 (UExpr -> AMPERS UExpr .)
    PLUSPLUS        reduce using rule 254 (UExpr -> AMPERS UExpr .)
    MINUSMIN        reduce using rule 254 (UExpr -> AMPERS UExpr .)
    SEMICOL         reduce using rule 254 (UExpr -> AMPERS UExpr .)
    EQUAL           reduce using rule 254 (UExpr -> AMPERS UExpr .)
    COLONEQ         reduce using rule 254 (UExpr -> AMPERS UExpr .)
    LBRACE          reduce using rule 254 (UExpr -> AMPERS UExpr .)
    PIPE            reduce using rule 254 (UExpr -> AMPERS UExpr .)
    RBRACK          reduce using rule 254 (UExpr -> AMPERS UExpr .)
    RBRACE          reduce using rule 254 (UExpr -> AMPERS UExpr .)
    CASE            reduce using rule 254 (UExpr -> AMPERS UExpr .)
    DEFAULT         reduce using rule 254 (UExpr -> AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 254 (UExpr -> AMPERS UExpr .)
    COLON           reduce using rule 254 (UExpr -> AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 254 (UExpr -> AMPERS UExpr .)


state 112

    (240) Prec4Expr_ -> Prec4Expr_ XOR . Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 226
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 113

    (241) Prec4Expr_ -> Prec4Expr_ OR . Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 227
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 114

    (238) Prec4Expr_ -> Prec4Expr_ PLUS . Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 228
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 115

    (239) Prec4Expr_ -> Prec4Expr_ MINUS . Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 229
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 116

    (98) FuncType -> FUNCTION ArgList . FuncRes
    (100) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (103) FuncRes -> .
    (104) FuncRes -> . FuncRetType
    (105) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (123) FuncRetType -> . FuncType
    (124) FuncRetType -> . OtherType
    (125) FuncRetType -> . PtrType
    (126) FuncRetType -> . DotName
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    LPAREN          shift and go to state 230
    LEFT_ANGLE      reduce using rule 103 (FuncRes -> .)
    LBRACE          reduce using rule 103 (FuncRes -> .)
    RPAREN          reduce using rule 103 (FuncRes -> .)
    EQUAL           reduce using rule 103 (FuncRes -> .)
    SEMICOL         reduce using rule 103 (FuncRes -> .)
    RBRACE          reduce using rule 103 (FuncRes -> .)
    CASE            reduce using rule 103 (FuncRes -> .)
    DEFAULT         reduce using rule 103 (FuncRes -> .)
    RBRACK          reduce using rule 103 (FuncRes -> .)
    COMMA           reduce using rule 103 (FuncRes -> .)
    OR_RIGHT        reduce using rule 103 (FuncRes -> .)
    DDD             reduce using rule 103 (FuncRes -> .)
    COLON           reduce using rule 103 (FuncRes -> .)
    COLONEQ         reduce using rule 103 (FuncRes -> .)
    LEFT_LEFT       reduce using rule 103 (FuncRes -> .)
    INTEGER         reduce using rule 103 (FuncRes -> .)
    FLOAT           reduce using rule 103 (FuncRes -> .)
    STRING          reduce using rule 103 (FuncRes -> .)
    LEFT_OR         shift and go to state 235
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    DotName                        shift and go to state 236
    Name                           shift and go to state 214
    FuncType                       shift and go to state 231
    OtherType                      shift and go to state 233
    InterfaceType                  shift and go to state 51
    FuncRes                        shift and go to state 234
    PtrType                        shift and go to state 232
    FuncRetType                    shift and go to state 237

state 117

    (95) FuncDecl -> FUNCTION FuncDecl_ . FuncBody
    (101) FuncBody -> .
    (102) FuncBody -> . LBRACE StmtList RBRACE

    SEMICOL         reduce using rule 101 (FuncBody -> .)
    LBRACE          shift and go to state 238

    FuncBody                       shift and go to state 239

state 118

    (99) ArgList -> LPAREN . OArgTypeListOComma RPAREN
    (181) OArgTypeListOComma -> .
    (182) OArgTypeListOComma -> . ArgTypeList OComma
    (179) ArgTypeList -> . ArgType
    (180) ArgTypeList -> . ArgTypeList COMMA ArgType
    (175) ArgType -> . NameOrType
    (176) ArgType -> . IDENTIFIER NameOrType
    (177) ArgType -> . IDENTIFIER DotDotDot
    (178) ArgType -> . DotDotDot
    (227) NameOrType -> . NType
    (198) DotDotDot -> . DDD
    (199) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    RPAREN          reduce using rule 181 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 245
    DDD             shift and go to state 247
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    StructType                     shift and go to state 54
    DotName                        shift and go to state 210
    OArgTypeListOComma             shift and go to state 242
    Name                           shift and go to state 214
    DotDotDot                      shift and go to state 243
    NType                          shift and go to state 246
    NameOrType                     shift and go to state 244
    ArgTypeList                    shift and go to state 240
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    ArgType                        shift and go to state 241
    FuncType                       shift and go to state 207

state 119

    (97) FuncDecl_ -> LEFT_OR . OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (181) OArgTypeListOComma -> .
    (182) OArgTypeListOComma -> . ArgTypeList OComma
    (179) ArgTypeList -> . ArgType
    (180) ArgTypeList -> . ArgTypeList COMMA ArgType
    (175) ArgType -> . NameOrType
    (176) ArgType -> . IDENTIFIER NameOrType
    (177) ArgType -> . IDENTIFIER DotDotDot
    (178) ArgType -> . DotDotDot
    (227) NameOrType -> . NType
    (198) DotDotDot -> . DDD
    (199) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 181 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 245
    DDD             shift and go to state 247
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    StructType                     shift and go to state 54
    DotName                        shift and go to state 210
    OArgTypeListOComma             shift and go to state 248
    Name                           shift and go to state 214
    DotDotDot                      shift and go to state 243
    NType                          shift and go to state 246
    NameOrType                     shift and go to state 244
    ArgTypeList                    shift and go to state 240
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    ArgType                        shift and go to state 241
    FuncType                       shift and go to state 207

state 120

    (96) FuncDecl_ -> IDENTIFIER . ArgList FuncRes
    (99) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (100) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 118

    ArgList                        shift and go to state 249

state 121

    (66) ForHeader -> OSimpleStmt . SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (67) ForHeader -> OSimpleStmt .

    SEMICOL         shift and go to state 250
    LBRACE          reduce using rule 67 (ForHeader -> OSimpleStmt .)


state 122

    (68) ForHeader -> RangeStmt .

    LBRACE          reduce using rule 68 (ForHeader -> RangeStmt .)


state 123

    (63) RangeStmt -> ExprList . EQUAL RANGE Expr
    (64) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (50) SimpleStmt -> ExprList . EQUAL ExprList
    (51) SimpleStmt -> ExprList . COLONEQ ExprList
    (144) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 251
    COLONEQ         shift and go to state 252
    COMMA           shift and go to state 104


state 124

    (70) ForStmt -> FOR ForBody .

    RBRACE          reduce using rule 70 (ForStmt -> FOR ForBody .)
    SEMICOL         reduce using rule 70 (ForStmt -> FOR ForBody .)
    CASE            reduce using rule 70 (ForStmt -> FOR ForBody .)
    DEFAULT         reduce using rule 70 (ForStmt -> FOR ForBody .)


state 125

    (65) RangeStmt -> RANGE . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 253
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 126

    (134) OSimpleStmt -> SimpleStmt .

    SEMICOL         reduce using rule 134 (OSimpleStmt -> SimpleStmt .)
    LBRACE          reduce using rule 134 (OSimpleStmt -> SimpleStmt .)


state 127

    (69) ForBody -> ForHeader . LoopBody
    (62) LoopBody -> . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 255

    LoopBody                       shift and go to state 254

state 128

    (38) SimpleStmt -> Expr .
    (39) SimpleStmt -> Expr . PLUSEQ Expr
    (40) SimpleStmt -> Expr . MINUSEQ Expr
    (41) SimpleStmt -> Expr . TIMESEQ Expr
    (42) SimpleStmt -> Expr . DIVIDEEQ Expr
    (43) SimpleStmt -> Expr . MODEQ Expr
    (44) SimpleStmt -> Expr . OREQ Expr
    (45) SimpleStmt -> Expr . AMPEQ Expr
    (46) SimpleStmt -> Expr . CAREQ Expr
    (47) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (48) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (49) SimpleStmt -> Expr . AMPCAREQ Expr
    (52) SimpleStmt -> Expr . PLUSPLUS
    (53) SimpleStmt -> Expr . MINUSMIN
    (143) ExprList -> Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 38 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 38 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 156
    MINUSEQ         shift and go to state 160
    TIMESEQ         shift and go to state 155
    DIVIDEEQ        shift and go to state 166
    MODEQ           shift and go to state 157
    OREQ            shift and go to state 159
    AMPEQ           shift and go to state 162
    CAREQ           shift and go to state 154
    SHL_ASSIGN      shift and go to state 164
    SHR_ASSIGN      shift and go to state 158
    AMPCAREQ        shift and go to state 163
    PLUSPLUS        shift and go to state 165
    MINUSMIN        shift and go to state 161
    EQUAL           reduce using rule 143 (ExprList -> Expr .)
    COLONEQ         reduce using rule 143 (ExprList -> Expr .)
    COMMA           reduce using rule 143 (ExprList -> Expr .)
    OROR            shift and go to state 153


state 129

    (93) InterfaceType -> INTERFACE LBRACE . InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> INTERFACE LBRACE . RBRACE
    (108) InterfaceDeclList -> . InterfaceDecl
    (109) InterfaceDeclList -> . InterfaceDeclList SEMICOL InterfaceDecl
    (116) InterfaceDecl -> . NewName InDecl
    (117) InterfaceDecl -> . IDENTIFIER
    (118) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (121) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 256
    IDENTIFIER      shift and go to state 261
    LPAREN          shift and go to state 260

    InterfaceDecl                  shift and go to state 257
    NewName                        shift and go to state 259
    InterfaceDeclList              shift and go to state 258

state 130

    (25) CommonDecl -> TYPE TypeDecl .

    SEMICOL         reduce using rule 25 (CommonDecl -> TYPE TypeDecl .)
    RBRACE          reduce using rule 25 (CommonDecl -> TYPE TypeDecl .)
    CASE            reduce using rule 25 (CommonDecl -> TYPE TypeDecl .)
    DEFAULT         reduce using rule 25 (CommonDecl -> TYPE TypeDecl .)


state 131

    (26) CommonDecl -> TYPE LPAREN . TypeDeclList OSemi RPAREN
    (27) CommonDecl -> TYPE LPAREN . RPAREN
    (159) TypeDeclList -> . TypeDecl
    (160) TypeDeclList -> . TypeDeclList SEMICOL TypeDecl
    (37) TypeDecl -> . TypeDeclName NType
    (36) TypeDeclName -> . IDENTIFIER

    RPAREN          shift and go to state 264
    IDENTIFIER      shift and go to state 133

    TypeDeclList                   shift and go to state 263
    TypeDecl                       shift and go to state 262
    TypeDeclName                   shift and go to state 132

state 132

    (37) TypeDecl -> TypeDeclName . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    Name                           shift and go to state 214
    FuncType                       shift and go to state 207
    NType                          shift and go to state 265
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210

state 133

    (36) TypeDeclName -> IDENTIFIER .

    LPAREN          reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    MAP             reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    TIMES           reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 36 (TypeDeclName -> IDENTIFIER .)


state 134

    (260) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (252) Expr -> Expr . OROR Prec2Expr_
    (138) OExpr -> Expr .

    PIPE            shift and go to state 266
    OROR            shift and go to state 153
    RBRACK          reduce using rule 138 (OExpr -> Expr .)


state 135

    (87) OtherType -> LBRACK OExpr . RBRACK NType

    RBRACK          shift and go to state 267


state 136

    (136) ONewName -> NewName .

    SEMICOL         reduce using rule 136 (ONewName -> NewName .)
    RBRACE          reduce using rule 136 (ONewName -> NewName .)
    CASE            reduce using rule 136 (ONewName -> NewName .)
    DEFAULT         reduce using rule 136 (ONewName -> NewName .)


state 137

    (121) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 121 (NewName -> IDENTIFIER .)
    RBRACE          reduce using rule 121 (NewName -> IDENTIFIER .)
    CASE            reduce using rule 121 (NewName -> IDENTIFIER .)
    DEFAULT         reduce using rule 121 (NewName -> IDENTIFIER .)
    COMMA           reduce using rule 121 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 121 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 121 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 121 (NewName -> IDENTIFIER .)
    MAP             reduce using rule 121 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 121 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 121 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 121 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 121 (NewName -> IDENTIFIER .)


state 138

    (194) NonDeclStmt -> CONTINUE ONewName .

    RBRACE          reduce using rule 194 (NonDeclStmt -> CONTINUE ONewName .)
    SEMICOL         reduce using rule 194 (NonDeclStmt -> CONTINUE ONewName .)
    CASE            reduce using rule 194 (NonDeclStmt -> CONTINUE ONewName .)
    DEFAULT         reduce using rule 194 (NonDeclStmt -> CONTINUE ONewName .)


state 139

    (255) UExpr -> NOT UExpr .

    DIVIDE          reduce using rule 255 (UExpr -> NOT UExpr .)
    MOD             reduce using rule 255 (UExpr -> NOT UExpr .)
    SHL             reduce using rule 255 (UExpr -> NOT UExpr .)
    SHR             reduce using rule 255 (UExpr -> NOT UExpr .)
    AMPERS          reduce using rule 255 (UExpr -> NOT UExpr .)
    AMPCAR          reduce using rule 255 (UExpr -> NOT UExpr .)
    TIMES           reduce using rule 255 (UExpr -> NOT UExpr .)
    PLUS            reduce using rule 255 (UExpr -> NOT UExpr .)
    MINUS           reduce using rule 255 (UExpr -> NOT UExpr .)
    XOR             reduce using rule 255 (UExpr -> NOT UExpr .)
    OR              reduce using rule 255 (UExpr -> NOT UExpr .)
    EQEQ            reduce using rule 255 (UExpr -> NOT UExpr .)
    NOTEQ           reduce using rule 255 (UExpr -> NOT UExpr .)
    LEQ             reduce using rule 255 (UExpr -> NOT UExpr .)
    GEQ             reduce using rule 255 (UExpr -> NOT UExpr .)
    GREAT           reduce using rule 255 (UExpr -> NOT UExpr .)
    LESS            reduce using rule 255 (UExpr -> NOT UExpr .)
    AMPAMP          reduce using rule 255 (UExpr -> NOT UExpr .)
    OROR            reduce using rule 255 (UExpr -> NOT UExpr .)
    DDD             reduce using rule 255 (UExpr -> NOT UExpr .)
    COMMA           reduce using rule 255 (UExpr -> NOT UExpr .)
    RPAREN          reduce using rule 255 (UExpr -> NOT UExpr .)
    PLUSEQ          reduce using rule 255 (UExpr -> NOT UExpr .)
    MINUSEQ         reduce using rule 255 (UExpr -> NOT UExpr .)
    TIMESEQ         reduce using rule 255 (UExpr -> NOT UExpr .)
    DIVIDEEQ        reduce using rule 255 (UExpr -> NOT UExpr .)
    MODEQ           reduce using rule 255 (UExpr -> NOT UExpr .)
    OREQ            reduce using rule 255 (UExpr -> NOT UExpr .)
    AMPEQ           reduce using rule 255 (UExpr -> NOT UExpr .)
    CAREQ           reduce using rule 255 (UExpr -> NOT UExpr .)
    SHL_ASSIGN      reduce using rule 255 (UExpr -> NOT UExpr .)
    SHR_ASSIGN      reduce using rule 255 (UExpr -> NOT UExpr .)
    AMPCAREQ        reduce using rule 255 (UExpr -> NOT UExpr .)
    PLUSPLUS        reduce using rule 255 (UExpr -> NOT UExpr .)
    MINUSMIN        reduce using rule 255 (UExpr -> NOT UExpr .)
    SEMICOL         reduce using rule 255 (UExpr -> NOT UExpr .)
    EQUAL           reduce using rule 255 (UExpr -> NOT UExpr .)
    COLONEQ         reduce using rule 255 (UExpr -> NOT UExpr .)
    LBRACE          reduce using rule 255 (UExpr -> NOT UExpr .)
    PIPE            reduce using rule 255 (UExpr -> NOT UExpr .)
    RBRACK          reduce using rule 255 (UExpr -> NOT UExpr .)
    RBRACE          reduce using rule 255 (UExpr -> NOT UExpr .)
    CASE            reduce using rule 255 (UExpr -> NOT UExpr .)
    DEFAULT         reduce using rule 255 (UExpr -> NOT UExpr .)
    RIGHT_ANGLE     reduce using rule 255 (UExpr -> NOT UExpr .)
    COLON           reduce using rule 255 (UExpr -> NOT UExpr .)
    RIGHT_RIGHT     reduce using rule 255 (UExpr -> NOT UExpr .)


state 140

    (143) ExprList -> Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    EQUAL           reduce using rule 143 (ExprList -> Expr .)
    COLONEQ         reduce using rule 143 (ExprList -> Expr .)
    COMMA           reduce using rule 143 (ExprList -> Expr .)
    SEMICOL         reduce using rule 143 (ExprList -> Expr .)
    LBRACE          reduce using rule 143 (ExprList -> Expr .)
    RBRACE          reduce using rule 143 (ExprList -> Expr .)
    CASE            reduce using rule 143 (ExprList -> Expr .)
    DEFAULT         reduce using rule 143 (ExprList -> Expr .)
    RPAREN          reduce using rule 143 (ExprList -> Expr .)
    OROR            shift and go to state 153


state 141

    (140) OExprList -> ExprList .
    (144) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 140 (OExprList -> ExprList .)
    RBRACE          reduce using rule 140 (OExprList -> ExprList .)
    CASE            reduce using rule 140 (OExprList -> ExprList .)
    DEFAULT         reduce using rule 140 (OExprList -> ExprList .)
    COMMA           shift and go to state 104


state 142

    (197) NonDeclStmt -> RETURN OExprList .

    RBRACE          reduce using rule 197 (NonDeclStmt -> RETURN OExprList .)
    SEMICOL         reduce using rule 197 (NonDeclStmt -> RETURN OExprList .)
    CASE            reduce using rule 197 (NonDeclStmt -> RETURN OExprList .)
    DEFAULT         reduce using rule 197 (NonDeclStmt -> RETURN OExprList .)


state 143

    (71) IfHeader -> OSimpleStmt .
    (72) IfHeader -> OSimpleStmt . SEMICOL OSimpleStmt

    LBRACE          reduce using rule 71 (IfHeader -> OSimpleStmt .)
    SEMICOL         shift and go to state 268


state 144

    (228) SwitchStmt -> SWITCH IfHeader . LBRACE CaseBlockList RBRACE

    LBRACE          shift and go to state 269


state 145

    (154) DeclList -> DeclList Declaration SEMICOL .

    CONSTANT        reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    VAR             reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    TYPE            reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    FUNCTION        reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    BREAK           reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    CONTINUE        reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    DEFER           reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    GOTO            reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    RETURN          reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    FOR             reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    SWITCH          reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    IF              reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    AMPERS          reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    NOT             reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    TIMES           reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    PLUS            reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    MINUS           reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    XOR             reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    LPAREN          reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    INTEGER         reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    FLOAT           reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    STRING          reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    LBRACK          reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    MAP             reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    STRUCT          reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    INTERFACE       reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)
    $end            reduce using rule 154 (DeclList -> DeclList Declaration SEMICOL .)


state 146

    (212) PExprNoParen -> CompType LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (171) BracedKeyvalList -> .
    (172) BracedKeyvalList -> . KeyvalList OComma
    (167) KeyvalList -> . Keyval
    (168) KeyvalList -> . BareCompLitExpr
    (169) KeyvalList -> . KeyvalList COMMA Keyval
    (170) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (220) Keyval -> . Expr COLON CompLitExpr
    (221) BareCompLitExpr -> . Expr
    (222) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 171 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 271
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    FuncLiteral                    shift and go to state 11
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    PExprNoParen                   shift and go to state 47
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 270
    PseudoCall                     shift and go to state 37
    KeyvalList                     shift and go to state 272
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    Keyval                         shift and go to state 273
    BareCompLitExpr                shift and go to state 275
    PExpr                          shift and go to state 56
    BracedKeyvalList               shift and go to state 274

state 147

    (193) NonDeclStmt -> BREAK ONewName .

    RBRACE          reduce using rule 193 (NonDeclStmt -> BREAK ONewName .)
    SEMICOL         reduce using rule 193 (NonDeclStmt -> BREAK ONewName .)
    CASE            reduce using rule 193 (NonDeclStmt -> BREAK ONewName .)
    DEFAULT         reduce using rule 193 (NonDeclStmt -> BREAK ONewName .)


state 148

    (207) PExprNoParen -> PExpr LBRACK . Expr RBRACK
    (208) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr COLON OExpr RBRACK
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (137) OExpr -> .
    (138) OExpr -> . Expr
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    COLON           reduce using rule 137 (OExpr -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 276
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    OExpr                          shift and go to state 277
    PExpr                          shift and go to state 56

state 149

    (261) PseudoCall -> PExpr LPAREN . RPAREN
    (262) PseudoCall -> PExpr LPAREN . ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> PExpr LPAREN . ExprOrTypeList DDD OComma RPAREN
    (145) ExprOrTypeList -> . ExprOrType
    (146) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (225) ExprOrType -> . Expr
    (226) ExprOrType -> . NonExprType
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (84) NonExprType -> . FuncType
    (85) NonExprType -> . OtherType
    (86) NonExprType -> . TIMES NonExprType
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (141) FuncLiteralDecl -> . FuncType

    RPAREN          shift and go to state 280
    TIMES           shift and go to state 171
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 175
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 169
    Prec4Expr_                     shift and go to state 28
    ExprOrTypeList                 shift and go to state 278
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    ExprOrType                     shift and go to state 279
    NonExprType                    shift and go to state 172
    OtherType                      shift and go to state 173
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 174
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 150

    (213) PExprNoParen -> PExpr LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (171) BracedKeyvalList -> .
    (172) BracedKeyvalList -> . KeyvalList OComma
    (167) KeyvalList -> . Keyval
    (168) KeyvalList -> . BareCompLitExpr
    (169) KeyvalList -> . KeyvalList COMMA Keyval
    (170) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (220) Keyval -> . Expr COLON CompLitExpr
    (221) BareCompLitExpr -> . Expr
    (222) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 171 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 271
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    FuncLiteral                    shift and go to state 11
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    PExprNoParen                   shift and go to state 47
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 270
    PseudoCall                     shift and go to state 37
    KeyvalList                     shift and go to state 272
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    Keyval                         shift and go to state 273
    BareCompLitExpr                shift and go to state 275
    PExpr                          shift and go to state 56
    BracedKeyvalList               shift and go to state 281

state 151

    (204) PExprNoParen -> PExpr DOT . IDENTIFIER
    (205) PExprNoParen -> PExpr DOT . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> PExpr DOT . LPAREN TYPE RPAREN

    IDENTIFIER      shift and go to state 283
    LPAREN          shift and go to state 282


state 152

    (196) NonDeclStmt -> GOTO NewName .

    RBRACE          reduce using rule 196 (NonDeclStmt -> GOTO NewName .)
    SEMICOL         reduce using rule 196 (NonDeclStmt -> GOTO NewName .)
    CASE            reduce using rule 196 (NonDeclStmt -> GOTO NewName .)
    DEFAULT         reduce using rule 196 (NonDeclStmt -> GOTO NewName .)


state 153

    (252) Expr -> Expr OROR . Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 284
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 154

    (46) SimpleStmt -> Expr CAREQ . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 285
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 155

    (41) SimpleStmt -> Expr TIMESEQ . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 286
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 156

    (39) SimpleStmt -> Expr PLUSEQ . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 287
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 157

    (43) SimpleStmt -> Expr MODEQ . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 288
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 158

    (48) SimpleStmt -> Expr SHR_ASSIGN . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 289
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 159

    (44) SimpleStmt -> Expr OREQ . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 290
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 160

    (40) SimpleStmt -> Expr MINUSEQ . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 291
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 161

    (53) SimpleStmt -> Expr MINUSMIN .

    SEMICOL         reduce using rule 53 (SimpleStmt -> Expr MINUSMIN .)
    RBRACE          reduce using rule 53 (SimpleStmt -> Expr MINUSMIN .)
    LBRACE          reduce using rule 53 (SimpleStmt -> Expr MINUSMIN .)
    CASE            reduce using rule 53 (SimpleStmt -> Expr MINUSMIN .)
    DEFAULT         reduce using rule 53 (SimpleStmt -> Expr MINUSMIN .)


state 162

    (45) SimpleStmt -> Expr AMPEQ . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 292
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 163

    (49) SimpleStmt -> Expr AMPCAREQ . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 293
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 164

    (47) SimpleStmt -> Expr SHL_ASSIGN . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 294
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 165

    (52) SimpleStmt -> Expr PLUSPLUS .

    SEMICOL         reduce using rule 52 (SimpleStmt -> Expr PLUSPLUS .)
    RBRACE          reduce using rule 52 (SimpleStmt -> Expr PLUSPLUS .)
    LBRACE          reduce using rule 52 (SimpleStmt -> Expr PLUSPLUS .)
    CASE            reduce using rule 52 (SimpleStmt -> Expr PLUSPLUS .)
    DEFAULT         reduce using rule 52 (SimpleStmt -> Expr PLUSPLUS .)


state 166

    (42) SimpleStmt -> Expr DIVIDEEQ . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 295
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 167

    (259) UExpr -> XOR UExpr .

    DIVIDE          reduce using rule 259 (UExpr -> XOR UExpr .)
    MOD             reduce using rule 259 (UExpr -> XOR UExpr .)
    SHL             reduce using rule 259 (UExpr -> XOR UExpr .)
    SHR             reduce using rule 259 (UExpr -> XOR UExpr .)
    AMPERS          reduce using rule 259 (UExpr -> XOR UExpr .)
    AMPCAR          reduce using rule 259 (UExpr -> XOR UExpr .)
    TIMES           reduce using rule 259 (UExpr -> XOR UExpr .)
    PLUS            reduce using rule 259 (UExpr -> XOR UExpr .)
    MINUS           reduce using rule 259 (UExpr -> XOR UExpr .)
    XOR             reduce using rule 259 (UExpr -> XOR UExpr .)
    OR              reduce using rule 259 (UExpr -> XOR UExpr .)
    EQEQ            reduce using rule 259 (UExpr -> XOR UExpr .)
    NOTEQ           reduce using rule 259 (UExpr -> XOR UExpr .)
    LEQ             reduce using rule 259 (UExpr -> XOR UExpr .)
    GEQ             reduce using rule 259 (UExpr -> XOR UExpr .)
    GREAT           reduce using rule 259 (UExpr -> XOR UExpr .)
    LESS            reduce using rule 259 (UExpr -> XOR UExpr .)
    AMPAMP          reduce using rule 259 (UExpr -> XOR UExpr .)
    OROR            reduce using rule 259 (UExpr -> XOR UExpr .)
    DDD             reduce using rule 259 (UExpr -> XOR UExpr .)
    COMMA           reduce using rule 259 (UExpr -> XOR UExpr .)
    RPAREN          reduce using rule 259 (UExpr -> XOR UExpr .)
    PLUSEQ          reduce using rule 259 (UExpr -> XOR UExpr .)
    MINUSEQ         reduce using rule 259 (UExpr -> XOR UExpr .)
    TIMESEQ         reduce using rule 259 (UExpr -> XOR UExpr .)
    DIVIDEEQ        reduce using rule 259 (UExpr -> XOR UExpr .)
    MODEQ           reduce using rule 259 (UExpr -> XOR UExpr .)
    OREQ            reduce using rule 259 (UExpr -> XOR UExpr .)
    AMPEQ           reduce using rule 259 (UExpr -> XOR UExpr .)
    CAREQ           reduce using rule 259 (UExpr -> XOR UExpr .)
    SHL_ASSIGN      reduce using rule 259 (UExpr -> XOR UExpr .)
    SHR_ASSIGN      reduce using rule 259 (UExpr -> XOR UExpr .)
    AMPCAREQ        reduce using rule 259 (UExpr -> XOR UExpr .)
    PLUSPLUS        reduce using rule 259 (UExpr -> XOR UExpr .)
    MINUSMIN        reduce using rule 259 (UExpr -> XOR UExpr .)
    SEMICOL         reduce using rule 259 (UExpr -> XOR UExpr .)
    EQUAL           reduce using rule 259 (UExpr -> XOR UExpr .)
    COLONEQ         reduce using rule 259 (UExpr -> XOR UExpr .)
    LBRACE          reduce using rule 259 (UExpr -> XOR UExpr .)
    PIPE            reduce using rule 259 (UExpr -> XOR UExpr .)
    RBRACK          reduce using rule 259 (UExpr -> XOR UExpr .)
    RBRACE          reduce using rule 259 (UExpr -> XOR UExpr .)
    CASE            reduce using rule 259 (UExpr -> XOR UExpr .)
    DEFAULT         reduce using rule 259 (UExpr -> XOR UExpr .)
    RIGHT_ANGLE     reduce using rule 259 (UExpr -> XOR UExpr .)
    COLON           reduce using rule 259 (UExpr -> XOR UExpr .)
    RIGHT_RIGHT     reduce using rule 259 (UExpr -> XOR UExpr .)


state 168

    (256) UExpr -> TIMES UExpr .

    DIVIDE          reduce using rule 256 (UExpr -> TIMES UExpr .)
    MOD             reduce using rule 256 (UExpr -> TIMES UExpr .)
    SHL             reduce using rule 256 (UExpr -> TIMES UExpr .)
    SHR             reduce using rule 256 (UExpr -> TIMES UExpr .)
    AMPERS          reduce using rule 256 (UExpr -> TIMES UExpr .)
    AMPCAR          reduce using rule 256 (UExpr -> TIMES UExpr .)
    TIMES           reduce using rule 256 (UExpr -> TIMES UExpr .)
    PLUS            reduce using rule 256 (UExpr -> TIMES UExpr .)
    MINUS           reduce using rule 256 (UExpr -> TIMES UExpr .)
    XOR             reduce using rule 256 (UExpr -> TIMES UExpr .)
    OR              reduce using rule 256 (UExpr -> TIMES UExpr .)
    EQEQ            reduce using rule 256 (UExpr -> TIMES UExpr .)
    NOTEQ           reduce using rule 256 (UExpr -> TIMES UExpr .)
    LEQ             reduce using rule 256 (UExpr -> TIMES UExpr .)
    GEQ             reduce using rule 256 (UExpr -> TIMES UExpr .)
    GREAT           reduce using rule 256 (UExpr -> TIMES UExpr .)
    LESS            reduce using rule 256 (UExpr -> TIMES UExpr .)
    AMPAMP          reduce using rule 256 (UExpr -> TIMES UExpr .)
    OROR            reduce using rule 256 (UExpr -> TIMES UExpr .)
    DDD             reduce using rule 256 (UExpr -> TIMES UExpr .)
    COMMA           reduce using rule 256 (UExpr -> TIMES UExpr .)
    RPAREN          reduce using rule 256 (UExpr -> TIMES UExpr .)
    PLUSEQ          reduce using rule 256 (UExpr -> TIMES UExpr .)
    MINUSEQ         reduce using rule 256 (UExpr -> TIMES UExpr .)
    TIMESEQ         reduce using rule 256 (UExpr -> TIMES UExpr .)
    DIVIDEEQ        reduce using rule 256 (UExpr -> TIMES UExpr .)
    MODEQ           reduce using rule 256 (UExpr -> TIMES UExpr .)
    OREQ            reduce using rule 256 (UExpr -> TIMES UExpr .)
    AMPEQ           reduce using rule 256 (UExpr -> TIMES UExpr .)
    CAREQ           reduce using rule 256 (UExpr -> TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 256 (UExpr -> TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 256 (UExpr -> TIMES UExpr .)
    AMPCAREQ        reduce using rule 256 (UExpr -> TIMES UExpr .)
    PLUSPLUS        reduce using rule 256 (UExpr -> TIMES UExpr .)
    MINUSMIN        reduce using rule 256 (UExpr -> TIMES UExpr .)
    SEMICOL         reduce using rule 256 (UExpr -> TIMES UExpr .)
    EQUAL           reduce using rule 256 (UExpr -> TIMES UExpr .)
    COLONEQ         reduce using rule 256 (UExpr -> TIMES UExpr .)
    LBRACE          reduce using rule 256 (UExpr -> TIMES UExpr .)
    PIPE            reduce using rule 256 (UExpr -> TIMES UExpr .)
    RBRACK          reduce using rule 256 (UExpr -> TIMES UExpr .)
    RBRACE          reduce using rule 256 (UExpr -> TIMES UExpr .)
    CASE            reduce using rule 256 (UExpr -> TIMES UExpr .)
    DEFAULT         reduce using rule 256 (UExpr -> TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 256 (UExpr -> TIMES UExpr .)
    COLON           reduce using rule 256 (UExpr -> TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 256 (UExpr -> TIMES UExpr .)


state 169

    (84) NonExprType -> FuncType .
    (216) ConvType -> FuncType .
    (141) FuncLiteralDecl -> FuncType .

    RPAREN          reduce using rule 84 (NonExprType -> FuncType .)
    DDD             reduce using rule 84 (NonExprType -> FuncType .)
    COMMA           reduce using rule 84 (NonExprType -> FuncType .)
    COLON           reduce using rule 84 (NonExprType -> FuncType .)
    EQUAL           reduce using rule 84 (NonExprType -> FuncType .)
    COLONEQ         reduce using rule 84 (NonExprType -> FuncType .)
    LEFT_ANGLE      reduce using rule 216 (ConvType -> FuncType .)
    LBRACE          reduce using rule 141 (FuncLiteralDecl -> FuncType .)


state 170

    (201) PExpr -> LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 296


state 171

    (86) NonExprType -> TIMES . NonExprType
    (256) UExpr -> TIMES . UExpr
    (84) NonExprType -> . FuncType
    (85) NonExprType -> . OtherType
    (86) NonExprType -> . TIMES NonExprType
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (141) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 171
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 175
    MAP             shift and go to state 25
    LPAREN          shift and go to state 66
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 169
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    NonExprType                    shift and go to state 297
    OtherType                      shift and go to state 173
    InterfaceType                  shift and go to state 51
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    FuncLiteralDecl                shift and go to state 22
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 168
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 172

    (226) ExprOrType -> NonExprType .

    COLON           reduce using rule 226 (ExprOrType -> NonExprType .)
    EQUAL           reduce using rule 226 (ExprOrType -> NonExprType .)
    COLONEQ         reduce using rule 226 (ExprOrType -> NonExprType .)
    COMMA           reduce using rule 226 (ExprOrType -> NonExprType .)
    RPAREN          reduce using rule 226 (ExprOrType -> NonExprType .)
    DDD             reduce using rule 226 (ExprOrType -> NonExprType .)


state 173

    (85) NonExprType -> OtherType .
    (217) ConvType -> OtherType .
    (218) CompType -> OtherType .

    RPAREN          reduce using rule 85 (NonExprType -> OtherType .)
    DDD             reduce using rule 85 (NonExprType -> OtherType .)
    COMMA           reduce using rule 85 (NonExprType -> OtherType .)
    COLON           reduce using rule 85 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 85 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 85 (NonExprType -> OtherType .)
    LEFT_ANGLE      reduce using rule 217 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 218 (CompType -> OtherType .)


state 174

    (225) ExprOrType -> Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    COLON           reduce using rule 225 (ExprOrType -> Expr .)
    EQUAL           reduce using rule 225 (ExprOrType -> Expr .)
    COLONEQ         reduce using rule 225 (ExprOrType -> Expr .)
    COMMA           reduce using rule 225 (ExprOrType -> Expr .)
    RPAREN          reduce using rule 225 (ExprOrType -> Expr .)
    DDD             reduce using rule 225 (ExprOrType -> Expr .)
    OROR            shift and go to state 153


state 175

    (87) OtherType -> LBRACK . OExpr RBRACK NType
    (260) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (137) OExpr -> .
    (138) OExpr -> . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 137 (OExpr -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 298
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    OExpr                          shift and go to state 135
    PExpr                          shift and go to state 56

state 176

    (73) IfStmt -> IF IfHeader . LoopBody ElseIfList Else
    (62) LoopBody -> . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 255

    LoopBody                       shift and go to state 299

state 177

    (91) StructType -> STRUCT LBRACE . StructDeclList OSemi RBRACE
    (92) StructType -> STRUCT LBRACE . RBRACE
    (106) StructDeclList -> . StructDecl
    (107) StructDeclList -> . StructDeclList SEMICOL StructDecl
    (110) StructDecl -> . NewNameList NType OLiteral
    (111) StructDecl -> . Embed OLiteral
    (112) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (113) StructDecl -> . TIMES Embed OLiteral
    (114) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (115) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (165) NewNameList -> . NewName
    (166) NewNameList -> . NewNameList COMMA NewName
    (152) Embed -> . IDENTIFIER
    (121) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 308
    LPAREN          shift and go to state 303
    TIMES           shift and go to state 302
    IDENTIFIER      shift and go to state 306

    NewName                        shift and go to state 300
    StructDecl                     shift and go to state 301
    NewNameList                    shift and go to state 304
    StructDeclList                 shift and go to state 305
    Embed                          shift and go to state 307

state 178

    (9) ImportStmt -> ImportHere STRING .

    SEMICOL         reduce using rule 9 (ImportStmt -> ImportHere STRING .)
    RPAREN          reduce using rule 9 (ImportStmt -> ImportHere STRING .)


state 179

    (8) Import -> IMPORT LPAREN RPAREN .

    SEMICOL         reduce using rule 8 (Import -> IMPORT LPAREN RPAREN .)


state 180

    (7) Import -> IMPORT LPAREN ImportStmtList . OSemi RPAREN
    (11) ImportStmtList -> ImportStmtList . SEMICOL ImportStmt
    (131) OSemi -> .
    (132) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 309
    RPAREN          reduce using rule 131 (OSemi -> .)

    OSemi                          shift and go to state 310

state 181

    (10) ImportStmtList -> ImportStmt .

    SEMICOL         reduce using rule 10 (ImportStmtList -> ImportStmt .)
    RPAREN          reduce using rule 10 (ImportStmtList -> ImportStmt .)


state 182

    (246) Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .
    (238) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (239) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LEQ             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GEQ             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GREAT           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LESS            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OROR            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DDD             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COMMA           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RPAREN          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLON           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MODEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OREQ            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    CAREQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACE          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    EQUAL           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LBRACE          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    CASE            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DEFAULT         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PIPE            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACK          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    XOR             shift and go to state 112
    OR              shift and go to state 113


state 183

    (245) Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .
    (238) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (239) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LEQ             reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GEQ             reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GREAT           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LESS            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OROR            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DDD             reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COMMA           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RPAREN          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLON           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MODEQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OREQ            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    CAREQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACE          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    EQUAL           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LBRACE          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    CASE            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DEFAULT         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PIPE            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACK          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    XOR             shift and go to state 112
    OR              shift and go to state 113


state 184

    (243) Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .
    (238) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (239) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LEQ             reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GEQ             reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GREAT           reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LESS            reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OROR            reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DDD             reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COMMA           reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RPAREN          reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLON           reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MODEQ           reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OREQ            reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    CAREQ           reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACE          reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    EQUAL           reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LBRACE          reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    CASE            reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DEFAULT         reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PIPE            reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACK          reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 243 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    XOR             shift and go to state 112
    OR              shift and go to state 113


state 185

    (248) Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .
    (238) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (239) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    NOTEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LEQ             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GEQ             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GREAT           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LESS            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPAMP          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OROR            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DDD             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COMMA           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RPAREN          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLON           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSEQ          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    TIMESEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MODEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OREQ            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    CAREQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPCAREQ        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSPLUS        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSMIN        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACE          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SEMICOL         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    EQUAL           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLONEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LBRACE          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    CASE            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DEFAULT         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PIPE            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACK          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    XOR             shift and go to state 112
    OR              shift and go to state 113


state 186

    (247) Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .
    (238) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (239) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    NOTEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LEQ             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GEQ             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GREAT           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LESS            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPAMP          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OROR            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DDD             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COMMA           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RPAREN          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLON           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSEQ          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    TIMESEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MODEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OREQ            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    CAREQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPCAREQ        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSPLUS        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSMIN        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACE          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SEMICOL         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    EQUAL           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLONEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LBRACE          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    CASE            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DEFAULT         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PIPE            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACK          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    XOR             shift and go to state 112
    OR              shift and go to state 113


state 187

    (244) Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .
    (238) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (239) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LEQ             reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GEQ             reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GREAT           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LESS            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OROR            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DDD             reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COMMA           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RPAREN          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLON           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MODEQ           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OREQ            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    CAREQ           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACE          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    EQUAL           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LBRACE          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    CASE            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DEFAULT         reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PIPE            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACK          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    XOR             shift and go to state 112
    OR              shift and go to state 113


state 188

    (211) PExprNoParen -> ConvType LEFT_ANGLE Expr . OComma RIGHT_ANGLE
    (252) Expr -> Expr . OROR Prec2Expr_
    (129) OComma -> .
    (130) OComma -> . COMMA

    OROR            shift and go to state 153
    RIGHT_ANGLE     reduce using rule 129 (OComma -> .)
    COMMA           shift and go to state 312

    OComma                         shift and go to state 311

state 189

    (191) NonDeclStmt -> LabelName COLON Stmt .

    RBRACE          reduce using rule 191 (NonDeclStmt -> LabelName COLON Stmt .)
    SEMICOL         reduce using rule 191 (NonDeclStmt -> LabelName COLON Stmt .)
    CASE            reduce using rule 191 (NonDeclStmt -> LabelName COLON Stmt .)
    DEFAULT         reduce using rule 191 (NonDeclStmt -> LabelName COLON Stmt .)


state 190

    (185) Stmt -> CommonDecl .

    RBRACE          reduce using rule 185 (Stmt -> CommonDecl .)
    SEMICOL         reduce using rule 185 (Stmt -> CommonDecl .)
    CASE            reduce using rule 185 (Stmt -> CommonDecl .)
    DEFAULT         reduce using rule 185 (Stmt -> CommonDecl .)


state 191

    (58) CompoundStmt -> LBRACE . StmtList RBRACE
    (163) StmtList -> . Stmt
    (164) StmtList -> . StmtList SEMICOL Stmt
    (183) Stmt -> .
    (184) Stmt -> . CompoundStmt
    (185) Stmt -> . CommonDecl
    (186) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE StmtList RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (187) NonDeclStmt -> . SimpleStmt
    (188) NonDeclStmt -> . ForStmt
    (189) NonDeclStmt -> . SwitchStmt
    (190) NonDeclStmt -> . IfStmt
    (191) NonDeclStmt -> . LabelName COLON Stmt
    (192) NonDeclStmt -> . FALLTHROUGH
    (193) NonDeclStmt -> . BREAK ONewName
    (194) NonDeclStmt -> . CONTINUE ONewName
    (195) NonDeclStmt -> . DEFER PseudoCall
    (196) NonDeclStmt -> . GOTO NewName
    (197) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (228) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (120) LabelName -> . NewName
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (121) NewName -> . IDENTIFIER
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          reduce using rule 183 (Stmt -> .)
    SEMICOL         reduce using rule 183 (Stmt -> .)
    LBRACE          shift and go to state 191
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    TYPE            shift and go to state 42
    FALLTHROUGH     shift and go to state 17
    BREAK           shift and go to state 55
    CONTINUE        shift and go to state 45
    DEFER           shift and go to state 16
    GOTO            shift and go to state 60
    RETURN          shift and go to state 48
    FOR             shift and go to state 36
    SWITCH          shift and go to state 49
    IF              shift and go to state 67
    IDENTIFIER      shift and go to state 52
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 58
    Prec3Expr_                     shift and go to state 12
    ForStmt                        shift and go to state 59
    StmtList                       shift and go to state 313
    CommonDecl                     shift and go to state 190
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    IfStmt                         shift and go to state 32
    FuncType                       shift and go to state 57
    FuncLiteralDecl                shift and go to state 22
    Stmt                           shift and go to state 202
    NewName                        shift and go to state 33
    InterfaceType                  shift and go to state 51
    LabelName                      shift and go to state 19
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    NonDeclStmt                    shift and go to state 193
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    PExpr                          shift and go to state 56
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    CompoundStmt                   shift and go to state 192

state 192

    (184) Stmt -> CompoundStmt .

    RBRACE          reduce using rule 184 (Stmt -> CompoundStmt .)
    SEMICOL         reduce using rule 184 (Stmt -> CompoundStmt .)
    CASE            reduce using rule 184 (Stmt -> CompoundStmt .)
    DEFAULT         reduce using rule 184 (Stmt -> CompoundStmt .)


state 193

    (186) Stmt -> NonDeclStmt .

    RBRACE          reduce using rule 186 (Stmt -> NonDeclStmt .)
    SEMICOL         reduce using rule 186 (Stmt -> NonDeclStmt .)
    CASE            reduce using rule 186 (Stmt -> NonDeclStmt .)
    DEFAULT         reduce using rule 186 (Stmt -> NonDeclStmt .)


state 194

    (233) Prec5Expr_ -> Prec5Expr_ SHR UExpr .

    DIVIDE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MOD             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPERS          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAR          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMES           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUS            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUS           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    XOR             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OR              reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQEQ            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    NOTEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LEQ             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GEQ             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GREAT           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LESS            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPAMP          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OROR            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SEMICOL         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LBRACE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    CASE            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DEFAULT         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COMMA           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSEQ          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMESEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DIVIDEEQ        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MODEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OREQ            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    CAREQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL_ASSIGN      reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR_ASSIGN      reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAREQ        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSPLUS        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSMIN        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQUAL           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLONEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACK          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RPAREN          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLON           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_RIGHT     reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PIPE            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_ANGLE     reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DDD             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)


state 195

    (230) Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .

    DIVIDE          reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MOD             reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL             reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR             reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPERS          reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAR          reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMES           reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUS            reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUS           reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    XOR             reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OR              reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQEQ            reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    NOTEQ           reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LEQ             reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GEQ             reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GREAT           reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LESS            reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPAMP          reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OROR            reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SEMICOL         reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LBRACE          reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACE          reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    CASE            reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DEFAULT         reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COMMA           reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSEQ          reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSEQ         reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMESEQ         reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DIVIDEEQ        reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MODEQ           reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OREQ            reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPEQ           reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    CAREQ           reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL_ASSIGN      reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR_ASSIGN      reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAREQ        reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSPLUS        reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSMIN        reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQUAL           reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLONEQ         reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACK          reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RPAREN          reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLON           reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_RIGHT     reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PIPE            reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_ANGLE     reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DDD             reduce using rule 230 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)


state 196

    (235) Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .

    DIVIDE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MOD             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPERS          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAR          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMES           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUS            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUS           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    XOR             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OR              reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQEQ            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    NOTEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LEQ             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GEQ             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GREAT           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LESS            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPAMP          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OROR            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SEMICOL         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LBRACE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    CASE            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DEFAULT         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COMMA           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSEQ          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMESEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DIVIDEEQ        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MODEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OREQ            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    CAREQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL_ASSIGN      reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR_ASSIGN      reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAREQ        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSPLUS        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSMIN        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQUAL           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLONEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACK          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RPAREN          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLON           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_RIGHT     reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PIPE            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_ANGLE     reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DDD             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)


state 197

    (234) Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .

    DIVIDE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MOD             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPERS          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAR          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMES           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUS            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUS           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    XOR             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OR              reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQEQ            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    NOTEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LEQ             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GEQ             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GREAT           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LESS            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPAMP          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OROR            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SEMICOL         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LBRACE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    CASE            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DEFAULT         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COMMA           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSEQ          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMESEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MODEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OREQ            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    CAREQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAREQ        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSPLUS        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSMIN        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQUAL           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLONEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACK          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RPAREN          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLON           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PIPE            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DDD             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)


state 198

    (236) Prec5Expr_ -> Prec5Expr_ TIMES UExpr .

    DIVIDE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MOD             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPERS          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAR          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMES           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUS            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUS           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    XOR             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OR              reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQEQ            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    NOTEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LEQ             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GEQ             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GREAT           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LESS            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPAMP          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OROR            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SEMICOL         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LBRACE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    CASE            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DEFAULT         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COMMA           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSEQ          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMESEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DIVIDEEQ        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MODEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OREQ            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    CAREQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAREQ        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSPLUS        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSMIN        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQUAL           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLONEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACK          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RPAREN          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLON           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PIPE            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DDD             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)


state 199

    (232) Prec5Expr_ -> Prec5Expr_ SHL UExpr .

    DIVIDE          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MOD             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPERS          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAR          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMES           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUS            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUS           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    XOR             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OR              reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQEQ            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    NOTEQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LEQ             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GEQ             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GREAT           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LESS            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPAMP          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OROR            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SEMICOL         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LBRACE          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACE          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    CASE            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DEFAULT         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COMMA           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSEQ          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSEQ         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMESEQ         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DIVIDEEQ        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MODEQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OREQ            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPEQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    CAREQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL_ASSIGN      reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR_ASSIGN      reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAREQ        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSPLUS        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSMIN        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQUAL           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLONEQ         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACK          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RPAREN          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLON           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_RIGHT     reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PIPE            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_ANGLE     reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DDD             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)


state 200

    (231) Prec5Expr_ -> Prec5Expr_ MOD UExpr .

    DIVIDE          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MOD             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPERS          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAR          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMES           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUS            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUS           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    XOR             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OR              reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQEQ            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    NOTEQ           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LEQ             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GEQ             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GREAT           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LESS            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPAMP          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OROR            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SEMICOL         reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LBRACE          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACE          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    CASE            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DEFAULT         reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COMMA           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSEQ          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSEQ         reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMESEQ         reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DIVIDEEQ        reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MODEQ           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OREQ            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPEQ           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    CAREQ           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL_ASSIGN      reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR_ASSIGN      reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAREQ        reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSPLUS        reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSMIN        reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQUAL           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLONEQ         reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACK          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RPAREN          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLON           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_RIGHT     reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PIPE            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_ANGLE     reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DDD             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)


state 201

    (250) Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .
    (243) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (244) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (246) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (247) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (248) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OROR            reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    LBRACE          reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACK          reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLON           reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQUAL           reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLONEQ         reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COMMA           reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSEQ          reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSEQ         reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    TIMESEQ         reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MODEQ           reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OREQ            reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPEQ           reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    CAREQ           reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPCAREQ        reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSPLUS        reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSMIN        reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SEMICOL         reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RPAREN          reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACE          reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    CASE            reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DEFAULT         reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PIPE            reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DDD             reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 250 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQEQ            shift and go to state 78
    NOTEQ           shift and go to state 81
    LEQ             shift and go to state 77
    GEQ             shift and go to state 76
    GREAT           shift and go to state 80
    LESS            shift and go to state 79


state 202

    (163) StmtList -> Stmt .

    RBRACE          reduce using rule 163 (StmtList -> Stmt .)
    SEMICOL         reduce using rule 163 (StmtList -> Stmt .)
    CASE            reduce using rule 163 (StmtList -> Stmt .)
    DEFAULT         reduce using rule 163 (StmtList -> Stmt .)


state 203

    (142) FuncLiteral -> FuncLiteralDecl LBRACE StmtList . RBRACE
    (164) StmtList -> StmtList . SEMICOL Stmt

    RBRACE          shift and go to state 314
    SEMICOL         shift and go to state 315


state 204

    (24) CommonDecl -> VAR LPAREN RPAREN .

    SEMICOL         reduce using rule 24 (CommonDecl -> VAR LPAREN RPAREN .)
    RBRACE          reduce using rule 24 (CommonDecl -> VAR LPAREN RPAREN .)
    CASE            reduce using rule 24 (CommonDecl -> VAR LPAREN RPAREN .)
    DEFAULT         reduce using rule 24 (CommonDecl -> VAR LPAREN RPAREN .)


state 205

    (155) VarDeclList -> VarDecl .

    SEMICOL         reduce using rule 155 (VarDeclList -> VarDecl .)
    RPAREN          reduce using rule 155 (VarDeclList -> VarDecl .)


state 206

    (23) CommonDecl -> VAR LPAREN VarDeclList . OSemi RPAREN
    (156) VarDeclList -> VarDeclList . SEMICOL VarDecl
    (131) OSemi -> .
    (132) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 316
    RPAREN          reduce using rule 131 (OSemi -> .)

    OSemi                          shift and go to state 317

state 207

    (79) NType -> FuncType .

    COMMA           reduce using rule 79 (NType -> FuncType .)
    RPAREN          reduce using rule 79 (NType -> FuncType .)
    LEFT_ANGLE      reduce using rule 79 (NType -> FuncType .)
    LBRACE          reduce using rule 79 (NType -> FuncType .)
    EQUAL           reduce using rule 79 (NType -> FuncType .)
    SEMICOL         reduce using rule 79 (NType -> FuncType .)
    RBRACE          reduce using rule 79 (NType -> FuncType .)
    CASE            reduce using rule 79 (NType -> FuncType .)
    DEFAULT         reduce using rule 79 (NType -> FuncType .)
    RBRACK          reduce using rule 79 (NType -> FuncType .)
    OR_RIGHT        reduce using rule 79 (NType -> FuncType .)
    DDD             reduce using rule 79 (NType -> FuncType .)
    COLON           reduce using rule 79 (NType -> FuncType .)
    COLONEQ         reduce using rule 79 (NType -> FuncType .)
    LEFT_LEFT       reduce using rule 79 (NType -> FuncType .)
    INTEGER         reduce using rule 79 (NType -> FuncType .)
    FLOAT           reduce using rule 79 (NType -> FuncType .)
    STRING          reduce using rule 79 (NType -> FuncType .)


state 208

    (30) VarDecl -> DeclNameList EQUAL . ExprList
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 318
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 209

    (81) NType -> PtrType .

    COMMA           reduce using rule 81 (NType -> PtrType .)
    RPAREN          reduce using rule 81 (NType -> PtrType .)
    LEFT_ANGLE      reduce using rule 81 (NType -> PtrType .)
    LBRACE          reduce using rule 81 (NType -> PtrType .)
    EQUAL           reduce using rule 81 (NType -> PtrType .)
    SEMICOL         reduce using rule 81 (NType -> PtrType .)
    RBRACE          reduce using rule 81 (NType -> PtrType .)
    CASE            reduce using rule 81 (NType -> PtrType .)
    DEFAULT         reduce using rule 81 (NType -> PtrType .)
    RBRACK          reduce using rule 81 (NType -> PtrType .)
    OR_RIGHT        reduce using rule 81 (NType -> PtrType .)
    DDD             reduce using rule 81 (NType -> PtrType .)
    COLON           reduce using rule 81 (NType -> PtrType .)
    COLONEQ         reduce using rule 81 (NType -> PtrType .)
    LEFT_LEFT       reduce using rule 81 (NType -> PtrType .)
    INTEGER         reduce using rule 81 (NType -> PtrType .)
    FLOAT           reduce using rule 81 (NType -> PtrType .)
    STRING          reduce using rule 81 (NType -> PtrType .)


state 210

    (82) NType -> DotName .

    COMMA           reduce using rule 82 (NType -> DotName .)
    RPAREN          reduce using rule 82 (NType -> DotName .)
    LEFT_ANGLE      reduce using rule 82 (NType -> DotName .)
    LBRACE          reduce using rule 82 (NType -> DotName .)
    EQUAL           reduce using rule 82 (NType -> DotName .)
    SEMICOL         reduce using rule 82 (NType -> DotName .)
    RBRACE          reduce using rule 82 (NType -> DotName .)
    CASE            reduce using rule 82 (NType -> DotName .)
    DEFAULT         reduce using rule 82 (NType -> DotName .)
    RBRACK          reduce using rule 82 (NType -> DotName .)
    OR_RIGHT        reduce using rule 82 (NType -> DotName .)
    DDD             reduce using rule 82 (NType -> DotName .)
    COLON           reduce using rule 82 (NType -> DotName .)
    COLONEQ         reduce using rule 82 (NType -> DotName .)
    LEFT_LEFT       reduce using rule 82 (NType -> DotName .)
    INTEGER         reduce using rule 82 (NType -> DotName .)
    FLOAT           reduce using rule 82 (NType -> DotName .)
    STRING          reduce using rule 82 (NType -> DotName .)


state 211

    (122) PtrType -> TIMES . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    Name                           shift and go to state 214
    FuncType                       shift and go to state 207
    NType                          shift and go to state 319
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210

state 212

    (80) NType -> OtherType .

    COMMA           reduce using rule 80 (NType -> OtherType .)
    RPAREN          reduce using rule 80 (NType -> OtherType .)
    LEFT_ANGLE      reduce using rule 80 (NType -> OtherType .)
    LBRACE          reduce using rule 80 (NType -> OtherType .)
    EQUAL           reduce using rule 80 (NType -> OtherType .)
    SEMICOL         reduce using rule 80 (NType -> OtherType .)
    RBRACE          reduce using rule 80 (NType -> OtherType .)
    CASE            reduce using rule 80 (NType -> OtherType .)
    DEFAULT         reduce using rule 80 (NType -> OtherType .)
    RBRACK          reduce using rule 80 (NType -> OtherType .)
    OR_RIGHT        reduce using rule 80 (NType -> OtherType .)
    DDD             reduce using rule 80 (NType -> OtherType .)
    COLON           reduce using rule 80 (NType -> OtherType .)
    COLONEQ         reduce using rule 80 (NType -> OtherType .)
    LEFT_LEFT       reduce using rule 80 (NType -> OtherType .)
    INTEGER         reduce using rule 80 (NType -> OtherType .)
    FLOAT           reduce using rule 80 (NType -> OtherType .)
    STRING          reduce using rule 80 (NType -> OtherType .)


state 213

    (162) DeclNameList -> DeclNameList COMMA . DeclName
    (173) DeclName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 99

    DeclName                       shift and go to state 320

state 214

    (127) DotName -> Name .
    (128) DotName -> Name . DOT IDENTIFIER

    LBRACE          reduce using rule 127 (DotName -> Name .)
    SEMICOL         reduce using rule 127 (DotName -> Name .)
    RPAREN          reduce using rule 127 (DotName -> Name .)
    COMMA           reduce using rule 127 (DotName -> Name .)
    OR_RIGHT        reduce using rule 127 (DotName -> Name .)
    LEFT_ANGLE      reduce using rule 127 (DotName -> Name .)
    EQUAL           reduce using rule 127 (DotName -> Name .)
    RBRACE          reduce using rule 127 (DotName -> Name .)
    CASE            reduce using rule 127 (DotName -> Name .)
    DEFAULT         reduce using rule 127 (DotName -> Name .)
    RBRACK          reduce using rule 127 (DotName -> Name .)
    DDD             reduce using rule 127 (DotName -> Name .)
    COLON           reduce using rule 127 (DotName -> Name .)
    COLONEQ         reduce using rule 127 (DotName -> Name .)
    LEFT_LEFT       reduce using rule 127 (DotName -> Name .)
    INTEGER         reduce using rule 127 (DotName -> Name .)
    FLOAT           reduce using rule 127 (DotName -> Name .)
    STRING          reduce using rule 127 (DotName -> Name .)
    DOT             shift and go to state 321


state 215

    (28) VarDecl -> DeclNameList NType .
    (29) VarDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 28 (VarDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 28 (VarDecl -> DeclNameList NType .)
    RBRACE          reduce using rule 28 (VarDecl -> DeclNameList NType .)
    CASE            reduce using rule 28 (VarDecl -> DeclNameList NType .)
    DEFAULT         reduce using rule 28 (VarDecl -> DeclNameList NType .)
    EQUAL           shift and go to state 322


state 216

    (83) NType -> LPAREN . NType RPAREN
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    Name                           shift and go to state 214
    FuncType                       shift and go to state 207
    NType                          shift and go to state 323
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210

state 217

    (87) OtherType -> LBRACK . OExpr RBRACK NType
    (137) OExpr -> .
    (138) OExpr -> . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 137 (OExpr -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 324
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    OExpr                          shift and go to state 135
    PExpr                          shift and go to state 56

state 218

    (144) ExprList -> ExprList COMMA Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    EQUAL           reduce using rule 144 (ExprList -> ExprList COMMA Expr .)
    COLONEQ         reduce using rule 144 (ExprList -> ExprList COMMA Expr .)
    COMMA           reduce using rule 144 (ExprList -> ExprList COMMA Expr .)
    SEMICOL         reduce using rule 144 (ExprList -> ExprList COMMA Expr .)
    LBRACE          reduce using rule 144 (ExprList -> ExprList COMMA Expr .)
    RBRACE          reduce using rule 144 (ExprList -> ExprList COMMA Expr .)
    CASE            reduce using rule 144 (ExprList -> ExprList COMMA Expr .)
    DEFAULT         reduce using rule 144 (ExprList -> ExprList COMMA Expr .)
    RPAREN          reduce using rule 144 (ExprList -> ExprList COMMA Expr .)
    OROR            shift and go to state 153


state 219

    (51) SimpleStmt -> ExprList COLONEQ ExprList .
    (144) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 51 (SimpleStmt -> ExprList COLONEQ ExprList .)
    RBRACE          reduce using rule 51 (SimpleStmt -> ExprList COLONEQ ExprList .)
    LBRACE          reduce using rule 51 (SimpleStmt -> ExprList COLONEQ ExprList .)
    CASE            reduce using rule 51 (SimpleStmt -> ExprList COLONEQ ExprList .)
    DEFAULT         reduce using rule 51 (SimpleStmt -> ExprList COLONEQ ExprList .)
    COMMA           shift and go to state 104


state 220

    (50) SimpleStmt -> ExprList EQUAL ExprList .
    (144) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 50 (SimpleStmt -> ExprList EQUAL ExprList .)
    RBRACE          reduce using rule 50 (SimpleStmt -> ExprList EQUAL ExprList .)
    LBRACE          reduce using rule 50 (SimpleStmt -> ExprList EQUAL ExprList .)
    CASE            reduce using rule 50 (SimpleStmt -> ExprList EQUAL ExprList .)
    DEFAULT         reduce using rule 50 (SimpleStmt -> ExprList EQUAL ExprList .)
    COMMA           shift and go to state 104


state 221

    (88) OtherType -> MAP LBRACK NType . RBRACK NType

    RBRACK          shift and go to state 325


state 222

    (21) CommonDecl -> CONSTANT LPAREN RPAREN .

    SEMICOL         reduce using rule 21 (CommonDecl -> CONSTANT LPAREN RPAREN .)
    RBRACE          reduce using rule 21 (CommonDecl -> CONSTANT LPAREN RPAREN .)
    CASE            reduce using rule 21 (CommonDecl -> CONSTANT LPAREN RPAREN .)
    DEFAULT         reduce using rule 21 (CommonDecl -> CONSTANT LPAREN RPAREN .)


state 223

    (19) CommonDecl -> CONSTANT LPAREN ConstDecl . OSemi RPAREN
    (20) CommonDecl -> CONSTANT LPAREN ConstDecl . SEMICOL ConstDeclList OSemi RPAREN
    (131) OSemi -> .
    (132) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 327
    RPAREN          reduce using rule 131 (OSemi -> .)

    OSemi                          shift and go to state 326

state 224

    (32) ConstDecl -> DeclNameList EQUAL . ExprList
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 328
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 225

    (31) ConstDecl -> DeclNameList NType . EQUAL ExprList

    EQUAL           shift and go to state 329


state 226

    (240) Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .
    (230) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (231) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (232) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUS           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    XOR             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OR              reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQEQ            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    NOTEQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LEQ             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GEQ             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GREAT           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LESS            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPAMP          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSEQ          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSEQ         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    TIMESEQ         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MODEQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OREQ            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPEQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    CAREQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSMIN        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OROR            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACE          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SEMICOL         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQUAL           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLONEQ         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COMMA           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    CASE            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DEFAULT         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LBRACE          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PIPE            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACK          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RPAREN          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLON           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DDD             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDE          shift and go to state 91
    MOD             shift and go to state 96
    SHL             shift and go to state 95
    SHR             shift and go to state 90
    AMPERS          shift and go to state 93
    AMPCAR          shift and go to state 92
    TIMES           shift and go to state 94


state 227

    (241) Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .
    (230) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (231) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (232) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUS           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    XOR             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OR              reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQEQ            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    NOTEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LEQ             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GEQ             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GREAT           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LESS            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPAMP          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSEQ          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    TIMESEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MODEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OREQ            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    CAREQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSMIN        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OROR            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACE          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SEMICOL         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQUAL           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLONEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COMMA           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    CASE            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DEFAULT         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LBRACE          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PIPE            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACK          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RPAREN          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLON           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DDD             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDE          shift and go to state 91
    MOD             shift and go to state 96
    SHL             shift and go to state 95
    SHR             shift and go to state 90
    AMPERS          shift and go to state 93
    AMPCAR          shift and go to state 92
    TIMES           shift and go to state 94


state 228

    (238) Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .
    (230) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (231) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (232) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUS           reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    XOR             reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OR              reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQEQ            reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    NOTEQ           reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LEQ             reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GEQ             reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GREAT           reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LESS            reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPAMP          reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MODEQ           reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OREQ            reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPEQ           reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    CAREQ           reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OROR            reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACE          reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SEMICOL         reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQUAL           reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLONEQ         reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COMMA           reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    CASE            reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DEFAULT         reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LBRACE          reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PIPE            reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACK          reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RPAREN          reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLON           reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DDD             reduce using rule 238 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDE          shift and go to state 91
    MOD             shift and go to state 96
    SHL             shift and go to state 95
    SHR             shift and go to state 90
    AMPERS          shift and go to state 93
    AMPCAR          shift and go to state 92
    TIMES           shift and go to state 94


state 229

    (239) Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .
    (230) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (231) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (232) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUS           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    XOR             reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OR              reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQEQ            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    NOTEQ           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LEQ             reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GEQ             reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GREAT           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LESS            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPAMP          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MODEQ           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OREQ            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPEQ           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    CAREQ           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OROR            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACE          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SEMICOL         reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQUAL           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLONEQ         reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COMMA           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    CASE            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DEFAULT         reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LBRACE          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PIPE            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACK          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RPAREN          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLON           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DDD             reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDE          shift and go to state 91
    MOD             shift and go to state 96
    SHL             shift and go to state 95
    SHR             shift and go to state 90
    AMPERS          shift and go to state 93
    AMPCAR          shift and go to state 92
    TIMES           shift and go to state 94


state 230

    (100) ArgList -> ArgList LPAREN . OArgTypeListOComma RPAREN
    (181) OArgTypeListOComma -> .
    (182) OArgTypeListOComma -> . ArgTypeList OComma
    (179) ArgTypeList -> . ArgType
    (180) ArgTypeList -> . ArgTypeList COMMA ArgType
    (175) ArgType -> . NameOrType
    (176) ArgType -> . IDENTIFIER NameOrType
    (177) ArgType -> . IDENTIFIER DotDotDot
    (178) ArgType -> . DotDotDot
    (227) NameOrType -> . NType
    (198) DotDotDot -> . DDD
    (199) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    RPAREN          reduce using rule 181 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 245
    DDD             shift and go to state 247
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    StructType                     shift and go to state 54
    DotName                        shift and go to state 210
    ArgType                        shift and go to state 241
    Name                           shift and go to state 214
    DotDotDot                      shift and go to state 243
    NType                          shift and go to state 246
    NameOrType                     shift and go to state 244
    ArgTypeList                    shift and go to state 240
    OtherType                      shift and go to state 212
    OArgTypeListOComma             shift and go to state 330
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    FuncType                       shift and go to state 207

state 231

    (123) FuncRetType -> FuncType .

    LBRACE          reduce using rule 123 (FuncRetType -> FuncType .)
    SEMICOL         reduce using rule 123 (FuncRetType -> FuncType .)
    RBRACE          reduce using rule 123 (FuncRetType -> FuncType .)
    LEFT_ANGLE      reduce using rule 123 (FuncRetType -> FuncType .)
    RPAREN          reduce using rule 123 (FuncRetType -> FuncType .)
    EQUAL           reduce using rule 123 (FuncRetType -> FuncType .)
    CASE            reduce using rule 123 (FuncRetType -> FuncType .)
    DEFAULT         reduce using rule 123 (FuncRetType -> FuncType .)
    RBRACK          reduce using rule 123 (FuncRetType -> FuncType .)
    COMMA           reduce using rule 123 (FuncRetType -> FuncType .)
    OR_RIGHT        reduce using rule 123 (FuncRetType -> FuncType .)
    DDD             reduce using rule 123 (FuncRetType -> FuncType .)
    COLON           reduce using rule 123 (FuncRetType -> FuncType .)
    COLONEQ         reduce using rule 123 (FuncRetType -> FuncType .)
    LEFT_LEFT       reduce using rule 123 (FuncRetType -> FuncType .)
    INTEGER         reduce using rule 123 (FuncRetType -> FuncType .)
    FLOAT           reduce using rule 123 (FuncRetType -> FuncType .)
    STRING          reduce using rule 123 (FuncRetType -> FuncType .)


state 232

    (125) FuncRetType -> PtrType .

    LBRACE          reduce using rule 125 (FuncRetType -> PtrType .)
    SEMICOL         reduce using rule 125 (FuncRetType -> PtrType .)
    RBRACE          reduce using rule 125 (FuncRetType -> PtrType .)
    LEFT_ANGLE      reduce using rule 125 (FuncRetType -> PtrType .)
    RPAREN          reduce using rule 125 (FuncRetType -> PtrType .)
    EQUAL           reduce using rule 125 (FuncRetType -> PtrType .)
    CASE            reduce using rule 125 (FuncRetType -> PtrType .)
    DEFAULT         reduce using rule 125 (FuncRetType -> PtrType .)
    RBRACK          reduce using rule 125 (FuncRetType -> PtrType .)
    COMMA           reduce using rule 125 (FuncRetType -> PtrType .)
    OR_RIGHT        reduce using rule 125 (FuncRetType -> PtrType .)
    DDD             reduce using rule 125 (FuncRetType -> PtrType .)
    COLON           reduce using rule 125 (FuncRetType -> PtrType .)
    COLONEQ         reduce using rule 125 (FuncRetType -> PtrType .)
    LEFT_LEFT       reduce using rule 125 (FuncRetType -> PtrType .)
    INTEGER         reduce using rule 125 (FuncRetType -> PtrType .)
    FLOAT           reduce using rule 125 (FuncRetType -> PtrType .)
    STRING          reduce using rule 125 (FuncRetType -> PtrType .)


state 233

    (124) FuncRetType -> OtherType .

    LBRACE          reduce using rule 124 (FuncRetType -> OtherType .)
    SEMICOL         reduce using rule 124 (FuncRetType -> OtherType .)
    RBRACE          reduce using rule 124 (FuncRetType -> OtherType .)
    LEFT_ANGLE      reduce using rule 124 (FuncRetType -> OtherType .)
    RPAREN          reduce using rule 124 (FuncRetType -> OtherType .)
    EQUAL           reduce using rule 124 (FuncRetType -> OtherType .)
    CASE            reduce using rule 124 (FuncRetType -> OtherType .)
    DEFAULT         reduce using rule 124 (FuncRetType -> OtherType .)
    RBRACK          reduce using rule 124 (FuncRetType -> OtherType .)
    COMMA           reduce using rule 124 (FuncRetType -> OtherType .)
    OR_RIGHT        reduce using rule 124 (FuncRetType -> OtherType .)
    DDD             reduce using rule 124 (FuncRetType -> OtherType .)
    COLON           reduce using rule 124 (FuncRetType -> OtherType .)
    COLONEQ         reduce using rule 124 (FuncRetType -> OtherType .)
    LEFT_LEFT       reduce using rule 124 (FuncRetType -> OtherType .)
    INTEGER         reduce using rule 124 (FuncRetType -> OtherType .)
    FLOAT           reduce using rule 124 (FuncRetType -> OtherType .)
    STRING          reduce using rule 124 (FuncRetType -> OtherType .)


state 234

    (98) FuncType -> FUNCTION ArgList FuncRes .

    SEMICOL         reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACE          reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    CASE            reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    DEFAULT         reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    RPAREN          reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    DDD             reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    COMMA           reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    COLON           reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    EQUAL           reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    COLONEQ         reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    LEFT_ANGLE      reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    LBRACE          reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACK          reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    OR_RIGHT        reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    LEFT_LEFT       reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    INTEGER         reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    FLOAT           reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)
    STRING          reduce using rule 98 (FuncType -> FUNCTION ArgList FuncRes .)


state 235

    (105) FuncRes -> LEFT_OR . OArgTypeListOComma OR_RIGHT
    (181) OArgTypeListOComma -> .
    (182) OArgTypeListOComma -> . ArgTypeList OComma
    (179) ArgTypeList -> . ArgType
    (180) ArgTypeList -> . ArgTypeList COMMA ArgType
    (175) ArgType -> . NameOrType
    (176) ArgType -> . IDENTIFIER NameOrType
    (177) ArgType -> . IDENTIFIER DotDotDot
    (178) ArgType -> . DotDotDot
    (227) NameOrType -> . NType
    (198) DotDotDot -> . DDD
    (199) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 181 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 245
    DDD             shift and go to state 247
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    StructType                     shift and go to state 54
    DotName                        shift and go to state 210
    OArgTypeListOComma             shift and go to state 331
    Name                           shift and go to state 214
    DotDotDot                      shift and go to state 243
    NType                          shift and go to state 246
    NameOrType                     shift and go to state 244
    ArgTypeList                    shift and go to state 240
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    ArgType                        shift and go to state 241
    FuncType                       shift and go to state 207

state 236

    (126) FuncRetType -> DotName .

    LBRACE          reduce using rule 126 (FuncRetType -> DotName .)
    SEMICOL         reduce using rule 126 (FuncRetType -> DotName .)
    RBRACE          reduce using rule 126 (FuncRetType -> DotName .)
    LEFT_ANGLE      reduce using rule 126 (FuncRetType -> DotName .)
    RPAREN          reduce using rule 126 (FuncRetType -> DotName .)
    EQUAL           reduce using rule 126 (FuncRetType -> DotName .)
    CASE            reduce using rule 126 (FuncRetType -> DotName .)
    DEFAULT         reduce using rule 126 (FuncRetType -> DotName .)
    RBRACK          reduce using rule 126 (FuncRetType -> DotName .)
    COMMA           reduce using rule 126 (FuncRetType -> DotName .)
    OR_RIGHT        reduce using rule 126 (FuncRetType -> DotName .)
    DDD             reduce using rule 126 (FuncRetType -> DotName .)
    COLON           reduce using rule 126 (FuncRetType -> DotName .)
    COLONEQ         reduce using rule 126 (FuncRetType -> DotName .)
    LEFT_LEFT       reduce using rule 126 (FuncRetType -> DotName .)
    INTEGER         reduce using rule 126 (FuncRetType -> DotName .)
    FLOAT           reduce using rule 126 (FuncRetType -> DotName .)
    STRING          reduce using rule 126 (FuncRetType -> DotName .)


state 237

    (104) FuncRes -> FuncRetType .

    SEMICOL         reduce using rule 104 (FuncRes -> FuncRetType .)
    RBRACE          reduce using rule 104 (FuncRes -> FuncRetType .)
    LEFT_ANGLE      reduce using rule 104 (FuncRes -> FuncRetType .)
    LBRACE          reduce using rule 104 (FuncRes -> FuncRetType .)
    RPAREN          reduce using rule 104 (FuncRes -> FuncRetType .)
    EQUAL           reduce using rule 104 (FuncRes -> FuncRetType .)
    CASE            reduce using rule 104 (FuncRes -> FuncRetType .)
    DEFAULT         reduce using rule 104 (FuncRes -> FuncRetType .)
    RBRACK          reduce using rule 104 (FuncRes -> FuncRetType .)
    COMMA           reduce using rule 104 (FuncRes -> FuncRetType .)
    OR_RIGHT        reduce using rule 104 (FuncRes -> FuncRetType .)
    DDD             reduce using rule 104 (FuncRes -> FuncRetType .)
    COLON           reduce using rule 104 (FuncRes -> FuncRetType .)
    COLONEQ         reduce using rule 104 (FuncRes -> FuncRetType .)
    LEFT_LEFT       reduce using rule 104 (FuncRes -> FuncRetType .)
    INTEGER         reduce using rule 104 (FuncRes -> FuncRetType .)
    FLOAT           reduce using rule 104 (FuncRes -> FuncRetType .)
    STRING          reduce using rule 104 (FuncRes -> FuncRetType .)


state 238

    (102) FuncBody -> LBRACE . StmtList RBRACE
    (163) StmtList -> . Stmt
    (164) StmtList -> . StmtList SEMICOL Stmt
    (183) Stmt -> .
    (184) Stmt -> . CompoundStmt
    (185) Stmt -> . CommonDecl
    (186) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE StmtList RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (187) NonDeclStmt -> . SimpleStmt
    (188) NonDeclStmt -> . ForStmt
    (189) NonDeclStmt -> . SwitchStmt
    (190) NonDeclStmt -> . IfStmt
    (191) NonDeclStmt -> . LabelName COLON Stmt
    (192) NonDeclStmt -> . FALLTHROUGH
    (193) NonDeclStmt -> . BREAK ONewName
    (194) NonDeclStmt -> . CONTINUE ONewName
    (195) NonDeclStmt -> . DEFER PseudoCall
    (196) NonDeclStmt -> . GOTO NewName
    (197) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (228) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (120) LabelName -> . NewName
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (121) NewName -> . IDENTIFIER
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          reduce using rule 183 (Stmt -> .)
    SEMICOL         reduce using rule 183 (Stmt -> .)
    LBRACE          shift and go to state 191
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    TYPE            shift and go to state 42
    FALLTHROUGH     shift and go to state 17
    BREAK           shift and go to state 55
    CONTINUE        shift and go to state 45
    DEFER           shift and go to state 16
    GOTO            shift and go to state 60
    RETURN          shift and go to state 48
    FOR             shift and go to state 36
    SWITCH          shift and go to state 49
    IF              shift and go to state 67
    IDENTIFIER      shift and go to state 52
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 58
    Prec3Expr_                     shift and go to state 12
    ForStmt                        shift and go to state 59
    StmtList                       shift and go to state 332
    CommonDecl                     shift and go to state 190
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    IfStmt                         shift and go to state 32
    FuncType                       shift and go to state 57
    FuncLiteralDecl                shift and go to state 22
    Stmt                           shift and go to state 202
    NewName                        shift and go to state 33
    InterfaceType                  shift and go to state 51
    LabelName                      shift and go to state 19
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    NonDeclStmt                    shift and go to state 193
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    PExpr                          shift and go to state 56
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    CompoundStmt                   shift and go to state 192

state 239

    (95) FuncDecl -> FUNCTION FuncDecl_ FuncBody .

    SEMICOL         reduce using rule 95 (FuncDecl -> FUNCTION FuncDecl_ FuncBody .)


state 240

    (182) OArgTypeListOComma -> ArgTypeList . OComma
    (180) ArgTypeList -> ArgTypeList . COMMA ArgType
    (129) OComma -> .
    (130) OComma -> . COMMA

    COMMA           shift and go to state 333
    RPAREN          reduce using rule 129 (OComma -> .)
    OR_RIGHT        reduce using rule 129 (OComma -> .)

    OComma                         shift and go to state 334

state 241

    (179) ArgTypeList -> ArgType .

    COMMA           reduce using rule 179 (ArgTypeList -> ArgType .)
    RPAREN          reduce using rule 179 (ArgTypeList -> ArgType .)
    OR_RIGHT        reduce using rule 179 (ArgTypeList -> ArgType .)


state 242

    (99) ArgList -> LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 335


state 243

    (178) ArgType -> DotDotDot .

    COMMA           reduce using rule 178 (ArgType -> DotDotDot .)
    OR_RIGHT        reduce using rule 178 (ArgType -> DotDotDot .)
    RPAREN          reduce using rule 178 (ArgType -> DotDotDot .)


state 244

    (175) ArgType -> NameOrType .

    COMMA           reduce using rule 175 (ArgType -> NameOrType .)
    OR_RIGHT        reduce using rule 175 (ArgType -> NameOrType .)
    RPAREN          reduce using rule 175 (ArgType -> NameOrType .)


state 245

    (176) ArgType -> IDENTIFIER . NameOrType
    (177) ArgType -> IDENTIFIER . DotDotDot
    (174) Name -> IDENTIFIER .
    (227) NameOrType -> . NType
    (198) DotDotDot -> . DDD
    (199) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    DOT             reduce using rule 174 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 174 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 174 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 174 (Name -> IDENTIFIER .)
    DDD             shift and go to state 247
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    Name                           shift and go to state 214
    DotDotDot                      shift and go to state 336
    NType                          shift and go to state 246
    NameOrType                     shift and go to state 337
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210
    FuncType                       shift and go to state 207

state 246

    (227) NameOrType -> NType .

    COMMA           reduce using rule 227 (NameOrType -> NType .)
    RPAREN          reduce using rule 227 (NameOrType -> NType .)
    OR_RIGHT        reduce using rule 227 (NameOrType -> NType .)


state 247

    (198) DotDotDot -> DDD .
    (199) DotDotDot -> DDD . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    COMMA           reduce using rule 198 (DotDotDot -> DDD .)
    OR_RIGHT        reduce using rule 198 (DotDotDot -> DDD .)
    RPAREN          reduce using rule 198 (DotDotDot -> DDD .)
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    Name                           shift and go to state 214
    FuncType                       shift and go to state 207
    NType                          shift and go to state 338
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210

state 248

    (97) FuncDecl_ -> LEFT_OR OArgTypeListOComma . OR_RIGHT IDENTIFIER ArgList FuncRes

    OR_RIGHT        shift and go to state 339


state 249

    (96) FuncDecl_ -> IDENTIFIER ArgList . FuncRes
    (100) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (103) FuncRes -> .
    (104) FuncRes -> . FuncRetType
    (105) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (123) FuncRetType -> . FuncType
    (124) FuncRetType -> . OtherType
    (125) FuncRetType -> . PtrType
    (126) FuncRetType -> . DotName
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    LPAREN          shift and go to state 230
    LBRACE          reduce using rule 103 (FuncRes -> .)
    SEMICOL         reduce using rule 103 (FuncRes -> .)
    LEFT_OR         shift and go to state 235
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    DotName                        shift and go to state 236
    Name                           shift and go to state 214
    FuncType                       shift and go to state 231
    OtherType                      shift and go to state 233
    InterfaceType                  shift and go to state 51
    FuncRes                        shift and go to state 340
    PtrType                        shift and go to state 232
    FuncRetType                    shift and go to state 237

state 250

    (66) ForHeader -> OSimpleStmt SEMICOL . OSimpleStmt SEMICOL OSimpleStmt
    (133) OSimpleStmt -> .
    (134) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 133 (OSimpleStmt -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 126
    OSimpleStmt                    shift and go to state 341
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 251

    (63) RangeStmt -> ExprList EQUAL . RANGE Expr
    (50) SimpleStmt -> ExprList EQUAL . ExprList
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RANGE           shift and go to state 342
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 220
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 252

    (64) RangeStmt -> ExprList COLONEQ . RANGE Expr
    (51) SimpleStmt -> ExprList COLONEQ . ExprList
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RANGE           shift and go to state 343
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 219
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 253

    (65) RangeStmt -> RANGE Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 65 (RangeStmt -> RANGE Expr .)
    RBRACK          reduce using rule 65 (RangeStmt -> RANGE Expr .)
    OROR            shift and go to state 153


state 254

    (69) ForBody -> ForHeader LoopBody .

    SEMICOL         reduce using rule 69 (ForBody -> ForHeader LoopBody .)
    RBRACE          reduce using rule 69 (ForBody -> ForHeader LoopBody .)
    CASE            reduce using rule 69 (ForBody -> ForHeader LoopBody .)
    DEFAULT         reduce using rule 69 (ForBody -> ForHeader LoopBody .)


state 255

    (62) LoopBody -> LBRACE . StmtList RBRACE
    (163) StmtList -> . Stmt
    (164) StmtList -> . StmtList SEMICOL Stmt
    (183) Stmt -> .
    (184) Stmt -> . CompoundStmt
    (185) Stmt -> . CommonDecl
    (186) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE StmtList RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (187) NonDeclStmt -> . SimpleStmt
    (188) NonDeclStmt -> . ForStmt
    (189) NonDeclStmt -> . SwitchStmt
    (190) NonDeclStmt -> . IfStmt
    (191) NonDeclStmt -> . LabelName COLON Stmt
    (192) NonDeclStmt -> . FALLTHROUGH
    (193) NonDeclStmt -> . BREAK ONewName
    (194) NonDeclStmt -> . CONTINUE ONewName
    (195) NonDeclStmt -> . DEFER PseudoCall
    (196) NonDeclStmt -> . GOTO NewName
    (197) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (228) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (120) LabelName -> . NewName
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (121) NewName -> . IDENTIFIER
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          reduce using rule 183 (Stmt -> .)
    SEMICOL         reduce using rule 183 (Stmt -> .)
    LBRACE          shift and go to state 191
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    TYPE            shift and go to state 42
    FALLTHROUGH     shift and go to state 17
    BREAK           shift and go to state 55
    CONTINUE        shift and go to state 45
    DEFER           shift and go to state 16
    GOTO            shift and go to state 60
    RETURN          shift and go to state 48
    FOR             shift and go to state 36
    SWITCH          shift and go to state 49
    IF              shift and go to state 67
    IDENTIFIER      shift and go to state 52
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 58
    Prec3Expr_                     shift and go to state 12
    ForStmt                        shift and go to state 59
    StmtList                       shift and go to state 344
    CommonDecl                     shift and go to state 190
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    IfStmt                         shift and go to state 32
    FuncType                       shift and go to state 57
    FuncLiteralDecl                shift and go to state 22
    Stmt                           shift and go to state 202
    NewName                        shift and go to state 33
    InterfaceType                  shift and go to state 51
    LabelName                      shift and go to state 19
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    NonDeclStmt                    shift and go to state 193
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    PExpr                          shift and go to state 56
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    CompoundStmt                   shift and go to state 192

state 256

    (94) InterfaceType -> INTERFACE LBRACE RBRACE .

    LEFT_ANGLE      reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LBRACE          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    SEMICOL         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COMMA           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RPAREN          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLON           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    EQUAL           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLONEQ         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACE          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    CASE            reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    DEFAULT         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    INTEGER         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    FLOAT           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    STRING          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    DDD             reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACK          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE RBRACE .)


state 257

    (108) InterfaceDeclList -> InterfaceDecl .

    SEMICOL         reduce using rule 108 (InterfaceDeclList -> InterfaceDecl .)
    RBRACE          reduce using rule 108 (InterfaceDeclList -> InterfaceDecl .)


state 258

    (93) InterfaceType -> INTERFACE LBRACE InterfaceDeclList . OSemi RBRACE
    (109) InterfaceDeclList -> InterfaceDeclList . SEMICOL InterfaceDecl
    (131) OSemi -> .
    (132) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 345
    RBRACE          reduce using rule 131 (OSemi -> .)

    OSemi                          shift and go to state 346

state 259

    (116) InterfaceDecl -> NewName . InDecl
    (119) InDecl -> . LPAREN OArgTypeListOComma RPAREN FuncRes

    LPAREN          shift and go to state 347

    InDecl                         shift and go to state 348

state 260

    (118) InterfaceDecl -> LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 349


state 261

    (117) InterfaceDecl -> IDENTIFIER .
    (121) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 117 (InterfaceDecl -> IDENTIFIER .)
    RBRACE          reduce using rule 117 (InterfaceDecl -> IDENTIFIER .)
    LPAREN          reduce using rule 121 (NewName -> IDENTIFIER .)


state 262

    (159) TypeDeclList -> TypeDecl .

    SEMICOL         reduce using rule 159 (TypeDeclList -> TypeDecl .)
    RPAREN          reduce using rule 159 (TypeDeclList -> TypeDecl .)


state 263

    (26) CommonDecl -> TYPE LPAREN TypeDeclList . OSemi RPAREN
    (160) TypeDeclList -> TypeDeclList . SEMICOL TypeDecl
    (131) OSemi -> .
    (132) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 350
    RPAREN          reduce using rule 131 (OSemi -> .)

    OSemi                          shift and go to state 351

state 264

    (27) CommonDecl -> TYPE LPAREN RPAREN .

    SEMICOL         reduce using rule 27 (CommonDecl -> TYPE LPAREN RPAREN .)
    RBRACE          reduce using rule 27 (CommonDecl -> TYPE LPAREN RPAREN .)
    CASE            reduce using rule 27 (CommonDecl -> TYPE LPAREN RPAREN .)
    DEFAULT         reduce using rule 27 (CommonDecl -> TYPE LPAREN RPAREN .)


state 265

    (37) TypeDecl -> TypeDeclName NType .

    SEMICOL         reduce using rule 37 (TypeDecl -> TypeDeclName NType .)
    RBRACE          reduce using rule 37 (TypeDecl -> TypeDeclName NType .)
    CASE            reduce using rule 37 (TypeDecl -> TypeDeclName NType .)
    DEFAULT         reduce using rule 37 (TypeDecl -> TypeDeclName NType .)
    RPAREN          reduce using rule 37 (TypeDecl -> TypeDeclName NType .)


state 266

    (260) ForCompExpr -> LBRACK Expr PIPE . RangeStmt RBRACK
    (63) RangeStmt -> . ExprList EQUAL RANGE Expr
    (64) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (65) RangeStmt -> . RANGE Expr
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RANGE           shift and go to state 125
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 37
    RangeStmt                      shift and go to state 352
    ExprList                       shift and go to state 353
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 267

    (87) OtherType -> LBRACK OExpr RBRACK . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    Name                           shift and go to state 214
    FuncType                       shift and go to state 207
    NType                          shift and go to state 354
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210

state 268

    (72) IfHeader -> OSimpleStmt SEMICOL . OSimpleStmt
    (133) OSimpleStmt -> .
    (134) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    LBRACE          reduce using rule 133 (OSimpleStmt -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 126
    OSimpleStmt                    shift and go to state 355
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 269

    (228) SwitchStmt -> SWITCH IfHeader LBRACE . CaseBlockList RBRACE
    (60) CaseBlockList -> .
    (61) CaseBlockList -> . CaseBlockList CaseBlock

    RBRACE          reduce using rule 60 (CaseBlockList -> .)
    CASE            reduce using rule 60 (CaseBlockList -> .)
    DEFAULT         reduce using rule 60 (CaseBlockList -> .)

    CaseBlockList                  shift and go to state 356

state 270

    (220) Keyval -> Expr . COLON CompLitExpr
    (221) BareCompLitExpr -> Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 357
    COMMA           reduce using rule 221 (BareCompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 221 (BareCompLitExpr -> Expr .)
    OROR            shift and go to state 153


state 271

    (222) BareCompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (171) BracedKeyvalList -> .
    (172) BracedKeyvalList -> . KeyvalList OComma
    (167) KeyvalList -> . Keyval
    (168) KeyvalList -> . BareCompLitExpr
    (169) KeyvalList -> . KeyvalList COMMA Keyval
    (170) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (220) Keyval -> . Expr COLON CompLitExpr
    (221) BareCompLitExpr -> . Expr
    (222) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 171 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 271
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    FuncLiteral                    shift and go to state 11
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    PExprNoParen                   shift and go to state 47
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 270
    PseudoCall                     shift and go to state 37
    KeyvalList                     shift and go to state 272
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    Keyval                         shift and go to state 273
    BareCompLitExpr                shift and go to state 275
    PExpr                          shift and go to state 56
    BracedKeyvalList               shift and go to state 358

state 272

    (172) BracedKeyvalList -> KeyvalList . OComma
    (169) KeyvalList -> KeyvalList . COMMA Keyval
    (170) KeyvalList -> KeyvalList . COMMA BareCompLitExpr
    (129) OComma -> .
    (130) OComma -> . COMMA

    COMMA           shift and go to state 359
    RIGHT_RIGHT     reduce using rule 129 (OComma -> .)

    OComma                         shift and go to state 360

state 273

    (167) KeyvalList -> Keyval .

    COMMA           reduce using rule 167 (KeyvalList -> Keyval .)
    RIGHT_RIGHT     reduce using rule 167 (KeyvalList -> Keyval .)


state 274

    (212) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 361


state 275

    (168) KeyvalList -> BareCompLitExpr .

    COMMA           reduce using rule 168 (KeyvalList -> BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 168 (KeyvalList -> BareCompLitExpr .)


state 276

    (207) PExprNoParen -> PExpr LBRACK Expr . RBRACK
    (252) Expr -> Expr . OROR Prec2Expr_
    (138) OExpr -> Expr .

    RBRACK          shift and go to state 362
    OROR            shift and go to state 153
    COLON           reduce using rule 138 (OExpr -> Expr .)


state 277

    (208) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr RBRACK
    (209) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr COLON OExpr RBRACK

    COLON           shift and go to state 363


state 278

    (262) PseudoCall -> PExpr LPAREN ExprOrTypeList . OComma RPAREN
    (263) PseudoCall -> PExpr LPAREN ExprOrTypeList . DDD OComma RPAREN
    (146) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType
    (129) OComma -> .
    (130) OComma -> . COMMA

    DDD             shift and go to state 366
    COMMA           shift and go to state 365
    RPAREN          reduce using rule 129 (OComma -> .)

    OComma                         shift and go to state 364

state 279

    (145) ExprOrTypeList -> ExprOrType .

    DDD             reduce using rule 145 (ExprOrTypeList -> ExprOrType .)
    COMMA           reduce using rule 145 (ExprOrTypeList -> ExprOrType .)
    RPAREN          reduce using rule 145 (ExprOrTypeList -> ExprOrType .)
    COLON           reduce using rule 145 (ExprOrTypeList -> ExprOrType .)
    EQUAL           reduce using rule 145 (ExprOrTypeList -> ExprOrType .)
    COLONEQ         reduce using rule 145 (ExprOrTypeList -> ExprOrType .)


state 280

    (261) PseudoCall -> PExpr LPAREN RPAREN .

    DOT             reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACK          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEFT_LEFT       reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    LPAREN          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDE          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    MOD             reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL             reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR             reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPERS          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAR          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMES           reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUS            reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUS           reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    XOR             reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    OR              reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQEQ            reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    NOTEQ           reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEQ             reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    GEQ             reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    GREAT           reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    LESS            reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPAMP          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    OROR            reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    SEMICOL         reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACE          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACE          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    CASE            reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    DEFAULT         reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSEQ          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSEQ         reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMESEQ         reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDEEQ        reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    MODEQ           reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    OREQ            reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPEQ           reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    CAREQ           reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAREQ        reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSMIN        reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQUAL           reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLONEQ         reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    COMMA           reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    PIPE            reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACK          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    RPAREN          reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_ANGLE     reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLON           reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_RIGHT     reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)
    DDD             reduce using rule 261 (PseudoCall -> PExpr LPAREN RPAREN .)


state 281

    (213) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 367


state 282

    (205) PExprNoParen -> PExpr DOT LPAREN . ExprOrType RPAREN
    (206) PExprNoParen -> PExpr DOT LPAREN . TYPE RPAREN
    (225) ExprOrType -> . Expr
    (226) ExprOrType -> . NonExprType
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (84) NonExprType -> . FuncType
    (85) NonExprType -> . OtherType
    (86) NonExprType -> . TIMES NonExprType
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (141) FuncLiteralDecl -> . FuncType

    TYPE            shift and go to state 369
    TIMES           shift and go to state 171
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 175
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 169
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    ExprOrType                     shift and go to state 368
    NonExprType                    shift and go to state 172
    OtherType                      shift and go to state 173
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 174
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 283

    (204) PExprNoParen -> PExpr DOT IDENTIFIER .

    DOT             reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACK          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LPAREN          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDE          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MOD             reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL             reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR             reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPERS          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAR          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMES           reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUS            reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUS           reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    XOR             reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OR              reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQEQ            reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    NOTEQ           reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEQ             reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GEQ             reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GREAT           reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LESS            reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPAMP          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OROR            reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RPAREN          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DDD             reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COMMA           reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLON           reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQUAL           reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLONEQ         reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MODEQ           reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OREQ            reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPEQ           reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    CAREQ           reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAREQ        reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACE          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SEMICOL         reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACE          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    CASE            reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DEFAULT         reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PIPE            reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACK          reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 204 (PExprNoParen -> PExpr DOT IDENTIFIER .)


state 284

    (252) Expr -> Expr OROR Prec2Expr_ .
    (250) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    PLUSEQ          reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSEQ         reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    TIMESEQ         reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    MODEQ           reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    OREQ            reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    AMPEQ           reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    CAREQ           reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    AMPCAREQ        reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSPLUS        reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSMIN        reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    OROR            reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    SEMICOL         reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACE          reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    CASE            reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    DEFAULT         reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    EQUAL           reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    COLONEQ         reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    COMMA           reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    LBRACE          reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACK          reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    COLON           reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    RPAREN          reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    DDD             reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    PIPE            reduce using rule 252 (Expr -> Expr OROR Prec2Expr_ .)
    AMPAMP          shift and go to state 97


state 285

    (46) SimpleStmt -> Expr CAREQ Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 46 (SimpleStmt -> Expr CAREQ Expr .)
    RBRACE          reduce using rule 46 (SimpleStmt -> Expr CAREQ Expr .)
    LBRACE          reduce using rule 46 (SimpleStmt -> Expr CAREQ Expr .)
    CASE            reduce using rule 46 (SimpleStmt -> Expr CAREQ Expr .)
    DEFAULT         reduce using rule 46 (SimpleStmt -> Expr CAREQ Expr .)
    OROR            shift and go to state 153


state 286

    (41) SimpleStmt -> Expr TIMESEQ Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr TIMESEQ Expr .)
    RBRACE          reduce using rule 41 (SimpleStmt -> Expr TIMESEQ Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr TIMESEQ Expr .)
    CASE            reduce using rule 41 (SimpleStmt -> Expr TIMESEQ Expr .)
    DEFAULT         reduce using rule 41 (SimpleStmt -> Expr TIMESEQ Expr .)
    OROR            shift and go to state 153


state 287

    (39) SimpleStmt -> Expr PLUSEQ Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 39 (SimpleStmt -> Expr PLUSEQ Expr .)
    RBRACE          reduce using rule 39 (SimpleStmt -> Expr PLUSEQ Expr .)
    LBRACE          reduce using rule 39 (SimpleStmt -> Expr PLUSEQ Expr .)
    CASE            reduce using rule 39 (SimpleStmt -> Expr PLUSEQ Expr .)
    DEFAULT         reduce using rule 39 (SimpleStmt -> Expr PLUSEQ Expr .)
    OROR            shift and go to state 153


state 288

    (43) SimpleStmt -> Expr MODEQ Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 43 (SimpleStmt -> Expr MODEQ Expr .)
    RBRACE          reduce using rule 43 (SimpleStmt -> Expr MODEQ Expr .)
    LBRACE          reduce using rule 43 (SimpleStmt -> Expr MODEQ Expr .)
    CASE            reduce using rule 43 (SimpleStmt -> Expr MODEQ Expr .)
    DEFAULT         reduce using rule 43 (SimpleStmt -> Expr MODEQ Expr .)
    OROR            shift and go to state 153


state 289

    (48) SimpleStmt -> Expr SHR_ASSIGN Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 48 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    RBRACE          reduce using rule 48 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    LBRACE          reduce using rule 48 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    CASE            reduce using rule 48 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    DEFAULT         reduce using rule 48 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    OROR            shift and go to state 153


state 290

    (44) SimpleStmt -> Expr OREQ Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 44 (SimpleStmt -> Expr OREQ Expr .)
    RBRACE          reduce using rule 44 (SimpleStmt -> Expr OREQ Expr .)
    LBRACE          reduce using rule 44 (SimpleStmt -> Expr OREQ Expr .)
    CASE            reduce using rule 44 (SimpleStmt -> Expr OREQ Expr .)
    DEFAULT         reduce using rule 44 (SimpleStmt -> Expr OREQ Expr .)
    OROR            shift and go to state 153


state 291

    (40) SimpleStmt -> Expr MINUSEQ Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 40 (SimpleStmt -> Expr MINUSEQ Expr .)
    RBRACE          reduce using rule 40 (SimpleStmt -> Expr MINUSEQ Expr .)
    LBRACE          reduce using rule 40 (SimpleStmt -> Expr MINUSEQ Expr .)
    CASE            reduce using rule 40 (SimpleStmt -> Expr MINUSEQ Expr .)
    DEFAULT         reduce using rule 40 (SimpleStmt -> Expr MINUSEQ Expr .)
    OROR            shift and go to state 153


state 292

    (45) SimpleStmt -> Expr AMPEQ Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 45 (SimpleStmt -> Expr AMPEQ Expr .)
    RBRACE          reduce using rule 45 (SimpleStmt -> Expr AMPEQ Expr .)
    LBRACE          reduce using rule 45 (SimpleStmt -> Expr AMPEQ Expr .)
    CASE            reduce using rule 45 (SimpleStmt -> Expr AMPEQ Expr .)
    DEFAULT         reduce using rule 45 (SimpleStmt -> Expr AMPEQ Expr .)
    OROR            shift and go to state 153


state 293

    (49) SimpleStmt -> Expr AMPCAREQ Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 49 (SimpleStmt -> Expr AMPCAREQ Expr .)
    RBRACE          reduce using rule 49 (SimpleStmt -> Expr AMPCAREQ Expr .)
    LBRACE          reduce using rule 49 (SimpleStmt -> Expr AMPCAREQ Expr .)
    CASE            reduce using rule 49 (SimpleStmt -> Expr AMPCAREQ Expr .)
    DEFAULT         reduce using rule 49 (SimpleStmt -> Expr AMPCAREQ Expr .)
    OROR            shift and go to state 153


state 294

    (47) SimpleStmt -> Expr SHL_ASSIGN Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 47 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    RBRACE          reduce using rule 47 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    LBRACE          reduce using rule 47 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    CASE            reduce using rule 47 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    DEFAULT         reduce using rule 47 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    OROR            shift and go to state 153


state 295

    (42) SimpleStmt -> Expr DIVIDEEQ Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 42 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    RBRACE          reduce using rule 42 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    LBRACE          reduce using rule 42 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    CASE            reduce using rule 42 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    DEFAULT         reduce using rule 42 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    OROR            shift and go to state 153


state 296

    (201) PExpr -> LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    CASE            reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    DEFAULT         reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 201 (PExpr -> LPAREN ExprOrType RPAREN .)


state 297

    (86) NonExprType -> TIMES NonExprType .

    RPAREN          reduce using rule 86 (NonExprType -> TIMES NonExprType .)
    DDD             reduce using rule 86 (NonExprType -> TIMES NonExprType .)
    COMMA           reduce using rule 86 (NonExprType -> TIMES NonExprType .)
    COLON           reduce using rule 86 (NonExprType -> TIMES NonExprType .)
    EQUAL           reduce using rule 86 (NonExprType -> TIMES NonExprType .)
    COLONEQ         reduce using rule 86 (NonExprType -> TIMES NonExprType .)


state 298

    (260) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (138) OExpr -> Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    PIPE            shift and go to state 266
    RBRACK          reduce using rule 138 (OExpr -> Expr .)
    OROR            shift and go to state 153


state 299

    (73) IfStmt -> IF IfHeader LoopBody . ElseIfList Else
    (75) ElseIfList -> .
    (76) ElseIfList -> . ElseIfList ElseIf

    ELSE            reduce using rule 75 (ElseIfList -> .)
    SEMICOL         reduce using rule 75 (ElseIfList -> .)
    RBRACE          reduce using rule 75 (ElseIfList -> .)
    CASE            reduce using rule 75 (ElseIfList -> .)
    DEFAULT         reduce using rule 75 (ElseIfList -> .)

    ElseIfList                     shift and go to state 370

state 300

    (165) NewNameList -> NewName .

    COMMA           reduce using rule 165 (NewNameList -> NewName .)
    LPAREN          reduce using rule 165 (NewNameList -> NewName .)
    FUNCTION        reduce using rule 165 (NewNameList -> NewName .)
    LBRACK          reduce using rule 165 (NewNameList -> NewName .)
    MAP             reduce using rule 165 (NewNameList -> NewName .)
    TIMES           reduce using rule 165 (NewNameList -> NewName .)
    STRUCT          reduce using rule 165 (NewNameList -> NewName .)
    INTERFACE       reduce using rule 165 (NewNameList -> NewName .)
    IDENTIFIER      reduce using rule 165 (NewNameList -> NewName .)


state 301

    (106) StructDeclList -> StructDecl .

    SEMICOL         reduce using rule 106 (StructDeclList -> StructDecl .)
    RBRACE          reduce using rule 106 (StructDeclList -> StructDecl .)


state 302

    (113) StructDecl -> TIMES . Embed OLiteral
    (115) StructDecl -> TIMES . LPAREN Embed RPAREN OLiteral
    (152) Embed -> . IDENTIFIER

    LPAREN          shift and go to state 371
    IDENTIFIER      shift and go to state 373

    Embed                          shift and go to state 372

state 303

    (112) StructDecl -> LPAREN . Embed RPAREN OLiteral
    (114) StructDecl -> LPAREN . TIMES Embed RPAREN OLiteral
    (152) Embed -> . IDENTIFIER

    TIMES           shift and go to state 374
    IDENTIFIER      shift and go to state 373

    Embed                          shift and go to state 375

state 304

    (110) StructDecl -> NewNameList . NType OLiteral
    (166) NewNameList -> NewNameList . COMMA NewName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    COMMA           shift and go to state 376
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    Name                           shift and go to state 214
    FuncType                       shift and go to state 207
    NType                          shift and go to state 377
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210

state 305

    (91) StructType -> STRUCT LBRACE StructDeclList . OSemi RBRACE
    (107) StructDeclList -> StructDeclList . SEMICOL StructDecl
    (131) OSemi -> .
    (132) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 378
    RBRACE          reduce using rule 131 (OSemi -> .)

    OSemi                          shift and go to state 379

state 306

    (152) Embed -> IDENTIFIER .
    (121) NewName -> IDENTIFIER .

    INTEGER         reduce using rule 152 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 152 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 152 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 152 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 152 (Embed -> IDENTIFIER .)
    COMMA           reduce using rule 121 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 121 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 121 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 121 (NewName -> IDENTIFIER .)
    MAP             reduce using rule 121 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 121 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 121 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 121 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 121 (NewName -> IDENTIFIER .)


state 307

    (111) StructDecl -> Embed . OLiteral
    (147) OLiteral -> .
    (148) OLiteral -> . Literal
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING

    SEMICOL         reduce using rule 147 (OLiteral -> .)
    RBRACE          reduce using rule 147 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30

    OLiteral                       shift and go to state 381
    Literal                        shift and go to state 380

state 308

    (92) StructType -> STRUCT LBRACE RBRACE .

    COMMA           reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    RPAREN          reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    LBRACE          reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    EQUAL           reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    SEMICOL         reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACE          reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    CASE            reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    DEFAULT         reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACK          reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    DDD             reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    COLON           reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    COLONEQ         reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    INTEGER         reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    FLOAT           reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)
    STRING          reduce using rule 92 (StructType -> STRUCT LBRACE RBRACE .)


state 309

    (11) ImportStmtList -> ImportStmtList SEMICOL . ImportStmt
    (132) OSemi -> SEMICOL .
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> .
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT

    RPAREN          reduce using rule 132 (OSemi -> SEMICOL .)
    STRING          reduce using rule 12 (ImportHere -> .)
    IDENTIFIER      shift and go to state 71
    DOT             shift and go to state 74

    ImportStmt                     shift and go to state 382
    ImportHere                     shift and go to state 70

state 310

    (7) Import -> IMPORT LPAREN ImportStmtList OSemi . RPAREN

    RPAREN          shift and go to state 383


state 311

    (211) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma . RIGHT_ANGLE

    RIGHT_ANGLE     shift and go to state 384


state 312

    (130) OComma -> COMMA .

    RPAREN          reduce using rule 130 (OComma -> COMMA .)
    RIGHT_ANGLE     reduce using rule 130 (OComma -> COMMA .)


state 313

    (58) CompoundStmt -> LBRACE StmtList . RBRACE
    (164) StmtList -> StmtList . SEMICOL Stmt

    RBRACE          shift and go to state 385
    SEMICOL         shift and go to state 315


state 314

    (142) FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .

    DOT             reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LBRACK          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LEFT_LEFT       reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LPAREN          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    DIVIDE          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    MOD             reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    SHL             reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    SHR             reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    AMPERS          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    AMPCAR          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    TIMES           reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    PLUS            reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    MINUS           reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    XOR             reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    OR              reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    EQEQ            reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    NOTEQ           reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LEQ             reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    GEQ             reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    GREAT           reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LESS            reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    AMPAMP          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    OROR            reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    SEMICOL         reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LBRACE          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    RBRACE          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    CASE            reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    DEFAULT         reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    RBRACK          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    PLUSEQ          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    MINUSEQ         reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    TIMESEQ         reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    DIVIDEEQ        reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    MODEQ           reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    OREQ            reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    AMPEQ           reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    CAREQ           reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    SHL_ASSIGN      reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    SHR_ASSIGN      reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    AMPCAREQ        reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    PLUSPLUS        reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    MINUSMIN        reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    EQUAL           reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    COLONEQ         reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    COMMA           reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    PIPE            reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    RPAREN          reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    RIGHT_ANGLE     reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    COLON           reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    RIGHT_RIGHT     reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    DDD             reduce using rule 142 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)


state 315

    (164) StmtList -> StmtList SEMICOL . Stmt
    (183) Stmt -> .
    (184) Stmt -> . CompoundStmt
    (185) Stmt -> . CommonDecl
    (186) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE StmtList RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (187) NonDeclStmt -> . SimpleStmt
    (188) NonDeclStmt -> . ForStmt
    (189) NonDeclStmt -> . SwitchStmt
    (190) NonDeclStmt -> . IfStmt
    (191) NonDeclStmt -> . LabelName COLON Stmt
    (192) NonDeclStmt -> . FALLTHROUGH
    (193) NonDeclStmt -> . BREAK ONewName
    (194) NonDeclStmt -> . CONTINUE ONewName
    (195) NonDeclStmt -> . DEFER PseudoCall
    (196) NonDeclStmt -> . GOTO NewName
    (197) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (228) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (120) LabelName -> . NewName
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (121) NewName -> . IDENTIFIER
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          reduce using rule 183 (Stmt -> .)
    SEMICOL         reduce using rule 183 (Stmt -> .)
    CASE            reduce using rule 183 (Stmt -> .)
    DEFAULT         reduce using rule 183 (Stmt -> .)
    LBRACE          shift and go to state 191
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    TYPE            shift and go to state 42
    FALLTHROUGH     shift and go to state 17
    BREAK           shift and go to state 55
    CONTINUE        shift and go to state 45
    DEFER           shift and go to state 16
    GOTO            shift and go to state 60
    RETURN          shift and go to state 48
    FOR             shift and go to state 36
    SWITCH          shift and go to state 49
    IF              shift and go to state 67
    IDENTIFIER      shift and go to state 52
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 58
    Prec3Expr_                     shift and go to state 12
    ForStmt                        shift and go to state 59
    CommonDecl                     shift and go to state 190
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    IfStmt                         shift and go to state 32
    FuncType                       shift and go to state 57
    FuncLiteralDecl                shift and go to state 22
    Stmt                           shift and go to state 386
    NewName                        shift and go to state 33
    InterfaceType                  shift and go to state 51
    LabelName                      shift and go to state 19
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    NonDeclStmt                    shift and go to state 193
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    PExpr                          shift and go to state 56
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    CompoundStmt                   shift and go to state 192

state 316

    (156) VarDeclList -> VarDeclList SEMICOL . VarDecl
    (132) OSemi -> SEMICOL .
    (28) VarDecl -> . DeclNameList NType
    (29) VarDecl -> . DeclNameList NType EQUAL ExprList
    (30) VarDecl -> . DeclNameList EQUAL ExprList
    (161) DeclNameList -> . DeclName
    (162) DeclNameList -> . DeclNameList COMMA DeclName
    (173) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 132 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 99

    DeclName                       shift and go to state 100
    VarDecl                        shift and go to state 387
    DeclNameList                   shift and go to state 103

state 317

    (23) CommonDecl -> VAR LPAREN VarDeclList OSemi . RPAREN

    RPAREN          shift and go to state 388


state 318

    (30) VarDecl -> DeclNameList EQUAL ExprList .
    (144) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 30 (VarDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 30 (VarDecl -> DeclNameList EQUAL ExprList .)
    RBRACE          reduce using rule 30 (VarDecl -> DeclNameList EQUAL ExprList .)
    CASE            reduce using rule 30 (VarDecl -> DeclNameList EQUAL ExprList .)
    DEFAULT         reduce using rule 30 (VarDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 104


state 319

    (122) PtrType -> TIMES NType .

    COMMA           reduce using rule 122 (PtrType -> TIMES NType .)
    OR_RIGHT        reduce using rule 122 (PtrType -> TIMES NType .)
    RPAREN          reduce using rule 122 (PtrType -> TIMES NType .)
    LBRACE          reduce using rule 122 (PtrType -> TIMES NType .)
    SEMICOL         reduce using rule 122 (PtrType -> TIMES NType .)
    RBRACE          reduce using rule 122 (PtrType -> TIMES NType .)
    EQUAL           reduce using rule 122 (PtrType -> TIMES NType .)
    CASE            reduce using rule 122 (PtrType -> TIMES NType .)
    DEFAULT         reduce using rule 122 (PtrType -> TIMES NType .)
    INTEGER         reduce using rule 122 (PtrType -> TIMES NType .)
    FLOAT           reduce using rule 122 (PtrType -> TIMES NType .)
    STRING          reduce using rule 122 (PtrType -> TIMES NType .)
    LEFT_ANGLE      reduce using rule 122 (PtrType -> TIMES NType .)
    RBRACK          reduce using rule 122 (PtrType -> TIMES NType .)
    DDD             reduce using rule 122 (PtrType -> TIMES NType .)
    COLON           reduce using rule 122 (PtrType -> TIMES NType .)
    COLONEQ         reduce using rule 122 (PtrType -> TIMES NType .)
    LEFT_LEFT       reduce using rule 122 (PtrType -> TIMES NType .)


state 320

    (162) DeclNameList -> DeclNameList COMMA DeclName .

    EQUAL           reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    COMMA           reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    LPAREN          reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    FUNCTION        reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    LBRACK          reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    MAP             reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    TIMES           reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    STRUCT          reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    INTERFACE       reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    IDENTIFIER      reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    SEMICOL         reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)
    RPAREN          reduce using rule 162 (DeclNameList -> DeclNameList COMMA DeclName .)


state 321

    (128) DotName -> Name DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 389


state 322

    (29) VarDecl -> DeclNameList NType EQUAL . ExprList
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 390
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 323

    (83) NType -> LPAREN NType . RPAREN

    RPAREN          shift and go to state 391


state 324

    (138) OExpr -> Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 138 (OExpr -> Expr .)
    COLON           reduce using rule 138 (OExpr -> Expr .)
    OROR            shift and go to state 153


state 325

    (88) OtherType -> MAP LBRACK NType RBRACK . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    Name                           shift and go to state 214
    FuncType                       shift and go to state 207
    NType                          shift and go to state 392
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210

state 326

    (19) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi . RPAREN

    RPAREN          shift and go to state 393


state 327

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL . ConstDeclList OSemi RPAREN
    (132) OSemi -> SEMICOL .
    (157) ConstDeclList -> . ConstDecl1
    (158) ConstDeclList -> . ConstDeclList SEMICOL ConstDecl1
    (33) ConstDecl1 -> . ConstDecl
    (34) ConstDecl1 -> . DeclNameList NType
    (35) ConstDecl1 -> . DeclNameList
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (161) DeclNameList -> . DeclName
    (162) DeclNameList -> . DeclNameList COMMA DeclName
    (173) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 132 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 99

    ConstDecl1                     shift and go to state 396
    DeclName                       shift and go to state 100
    ConstDecl                      shift and go to state 397
    ConstDeclList                  shift and go to state 394
    DeclNameList                   shift and go to state 395

state 328

    (32) ConstDecl -> DeclNameList EQUAL ExprList .
    (144) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 32 (ConstDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 32 (ConstDecl -> DeclNameList EQUAL ExprList .)
    RBRACE          reduce using rule 32 (ConstDecl -> DeclNameList EQUAL ExprList .)
    CASE            reduce using rule 32 (ConstDecl -> DeclNameList EQUAL ExprList .)
    DEFAULT         reduce using rule 32 (ConstDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 104


state 329

    (31) ConstDecl -> DeclNameList NType EQUAL . ExprList
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 398
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 330

    (100) ArgList -> ArgList LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 399


state 331

    (105) FuncRes -> LEFT_OR OArgTypeListOComma . OR_RIGHT

    OR_RIGHT        shift and go to state 400


state 332

    (102) FuncBody -> LBRACE StmtList . RBRACE
    (164) StmtList -> StmtList . SEMICOL Stmt

    RBRACE          shift and go to state 401
    SEMICOL         shift and go to state 315


state 333

    (180) ArgTypeList -> ArgTypeList COMMA . ArgType
    (130) OComma -> COMMA .
    (175) ArgType -> . NameOrType
    (176) ArgType -> . IDENTIFIER NameOrType
    (177) ArgType -> . IDENTIFIER DotDotDot
    (178) ArgType -> . DotDotDot
    (227) NameOrType -> . NType
    (198) DotDotDot -> . DDD
    (199) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    RPAREN          reduce using rule 130 (OComma -> COMMA .)
    OR_RIGHT        reduce using rule 130 (OComma -> COMMA .)
    IDENTIFIER      shift and go to state 245
    DDD             shift and go to state 247
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    StructType                     shift and go to state 54
    DotName                        shift and go to state 210
    Name                           shift and go to state 214
    DotDotDot                      shift and go to state 243
    NType                          shift and go to state 246
    NameOrType                     shift and go to state 244
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    ArgType                        shift and go to state 402
    FuncType                       shift and go to state 207

state 334

    (182) OArgTypeListOComma -> ArgTypeList OComma .

    RPAREN          reduce using rule 182 (OArgTypeListOComma -> ArgTypeList OComma .)
    OR_RIGHT        reduce using rule 182 (OArgTypeListOComma -> ArgTypeList OComma .)


state 335

    (99) ArgList -> LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    MAP             reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    CASE            reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    DEFAULT         reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACK          reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 99 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)


state 336

    (177) ArgType -> IDENTIFIER DotDotDot .

    COMMA           reduce using rule 177 (ArgType -> IDENTIFIER DotDotDot .)
    OR_RIGHT        reduce using rule 177 (ArgType -> IDENTIFIER DotDotDot .)
    RPAREN          reduce using rule 177 (ArgType -> IDENTIFIER DotDotDot .)


state 337

    (176) ArgType -> IDENTIFIER NameOrType .

    COMMA           reduce using rule 176 (ArgType -> IDENTIFIER NameOrType .)
    OR_RIGHT        reduce using rule 176 (ArgType -> IDENTIFIER NameOrType .)
    RPAREN          reduce using rule 176 (ArgType -> IDENTIFIER NameOrType .)


state 338

    (199) DotDotDot -> DDD NType .

    COMMA           reduce using rule 199 (DotDotDot -> DDD NType .)
    OR_RIGHT        reduce using rule 199 (DotDotDot -> DDD NType .)
    RPAREN          reduce using rule 199 (DotDotDot -> DDD NType .)


state 339

    (97) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT . IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 403


state 340

    (96) FuncDecl_ -> IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 96 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 96 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)


state 341

    (66) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt . SEMICOL OSimpleStmt

    SEMICOL         shift and go to state 404


state 342

    (63) RangeStmt -> ExprList EQUAL RANGE . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 405
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 343

    (64) RangeStmt -> ExprList COLONEQ RANGE . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 406
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 344

    (62) LoopBody -> LBRACE StmtList . RBRACE
    (164) StmtList -> StmtList . SEMICOL Stmt

    RBRACE          shift and go to state 407
    SEMICOL         shift and go to state 315


state 345

    (109) InterfaceDeclList -> InterfaceDeclList SEMICOL . InterfaceDecl
    (132) OSemi -> SEMICOL .
    (116) InterfaceDecl -> . NewName InDecl
    (117) InterfaceDecl -> . IDENTIFIER
    (118) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (121) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 132 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 261
    LPAREN          shift and go to state 260

    InterfaceDecl                  shift and go to state 408
    NewName                        shift and go to state 259

state 346

    (93) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi . RBRACE

    RBRACE          shift and go to state 409


state 347

    (119) InDecl -> LPAREN . OArgTypeListOComma RPAREN FuncRes
    (181) OArgTypeListOComma -> .
    (182) OArgTypeListOComma -> . ArgTypeList OComma
    (179) ArgTypeList -> . ArgType
    (180) ArgTypeList -> . ArgTypeList COMMA ArgType
    (175) ArgType -> . NameOrType
    (176) ArgType -> . IDENTIFIER NameOrType
    (177) ArgType -> . IDENTIFIER DotDotDot
    (178) ArgType -> . DotDotDot
    (227) NameOrType -> . NType
    (198) DotDotDot -> . DDD
    (199) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    RPAREN          reduce using rule 181 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 245
    DDD             shift and go to state 247
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    StructType                     shift and go to state 54
    DotName                        shift and go to state 210
    OArgTypeListOComma             shift and go to state 410
    Name                           shift and go to state 214
    DotDotDot                      shift and go to state 243
    NType                          shift and go to state 246
    NameOrType                     shift and go to state 244
    ArgTypeList                    shift and go to state 240
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    ArgType                        shift and go to state 241
    FuncType                       shift and go to state 207

state 348

    (116) InterfaceDecl -> NewName InDecl .

    SEMICOL         reduce using rule 116 (InterfaceDecl -> NewName InDecl .)
    RBRACE          reduce using rule 116 (InterfaceDecl -> NewName InDecl .)


state 349

    (118) InterfaceDecl -> LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 411


state 350

    (160) TypeDeclList -> TypeDeclList SEMICOL . TypeDecl
    (132) OSemi -> SEMICOL .
    (37) TypeDecl -> . TypeDeclName NType
    (36) TypeDeclName -> . IDENTIFIER

    RPAREN          reduce using rule 132 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 133

    TypeDeclName                   shift and go to state 132
    TypeDecl                       shift and go to state 412

state 351

    (26) CommonDecl -> TYPE LPAREN TypeDeclList OSemi . RPAREN

    RPAREN          shift and go to state 413


state 352

    (260) ForCompExpr -> LBRACK Expr PIPE RangeStmt . RBRACK

    RBRACK          shift and go to state 414


state 353

    (63) RangeStmt -> ExprList . EQUAL RANGE Expr
    (64) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (144) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 415
    COLONEQ         shift and go to state 416
    COMMA           shift and go to state 104


state 354

    (87) OtherType -> LBRACK OExpr RBRACK NType .

    LEFT_ANGLE      reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_LEFT       reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    RPAREN          reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    DDD             reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    COMMA           reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLON           reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    EQUAL           reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLONEQ         reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    OR_RIGHT        reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    SEMICOL         reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACK          reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACE          reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    LBRACE          reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    CASE            reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    DEFAULT         reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    INTEGER         reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    FLOAT           reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)
    STRING          reduce using rule 87 (OtherType -> LBRACK OExpr RBRACK NType .)


state 355

    (72) IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 72 (IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .)


state 356

    (228) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList . RBRACE
    (61) CaseBlockList -> CaseBlockList . CaseBlock
    (59) CaseBlock -> . Case StmtList
    (54) Case -> . CASE ExprOrTypeList COLON
    (55) Case -> . CASE ExprOrTypeList EQUAL Expr COLON
    (56) Case -> . CASE ExprOrTypeList COLONEQ Expr COLON
    (57) Case -> . DEFAULT COLON

    RBRACE          shift and go to state 419
    CASE            shift and go to state 418
    DEFAULT         shift and go to state 420

    Case                           shift and go to state 417
    CaseBlock                      shift and go to state 421

state 357

    (220) Keyval -> Expr COLON . CompLitExpr
    (223) CompLitExpr -> . Expr
    (224) CompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    LEFT_LEFT       shift and go to state 424
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompLitExpr                    shift and go to state 422
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 423
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    Prec3Expr_                     shift and go to state 12
    PExpr                          shift and go to state 56

state 358

    (222) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 425


state 359

    (169) KeyvalList -> KeyvalList COMMA . Keyval
    (170) KeyvalList -> KeyvalList COMMA . BareCompLitExpr
    (130) OComma -> COMMA .
    (220) Keyval -> . Expr COLON CompLitExpr
    (221) BareCompLitExpr -> . Expr
    (222) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 130 (OComma -> COMMA .)
    LEFT_LEFT       shift and go to state 271
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    FuncLiteral                    shift and go to state 11
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    PExprNoParen                   shift and go to state 47
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 270
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    Keyval                         shift and go to state 426
    BareCompLitExpr                shift and go to state 427
    PExpr                          shift and go to state 56

state 360

    (172) BracedKeyvalList -> KeyvalList OComma .

    RIGHT_RIGHT     reduce using rule 172 (BracedKeyvalList -> KeyvalList OComma .)


state 361

    (212) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CASE            reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DEFAULT         reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 212 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 362

    (207) PExprNoParen -> PExpr LBRACK Expr RBRACK .

    DOT             reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACK          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEFT_LEFT       reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LPAREN          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDE          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MOD             reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL             reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR             reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPERS          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAR          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMES           reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUS            reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUS           reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    XOR             reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OR              reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQEQ            reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    NOTEQ           reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEQ             reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GEQ             reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GREAT           reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LESS            reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPAMP          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OROR            reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RPAREN          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DDD             reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COMMA           reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLON           reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQUAL           reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLONEQ         reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSEQ          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSEQ         reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMESEQ         reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDEEQ        reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MODEQ           reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OREQ            reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPEQ           reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    CAREQ           reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAREQ        reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSPLUS        reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSMIN        reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACE          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SEMICOL         reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACE          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    CASE            reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DEFAULT         reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_RIGHT     reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PIPE            reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACK          reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_ANGLE     reduce using rule 207 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)


state 363

    (208) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr RBRACK
    (209) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr COLON OExpr RBRACK
    (137) OExpr -> .
    (138) OExpr -> . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 137 (OExpr -> .)
    COLON           reduce using rule 137 (OExpr -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 324
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    OExpr                          shift and go to state 428
    PExpr                          shift and go to state 56

state 364

    (262) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma . RPAREN

    RPAREN          shift and go to state 429


state 365

    (146) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (130) OComma -> COMMA .
    (225) ExprOrType -> . Expr
    (226) ExprOrType -> . NonExprType
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (84) NonExprType -> . FuncType
    (85) NonExprType -> . OtherType
    (86) NonExprType -> . TIMES NonExprType
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (141) FuncLiteralDecl -> . FuncType

    RPAREN          reduce using rule 130 (OComma -> COMMA .)
    TIMES           shift and go to state 171
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 175
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 169
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    ExprOrType                     shift and go to state 430
    NonExprType                    shift and go to state 172
    OtherType                      shift and go to state 173
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 174
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 366

    (263) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD . OComma RPAREN
    (129) OComma -> .
    (130) OComma -> . COMMA

    RPAREN          reduce using rule 129 (OComma -> .)
    COMMA           shift and go to state 312

    OComma                         shift and go to state 431

state 367

    (213) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CASE            reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DEFAULT         reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 213 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 368

    (205) PExprNoParen -> PExpr DOT LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 432


state 369

    (206) PExprNoParen -> PExpr DOT LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 433


state 370

    (73) IfStmt -> IF IfHeader LoopBody ElseIfList . Else
    (76) ElseIfList -> ElseIfList . ElseIf
    (77) Else -> .
    (78) Else -> . ELSE CompoundStmt
    (74) ElseIf -> . ELSE IF IfHeader LoopBody

    SEMICOL         reduce using rule 77 (Else -> .)
    RBRACE          reduce using rule 77 (Else -> .)
    CASE            reduce using rule 77 (Else -> .)
    DEFAULT         reduce using rule 77 (Else -> .)
    ELSE            shift and go to state 436

    Else                           shift and go to state 434
    ElseIf                         shift and go to state 435

state 371

    (115) StructDecl -> TIMES LPAREN . Embed RPAREN OLiteral
    (152) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 373

    Embed                          shift and go to state 437

state 372

    (113) StructDecl -> TIMES Embed . OLiteral
    (147) OLiteral -> .
    (148) OLiteral -> . Literal
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING

    SEMICOL         reduce using rule 147 (OLiteral -> .)
    RBRACE          reduce using rule 147 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30

    OLiteral                       shift and go to state 438
    Literal                        shift and go to state 380

state 373

    (152) Embed -> IDENTIFIER .

    RPAREN          reduce using rule 152 (Embed -> IDENTIFIER .)
    INTEGER         reduce using rule 152 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 152 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 152 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 152 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 152 (Embed -> IDENTIFIER .)


state 374

    (114) StructDecl -> LPAREN TIMES . Embed RPAREN OLiteral
    (152) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 373

    Embed                          shift and go to state 439

state 375

    (112) StructDecl -> LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 440


state 376

    (166) NewNameList -> NewNameList COMMA . NewName
    (121) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 137

    NewName                        shift and go to state 441

state 377

    (110) StructDecl -> NewNameList NType . OLiteral
    (147) OLiteral -> .
    (148) OLiteral -> . Literal
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING

    SEMICOL         reduce using rule 147 (OLiteral -> .)
    RBRACE          reduce using rule 147 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30

    Literal                        shift and go to state 380
    OLiteral                       shift and go to state 442

state 378

    (107) StructDeclList -> StructDeclList SEMICOL . StructDecl
    (132) OSemi -> SEMICOL .
    (110) StructDecl -> . NewNameList NType OLiteral
    (111) StructDecl -> . Embed OLiteral
    (112) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (113) StructDecl -> . TIMES Embed OLiteral
    (114) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (115) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (165) NewNameList -> . NewName
    (166) NewNameList -> . NewNameList COMMA NewName
    (152) Embed -> . IDENTIFIER
    (121) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 132 (OSemi -> SEMICOL .)
    LPAREN          shift and go to state 303
    TIMES           shift and go to state 302
    IDENTIFIER      shift and go to state 306

    NewName                        shift and go to state 300
    StructDecl                     shift and go to state 443
    NewNameList                    shift and go to state 304
    Embed                          shift and go to state 307

state 379

    (91) StructType -> STRUCT LBRACE StructDeclList OSemi . RBRACE

    RBRACE          shift and go to state 444


state 380

    (148) OLiteral -> Literal .

    SEMICOL         reduce using rule 148 (OLiteral -> Literal .)
    RBRACE          reduce using rule 148 (OLiteral -> Literal .)


state 381

    (111) StructDecl -> Embed OLiteral .

    SEMICOL         reduce using rule 111 (StructDecl -> Embed OLiteral .)
    RBRACE          reduce using rule 111 (StructDecl -> Embed OLiteral .)


state 382

    (11) ImportStmtList -> ImportStmtList SEMICOL ImportStmt .

    SEMICOL         reduce using rule 11 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)
    RPAREN          reduce using rule 11 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)


state 383

    (7) Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .

    SEMICOL         reduce using rule 7 (Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .)


state 384

    (211) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .

    DOT             reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACK          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEFT_LEFT       reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LPAREN          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDE          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MOD             reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL             reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR             reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPERS          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAR          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMES           reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUS            reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUS           reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    XOR             reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OR              reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQEQ            reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    NOTEQ           reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEQ             reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GEQ             reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GREAT           reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LESS            reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPAMP          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OROR            reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RPAREN          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DDD             reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COMMA           reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLON           reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQUAL           reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLONEQ         reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSEQ          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSEQ         reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMESEQ         reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDEEQ        reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MODEQ           reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OREQ            reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPEQ           reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    CAREQ           reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL_ASSIGN      reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR_ASSIGN      reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAREQ        reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSPLUS        reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSMIN        reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACE          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SEMICOL         reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACE          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    CASE            reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DEFAULT         reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_RIGHT     reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PIPE            reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACK          reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_ANGLE     reduce using rule 211 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)


state 385

    (58) CompoundStmt -> LBRACE StmtList RBRACE .

    SEMICOL         reduce using rule 58 (CompoundStmt -> LBRACE StmtList RBRACE .)
    RBRACE          reduce using rule 58 (CompoundStmt -> LBRACE StmtList RBRACE .)
    CASE            reduce using rule 58 (CompoundStmt -> LBRACE StmtList RBRACE .)
    DEFAULT         reduce using rule 58 (CompoundStmt -> LBRACE StmtList RBRACE .)


state 386

    (164) StmtList -> StmtList SEMICOL Stmt .

    RBRACE          reduce using rule 164 (StmtList -> StmtList SEMICOL Stmt .)
    SEMICOL         reduce using rule 164 (StmtList -> StmtList SEMICOL Stmt .)
    CASE            reduce using rule 164 (StmtList -> StmtList SEMICOL Stmt .)
    DEFAULT         reduce using rule 164 (StmtList -> StmtList SEMICOL Stmt .)


state 387

    (156) VarDeclList -> VarDeclList SEMICOL VarDecl .

    SEMICOL         reduce using rule 156 (VarDeclList -> VarDeclList SEMICOL VarDecl .)
    RPAREN          reduce using rule 156 (VarDeclList -> VarDeclList SEMICOL VarDecl .)


state 388

    (23) CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 23 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)
    RBRACE          reduce using rule 23 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)
    CASE            reduce using rule 23 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)
    DEFAULT         reduce using rule 23 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)


state 389

    (128) DotName -> Name DOT IDENTIFIER .

    LBRACE          reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    SEMICOL         reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    RPAREN          reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    COMMA           reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    OR_RIGHT        reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    EQUAL           reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    RBRACE          reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    CASE            reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    DEFAULT         reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    RBRACK          reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    DDD             reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    COLON           reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    COLONEQ         reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    INTEGER         reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    FLOAT           reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)
    STRING          reduce using rule 128 (DotName -> Name DOT IDENTIFIER .)


state 390

    (29) VarDecl -> DeclNameList NType EQUAL ExprList .
    (144) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 29 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 29 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    RBRACE          reduce using rule 29 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    CASE            reduce using rule 29 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    DEFAULT         reduce using rule 29 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 104


state 391

    (83) NType -> LPAREN NType RPAREN .

    COMMA           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    RPAREN          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    LEFT_ANGLE      reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    LBRACE          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    EQUAL           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    SEMICOL         reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    RBRACE          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    CASE            reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    DEFAULT         reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    RBRACK          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    OR_RIGHT        reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    DDD             reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    COLON           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    COLONEQ         reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    LEFT_LEFT       reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    INTEGER         reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    FLOAT           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    STRING          reduce using rule 83 (NType -> LPAREN NType RPAREN .)


state 392

    (88) OtherType -> MAP LBRACK NType RBRACK NType .

    LEFT_ANGLE      reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    LEFT_LEFT       reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    RPAREN          reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    DDD             reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    COMMA           reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    COLON           reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    EQUAL           reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    COLONEQ         reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    OR_RIGHT        reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    SEMICOL         reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    RBRACK          reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    RBRACE          reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    LBRACE          reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    CASE            reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    DEFAULT         reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    INTEGER         reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    FLOAT           reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)
    STRING          reduce using rule 88 (OtherType -> MAP LBRACK NType RBRACK NType .)


state 393

    (19) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .

    SEMICOL         reduce using rule 19 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)
    RBRACE          reduce using rule 19 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)
    CASE            reduce using rule 19 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)
    DEFAULT         reduce using rule 19 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)


state 394

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList . OSemi RPAREN
    (158) ConstDeclList -> ConstDeclList . SEMICOL ConstDecl1
    (131) OSemi -> .
    (132) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 446
    RPAREN          reduce using rule 131 (OSemi -> .)

    OSemi                          shift and go to state 445

state 395

    (34) ConstDecl1 -> DeclNameList . NType
    (35) ConstDecl1 -> DeclNameList .
    (31) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (32) ConstDecl -> DeclNameList . EQUAL ExprList
    (162) DeclNameList -> DeclNameList . COMMA DeclName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 35 (ConstDecl1 -> DeclNameList .)
    RPAREN          reduce using rule 35 (ConstDecl1 -> DeclNameList .)
    EQUAL           shift and go to state 224
    COMMA           shift and go to state 213
    LPAREN          shift and go to state 216
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    FuncType                       shift and go to state 207
    NType                          shift and go to state 447
    OtherType                      shift and go to state 212
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 209
    DotName                        shift and go to state 210
    Name                           shift and go to state 214

state 396

    (157) ConstDeclList -> ConstDecl1 .

    SEMICOL         reduce using rule 157 (ConstDeclList -> ConstDecl1 .)
    RPAREN          reduce using rule 157 (ConstDeclList -> ConstDecl1 .)


state 397

    (33) ConstDecl1 -> ConstDecl .

    SEMICOL         reduce using rule 33 (ConstDecl1 -> ConstDecl .)
    RPAREN          reduce using rule 33 (ConstDecl1 -> ConstDecl .)


state 398

    (31) ConstDecl -> DeclNameList NType EQUAL ExprList .
    (144) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 31 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 31 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    RBRACE          reduce using rule 31 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    CASE            reduce using rule 31 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    DEFAULT         reduce using rule 31 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 104


state 399

    (100) ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    MAP             reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    CASE            reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    DEFAULT         reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACK          reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 100 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)


state 400

    (105) FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .

    SEMICOL         reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACE          reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_ANGLE      reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LBRACE          reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RPAREN          reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    EQUAL           reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    CASE            reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    DEFAULT         reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACK          reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COMMA           reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    OR_RIGHT        reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    DDD             reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLON           reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLONEQ         reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_LEFT       reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    INTEGER         reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    FLOAT           reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    STRING          reduce using rule 105 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)


state 401

    (102) FuncBody -> LBRACE StmtList RBRACE .

    SEMICOL         reduce using rule 102 (FuncBody -> LBRACE StmtList RBRACE .)


state 402

    (180) ArgTypeList -> ArgTypeList COMMA ArgType .

    COMMA           reduce using rule 180 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    RPAREN          reduce using rule 180 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    OR_RIGHT        reduce using rule 180 (ArgTypeList -> ArgTypeList COMMA ArgType .)


state 403

    (97) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER . ArgList FuncRes
    (99) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (100) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 118

    ArgList                        shift and go to state 448

state 404

    (66) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL . OSimpleStmt
    (133) OSimpleStmt -> .
    (134) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    LBRACE          reduce using rule 133 (OSimpleStmt -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 126
    OSimpleStmt                    shift and go to state 449
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 405

    (63) RangeStmt -> ExprList EQUAL RANGE Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 63 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    RBRACK          reduce using rule 63 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    OROR            shift and go to state 153


state 406

    (64) RangeStmt -> ExprList COLONEQ RANGE Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 64 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    RBRACK          reduce using rule 64 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    OROR            shift and go to state 153


state 407

    (62) LoopBody -> LBRACE StmtList RBRACE .

    ELSE            reduce using rule 62 (LoopBody -> LBRACE StmtList RBRACE .)
    SEMICOL         reduce using rule 62 (LoopBody -> LBRACE StmtList RBRACE .)
    RBRACE          reduce using rule 62 (LoopBody -> LBRACE StmtList RBRACE .)
    CASE            reduce using rule 62 (LoopBody -> LBRACE StmtList RBRACE .)
    DEFAULT         reduce using rule 62 (LoopBody -> LBRACE StmtList RBRACE .)


state 408

    (109) InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .

    SEMICOL         reduce using rule 109 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)
    RBRACE          reduce using rule 109 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)


state 409

    (93) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .

    LEFT_ANGLE      reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LBRACE          reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COMMA           reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLON           reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    CASE            reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    DEFAULT         reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    STRING          reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    DDD             reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACK          reduce using rule 93 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)


state 410

    (119) InDecl -> LPAREN OArgTypeListOComma . RPAREN FuncRes

    RPAREN          shift and go to state 450


state 411

    (118) InterfaceDecl -> LPAREN IDENTIFIER RPAREN .

    SEMICOL         reduce using rule 118 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)
    RBRACE          reduce using rule 118 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)


state 412

    (160) TypeDeclList -> TypeDeclList SEMICOL TypeDecl .

    SEMICOL         reduce using rule 160 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)
    RPAREN          reduce using rule 160 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)


state 413

    (26) CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 26 (CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .)
    RBRACE          reduce using rule 26 (CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .)
    CASE            reduce using rule 26 (CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .)
    DEFAULT         reduce using rule 26 (CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .)


state 414

    (260) ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .

    DOT             reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACK          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEFT_LEFT       reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LPAREN          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDE          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MOD             reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL             reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR             reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPERS          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAR          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMES           reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUS            reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUS           reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    XOR             reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OR              reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQEQ            reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    NOTEQ           reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEQ             reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GEQ             reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GREAT           reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LESS            reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPAMP          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLON           reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OROR            reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACK          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COMMA           reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SEMICOL         reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACE          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    CASE            reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DEFAULT         reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSEQ          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSEQ         reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMESEQ         reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDEEQ        reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MODEQ           reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OREQ            reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPEQ           reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    CAREQ           reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL_ASSIGN      reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR_ASSIGN      reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAREQ        reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSPLUS        reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSMIN        reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQUAL           reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLONEQ         reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACE          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PIPE            reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RPAREN          reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_ANGLE     reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_RIGHT     reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DDD             reduce using rule 260 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)


state 415

    (63) RangeStmt -> ExprList EQUAL . RANGE Expr

    RANGE           shift and go to state 342


state 416

    (64) RangeStmt -> ExprList COLONEQ . RANGE Expr

    RANGE           shift and go to state 343


state 417

    (59) CaseBlock -> Case . StmtList
    (163) StmtList -> . Stmt
    (164) StmtList -> . StmtList SEMICOL Stmt
    (183) Stmt -> .
    (184) Stmt -> . CompoundStmt
    (185) Stmt -> . CommonDecl
    (186) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE StmtList RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (187) NonDeclStmt -> . SimpleStmt
    (188) NonDeclStmt -> . ForStmt
    (189) NonDeclStmt -> . SwitchStmt
    (190) NonDeclStmt -> . IfStmt
    (191) NonDeclStmt -> . LabelName COLON Stmt
    (192) NonDeclStmt -> . FALLTHROUGH
    (193) NonDeclStmt -> . BREAK ONewName
    (194) NonDeclStmt -> . CONTINUE ONewName
    (195) NonDeclStmt -> . DEFER PseudoCall
    (196) NonDeclStmt -> . GOTO NewName
    (197) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (228) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (120) LabelName -> . NewName
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (121) NewName -> . IDENTIFIER
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 183 (Stmt -> .)
    RBRACE          reduce using rule 183 (Stmt -> .)
    CASE            reduce using rule 183 (Stmt -> .)
    DEFAULT         reduce using rule 183 (Stmt -> .)
    LBRACE          shift and go to state 191
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    TYPE            shift and go to state 42
    FALLTHROUGH     shift and go to state 17
    BREAK           shift and go to state 55
    CONTINUE        shift and go to state 45
    DEFER           shift and go to state 16
    GOTO            shift and go to state 60
    RETURN          shift and go to state 48
    FOR             shift and go to state 36
    SWITCH          shift and go to state 49
    IF              shift and go to state 67
    IDENTIFIER      shift and go to state 52
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 58
    Prec3Expr_                     shift and go to state 12
    ForStmt                        shift and go to state 59
    StmtList                       shift and go to state 451
    CommonDecl                     shift and go to state 190
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    IfStmt                         shift and go to state 32
    FuncType                       shift and go to state 57
    FuncLiteralDecl                shift and go to state 22
    Stmt                           shift and go to state 202
    NewName                        shift and go to state 33
    InterfaceType                  shift and go to state 51
    LabelName                      shift and go to state 19
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    NonDeclStmt                    shift and go to state 193
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    PExpr                          shift and go to state 56
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    CompoundStmt                   shift and go to state 192

state 418

    (54) Case -> CASE . ExprOrTypeList COLON
    (55) Case -> CASE . ExprOrTypeList EQUAL Expr COLON
    (56) Case -> CASE . ExprOrTypeList COLONEQ Expr COLON
    (145) ExprOrTypeList -> . ExprOrType
    (146) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (225) ExprOrType -> . Expr
    (226) ExprOrType -> . NonExprType
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (84) NonExprType -> . FuncType
    (85) NonExprType -> . OtherType
    (86) NonExprType -> . TIMES NonExprType
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (141) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 171
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 175
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 169
    Prec4Expr_                     shift and go to state 28
    ExprOrTypeList                 shift and go to state 452
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    ExprOrType                     shift and go to state 279
    NonExprType                    shift and go to state 172
    OtherType                      shift and go to state 173
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 174
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 419

    (228) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .

    SEMICOL         reduce using rule 228 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)
    RBRACE          reduce using rule 228 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)
    CASE            reduce using rule 228 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)
    DEFAULT         reduce using rule 228 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)


state 420

    (57) Case -> DEFAULT . COLON

    COLON           shift and go to state 453


state 421

    (61) CaseBlockList -> CaseBlockList CaseBlock .

    RBRACE          reduce using rule 61 (CaseBlockList -> CaseBlockList CaseBlock .)
    CASE            reduce using rule 61 (CaseBlockList -> CaseBlockList CaseBlock .)
    DEFAULT         reduce using rule 61 (CaseBlockList -> CaseBlockList CaseBlock .)


state 422

    (220) Keyval -> Expr COLON CompLitExpr .

    COMMA           reduce using rule 220 (Keyval -> Expr COLON CompLitExpr .)
    RIGHT_RIGHT     reduce using rule 220 (Keyval -> Expr COLON CompLitExpr .)


state 423

    (223) CompLitExpr -> Expr .
    (252) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 223 (CompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 223 (CompLitExpr -> Expr .)
    OROR            shift and go to state 153


state 424

    (224) CompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (171) BracedKeyvalList -> .
    (172) BracedKeyvalList -> . KeyvalList OComma
    (167) KeyvalList -> . Keyval
    (168) KeyvalList -> . BareCompLitExpr
    (169) KeyvalList -> . KeyvalList COMMA Keyval
    (170) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (220) Keyval -> . Expr COLON CompLitExpr
    (221) BareCompLitExpr -> . Expr
    (222) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 171 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 271
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    FuncLiteral                    shift and go to state 11
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    PExprNoParen                   shift and go to state 47
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 270
    PseudoCall                     shift and go to state 37
    KeyvalList                     shift and go to state 272
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    Keyval                         shift and go to state 273
    BareCompLitExpr                shift and go to state 275
    PExpr                          shift and go to state 56
    BracedKeyvalList               shift and go to state 454

state 425

    (222) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 222 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 222 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 426

    (169) KeyvalList -> KeyvalList COMMA Keyval .

    COMMA           reduce using rule 169 (KeyvalList -> KeyvalList COMMA Keyval .)
    RIGHT_RIGHT     reduce using rule 169 (KeyvalList -> KeyvalList COMMA Keyval .)


state 427

    (170) KeyvalList -> KeyvalList COMMA BareCompLitExpr .

    COMMA           reduce using rule 170 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 170 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)


state 428

    (208) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . RBRACK
    (209) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . COLON OExpr RBRACK

    RBRACK          shift and go to state 455
    COLON           shift and go to state 456


state 429

    (262) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .

    DOT             reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACK          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEFT_LEFT       reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LPAREN          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDE          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MOD             reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL             reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR             reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPERS          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAR          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMES           reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUS            reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUS           reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    XOR             reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OR              reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQEQ            reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    NOTEQ           reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEQ             reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GEQ             reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GREAT           reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LESS            reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPAMP          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OROR            reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SEMICOL         reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACE          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACE          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    CASE            reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DEFAULT         reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSEQ          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSEQ         reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMESEQ         reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDEEQ        reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MODEQ           reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OREQ            reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPEQ           reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    CAREQ           reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAREQ        reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSPLUS        reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSMIN        reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQUAL           reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLONEQ         reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COMMA           reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PIPE            reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACK          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RPAREN          reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLON           reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DDD             reduce using rule 262 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)


state 430

    (146) ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .

    DDD             reduce using rule 146 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COMMA           reduce using rule 146 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    RPAREN          reduce using rule 146 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLON           reduce using rule 146 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    EQUAL           reduce using rule 146 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLONEQ         reduce using rule 146 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)


state 431

    (263) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma . RPAREN

    RPAREN          shift and go to state 457


state 432

    (205) PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    CASE            reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DEFAULT         reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 205 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)


state 433

    (206) PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .

    DOT             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LBRACK          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LEFT_LEFT       reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LPAREN          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DIVIDE          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MOD             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHL             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHR             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPERS          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPCAR          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    TIMES           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUS            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUS           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    XOR             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OR              reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    EQEQ            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    NOTEQ           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LEQ             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    GEQ             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    GREAT           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LESS            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPAMP          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OROR            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RPAREN          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DDD             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COMMA           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COLON           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    EQUAL           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COLONEQ         reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUSEQ          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUSEQ         reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    TIMESEQ         reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DIVIDEEQ        reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MODEQ           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OREQ            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPEQ           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    CAREQ           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHL_ASSIGN      reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHR_ASSIGN      reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPCAREQ        reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUSPLUS        reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUSMIN        reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LBRACE          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SEMICOL         reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RBRACE          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    CASE            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DEFAULT         reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RIGHT_RIGHT     reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PIPE            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RBRACK          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RIGHT_ANGLE     reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)


state 434

    (73) IfStmt -> IF IfHeader LoopBody ElseIfList Else .

    RBRACE          reduce using rule 73 (IfStmt -> IF IfHeader LoopBody ElseIfList Else .)
    SEMICOL         reduce using rule 73 (IfStmt -> IF IfHeader LoopBody ElseIfList Else .)
    CASE            reduce using rule 73 (IfStmt -> IF IfHeader LoopBody ElseIfList Else .)
    DEFAULT         reduce using rule 73 (IfStmt -> IF IfHeader LoopBody ElseIfList Else .)


state 435

    (76) ElseIfList -> ElseIfList ElseIf .

    ELSE            reduce using rule 76 (ElseIfList -> ElseIfList ElseIf .)
    SEMICOL         reduce using rule 76 (ElseIfList -> ElseIfList ElseIf .)
    RBRACE          reduce using rule 76 (ElseIfList -> ElseIfList ElseIf .)
    CASE            reduce using rule 76 (ElseIfList -> ElseIfList ElseIf .)
    DEFAULT         reduce using rule 76 (ElseIfList -> ElseIfList ElseIf .)


state 436

    (78) Else -> ELSE . CompoundStmt
    (74) ElseIf -> ELSE . IF IfHeader LoopBody
    (58) CompoundStmt -> . LBRACE StmtList RBRACE

    IF              shift and go to state 459
    LBRACE          shift and go to state 191

    CompoundStmt                   shift and go to state 458

state 437

    (115) StructDecl -> TIMES LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 460


state 438

    (113) StructDecl -> TIMES Embed OLiteral .

    SEMICOL         reduce using rule 113 (StructDecl -> TIMES Embed OLiteral .)
    RBRACE          reduce using rule 113 (StructDecl -> TIMES Embed OLiteral .)


state 439

    (114) StructDecl -> LPAREN TIMES Embed . RPAREN OLiteral

    RPAREN          shift and go to state 461


state 440

    (112) StructDecl -> LPAREN Embed RPAREN . OLiteral
    (147) OLiteral -> .
    (148) OLiteral -> . Literal
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING

    SEMICOL         reduce using rule 147 (OLiteral -> .)
    RBRACE          reduce using rule 147 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30

    OLiteral                       shift and go to state 462
    Literal                        shift and go to state 380

state 441

    (166) NewNameList -> NewNameList COMMA NewName .

    COMMA           reduce using rule 166 (NewNameList -> NewNameList COMMA NewName .)
    LPAREN          reduce using rule 166 (NewNameList -> NewNameList COMMA NewName .)
    FUNCTION        reduce using rule 166 (NewNameList -> NewNameList COMMA NewName .)
    LBRACK          reduce using rule 166 (NewNameList -> NewNameList COMMA NewName .)
    MAP             reduce using rule 166 (NewNameList -> NewNameList COMMA NewName .)
    TIMES           reduce using rule 166 (NewNameList -> NewNameList COMMA NewName .)
    STRUCT          reduce using rule 166 (NewNameList -> NewNameList COMMA NewName .)
    INTERFACE       reduce using rule 166 (NewNameList -> NewNameList COMMA NewName .)
    IDENTIFIER      reduce using rule 166 (NewNameList -> NewNameList COMMA NewName .)


state 442

    (110) StructDecl -> NewNameList NType OLiteral .

    SEMICOL         reduce using rule 110 (StructDecl -> NewNameList NType OLiteral .)
    RBRACE          reduce using rule 110 (StructDecl -> NewNameList NType OLiteral .)


state 443

    (107) StructDeclList -> StructDeclList SEMICOL StructDecl .

    SEMICOL         reduce using rule 107 (StructDeclList -> StructDeclList SEMICOL StructDecl .)
    RBRACE          reduce using rule 107 (StructDeclList -> StructDeclList SEMICOL StructDecl .)


state 444

    (91) StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .

    COMMA           reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LBRACE          reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    CASE            reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    DEFAULT         reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACK          reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    DDD             reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLON           reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    STRING          reduce using rule 91 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)


state 445

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi . RPAREN

    RPAREN          shift and go to state 463


state 446

    (158) ConstDeclList -> ConstDeclList SEMICOL . ConstDecl1
    (132) OSemi -> SEMICOL .
    (33) ConstDecl1 -> . ConstDecl
    (34) ConstDecl1 -> . DeclNameList NType
    (35) ConstDecl1 -> . DeclNameList
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (161) DeclNameList -> . DeclName
    (162) DeclNameList -> . DeclNameList COMMA DeclName
    (173) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 132 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 99

    ConstDecl1                     shift and go to state 464
    DeclName                       shift and go to state 100
    DeclNameList                   shift and go to state 395
    ConstDecl                      shift and go to state 397

state 447

    (34) ConstDecl1 -> DeclNameList NType .
    (31) ConstDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 34 (ConstDecl1 -> DeclNameList NType .)
    RPAREN          reduce using rule 34 (ConstDecl1 -> DeclNameList NType .)
    EQUAL           shift and go to state 329


state 448

    (97) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList . FuncRes
    (100) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (103) FuncRes -> .
    (104) FuncRes -> . FuncRetType
    (105) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (123) FuncRetType -> . FuncType
    (124) FuncRetType -> . OtherType
    (125) FuncRetType -> . PtrType
    (126) FuncRetType -> . DotName
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    LPAREN          shift and go to state 230
    LBRACE          reduce using rule 103 (FuncRes -> .)
    SEMICOL         reduce using rule 103 (FuncRes -> .)
    LEFT_OR         shift and go to state 235
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    DotName                        shift and go to state 236
    Name                           shift and go to state 214
    FuncType                       shift and go to state 231
    OtherType                      shift and go to state 233
    InterfaceType                  shift and go to state 51
    FuncRes                        shift and go to state 465
    PtrType                        shift and go to state 232
    FuncRetType                    shift and go to state 237

state 449

    (66) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 66 (ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .)


state 450

    (119) InDecl -> LPAREN OArgTypeListOComma RPAREN . FuncRes
    (103) FuncRes -> .
    (104) FuncRes -> . FuncRetType
    (105) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (123) FuncRetType -> . FuncType
    (124) FuncRetType -> . OtherType
    (125) FuncRetType -> . PtrType
    (126) FuncRetType -> . DotName
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (122) PtrType -> . TIMES NType
    (127) DotName -> . Name
    (128) DotName -> . Name DOT IDENTIFIER
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (174) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 103 (FuncRes -> .)
    RBRACE          reduce using rule 103 (FuncRes -> .)
    LEFT_OR         shift and go to state 235
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 217
    MAP             shift and go to state 25
    TIMES           shift and go to state 211
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    IDENTIFIER      shift and go to state 83

    StructType                     shift and go to state 54
    DotName                        shift and go to state 236
    Name                           shift and go to state 214
    FuncType                       shift and go to state 231
    OtherType                      shift and go to state 233
    InterfaceType                  shift and go to state 51
    PtrType                        shift and go to state 232
    FuncRes                        shift and go to state 466
    FuncRetType                    shift and go to state 237

state 451

    (59) CaseBlock -> Case StmtList .
    (164) StmtList -> StmtList . SEMICOL Stmt

    RBRACE          reduce using rule 59 (CaseBlock -> Case StmtList .)
    CASE            reduce using rule 59 (CaseBlock -> Case StmtList .)
    DEFAULT         reduce using rule 59 (CaseBlock -> Case StmtList .)
    SEMICOL         shift and go to state 315


state 452

    (54) Case -> CASE ExprOrTypeList . COLON
    (55) Case -> CASE ExprOrTypeList . EQUAL Expr COLON
    (56) Case -> CASE ExprOrTypeList . COLONEQ Expr COLON
    (146) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType

    COLON           shift and go to state 469
    EQUAL           shift and go to state 467
    COLONEQ         shift and go to state 468
    COMMA           shift and go to state 470


state 453

    (57) Case -> DEFAULT COLON .

    LBRACE          reduce using rule 57 (Case -> DEFAULT COLON .)
    CONSTANT        reduce using rule 57 (Case -> DEFAULT COLON .)
    VAR             reduce using rule 57 (Case -> DEFAULT COLON .)
    TYPE            reduce using rule 57 (Case -> DEFAULT COLON .)
    FALLTHROUGH     reduce using rule 57 (Case -> DEFAULT COLON .)
    BREAK           reduce using rule 57 (Case -> DEFAULT COLON .)
    CONTINUE        reduce using rule 57 (Case -> DEFAULT COLON .)
    DEFER           reduce using rule 57 (Case -> DEFAULT COLON .)
    GOTO            reduce using rule 57 (Case -> DEFAULT COLON .)
    RETURN          reduce using rule 57 (Case -> DEFAULT COLON .)
    FOR             reduce using rule 57 (Case -> DEFAULT COLON .)
    SWITCH          reduce using rule 57 (Case -> DEFAULT COLON .)
    IF              reduce using rule 57 (Case -> DEFAULT COLON .)
    IDENTIFIER      reduce using rule 57 (Case -> DEFAULT COLON .)
    AMPERS          reduce using rule 57 (Case -> DEFAULT COLON .)
    NOT             reduce using rule 57 (Case -> DEFAULT COLON .)
    TIMES           reduce using rule 57 (Case -> DEFAULT COLON .)
    PLUS            reduce using rule 57 (Case -> DEFAULT COLON .)
    MINUS           reduce using rule 57 (Case -> DEFAULT COLON .)
    XOR             reduce using rule 57 (Case -> DEFAULT COLON .)
    LPAREN          reduce using rule 57 (Case -> DEFAULT COLON .)
    INTEGER         reduce using rule 57 (Case -> DEFAULT COLON .)
    FLOAT           reduce using rule 57 (Case -> DEFAULT COLON .)
    STRING          reduce using rule 57 (Case -> DEFAULT COLON .)
    LBRACK          reduce using rule 57 (Case -> DEFAULT COLON .)
    FUNCTION        reduce using rule 57 (Case -> DEFAULT COLON .)
    MAP             reduce using rule 57 (Case -> DEFAULT COLON .)
    STRUCT          reduce using rule 57 (Case -> DEFAULT COLON .)
    INTERFACE       reduce using rule 57 (Case -> DEFAULT COLON .)
    SEMICOL         reduce using rule 57 (Case -> DEFAULT COLON .)
    RBRACE          reduce using rule 57 (Case -> DEFAULT COLON .)
    CASE            reduce using rule 57 (Case -> DEFAULT COLON .)
    DEFAULT         reduce using rule 57 (Case -> DEFAULT COLON .)


state 454

    (224) CompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 471


state 455

    (208) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    CASE            reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DEFAULT         reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 208 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)


state 456

    (209) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON . OExpr RBRACK
    (137) OExpr -> .
    (138) OExpr -> . Expr
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 137 (OExpr -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 324
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    OExpr                          shift and go to state 472
    PExpr                          shift and go to state 56

state 457

    (263) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .

    DOT             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACK          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEFT_LEFT       reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LPAREN          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDE          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MOD             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPERS          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAR          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMES           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUS            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUS           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    XOR             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OR              reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQEQ            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    NOTEQ           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEQ             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GEQ             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GREAT           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LESS            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPAMP          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OROR            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SEMICOL         reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACE          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACE          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    CASE            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DEFAULT         reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSEQ          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSEQ         reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMESEQ         reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDEEQ        reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MODEQ           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OREQ            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPEQ           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    CAREQ           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAREQ        reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSPLUS        reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSMIN        reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQUAL           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLONEQ         reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COMMA           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PIPE            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACK          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RPAREN          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLON           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DDD             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)


state 458

    (78) Else -> ELSE CompoundStmt .

    SEMICOL         reduce using rule 78 (Else -> ELSE CompoundStmt .)
    RBRACE          reduce using rule 78 (Else -> ELSE CompoundStmt .)
    CASE            reduce using rule 78 (Else -> ELSE CompoundStmt .)
    DEFAULT         reduce using rule 78 (Else -> ELSE CompoundStmt .)


state 459

    (74) ElseIf -> ELSE IF . IfHeader LoopBody
    (71) IfHeader -> . OSimpleStmt
    (72) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (133) OSimpleStmt -> .
    (134) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (143) ExprList -> . Expr
    (144) ExprList -> . ExprList COMMA Expr
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 133 (OSimpleStmt -> .)
    LBRACE          reduce using rule 133 (OSimpleStmt -> .)
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 126
    OSimpleStmt                    shift and go to state 143
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 63
    PseudoCall                     shift and go to state 37
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    IfHeader                       shift and go to state 473
    PExpr                          shift and go to state 56

state 460

    (115) StructDecl -> TIMES LPAREN Embed RPAREN . OLiteral
    (147) OLiteral -> .
    (148) OLiteral -> . Literal
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING

    SEMICOL         reduce using rule 147 (OLiteral -> .)
    RBRACE          reduce using rule 147 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30

    OLiteral                       shift and go to state 474
    Literal                        shift and go to state 380

state 461

    (114) StructDecl -> LPAREN TIMES Embed RPAREN . OLiteral
    (147) OLiteral -> .
    (148) OLiteral -> . Literal
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING

    SEMICOL         reduce using rule 147 (OLiteral -> .)
    RBRACE          reduce using rule 147 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30

    OLiteral                       shift and go to state 475
    Literal                        shift and go to state 380

state 462

    (112) StructDecl -> LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 112 (StructDecl -> LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 112 (StructDecl -> LPAREN Embed RPAREN OLiteral .)


state 463

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 20 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)
    RBRACE          reduce using rule 20 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)
    CASE            reduce using rule 20 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)
    DEFAULT         reduce using rule 20 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)


state 464

    (158) ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .

    SEMICOL         reduce using rule 158 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)
    RPAREN          reduce using rule 158 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)


state 465

    (97) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 97 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 97 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)


state 466

    (119) InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .

    SEMICOL         reduce using rule 119 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)
    RBRACE          reduce using rule 119 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)


state 467

    (55) Case -> CASE ExprOrTypeList EQUAL . Expr COLON
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 476
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 468

    (56) Case -> CASE ExprOrTypeList COLONEQ . Expr COLON
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (141) FuncLiteralDecl -> . FuncType
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 65
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83
    LBRACK          shift and go to state 44
    FUNCTION        shift and go to state 84
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 57
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    OtherType                      shift and go to state 14
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 477
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 469

    (54) Case -> CASE ExprOrTypeList COLON .

    LBRACE          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANT        reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    VAR             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    TYPE            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FALLTHROUGH     reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    BREAK           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    CONTINUE        reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    DEFER           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    GOTO            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    RETURN          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FOR             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    SWITCH          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    IF              reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    IDENTIFIER      reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    AMPERS          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    NOT             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    TIMES           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    PLUS            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    MINUS           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    XOR             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    LPAREN          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    INTEGER         reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FLOAT           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    STRING          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    LBRACK          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FUNCTION        reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    MAP             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    STRUCT          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    INTERFACE       reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    SEMICOL         reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    RBRACE          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    CASE            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    DEFAULT         reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)


state 470

    (146) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (225) ExprOrType -> . Expr
    (226) ExprOrType -> . NonExprType
    (251) Expr -> . Prec2Expr_
    (252) Expr -> . Expr OROR Prec2Expr_
    (84) NonExprType -> . FuncType
    (85) NonExprType -> . OtherType
    (86) NonExprType -> . TIMES NonExprType
    (249) Prec2Expr_ -> . Prec3Expr_
    (250) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (98) FuncType -> . FUNCTION ArgList FuncRes
    (87) OtherType -> . LBRACK OExpr RBRACK NType
    (88) OtherType -> . MAP LBRACK NType RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (242) Prec3Expr_ -> . Prec4Expr_
    (243) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (91) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (92) StructType -> . STRUCT LBRACE RBRACE
    (93) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE RBRACE
    (237) Prec4Expr_ -> . Prec5Expr_
    (238) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (229) Prec5Expr_ -> . UExpr
    (230) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (253) UExpr -> . PExpr
    (254) UExpr -> . AMPERS UExpr
    (255) UExpr -> . NOT UExpr
    (256) UExpr -> . TIMES UExpr
    (257) UExpr -> . PLUS UExpr
    (258) UExpr -> . MINUS UExpr
    (259) UExpr -> . XOR UExpr
    (200) PExpr -> . PExprNoParen
    (201) PExpr -> . LPAREN ExprOrType RPAREN
    (202) PExprNoParen -> . Literal
    (203) PExprNoParen -> . Name
    (204) PExprNoParen -> . PExpr DOT IDENTIFIER
    (205) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (207) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (208) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PseudoCall
    (211) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (212) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (213) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . FuncLiteral
    (215) PExprNoParen -> . ForCompExpr
    (149) Literal -> . INTEGER
    (150) Literal -> . FLOAT
    (151) Literal -> . STRING
    (174) Name -> . IDENTIFIER
    (261) PseudoCall -> . PExpr LPAREN RPAREN
    (262) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (216) ConvType -> . FuncType
    (217) ConvType -> . OtherType
    (218) CompType -> . OtherType
    (142) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (260) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (141) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 171
    FUNCTION        shift and go to state 84
    LBRACK          shift and go to state 175
    MAP             shift and go to state 25
    STRUCT          shift and go to state 68
    INTERFACE       shift and go to state 38
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 18
    MINUS           shift and go to state 15
    XOR             shift and go to state 64
    LPAREN          shift and go to state 66
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 69
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 83

    PExprNoParen                   shift and go to state 47
    FuncType                       shift and go to state 169
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 12
    Literal                        shift and go to state 39
    FuncLiteral                    shift and go to state 11
    ConvType                       shift and go to state 13
    ExprOrType                     shift and go to state 430
    NonExprType                    shift and go to state 172
    OtherType                      shift and go to state 173
    InterfaceType                  shift and go to state 51
    Prec5Expr_                     shift and go to state 20
    CompType                       shift and go to state 53
    StructType                     shift and go to state 54
    Name                           shift and go to state 61
    Prec2Expr_                     shift and go to state 21
    FuncLiteralDecl                shift and go to state 22
    Expr                           shift and go to state 174
    PseudoCall                     shift and go to state 37
    UExpr                          shift and go to state 40
    ForCompExpr                    shift and go to state 41
    PExpr                          shift and go to state 56

state 471

    (224) CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 224 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 224 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 472

    (209) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr . RBRACK

    RBRACK          shift and go to state 478


state 473

    (74) ElseIf -> ELSE IF IfHeader . LoopBody
    (62) LoopBody -> . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 255

    LoopBody                       shift and go to state 479

state 474

    (115) StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 115 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 115 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)


state 475

    (114) StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 114 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 114 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)


state 476

    (55) Case -> CASE ExprOrTypeList EQUAL Expr . COLON
    (252) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 480
    OROR            shift and go to state 153


state 477

    (56) Case -> CASE ExprOrTypeList COLONEQ Expr . COLON
    (252) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 481
    OROR            shift and go to state 153


state 478

    (209) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    CASE            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DEFAULT         reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)


state 479

    (74) ElseIf -> ELSE IF IfHeader LoopBody .

    ELSE            reduce using rule 74 (ElseIf -> ELSE IF IfHeader LoopBody .)
    SEMICOL         reduce using rule 74 (ElseIf -> ELSE IF IfHeader LoopBody .)
    RBRACE          reduce using rule 74 (ElseIf -> ELSE IF IfHeader LoopBody .)
    CASE            reduce using rule 74 (ElseIf -> ELSE IF IfHeader LoopBody .)
    DEFAULT         reduce using rule 74 (ElseIf -> ELSE IF IfHeader LoopBody .)


state 480

    (55) Case -> CASE ExprOrTypeList EQUAL Expr COLON .

    LBRACE          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANT        reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    VAR             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TYPE            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FALLTHROUGH     reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    BREAK           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONTINUE        reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    DEFER           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    GOTO            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    RETURN          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FOR             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SWITCH          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IF              reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IDENTIFIER      reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    AMPERS          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    NOT             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TIMES           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    PLUS            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MINUS           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    XOR             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LPAREN          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTEGER         reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FLOAT           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRING          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LBRACK          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FUNCTION        reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MAP             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRUCT          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTERFACE       reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SEMICOL         reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    RBRACE          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CASE            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    DEFAULT         reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)


state 481

    (56) Case -> CASE ExprOrTypeList COLONEQ Expr COLON .

    LBRACE          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANT        reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    VAR             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TYPE            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FALLTHROUGH     reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    BREAK           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONTINUE        reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    DEFER           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    GOTO            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    RETURN          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FOR             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SWITCH          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IF              reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IDENTIFIER      reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    AMPERS          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    NOT             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TIMES           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    PLUS            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MINUS           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    XOR             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LPAREN          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTEGER         reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FLOAT           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRING          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LBRACK          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FUNCTION        reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MAP             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRUCT          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTERFACE       reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SEMICOL         reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    RBRACE          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CASE            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    DEFAULT         reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)

