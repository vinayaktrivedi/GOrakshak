Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TypeToken
Rule 6     TypeName -> QualifiedIdent
Rule 7     TypeToken -> INT_T
Rule 8     TypeToken -> FLOAT_T
Rule 9     TypeToken -> UINT_T
Rule 10    TypeToken -> COMPLEX_T
Rule 11    TypeToken -> RUNE_T
Rule 12    TypeToken -> BOOL_T
Rule 13    TypeToken -> STRING_T
Rule 14    TypeToken -> TYPE IDENTIFIER
Rule 15    TypeLit -> ArrayType
Rule 16    TypeLit -> StructType
Rule 17    TypeLit -> PointerType
Rule 18    TypeOpt -> Type
Rule 19    TypeOpt -> epsilon
Rule 20    ArrayType -> LSQUARE ArrayLength RSQUARE ElementType
Rule 21    ArrayLength -> Expression
Rule 22    ElementType -> Type
Rule 23    StructType -> STRUCT LCURL FieldDeclRep RCURL
Rule 24    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON
Rule 25    FieldDeclRep -> epsilon
Rule 26    FieldDecl -> IdentifierList Type TagOpt
Rule 27    TagOpt -> Tag
Rule 28    TagOpt -> epsilon
Rule 29    Tag -> STRING
Rule 30    PointerType -> STAR BaseType
Rule 31    BaseType -> Type
Rule 32    Signature -> Parameters ResultOpt
Rule 33    ResultOpt -> Result
Rule 34    ResultOpt -> epsilon
Rule 35    Result -> Parameters
Rule 36    Result -> Type
Rule 37    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 38    ParameterListOpt -> ParametersList
Rule 39    ParameterListOpt -> epsilon
Rule 40    ParametersList -> Type
Rule 41    ParametersList -> IdentifierList Type
Rule 42    ParametersList -> ParameterDeclCommaRep
Rule 43    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 44    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 45    ParameterDecl -> IdentifierList Type
Rule 46    ParameterDecl -> Type
Rule 47    Block -> LCURL StatementList RCURL
Rule 48    StatementList -> StatementRep
Rule 49    StatementRep -> StatementRep Statement SEMICOLON
Rule 50    StatementRep -> epsilon
Rule 51    Declaration -> ConstDecl
Rule 52    Declaration -> TypeDecl
Rule 53    Declaration -> VarDecl
Rule 54    TopLevelDecl -> Declaration
Rule 55    TopLevelDecl -> FunctionDecl
Rule 56    ConstDecl -> CONST ConstSpec
Rule 57    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 58    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON
Rule 59    ConstSpecRep -> epsilon
Rule 60    ConstSpec -> IdentifierList TypeExprListOpt
Rule 61    TypeExprListOpt -> TypeOpt ASSIGN ExpressionList
Rule 62    TypeExprListOpt -> epsilon
Rule 63    IdentifierList -> IDENTIFIER IdentifierRep
Rule 64    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 65    IdentifierRep -> epsilon
Rule 66    ExpressionList -> Expression ExpressionRep
Rule 67    ExpressionRep -> ExpressionRep COMMA Expression
Rule 68    ExpressionRep -> epsilon
Rule 69    TypeDecl -> TYPE TypeSpec
Rule 70    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 71    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON
Rule 72    TypeSpecRep -> epsilon
Rule 73    TypeSpec -> AliasDecl
Rule 74    TypeSpec -> TypeDef
Rule 75    AliasDecl -> IDENTIFIER ASSIGN Type
Rule 76    TypeDef -> IDENTIFIER Type
Rule 77    VarDecl -> VAR VarSpec
Rule 78    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 79    VarSpecRep -> VarSpecRep VarSpec SEMICOLON
Rule 80    VarSpecRep -> epsilon
Rule 81    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 82    VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 83    ExpressionListOpt -> ASSIGN ExpressionList
Rule 84    ExpressionListOpt -> epsilon
Rule 85    ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression
Rule 86    FunctionDecl -> FUNC FunctionName Function
Rule 87    FunctionDecl -> FUNC FunctionName Signature
Rule 88    FunctionName -> IDENTIFIER
Rule 89    Function -> Signature FunctionBody
Rule 90    FunctionBody -> Block
Rule 91    Operand -> Literal
Rule 92    Operand -> OperandName
Rule 93    Operand -> LPAREN Expression RPAREN
Rule 94    Literal -> BasicLit
Rule 95    BasicLit -> INTEGER
Rule 96    BasicLit -> OCTAL
Rule 97    BasicLit -> HEX
Rule 98    BasicLit -> FLOAT
Rule 99    BasicLit -> IMAGINARY
Rule 100   BasicLit -> RUNE
Rule 101   BasicLit -> STRING
Rule 102   OperandName -> IDENTIFIER
Rule 103   QualifiedIdent -> IDENTIFIER DOT TypeName
Rule 104   CompositeLit -> LiteralType LiteralValue
Rule 105   LiteralType -> ArrayType
Rule 106   LiteralType -> ElementType
Rule 107   LiteralType -> TypeName
Rule 108   LiteralValue -> LCURL ElementListOpt RCURL
Rule 109   ElementListOpt -> ElementList
Rule 110   ElementListOpt -> epsilon
Rule 111   ElementList -> KeyedElement KeyedElementCommaRep
Rule 112   KeyedElementCommaRep -> KeyedElementCommaRep COMMA KeyedElement
Rule 113   KeyedElementCommaRep -> epsilon
Rule 114   KeyedElement -> Key COLON Element
Rule 115   KeyedElement -> Element
Rule 116   Key -> FieldName
Rule 117   Key -> Expression
Rule 118   Key -> LiteralValue
Rule 119   FieldName -> IDENTIFIER
Rule 120   Element -> Expression
Rule 121   Element -> LiteralValue
Rule 122   PrimaryExpr -> Operand
Rule 123   PrimaryExpr -> PrimaryExpr Selector
Rule 124   PrimaryExpr -> Conversion
Rule 125   PrimaryExpr -> PrimaryExpr Index
Rule 126   PrimaryExpr -> PrimaryExpr Slice
Rule 127   PrimaryExpr -> PrimaryExpr TypeAssertion
Rule 128   PrimaryExpr -> PrimaryExpr Arguments
Rule 129   Selector -> DOT IDENTIFIER
Rule 130   Index -> LSQUARE Expression RSQUARE
Rule 131   Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
Rule 132   Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
Rule 133   TypeAssertion -> DOT LPAREN Type RPAREN
Rule 134   Arguments -> LPAREN ExpressionListTypeOpt RPAREN
Rule 135   ExpressionListTypeOpt -> ExpressionList
Rule 136   ExpressionListTypeOpt -> epsilon
Rule 137   ExpressionListCommaOpt -> COMMA ExpressionList
Rule 138   ExpressionListCommaOpt -> epsilon
Rule 139   Expression -> UnaryExpr
Rule 140   Expression -> Expression BinaryOp Expression
Rule 141   ExpressionOpt -> Expression
Rule 142   ExpressionOpt -> epsilon
Rule 143   UnaryExpr -> PrimaryExpr
Rule 144   UnaryExpr -> UnaryOp UnaryExpr
Rule 145   UnaryExpr -> NOT UnaryExpr
Rule 146   BinaryOp -> LOGICAL_OR
Rule 147   BinaryOp -> LOGICAL_AND
Rule 148   BinaryOp -> RelOp
Rule 149   BinaryOp -> AddMulOp
Rule 150   RelOp -> EQUALS
Rule 151   RelOp -> NOT_ASSIGN
Rule 152   RelOp -> LESSER
Rule 153   RelOp -> GREATER
Rule 154   RelOp -> LESS_EQUALS
Rule 155   RelOp -> MORE_EQUALS
Rule 156   AddMulOp -> UnaryOp
Rule 157   AddMulOp -> OR
Rule 158   AddMulOp -> XOR
Rule 159   AddMulOp -> DIVIDE
Rule 160   AddMulOp -> MOD
Rule 161   AddMulOp -> LSHIFT
Rule 162   AddMulOp -> RSHIFT
Rule 163   UnaryOp -> PLUS
Rule 164   UnaryOp -> MINUS
Rule 165   UnaryOp -> STAR
Rule 166   UnaryOp -> AND
Rule 167   Conversion -> TYPECAST Type LPAREN Expression RPAREN
Rule 168   Statement -> Declaration
Rule 169   Statement -> LabeledStmt
Rule 170   Statement -> SimpleStmt
Rule 171   Statement -> ReturnStmt
Rule 172   Statement -> BreakStmt
Rule 173   Statement -> ContinueStmt
Rule 174   Statement -> GotoStmt
Rule 175   Statement -> Block
Rule 176   Statement -> IfStmt
Rule 177   Statement -> SwitchStmt
Rule 178   Statement -> ForStmt
Rule 179   SimpleStmt -> epsilon
Rule 180   SimpleStmt -> ExpressionStmt
Rule 181   SimpleStmt -> IncDecStmt
Rule 182   SimpleStmt -> Assignment
Rule 183   SimpleStmt -> ShortVarDecl
Rule 184   LabeledStmt -> Label COLON Statement
Rule 185   Label -> IDENTIFIER
Rule 186   ExpressionStmt -> Expression
Rule 187   IncDecStmt -> Expression INCR
Rule 188   IncDecStmt -> Expression DECR
Rule 189   Assignment -> ExpressionList assign_op ExpressionList
Rule 190   assign_op -> AssignOp
Rule 191   AssignOp -> PLUS_ASSIGN
Rule 192   AssignOp -> MINUS_ASSIGN
Rule 193   AssignOp -> STAR_ASSIGN
Rule 194   AssignOp -> DIVIDE_ASSIGN
Rule 195   AssignOp -> MOD_ASSIGN
Rule 196   AssignOp -> AND_ASSIGN
Rule 197   AssignOp -> OR_ASSIGN
Rule 198   AssignOp -> XOR_ASSIGN
Rule 199   AssignOp -> LSHIFT_ASSIGN
Rule 200   AssignOp -> RSHIFT_ASSIGN
Rule 201   AssignOp -> ASSIGN
Rule 202   IfStmt -> IF Expression Block ElseOpt
Rule 203   SimpleStmtOpt -> SimpleStmt SEMICOLON
Rule 204   SimpleStmtOpt -> epsilon
Rule 205   ElseOpt -> ELSE IfStmt
Rule 206   ElseOpt -> ELSE Block
Rule 207   ElseOpt -> epsilon
Rule 208   SwitchStmt -> ExprSwitchStmt
Rule 209   SwitchStmt -> TypeSwitchStmt
Rule 210   ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseRep RCURL
Rule 211   ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause
Rule 212   ExprCaseClauseRep -> epsilon
Rule 213   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 214   ExprSwitchCase -> CASE ExpressionList
Rule 215   ExprSwitchCase -> DEFAULT
Rule 216   TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LCURL TypeCaseClauseOpt RCURL
Rule 217   TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN
Rule 218   IdentifierOpt -> IDENTIFIER QUICK_ASSIGN
Rule 219   IdentifierOpt -> epsilon
Rule 220   TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause
Rule 221   TypeCaseClauseOpt -> epsilon
Rule 222   TypeCaseClause -> TypeSwitchCase COLON StatementList
Rule 223   TypeSwitchCase -> CASE TypeList
Rule 224   TypeSwitchCase -> DEFAULT
Rule 225   TypeList -> Type TypeRep
Rule 226   TypeRep -> TypeRep COMMA Type
Rule 227   TypeRep -> epsilon
Rule 228   ForStmt -> FOR ConditionBlockOpt Block
Rule 229   ConditionBlockOpt -> epsilon
Rule 230   ConditionBlockOpt -> Condition
Rule 231   ConditionBlockOpt -> ForClause
Rule 232   ConditionBlockOpt -> RangeClause
Rule 233   Condition -> Expression
Rule 234   ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
Rule 235   ConditionOpt -> epsilon
Rule 236   ConditionOpt -> Condition
Rule 237   RangeClause -> ExpressionIdentListOpt RANGE Expression
Rule 238   ExpressionIdentListOpt -> epsilon
Rule 239   ExpressionIdentListOpt -> ExpressionIdentifier
Rule 240   ExpressionIdentifier -> ExpressionList ASSIGN
Rule 241   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 242   ExpressionListPureOpt -> ExpressionList
Rule 243   ExpressionListPureOpt -> epsilon
Rule 244   BreakStmt -> BREAK LabelOpt
Rule 245   ContinueStmt -> CONTINUE LabelOpt
Rule 246   LabelOpt -> Label
Rule 247   LabelOpt -> epsilon
Rule 248   GotoStmt -> GOTO Label
Rule 249   SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
Rule 250   ImportDeclRep -> epsilon
Rule 251   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON
Rule 252   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON
Rule 253   TopLevelDeclRep -> epsilon
Rule 254   PackageClause -> PACKAGE PackageName
Rule 255   PackageName -> IDENTIFIER
Rule 256   ImportDecl -> IMPORT ImportSpec
Rule 257   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 258   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON
Rule 259   ImportSpecRep -> epsilon
Rule 260   ImportSpec -> PackageNameDotOpt ImportPath
Rule 261   PackageNameDotOpt -> DOT
Rule 262   PackageNameDotOpt -> PackageName
Rule 263   PackageNameDotOpt -> epsilon
Rule 264   ImportPath -> STRING
Rule 265   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 166
AND_ASSIGN           : 196
ASSIGN               : 61 75 82 83 201 240
BOOL_T               : 12
BREAK                : 244
CASE                 : 214 223
COLON                : 114 131 132 132 184 213 222
COMMA                : 43 44 64 67 112 137 226
COMPLEX_T            : 10
CONST                : 56 57
CONTINUE             : 245
DECR                 : 188
DEFAULT              : 215 224
DIVIDE               : 159
DIVIDE_ASSIGN        : 194
DOT                  : 103 129 133 217 261
ELSE                 : 205 206
EQUALS               : 150
FLOAT                : 98
FLOAT_T              : 8
FOR                  : 228
FUNC                 : 86 87
GOTO                 : 248
GREATER              : 153
HEX                  : 97
IDENTIFIER           : 14 63 64 75 76 85 88 102 103 119 129 185 218 255
IF                   : 202
IMAGINARY            : 99
IMPORT               : 256 257
INCR                 : 187
INTEGER              : 95
INT_T                : 7
LCURL                : 23 47 108 210 216
LESSER               : 152
LESS_EQUALS          : 154
LOGICAL_AND          : 147
LOGICAL_OR           : 146
LPAREN               : 4 37 57 70 78 93 133 134 167 217 257
LSHIFT               : 161
LSHIFT_ASSIGN        : 199
LSQUARE              : 20 130 131 132
MINUS                : 164
MINUS_ASSIGN         : 192
MOD                  : 160
MOD_ASSIGN           : 195
MORE_EQUALS          : 155
NOT                  : 145
NOT_ASSIGN           : 151
OCTAL                : 96
OR                   : 157
OR_ASSIGN            : 197
PACKAGE              : 254
PLUS                 : 163
PLUS_ASSIGN          : 191
QUICK_ASSIGN         : 85 218
RANGE                : 237
RCURL                : 23 47 108 210 216
RETURN               : 241
RPAREN               : 4 37 57 70 78 93 133 134 167 217 257
RSHIFT               : 162
RSHIFT_ASSIGN        : 200
RSQUARE              : 20 130 131 132
RUNE                 : 100
RUNE_T               : 11
SEMICOLON            : 24 49 58 71 79 203 234 234 249 251 252 258
STAR                 : 30 165
STAR_ASSIGN          : 193
STRING               : 29 101 264
STRING_T             : 13
STRUCT               : 23
SWITCH               : 210 216
TYPE                 : 14 69 70 217
TYPECAST             : 167
UINT_T               : 9
VAR                  : 77 78
XOR                  : 158
XOR_ASSIGN           : 198
error                : 

Nonterminals, with rules where they appear

AddMulOp             : 149
AliasDecl            : 73
Arguments            : 128
ArrayLength          : 20
ArrayType            : 15 105
AssignOp             : 190
Assignment           : 182
BaseType             : 30
BasicLit             : 94
BinaryOp             : 140
Block                : 90 175 202 206 228
BreakStmt            : 172
CompositeLit         : 
Condition            : 230 236
ConditionBlockOpt    : 228
ConditionOpt         : 234
ConstDecl            : 51
ConstSpec            : 56 58
ConstSpecRep         : 57 58
ContinueStmt         : 173
Conversion           : 124
Declaration          : 54 168
Element              : 114 115
ElementList          : 109
ElementListOpt       : 108
ElementType          : 20 106
ElseOpt              : 202
ExprCaseClause       : 211
ExprCaseClauseRep    : 210 211
ExprSwitchCase       : 213
ExprSwitchStmt       : 208
Expression           : 21 66 67 85 93 117 120 130 132 132 140 140 141 167 186 187 188 202 233 237
ExpressionIdentListOpt : 237
ExpressionIdentifier : 239
ExpressionList       : 61 82 83 135 137 189 189 214 240 242
ExpressionListCommaOpt : 
ExpressionListOpt    : 81
ExpressionListPureOpt : 241
ExpressionListTypeOpt : 134
ExpressionOpt        : 131 131 132 210
ExpressionRep        : 66 67
ExpressionStmt       : 180
FieldDecl            : 24
FieldDeclRep         : 23 24
FieldName            : 116
ForClause            : 231
ForStmt              : 178
Function             : 86
FunctionBody         : 89
FunctionDecl         : 55
FunctionName         : 86 87
GotoStmt             : 174
IdentifierList       : 26 41 45 60 81 82
IdentifierOpt        : 217
IdentifierRep        : 63 64
IfStmt               : 176 205
ImportDecl           : 251
ImportDeclRep        : 249 251
ImportPath           : 260
ImportSpec           : 256 258
ImportSpecRep        : 257 258
IncDecStmt           : 181
Index                : 125
Key                  : 114
KeyedElement         : 111 112
KeyedElementCommaRep : 111 112
Label                : 184 246 248
LabelOpt             : 244 245
LabeledStmt          : 169
Literal              : 91
LiteralType          : 104
LiteralValue         : 104 118 121
Operand              : 122
OperandName          : 92
PackageClause        : 249
PackageName          : 254 262
PackageNameDotOpt    : 260
ParameterDecl        : 43 44 44
ParameterDeclCommaRep : 42 43
ParameterListOpt     : 37
Parameters           : 32 35
ParametersList       : 38
PointerType          : 17
PrimaryExpr          : 123 125 126 127 128 143 217
QualifiedIdent       : 6
RangeClause          : 232
RelOp                : 148
Result               : 33
ResultOpt            : 32
ReturnStmt           : 171
Selector             : 123
ShortVarDecl         : 183
Signature            : 87 89
SimpleStmt           : 170 203 234 234
SimpleStmtOpt        : 216
Slice                : 126
SourceFile           : 1
Statement            : 49 184
StatementList        : 47 213 222
StatementRep         : 48 49
StructType           : 16
SwitchStmt           : 177
Tag                  : 27
TagOpt               : 26
TopLevelDecl         : 252
TopLevelDeclRep      : 249 252
Type                 : 4 18 22 26 31 36 40 41 45 46 75 76 81 133 167 225 226
TypeAssertion        : 127
TypeCaseClause       : 220
TypeCaseClauseOpt    : 216 220
TypeDecl             : 52
TypeDef              : 74
TypeExprListOpt      : 60
TypeList             : 223
TypeLit              : 3
TypeName             : 2 103 107
TypeOpt              : 61
TypeRep              : 225 226
TypeSpec             : 69 71
TypeSpecRep          : 70 71
TypeSwitchCase       : 222
TypeSwitchGuard      : 216
TypeSwitchStmt       : 209
TypeToken            : 5
UnaryExpr            : 139 144 145
UnaryOp              : 144 156
VarDecl              : 53
VarSpec              : 77 79
VarSpecRep           : 78 79
assign_op            : 189
epsilon              : 19 25 28 34 39 50 59 62 65 68 72 80 84 110 113 136 138 142 179 204 207 212 219 221 227 229 235 238 243 247 250 253 259 263
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (249) SourceFile -> . PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
    (254) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 2

    PackageClause                  shift and go to state 1
    SourceFile                     shift and go to state 3
    start                          shift and go to state 4

state 1

    (249) SourceFile -> PackageClause . SEMICOLON ImportDeclRep TopLevelDeclRep

    SEMICOLON       shift and go to state 5


state 2

    (254) PackageClause -> PACKAGE . PackageName
    (255) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 7

    PackageName                    shift and go to state 6

state 3

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 4

    (0) S' -> start .



state 5

    (249) SourceFile -> PackageClause SEMICOLON . ImportDeclRep TopLevelDeclRep
    (250) ImportDeclRep -> . epsilon
    (251) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOLON
    (265) epsilon -> .

    IMPORT          reduce using rule 265 (epsilon -> .)
    FUNC            reduce using rule 265 (epsilon -> .)
    CONST           reduce using rule 265 (epsilon -> .)
    TYPE            reduce using rule 265 (epsilon -> .)
    VAR             reduce using rule 265 (epsilon -> .)
    $end            reduce using rule 265 (epsilon -> .)

    ImportDeclRep                  shift and go to state 9
    epsilon                        shift and go to state 8

state 6

    (254) PackageClause -> PACKAGE PackageName .

    SEMICOLON       reduce using rule 254 (PackageClause -> PACKAGE PackageName .)


state 7

    (255) PackageName -> IDENTIFIER .

    STRING          reduce using rule 255 (PackageName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 255 (PackageName -> IDENTIFIER .)


state 8

    (250) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 250 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 250 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 250 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 250 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 250 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 250 (ImportDeclRep -> epsilon .)


state 9

    (249) SourceFile -> PackageClause SEMICOLON ImportDeclRep . TopLevelDeclRep
    (251) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOLON
    (252) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOLON
    (253) TopLevelDeclRep -> . epsilon
    (256) ImportDecl -> . IMPORT ImportSpec
    (257) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (265) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 265 (epsilon -> .)
    CONST           reduce using rule 265 (epsilon -> .)
    TYPE            reduce using rule 265 (epsilon -> .)
    VAR             reduce using rule 265 (epsilon -> .)
    $end            reduce using rule 265 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    epsilon                        shift and go to state 11
    ImportDecl                     shift and go to state 12

state 10

    (249) SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .
    (252) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOLON
    (54) TopLevelDecl -> . Declaration
    (55) TopLevelDecl -> . FunctionDecl
    (51) Declaration -> . ConstDecl
    (52) Declaration -> . TypeDecl
    (53) Declaration -> . VarDecl
    (86) FunctionDecl -> . FUNC FunctionName Function
    (87) FunctionDecl -> . FUNC FunctionName Signature
    (56) ConstDecl -> . CONST ConstSpec
    (57) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (69) TypeDecl -> . TYPE TypeSpec
    (70) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (77) VarDecl -> . VAR VarSpec
    (78) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 249 (SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21

    TypeDecl                       shift and go to state 19
    VarDecl                        shift and go to state 22
    FunctionDecl                   shift and go to state 15
    TopLevelDecl                   shift and go to state 16
    Declaration                    shift and go to state 17
    ConstDecl                      shift and go to state 18

state 11

    (253) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 253 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 253 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 253 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 253 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 253 (TopLevelDeclRep -> epsilon .)


state 12

    (251) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 24


state 13

    (256) ImportDecl -> IMPORT . ImportSpec
    (257) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (260) ImportSpec -> . PackageNameDotOpt ImportPath
    (261) PackageNameDotOpt -> . DOT
    (262) PackageNameDotOpt -> . PackageName
    (263) PackageNameDotOpt -> . epsilon
    (255) PackageName -> . IDENTIFIER
    (265) epsilon -> .

    LPAREN          shift and go to state 25
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 265 (epsilon -> .)

    ImportSpec                     shift and go to state 26
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 14

    (56) ConstDecl -> CONST . ConstSpec
    (57) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (60) ConstSpec -> . IdentifierList TypeExprListOpt
    (63) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 32
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 31
    IdentifierList                 shift and go to state 33

state 15

    (55) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 55 (TopLevelDecl -> FunctionDecl .)


state 16

    (252) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 35


state 17

    (54) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 54 (TopLevelDecl -> Declaration .)


state 18

    (51) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 51 (Declaration -> ConstDecl .)


state 19

    (52) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 52 (Declaration -> TypeDecl .)


state 20

    (86) FunctionDecl -> FUNC . FunctionName Function
    (87) FunctionDecl -> FUNC . FunctionName Signature
    (88) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    FunctionName                   shift and go to state 37

state 21

    (77) VarDecl -> VAR . VarSpec
    (78) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (81) VarSpec -> . IdentifierList Type ExpressionListOpt
    (82) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (63) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 38
    IdentifierList                 shift and go to state 40

state 22

    (53) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 53 (Declaration -> VarDecl .)


state 23

    (69) TypeDecl -> TYPE . TypeSpec
    (70) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (73) TypeSpec -> . AliasDecl
    (74) TypeSpec -> . TypeDef
    (75) AliasDecl -> . IDENTIFIER ASSIGN Type
    (76) TypeDef -> . IDENTIFIER Type

    LPAREN          shift and go to state 43
    IDENTIFIER      shift and go to state 45

    TypeSpec                       shift and go to state 44
    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 42

state 24

    (251) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .

    IMPORT          reduce using rule 251 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    FUNC            reduce using rule 251 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    CONST           reduce using rule 251 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    TYPE            reduce using rule 251 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    VAR             reduce using rule 251 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    $end            reduce using rule 251 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)


state 25

    (257) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (258) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOLON
    (259) ImportSpecRep -> . epsilon
    (265) epsilon -> .

    RPAREN          reduce using rule 265 (epsilon -> .)
    DOT             reduce using rule 265 (epsilon -> .)
    IDENTIFIER      reduce using rule 265 (epsilon -> .)
    STRING          reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 46
    ImportSpecRep                  shift and go to state 47

state 26

    (256) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 256 (ImportDecl -> IMPORT ImportSpec .)


state 27

    (263) PackageNameDotOpt -> epsilon .

    STRING          reduce using rule 263 (PackageNameDotOpt -> epsilon .)


state 28

    (262) PackageNameDotOpt -> PackageName .

    STRING          reduce using rule 262 (PackageNameDotOpt -> PackageName .)


state 29

    (260) ImportSpec -> PackageNameDotOpt . ImportPath
    (264) ImportPath -> . STRING

    STRING          shift and go to state 49

    ImportPath                     shift and go to state 48

state 30

    (261) PackageNameDotOpt -> DOT .

    STRING          reduce using rule 261 (PackageNameDotOpt -> DOT .)


state 31

    (56) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 56 (ConstDecl -> CONST ConstSpec .)


state 32

    (57) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (58) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOLON
    (59) ConstSpecRep -> . epsilon
    (265) epsilon -> .

    RPAREN          reduce using rule 265 (epsilon -> .)
    IDENTIFIER      reduce using rule 265 (epsilon -> .)

    ConstSpecRep                   shift and go to state 50
    epsilon                        shift and go to state 51

state 33

    (60) ConstSpec -> IdentifierList . TypeExprListOpt
    (61) TypeExprListOpt -> . TypeOpt ASSIGN ExpressionList
    (62) TypeExprListOpt -> . epsilon
    (18) TypeOpt -> . Type
    (19) TypeOpt -> . epsilon
    (265) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    SEMICOLON       reduce using rule 265 (epsilon -> .)
    ASSIGN          reduce using rule 265 (epsilon -> .)
    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    TypeOpt                        shift and go to state 68
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 58
    TypeExprListOpt                shift and go to state 71
    epsilon                        shift and go to state 65
    PointerType                    shift and go to state 72
    Type                           shift and go to state 55
    QualifiedIdent                 shift and go to state 74

state 34

    (63) IdentifierList -> IDENTIFIER . IdentifierRep
    (64) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (65) IdentifierRep -> . epsilon
    (265) epsilon -> .

    COMMA           reduce using rule 265 (epsilon -> .)
    LPAREN          reduce using rule 265 (epsilon -> .)
    INT_T           reduce using rule 265 (epsilon -> .)
    FLOAT_T         reduce using rule 265 (epsilon -> .)
    UINT_T          reduce using rule 265 (epsilon -> .)
    COMPLEX_T       reduce using rule 265 (epsilon -> .)
    RUNE_T          reduce using rule 265 (epsilon -> .)
    BOOL_T          reduce using rule 265 (epsilon -> .)
    STRING_T        reduce using rule 265 (epsilon -> .)
    TYPE            reduce using rule 265 (epsilon -> .)
    IDENTIFIER      reduce using rule 265 (epsilon -> .)
    LSQUARE         reduce using rule 265 (epsilon -> .)
    STRUCT          reduce using rule 265 (epsilon -> .)
    STAR            reduce using rule 265 (epsilon -> .)
    ASSIGN          reduce using rule 265 (epsilon -> .)
    SEMICOLON       reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 76
    IdentifierRep                  shift and go to state 77

state 35

    (252) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 252 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 252 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 252 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 252 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    $end            reduce using rule 252 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)


state 36

    (88) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 88 (FunctionName -> IDENTIFIER .)


state 37

    (86) FunctionDecl -> FUNC FunctionName . Function
    (87) FunctionDecl -> FUNC FunctionName . Signature
    (89) Function -> . Signature FunctionBody
    (32) Signature -> . Parameters ResultOpt
    (37) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 81

    Function                       shift and go to state 78
    Parameters                     shift and go to state 79
    Signature                      shift and go to state 80

state 38

    (77) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 77 (VarDecl -> VAR VarSpec .)


state 39

    (78) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (79) VarSpecRep -> . VarSpecRep VarSpec SEMICOLON
    (80) VarSpecRep -> . epsilon
    (265) epsilon -> .

    RPAREN          reduce using rule 265 (epsilon -> .)
    IDENTIFIER      reduce using rule 265 (epsilon -> .)

    VarSpecRep                     shift and go to state 82
    epsilon                        shift and go to state 83

state 40

    (81) VarSpec -> IdentifierList . Type ExpressionListOpt
    (82) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    ASSIGN          shift and go to state 85
    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    Type                           shift and go to state 84
    TypeToken                      shift and go to state 57
    TypeLit                        shift and go to state 58
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    QualifiedIdent                 shift and go to state 74

state 41

    (74) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 74 (TypeSpec -> TypeDef .)


state 42

    (73) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 73 (TypeSpec -> AliasDecl .)


state 43

    (70) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (71) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOLON
    (72) TypeSpecRep -> . epsilon
    (265) epsilon -> .

    RPAREN          reduce using rule 265 (epsilon -> .)
    IDENTIFIER      reduce using rule 265 (epsilon -> .)

    TypeSpecRep                    shift and go to state 86
    epsilon                        shift and go to state 87

state 44

    (69) TypeDecl -> TYPE TypeSpec .

    SEMICOLON       reduce using rule 69 (TypeDecl -> TYPE TypeSpec .)


state 45

    (75) AliasDecl -> IDENTIFIER . ASSIGN Type
    (76) TypeDef -> IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    ASSIGN          shift and go to state 89
    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    Type                           shift and go to state 88
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 46

    (259) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 259 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 259 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 259 (ImportSpecRep -> epsilon .)
    STRING          reduce using rule 259 (ImportSpecRep -> epsilon .)


state 47

    (257) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (258) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOLON
    (260) ImportSpec -> . PackageNameDotOpt ImportPath
    (261) PackageNameDotOpt -> . DOT
    (262) PackageNameDotOpt -> . PackageName
    (263) PackageNameDotOpt -> . epsilon
    (255) PackageName -> . IDENTIFIER
    (265) epsilon -> .

    RPAREN          shift and go to state 90
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 265 (epsilon -> .)

    ImportSpec                     shift and go to state 91
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 48

    (260) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOLON       reduce using rule 260 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 49

    (264) ImportPath -> STRING .

    SEMICOLON       reduce using rule 264 (ImportPath -> STRING .)


state 50

    (57) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (58) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOLON
    (60) ConstSpec -> . IdentifierList TypeExprListOpt
    (63) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 93
    IDENTIFIER      shift and go to state 34

    ConstSpec                      shift and go to state 92
    IdentifierList                 shift and go to state 33

state 51

    (59) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 59 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 59 (ConstSpecRep -> epsilon .)


state 52

    (30) PointerType -> STAR . BaseType
    (31) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    BaseType                       shift and go to state 95
    Type                           shift and go to state 94
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 53

    (20) ArrayType -> LSQUARE . ArrayLength RSQUARE ElementType
    (21) ArrayLength -> . Expression
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    ArrayLength                    shift and go to state 114
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Expression                     shift and go to state 116

state 54

    (15) TypeLit -> ArrayType .

    RPAREN          reduce using rule 15 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 15 (TypeLit -> ArrayType .)
    COLON           reduce using rule 15 (TypeLit -> ArrayType .)
    STRING          reduce using rule 15 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 15 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 15 (TypeLit -> ArrayType .)
    ASSIGN          reduce using rule 15 (TypeLit -> ArrayType .)
    LCURL           reduce using rule 15 (TypeLit -> ArrayType .)


state 55

    (18) TypeOpt -> Type .

    ASSIGN          reduce using rule 18 (TypeOpt -> Type .)


state 56

    (9) TypeToken -> UINT_T .

    LCURL           reduce using rule 9 (TypeToken -> UINT_T .)
    SEMICOLON       reduce using rule 9 (TypeToken -> UINT_T .)
    RPAREN          reduce using rule 9 (TypeToken -> UINT_T .)
    COMMA           reduce using rule 9 (TypeToken -> UINT_T .)
    STRING          reduce using rule 9 (TypeToken -> UINT_T .)
    ASSIGN          reduce using rule 9 (TypeToken -> UINT_T .)
    LPAREN          reduce using rule 9 (TypeToken -> UINT_T .)
    COLON           reduce using rule 9 (TypeToken -> UINT_T .)


state 57

    (5) TypeName -> TypeToken .

    RPAREN          reduce using rule 5 (TypeName -> TypeToken .)
    COMMA           reduce using rule 5 (TypeName -> TypeToken .)
    STRING          reduce using rule 5 (TypeName -> TypeToken .)
    SEMICOLON       reduce using rule 5 (TypeName -> TypeToken .)
    COLON           reduce using rule 5 (TypeName -> TypeToken .)
    ASSIGN          reduce using rule 5 (TypeName -> TypeToken .)
    LCURL           reduce using rule 5 (TypeName -> TypeToken .)
    LPAREN          reduce using rule 5 (TypeName -> TypeToken .)


state 58

    (3) Type -> TypeLit .

    ASSIGN          reduce using rule 3 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    LCURL           reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    LPAREN          reduce using rule 3 (Type -> TypeLit .)
    STRING          reduce using rule 3 (Type -> TypeLit .)
    COLON           reduce using rule 3 (Type -> TypeLit .)


state 59

    (8) TypeToken -> FLOAT_T .

    LCURL           reduce using rule 8 (TypeToken -> FLOAT_T .)
    SEMICOLON       reduce using rule 8 (TypeToken -> FLOAT_T .)
    RPAREN          reduce using rule 8 (TypeToken -> FLOAT_T .)
    COMMA           reduce using rule 8 (TypeToken -> FLOAT_T .)
    STRING          reduce using rule 8 (TypeToken -> FLOAT_T .)
    ASSIGN          reduce using rule 8 (TypeToken -> FLOAT_T .)
    LPAREN          reduce using rule 8 (TypeToken -> FLOAT_T .)
    COLON           reduce using rule 8 (TypeToken -> FLOAT_T .)


state 60

    (2) Type -> TypeName .

    ASSIGN          reduce using rule 2 (Type -> TypeName .)
    SEMICOLON       reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    LCURL           reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    LPAREN          reduce using rule 2 (Type -> TypeName .)
    STRING          reduce using rule 2 (Type -> TypeName .)
    COLON           reduce using rule 2 (Type -> TypeName .)


state 61

    (10) TypeToken -> COMPLEX_T .

    LCURL           reduce using rule 10 (TypeToken -> COMPLEX_T .)
    SEMICOLON       reduce using rule 10 (TypeToken -> COMPLEX_T .)
    RPAREN          reduce using rule 10 (TypeToken -> COMPLEX_T .)
    COMMA           reduce using rule 10 (TypeToken -> COMPLEX_T .)
    STRING          reduce using rule 10 (TypeToken -> COMPLEX_T .)
    ASSIGN          reduce using rule 10 (TypeToken -> COMPLEX_T .)
    LPAREN          reduce using rule 10 (TypeToken -> COMPLEX_T .)
    COLON           reduce using rule 10 (TypeToken -> COMPLEX_T .)


state 62

    (103) QualifiedIdent -> IDENTIFIER . DOT TypeName

    DOT             shift and go to state 121


state 63

    (12) TypeToken -> BOOL_T .

    LCURL           reduce using rule 12 (TypeToken -> BOOL_T .)
    SEMICOLON       reduce using rule 12 (TypeToken -> BOOL_T .)
    RPAREN          reduce using rule 12 (TypeToken -> BOOL_T .)
    COMMA           reduce using rule 12 (TypeToken -> BOOL_T .)
    STRING          reduce using rule 12 (TypeToken -> BOOL_T .)
    ASSIGN          reduce using rule 12 (TypeToken -> BOOL_T .)
    LPAREN          reduce using rule 12 (TypeToken -> BOOL_T .)
    COLON           reduce using rule 12 (TypeToken -> BOOL_T .)


state 64

    (16) TypeLit -> StructType .

    RPAREN          reduce using rule 16 (TypeLit -> StructType .)
    COMMA           reduce using rule 16 (TypeLit -> StructType .)
    COLON           reduce using rule 16 (TypeLit -> StructType .)
    STRING          reduce using rule 16 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 16 (TypeLit -> StructType .)
    LPAREN          reduce using rule 16 (TypeLit -> StructType .)
    ASSIGN          reduce using rule 16 (TypeLit -> StructType .)
    LCURL           reduce using rule 16 (TypeLit -> StructType .)


state 65

    (62) TypeExprListOpt -> epsilon .
    (19) TypeOpt -> epsilon .

    SEMICOLON       reduce using rule 62 (TypeExprListOpt -> epsilon .)
    ASSIGN          reduce using rule 19 (TypeOpt -> epsilon .)


state 66

    (7) TypeToken -> INT_T .

    LCURL           reduce using rule 7 (TypeToken -> INT_T .)
    SEMICOLON       reduce using rule 7 (TypeToken -> INT_T .)
    RPAREN          reduce using rule 7 (TypeToken -> INT_T .)
    COMMA           reduce using rule 7 (TypeToken -> INT_T .)
    STRING          reduce using rule 7 (TypeToken -> INT_T .)
    ASSIGN          reduce using rule 7 (TypeToken -> INT_T .)
    LPAREN          reduce using rule 7 (TypeToken -> INT_T .)
    COLON           reduce using rule 7 (TypeToken -> INT_T .)


state 67

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    Type                           shift and go to state 122
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 68

    (61) TypeExprListOpt -> TypeOpt . ASSIGN ExpressionList

    ASSIGN          shift and go to state 123


state 69

    (13) TypeToken -> STRING_T .

    LCURL           reduce using rule 13 (TypeToken -> STRING_T .)
    SEMICOLON       reduce using rule 13 (TypeToken -> STRING_T .)
    RPAREN          reduce using rule 13 (TypeToken -> STRING_T .)
    COMMA           reduce using rule 13 (TypeToken -> STRING_T .)
    STRING          reduce using rule 13 (TypeToken -> STRING_T .)
    ASSIGN          reduce using rule 13 (TypeToken -> STRING_T .)
    LPAREN          reduce using rule 13 (TypeToken -> STRING_T .)
    COLON           reduce using rule 13 (TypeToken -> STRING_T .)


state 70

    (23) StructType -> STRUCT . LCURL FieldDeclRep RCURL

    LCURL           shift and go to state 124


state 71

    (60) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOLON       reduce using rule 60 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 72

    (17) TypeLit -> PointerType .

    RPAREN          reduce using rule 17 (TypeLit -> PointerType .)
    COMMA           reduce using rule 17 (TypeLit -> PointerType .)
    COLON           reduce using rule 17 (TypeLit -> PointerType .)
    STRING          reduce using rule 17 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 17 (TypeLit -> PointerType .)
    LPAREN          reduce using rule 17 (TypeLit -> PointerType .)
    ASSIGN          reduce using rule 17 (TypeLit -> PointerType .)
    LCURL           reduce using rule 17 (TypeLit -> PointerType .)


state 73

    (14) TypeToken -> TYPE . IDENTIFIER

    IDENTIFIER      shift and go to state 125


state 74

    (6) TypeName -> QualifiedIdent .

    RPAREN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 6 (TypeName -> QualifiedIdent .)
    STRING          reduce using rule 6 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 6 (TypeName -> QualifiedIdent .)
    COLON           reduce using rule 6 (TypeName -> QualifiedIdent .)
    ASSIGN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    LCURL           reduce using rule 6 (TypeName -> QualifiedIdent .)
    LPAREN          reduce using rule 6 (TypeName -> QualifiedIdent .)


state 75

    (11) TypeToken -> RUNE_T .

    LCURL           reduce using rule 11 (TypeToken -> RUNE_T .)
    SEMICOLON       reduce using rule 11 (TypeToken -> RUNE_T .)
    RPAREN          reduce using rule 11 (TypeToken -> RUNE_T .)
    COMMA           reduce using rule 11 (TypeToken -> RUNE_T .)
    STRING          reduce using rule 11 (TypeToken -> RUNE_T .)
    ASSIGN          reduce using rule 11 (TypeToken -> RUNE_T .)
    LPAREN          reduce using rule 11 (TypeToken -> RUNE_T .)
    COLON           reduce using rule 11 (TypeToken -> RUNE_T .)


state 76

    (65) IdentifierRep -> epsilon .

    COMMA           reduce using rule 65 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 65 (IdentifierRep -> epsilon .)
    INT_T           reduce using rule 65 (IdentifierRep -> epsilon .)
    FLOAT_T         reduce using rule 65 (IdentifierRep -> epsilon .)
    UINT_T          reduce using rule 65 (IdentifierRep -> epsilon .)
    COMPLEX_T       reduce using rule 65 (IdentifierRep -> epsilon .)
    RUNE_T          reduce using rule 65 (IdentifierRep -> epsilon .)
    BOOL_T          reduce using rule 65 (IdentifierRep -> epsilon .)
    STRING_T        reduce using rule 65 (IdentifierRep -> epsilon .)
    TYPE            reduce using rule 65 (IdentifierRep -> epsilon .)
    IDENTIFIER      reduce using rule 65 (IdentifierRep -> epsilon .)
    LSQUARE         reduce using rule 65 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 65 (IdentifierRep -> epsilon .)
    STAR            reduce using rule 65 (IdentifierRep -> epsilon .)
    ASSIGN          reduce using rule 65 (IdentifierRep -> epsilon .)
    SEMICOLON       reduce using rule 65 (IdentifierRep -> epsilon .)


state 77

    (63) IdentifierList -> IDENTIFIER IdentifierRep .
    (64) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    ASSIGN          reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LPAREN          reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    INT_T           reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    FLOAT_T         reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    UINT_T          reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMPLEX_T       reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    RUNE_T          reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    BOOL_T          reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRING_T        reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TYPE            reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    IDENTIFIER      reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LSQUARE         reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRUCT          reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STAR            reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    SEMICOLON       reduce using rule 63 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMMA           shift and go to state 126


state 78

    (86) FunctionDecl -> FUNC FunctionName Function .

    SEMICOLON       reduce using rule 86 (FunctionDecl -> FUNC FunctionName Function .)


state 79

    (32) Signature -> Parameters . ResultOpt
    (33) ResultOpt -> . Result
    (34) ResultOpt -> . epsilon
    (35) Result -> . Parameters
    (36) Result -> . Type
    (265) epsilon -> .
    (37) Parameters -> . LPAREN ParameterListOpt RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LCURL           reduce using rule 265 (epsilon -> .)
    SEMICOLON       reduce using rule 265 (epsilon -> .)
    LPAREN          shift and go to state 131
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    Parameters                     shift and go to state 127
    epsilon                        shift and go to state 130
    ResultOpt                      shift and go to state 129
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 58
    Result                         shift and go to state 132
    PointerType                    shift and go to state 72
    Type                           shift and go to state 128
    QualifiedIdent                 shift and go to state 74

state 80

    (87) FunctionDecl -> FUNC FunctionName Signature .
    (89) Function -> Signature . FunctionBody
    (90) FunctionBody -> . Block
    (47) Block -> . LCURL StatementList RCURL

    SEMICOLON       reduce using rule 87 (FunctionDecl -> FUNC FunctionName Signature .)
    LCURL           shift and go to state 135

    FunctionBody                   shift and go to state 133
    Block                          shift and go to state 134

state 81

    (37) Parameters -> LPAREN . ParameterListOpt RPAREN
    (38) ParameterListOpt -> . ParametersList
    (39) ParameterListOpt -> . epsilon
    (40) ParametersList -> . Type
    (41) ParametersList -> . IdentifierList Type
    (42) ParametersList -> . ParameterDeclCommaRep
    (265) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (63) IdentifierList -> . IDENTIFIER IdentifierRep
    (43) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (44) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (45) ParameterDecl -> . IdentifierList Type
    (46) ParameterDecl -> . Type
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    RPAREN          reduce using rule 265 (epsilon -> .)
    LPAREN          shift and go to state 67
    IDENTIFIER      shift and go to state 141
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    epsilon                        shift and go to state 143
    ParameterListOpt               shift and go to state 136
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 58
    IdentifierList                 shift and go to state 137
    PointerType                    shift and go to state 72
    ParametersList                 shift and go to state 140
    Type                           shift and go to state 139
    ParameterDeclCommaRep          shift and go to state 138
    QualifiedIdent                 shift and go to state 74
    ParameterDecl                  shift and go to state 142

state 82

    (78) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (79) VarSpecRep -> VarSpecRep . VarSpec SEMICOLON
    (81) VarSpec -> . IdentifierList Type ExpressionListOpt
    (82) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (63) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 144
    IDENTIFIER      shift and go to state 34

    VarSpec                        shift and go to state 145
    IdentifierList                 shift and go to state 40

state 83

    (80) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 80 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 80 (VarSpecRep -> epsilon .)


state 84

    (81) VarSpec -> IdentifierList Type . ExpressionListOpt
    (83) ExpressionListOpt -> . ASSIGN ExpressionList
    (84) ExpressionListOpt -> . epsilon
    (265) epsilon -> .

    ASSIGN          shift and go to state 148
    SEMICOLON       reduce using rule 265 (epsilon -> .)

    ExpressionListOpt              shift and go to state 147
    epsilon                        shift and go to state 146

state 85

    (82) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (66) ExpressionList -> . Expression ExpressionRep
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    BasicLit                       shift and go to state 106
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Conversion                     shift and go to state 96
    OperandName                    shift and go to state 105
    ExpressionList                 shift and go to state 149
    PrimaryExpr                    shift and go to state 100
    Literal                        shift and go to state 101
    Expression                     shift and go to state 150

state 86

    (70) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (71) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOLON
    (73) TypeSpec -> . AliasDecl
    (74) TypeSpec -> . TypeDef
    (75) AliasDecl -> . IDENTIFIER ASSIGN Type
    (76) TypeDef -> . IDENTIFIER Type

    RPAREN          shift and go to state 151
    IDENTIFIER      shift and go to state 45

    TypeDef                        shift and go to state 41
    AliasDecl                      shift and go to state 42
    TypeSpec                       shift and go to state 152

state 87

    (72) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 72 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 72 (TypeSpecRep -> epsilon .)


state 88

    (76) TypeDef -> IDENTIFIER Type .

    SEMICOLON       reduce using rule 76 (TypeDef -> IDENTIFIER Type .)


state 89

    (75) AliasDecl -> IDENTIFIER ASSIGN . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    Type                           shift and go to state 153
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 90

    (257) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOLON       reduce using rule 257 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 91

    (258) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 154


state 92

    (58) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 155


state 93

    (57) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOLON       reduce using rule 57 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 94

    (31) BaseType -> Type .

    ASSIGN          reduce using rule 31 (BaseType -> Type .)
    SEMICOLON       reduce using rule 31 (BaseType -> Type .)
    RPAREN          reduce using rule 31 (BaseType -> Type .)
    LCURL           reduce using rule 31 (BaseType -> Type .)
    COMMA           reduce using rule 31 (BaseType -> Type .)
    LPAREN          reduce using rule 31 (BaseType -> Type .)
    STRING          reduce using rule 31 (BaseType -> Type .)
    COLON           reduce using rule 31 (BaseType -> Type .)


state 95

    (30) PointerType -> STAR BaseType .

    COMMA           reduce using rule 30 (PointerType -> STAR BaseType .)
    RPAREN          reduce using rule 30 (PointerType -> STAR BaseType .)
    COLON           reduce using rule 30 (PointerType -> STAR BaseType .)
    ASSIGN          reduce using rule 30 (PointerType -> STAR BaseType .)
    SEMICOLON       reduce using rule 30 (PointerType -> STAR BaseType .)
    LCURL           reduce using rule 30 (PointerType -> STAR BaseType .)
    LPAREN          reduce using rule 30 (PointerType -> STAR BaseType .)
    STRING          reduce using rule 30 (PointerType -> STAR BaseType .)


state 96

    (124) PrimaryExpr -> Conversion .

    DOT             reduce using rule 124 (PrimaryExpr -> Conversion .)
    LSQUARE         reduce using rule 124 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 124 (PrimaryExpr -> Conversion .)
    LCURL           reduce using rule 124 (PrimaryExpr -> Conversion .)
    LOGICAL_OR      reduce using rule 124 (PrimaryExpr -> Conversion .)
    LOGICAL_AND     reduce using rule 124 (PrimaryExpr -> Conversion .)
    EQUALS          reduce using rule 124 (PrimaryExpr -> Conversion .)
    NOT_ASSIGN      reduce using rule 124 (PrimaryExpr -> Conversion .)
    LESSER          reduce using rule 124 (PrimaryExpr -> Conversion .)
    GREATER         reduce using rule 124 (PrimaryExpr -> Conversion .)
    LESS_EQUALS     reduce using rule 124 (PrimaryExpr -> Conversion .)
    MORE_EQUALS     reduce using rule 124 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 124 (PrimaryExpr -> Conversion .)
    XOR             reduce using rule 124 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 124 (PrimaryExpr -> Conversion .)
    MOD             reduce using rule 124 (PrimaryExpr -> Conversion .)
    LSHIFT          reduce using rule 124 (PrimaryExpr -> Conversion .)
    RSHIFT          reduce using rule 124 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 124 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 124 (PrimaryExpr -> Conversion .)
    STAR            reduce using rule 124 (PrimaryExpr -> Conversion .)
    AND             reduce using rule 124 (PrimaryExpr -> Conversion .)
    RSQUARE         reduce using rule 124 (PrimaryExpr -> Conversion .)
    INCR            reduce using rule 124 (PrimaryExpr -> Conversion .)
    DECR            reduce using rule 124 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 124 (PrimaryExpr -> Conversion .)
    SEMICOLON       reduce using rule 124 (PrimaryExpr -> Conversion .)
    PLUS_ASSIGN     reduce using rule 124 (PrimaryExpr -> Conversion .)
    MINUS_ASSIGN    reduce using rule 124 (PrimaryExpr -> Conversion .)
    STAR_ASSIGN     reduce using rule 124 (PrimaryExpr -> Conversion .)
    DIVIDE_ASSIGN   reduce using rule 124 (PrimaryExpr -> Conversion .)
    MOD_ASSIGN      reduce using rule 124 (PrimaryExpr -> Conversion .)
    AND_ASSIGN      reduce using rule 124 (PrimaryExpr -> Conversion .)
    OR_ASSIGN       reduce using rule 124 (PrimaryExpr -> Conversion .)
    XOR_ASSIGN      reduce using rule 124 (PrimaryExpr -> Conversion .)
    LSHIFT_ASSIGN   reduce using rule 124 (PrimaryExpr -> Conversion .)
    RSHIFT_ASSIGN   reduce using rule 124 (PrimaryExpr -> Conversion .)
    ASSIGN          reduce using rule 124 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 124 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 124 (PrimaryExpr -> Conversion .)


state 97

    (165) UnaryOp -> STAR .

    NOT             reduce using rule 165 (UnaryOp -> STAR .)
    PLUS            reduce using rule 165 (UnaryOp -> STAR .)
    MINUS           reduce using rule 165 (UnaryOp -> STAR .)
    STAR            reduce using rule 165 (UnaryOp -> STAR .)
    AND             reduce using rule 165 (UnaryOp -> STAR .)
    LPAREN          reduce using rule 165 (UnaryOp -> STAR .)
    TYPECAST        reduce using rule 165 (UnaryOp -> STAR .)
    IDENTIFIER      reduce using rule 165 (UnaryOp -> STAR .)
    INTEGER         reduce using rule 165 (UnaryOp -> STAR .)
    OCTAL           reduce using rule 165 (UnaryOp -> STAR .)
    HEX             reduce using rule 165 (UnaryOp -> STAR .)
    FLOAT           reduce using rule 165 (UnaryOp -> STAR .)
    IMAGINARY       reduce using rule 165 (UnaryOp -> STAR .)
    RUNE            reduce using rule 165 (UnaryOp -> STAR .)
    STRING          reduce using rule 165 (UnaryOp -> STAR .)


state 98

    (93) Operand -> LPAREN . Expression RPAREN
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Expression                     shift and go to state 156

state 99

    (144) UnaryExpr -> UnaryOp . UnaryExpr
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 157
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100

state 100

    (143) UnaryExpr -> PrimaryExpr .
    (123) PrimaryExpr -> PrimaryExpr . Selector
    (125) PrimaryExpr -> PrimaryExpr . Index
    (126) PrimaryExpr -> PrimaryExpr . Slice
    (127) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (128) PrimaryExpr -> PrimaryExpr . Arguments
    (129) Selector -> . DOT IDENTIFIER
    (130) Index -> . LSQUARE Expression RSQUARE
    (131) Slice -> . LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
    (132) Slice -> . LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
    (133) TypeAssertion -> . DOT LPAREN Type RPAREN
    (134) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    LCURL           reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    LOGICAL_OR      reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    LOGICAL_AND     reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    EQUALS          reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    NOT_ASSIGN      reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    LESSER          reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    GREATER         reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    LESS_EQUALS     reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    MORE_EQUALS     reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    LSHIFT          reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    RSHIFT          reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    STAR            reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    INCR            reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    DECR            reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    PLUS_ASSIGN     reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    MINUS_ASSIGN    reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    STAR_ASSIGN     reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    MOD_ASSIGN      reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    RSQUARE         reduce using rule 143 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 165
    LSQUARE         shift and go to state 164
    LPAREN          shift and go to state 160

    Index                          shift and go to state 158
    Slice                          shift and go to state 159
    Selector                       shift and go to state 161
    TypeAssertion                  shift and go to state 162
    Arguments                      shift and go to state 163

state 101

    (91) Operand -> Literal .

    DOT             reduce using rule 91 (Operand -> Literal .)
    LSQUARE         reduce using rule 91 (Operand -> Literal .)
    LPAREN          reduce using rule 91 (Operand -> Literal .)
    LOGICAL_OR      reduce using rule 91 (Operand -> Literal .)
    LOGICAL_AND     reduce using rule 91 (Operand -> Literal .)
    EQUALS          reduce using rule 91 (Operand -> Literal .)
    NOT_ASSIGN      reduce using rule 91 (Operand -> Literal .)
    LESSER          reduce using rule 91 (Operand -> Literal .)
    GREATER         reduce using rule 91 (Operand -> Literal .)
    LESS_EQUALS     reduce using rule 91 (Operand -> Literal .)
    MORE_EQUALS     reduce using rule 91 (Operand -> Literal .)
    OR              reduce using rule 91 (Operand -> Literal .)
    XOR             reduce using rule 91 (Operand -> Literal .)
    DIVIDE          reduce using rule 91 (Operand -> Literal .)
    MOD             reduce using rule 91 (Operand -> Literal .)
    LSHIFT          reduce using rule 91 (Operand -> Literal .)
    RSHIFT          reduce using rule 91 (Operand -> Literal .)
    PLUS            reduce using rule 91 (Operand -> Literal .)
    MINUS           reduce using rule 91 (Operand -> Literal .)
    STAR            reduce using rule 91 (Operand -> Literal .)
    AND             reduce using rule 91 (Operand -> Literal .)
    COMMA           reduce using rule 91 (Operand -> Literal .)
    SEMICOLON       reduce using rule 91 (Operand -> Literal .)
    RPAREN          reduce using rule 91 (Operand -> Literal .)
    LCURL           reduce using rule 91 (Operand -> Literal .)
    COLON           reduce using rule 91 (Operand -> Literal .)
    PLUS_ASSIGN     reduce using rule 91 (Operand -> Literal .)
    MINUS_ASSIGN    reduce using rule 91 (Operand -> Literal .)
    STAR_ASSIGN     reduce using rule 91 (Operand -> Literal .)
    DIVIDE_ASSIGN   reduce using rule 91 (Operand -> Literal .)
    MOD_ASSIGN      reduce using rule 91 (Operand -> Literal .)
    AND_ASSIGN      reduce using rule 91 (Operand -> Literal .)
    OR_ASSIGN       reduce using rule 91 (Operand -> Literal .)
    XOR_ASSIGN      reduce using rule 91 (Operand -> Literal .)
    LSHIFT_ASSIGN   reduce using rule 91 (Operand -> Literal .)
    RSHIFT_ASSIGN   reduce using rule 91 (Operand -> Literal .)
    ASSIGN          reduce using rule 91 (Operand -> Literal .)
    RSQUARE         reduce using rule 91 (Operand -> Literal .)
    INCR            reduce using rule 91 (Operand -> Literal .)
    DECR            reduce using rule 91 (Operand -> Literal .)


state 102

    (122) PrimaryExpr -> Operand .

    DOT             reduce using rule 122 (PrimaryExpr -> Operand .)
    LSQUARE         reduce using rule 122 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 122 (PrimaryExpr -> Operand .)
    LCURL           reduce using rule 122 (PrimaryExpr -> Operand .)
    LOGICAL_OR      reduce using rule 122 (PrimaryExpr -> Operand .)
    LOGICAL_AND     reduce using rule 122 (PrimaryExpr -> Operand .)
    EQUALS          reduce using rule 122 (PrimaryExpr -> Operand .)
    NOT_ASSIGN      reduce using rule 122 (PrimaryExpr -> Operand .)
    LESSER          reduce using rule 122 (PrimaryExpr -> Operand .)
    GREATER         reduce using rule 122 (PrimaryExpr -> Operand .)
    LESS_EQUALS     reduce using rule 122 (PrimaryExpr -> Operand .)
    MORE_EQUALS     reduce using rule 122 (PrimaryExpr -> Operand .)
    OR              reduce using rule 122 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 122 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 122 (PrimaryExpr -> Operand .)
    MOD             reduce using rule 122 (PrimaryExpr -> Operand .)
    LSHIFT          reduce using rule 122 (PrimaryExpr -> Operand .)
    RSHIFT          reduce using rule 122 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 122 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 122 (PrimaryExpr -> Operand .)
    STAR            reduce using rule 122 (PrimaryExpr -> Operand .)
    AND             reduce using rule 122 (PrimaryExpr -> Operand .)
    RSQUARE         reduce using rule 122 (PrimaryExpr -> Operand .)
    INCR            reduce using rule 122 (PrimaryExpr -> Operand .)
    DECR            reduce using rule 122 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 122 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 122 (PrimaryExpr -> Operand .)
    PLUS_ASSIGN     reduce using rule 122 (PrimaryExpr -> Operand .)
    MINUS_ASSIGN    reduce using rule 122 (PrimaryExpr -> Operand .)
    STAR_ASSIGN     reduce using rule 122 (PrimaryExpr -> Operand .)
    DIVIDE_ASSIGN   reduce using rule 122 (PrimaryExpr -> Operand .)
    MOD_ASSIGN      reduce using rule 122 (PrimaryExpr -> Operand .)
    AND_ASSIGN      reduce using rule 122 (PrimaryExpr -> Operand .)
    OR_ASSIGN       reduce using rule 122 (PrimaryExpr -> Operand .)
    XOR_ASSIGN      reduce using rule 122 (PrimaryExpr -> Operand .)
    LSHIFT_ASSIGN   reduce using rule 122 (PrimaryExpr -> Operand .)
    RSHIFT_ASSIGN   reduce using rule 122 (PrimaryExpr -> Operand .)
    ASSIGN          reduce using rule 122 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 122 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 122 (PrimaryExpr -> Operand .)


state 103

    (100) BasicLit -> RUNE .

    DOT             reduce using rule 100 (BasicLit -> RUNE .)
    LSQUARE         reduce using rule 100 (BasicLit -> RUNE .)
    LPAREN          reduce using rule 100 (BasicLit -> RUNE .)
    INCR            reduce using rule 100 (BasicLit -> RUNE .)
    DECR            reduce using rule 100 (BasicLit -> RUNE .)
    LOGICAL_OR      reduce using rule 100 (BasicLit -> RUNE .)
    LOGICAL_AND     reduce using rule 100 (BasicLit -> RUNE .)
    EQUALS          reduce using rule 100 (BasicLit -> RUNE .)
    NOT_ASSIGN      reduce using rule 100 (BasicLit -> RUNE .)
    LESSER          reduce using rule 100 (BasicLit -> RUNE .)
    GREATER         reduce using rule 100 (BasicLit -> RUNE .)
    LESS_EQUALS     reduce using rule 100 (BasicLit -> RUNE .)
    MORE_EQUALS     reduce using rule 100 (BasicLit -> RUNE .)
    OR              reduce using rule 100 (BasicLit -> RUNE .)
    XOR             reduce using rule 100 (BasicLit -> RUNE .)
    DIVIDE          reduce using rule 100 (BasicLit -> RUNE .)
    MOD             reduce using rule 100 (BasicLit -> RUNE .)
    LSHIFT          reduce using rule 100 (BasicLit -> RUNE .)
    RSHIFT          reduce using rule 100 (BasicLit -> RUNE .)
    PLUS            reduce using rule 100 (BasicLit -> RUNE .)
    MINUS           reduce using rule 100 (BasicLit -> RUNE .)
    STAR            reduce using rule 100 (BasicLit -> RUNE .)
    AND             reduce using rule 100 (BasicLit -> RUNE .)
    COMMA           reduce using rule 100 (BasicLit -> RUNE .)
    SEMICOLON       reduce using rule 100 (BasicLit -> RUNE .)
    PLUS_ASSIGN     reduce using rule 100 (BasicLit -> RUNE .)
    MINUS_ASSIGN    reduce using rule 100 (BasicLit -> RUNE .)
    STAR_ASSIGN     reduce using rule 100 (BasicLit -> RUNE .)
    DIVIDE_ASSIGN   reduce using rule 100 (BasicLit -> RUNE .)
    MOD_ASSIGN      reduce using rule 100 (BasicLit -> RUNE .)
    AND_ASSIGN      reduce using rule 100 (BasicLit -> RUNE .)
    OR_ASSIGN       reduce using rule 100 (BasicLit -> RUNE .)
    XOR_ASSIGN      reduce using rule 100 (BasicLit -> RUNE .)
    LSHIFT_ASSIGN   reduce using rule 100 (BasicLit -> RUNE .)
    RSHIFT_ASSIGN   reduce using rule 100 (BasicLit -> RUNE .)
    ASSIGN          reduce using rule 100 (BasicLit -> RUNE .)
    RSQUARE         reduce using rule 100 (BasicLit -> RUNE .)
    COLON           reduce using rule 100 (BasicLit -> RUNE .)
    LCURL           reduce using rule 100 (BasicLit -> RUNE .)
    RPAREN          reduce using rule 100 (BasicLit -> RUNE .)


state 104

    (164) UnaryOp -> MINUS .

    NOT             reduce using rule 164 (UnaryOp -> MINUS .)
    PLUS            reduce using rule 164 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 164 (UnaryOp -> MINUS .)
    STAR            reduce using rule 164 (UnaryOp -> MINUS .)
    AND             reduce using rule 164 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 164 (UnaryOp -> MINUS .)
    TYPECAST        reduce using rule 164 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 164 (UnaryOp -> MINUS .)
    INTEGER         reduce using rule 164 (UnaryOp -> MINUS .)
    OCTAL           reduce using rule 164 (UnaryOp -> MINUS .)
    HEX             reduce using rule 164 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 164 (UnaryOp -> MINUS .)
    IMAGINARY       reduce using rule 164 (UnaryOp -> MINUS .)
    RUNE            reduce using rule 164 (UnaryOp -> MINUS .)
    STRING          reduce using rule 164 (UnaryOp -> MINUS .)


state 105

    (92) Operand -> OperandName .

    DOT             reduce using rule 92 (Operand -> OperandName .)
    LSQUARE         reduce using rule 92 (Operand -> OperandName .)
    LPAREN          reduce using rule 92 (Operand -> OperandName .)
    LOGICAL_OR      reduce using rule 92 (Operand -> OperandName .)
    LOGICAL_AND     reduce using rule 92 (Operand -> OperandName .)
    EQUALS          reduce using rule 92 (Operand -> OperandName .)
    NOT_ASSIGN      reduce using rule 92 (Operand -> OperandName .)
    LESSER          reduce using rule 92 (Operand -> OperandName .)
    GREATER         reduce using rule 92 (Operand -> OperandName .)
    LESS_EQUALS     reduce using rule 92 (Operand -> OperandName .)
    MORE_EQUALS     reduce using rule 92 (Operand -> OperandName .)
    OR              reduce using rule 92 (Operand -> OperandName .)
    XOR             reduce using rule 92 (Operand -> OperandName .)
    DIVIDE          reduce using rule 92 (Operand -> OperandName .)
    MOD             reduce using rule 92 (Operand -> OperandName .)
    LSHIFT          reduce using rule 92 (Operand -> OperandName .)
    RSHIFT          reduce using rule 92 (Operand -> OperandName .)
    PLUS            reduce using rule 92 (Operand -> OperandName .)
    MINUS           reduce using rule 92 (Operand -> OperandName .)
    STAR            reduce using rule 92 (Operand -> OperandName .)
    AND             reduce using rule 92 (Operand -> OperandName .)
    COMMA           reduce using rule 92 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 92 (Operand -> OperandName .)
    RPAREN          reduce using rule 92 (Operand -> OperandName .)
    LCURL           reduce using rule 92 (Operand -> OperandName .)
    COLON           reduce using rule 92 (Operand -> OperandName .)
    PLUS_ASSIGN     reduce using rule 92 (Operand -> OperandName .)
    MINUS_ASSIGN    reduce using rule 92 (Operand -> OperandName .)
    STAR_ASSIGN     reduce using rule 92 (Operand -> OperandName .)
    DIVIDE_ASSIGN   reduce using rule 92 (Operand -> OperandName .)
    MOD_ASSIGN      reduce using rule 92 (Operand -> OperandName .)
    AND_ASSIGN      reduce using rule 92 (Operand -> OperandName .)
    OR_ASSIGN       reduce using rule 92 (Operand -> OperandName .)
    XOR_ASSIGN      reduce using rule 92 (Operand -> OperandName .)
    LSHIFT_ASSIGN   reduce using rule 92 (Operand -> OperandName .)
    RSHIFT_ASSIGN   reduce using rule 92 (Operand -> OperandName .)
    ASSIGN          reduce using rule 92 (Operand -> OperandName .)
    RSQUARE         reduce using rule 92 (Operand -> OperandName .)
    INCR            reduce using rule 92 (Operand -> OperandName .)
    DECR            reduce using rule 92 (Operand -> OperandName .)


state 106

    (94) Literal -> BasicLit .

    DOT             reduce using rule 94 (Literal -> BasicLit .)
    LSQUARE         reduce using rule 94 (Literal -> BasicLit .)
    LPAREN          reduce using rule 94 (Literal -> BasicLit .)
    INCR            reduce using rule 94 (Literal -> BasicLit .)
    DECR            reduce using rule 94 (Literal -> BasicLit .)
    LOGICAL_OR      reduce using rule 94 (Literal -> BasicLit .)
    LOGICAL_AND     reduce using rule 94 (Literal -> BasicLit .)
    EQUALS          reduce using rule 94 (Literal -> BasicLit .)
    NOT_ASSIGN      reduce using rule 94 (Literal -> BasicLit .)
    LESSER          reduce using rule 94 (Literal -> BasicLit .)
    GREATER         reduce using rule 94 (Literal -> BasicLit .)
    LESS_EQUALS     reduce using rule 94 (Literal -> BasicLit .)
    MORE_EQUALS     reduce using rule 94 (Literal -> BasicLit .)
    OR              reduce using rule 94 (Literal -> BasicLit .)
    XOR             reduce using rule 94 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 94 (Literal -> BasicLit .)
    MOD             reduce using rule 94 (Literal -> BasicLit .)
    LSHIFT          reduce using rule 94 (Literal -> BasicLit .)
    RSHIFT          reduce using rule 94 (Literal -> BasicLit .)
    PLUS            reduce using rule 94 (Literal -> BasicLit .)
    MINUS           reduce using rule 94 (Literal -> BasicLit .)
    STAR            reduce using rule 94 (Literal -> BasicLit .)
    AND             reduce using rule 94 (Literal -> BasicLit .)
    COMMA           reduce using rule 94 (Literal -> BasicLit .)
    LCURL           reduce using rule 94 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 94 (Literal -> BasicLit .)
    PLUS_ASSIGN     reduce using rule 94 (Literal -> BasicLit .)
    MINUS_ASSIGN    reduce using rule 94 (Literal -> BasicLit .)
    STAR_ASSIGN     reduce using rule 94 (Literal -> BasicLit .)
    DIVIDE_ASSIGN   reduce using rule 94 (Literal -> BasicLit .)
    MOD_ASSIGN      reduce using rule 94 (Literal -> BasicLit .)
    AND_ASSIGN      reduce using rule 94 (Literal -> BasicLit .)
    OR_ASSIGN       reduce using rule 94 (Literal -> BasicLit .)
    XOR_ASSIGN      reduce using rule 94 (Literal -> BasicLit .)
    LSHIFT_ASSIGN   reduce using rule 94 (Literal -> BasicLit .)
    RSHIFT_ASSIGN   reduce using rule 94 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 94 (Literal -> BasicLit .)
    RSQUARE         reduce using rule 94 (Literal -> BasicLit .)
    RPAREN          reduce using rule 94 (Literal -> BasicLit .)
    COLON           reduce using rule 94 (Literal -> BasicLit .)


state 107

    (163) UnaryOp -> PLUS .

    NOT             reduce using rule 163 (UnaryOp -> PLUS .)
    PLUS            reduce using rule 163 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 163 (UnaryOp -> PLUS .)
    STAR            reduce using rule 163 (UnaryOp -> PLUS .)
    AND             reduce using rule 163 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 163 (UnaryOp -> PLUS .)
    TYPECAST        reduce using rule 163 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 163 (UnaryOp -> PLUS .)
    INTEGER         reduce using rule 163 (UnaryOp -> PLUS .)
    OCTAL           reduce using rule 163 (UnaryOp -> PLUS .)
    HEX             reduce using rule 163 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 163 (UnaryOp -> PLUS .)
    IMAGINARY       reduce using rule 163 (UnaryOp -> PLUS .)
    RUNE            reduce using rule 163 (UnaryOp -> PLUS .)
    STRING          reduce using rule 163 (UnaryOp -> PLUS .)


state 108

    (95) BasicLit -> INTEGER .

    DOT             reduce using rule 95 (BasicLit -> INTEGER .)
    LSQUARE         reduce using rule 95 (BasicLit -> INTEGER .)
    LPAREN          reduce using rule 95 (BasicLit -> INTEGER .)
    INCR            reduce using rule 95 (BasicLit -> INTEGER .)
    DECR            reduce using rule 95 (BasicLit -> INTEGER .)
    LOGICAL_OR      reduce using rule 95 (BasicLit -> INTEGER .)
    LOGICAL_AND     reduce using rule 95 (BasicLit -> INTEGER .)
    EQUALS          reduce using rule 95 (BasicLit -> INTEGER .)
    NOT_ASSIGN      reduce using rule 95 (BasicLit -> INTEGER .)
    LESSER          reduce using rule 95 (BasicLit -> INTEGER .)
    GREATER         reduce using rule 95 (BasicLit -> INTEGER .)
    LESS_EQUALS     reduce using rule 95 (BasicLit -> INTEGER .)
    MORE_EQUALS     reduce using rule 95 (BasicLit -> INTEGER .)
    OR              reduce using rule 95 (BasicLit -> INTEGER .)
    XOR             reduce using rule 95 (BasicLit -> INTEGER .)
    DIVIDE          reduce using rule 95 (BasicLit -> INTEGER .)
    MOD             reduce using rule 95 (BasicLit -> INTEGER .)
    LSHIFT          reduce using rule 95 (BasicLit -> INTEGER .)
    RSHIFT          reduce using rule 95 (BasicLit -> INTEGER .)
    PLUS            reduce using rule 95 (BasicLit -> INTEGER .)
    MINUS           reduce using rule 95 (BasicLit -> INTEGER .)
    STAR            reduce using rule 95 (BasicLit -> INTEGER .)
    AND             reduce using rule 95 (BasicLit -> INTEGER .)
    COMMA           reduce using rule 95 (BasicLit -> INTEGER .)
    SEMICOLON       reduce using rule 95 (BasicLit -> INTEGER .)
    PLUS_ASSIGN     reduce using rule 95 (BasicLit -> INTEGER .)
    MINUS_ASSIGN    reduce using rule 95 (BasicLit -> INTEGER .)
    STAR_ASSIGN     reduce using rule 95 (BasicLit -> INTEGER .)
    DIVIDE_ASSIGN   reduce using rule 95 (BasicLit -> INTEGER .)
    MOD_ASSIGN      reduce using rule 95 (BasicLit -> INTEGER .)
    AND_ASSIGN      reduce using rule 95 (BasicLit -> INTEGER .)
    OR_ASSIGN       reduce using rule 95 (BasicLit -> INTEGER .)
    XOR_ASSIGN      reduce using rule 95 (BasicLit -> INTEGER .)
    LSHIFT_ASSIGN   reduce using rule 95 (BasicLit -> INTEGER .)
    RSHIFT_ASSIGN   reduce using rule 95 (BasicLit -> INTEGER .)
    ASSIGN          reduce using rule 95 (BasicLit -> INTEGER .)
    RSQUARE         reduce using rule 95 (BasicLit -> INTEGER .)
    COLON           reduce using rule 95 (BasicLit -> INTEGER .)
    LCURL           reduce using rule 95 (BasicLit -> INTEGER .)
    RPAREN          reduce using rule 95 (BasicLit -> INTEGER .)


state 109

    (99) BasicLit -> IMAGINARY .

    DOT             reduce using rule 99 (BasicLit -> IMAGINARY .)
    LSQUARE         reduce using rule 99 (BasicLit -> IMAGINARY .)
    LPAREN          reduce using rule 99 (BasicLit -> IMAGINARY .)
    INCR            reduce using rule 99 (BasicLit -> IMAGINARY .)
    DECR            reduce using rule 99 (BasicLit -> IMAGINARY .)
    LOGICAL_OR      reduce using rule 99 (BasicLit -> IMAGINARY .)
    LOGICAL_AND     reduce using rule 99 (BasicLit -> IMAGINARY .)
    EQUALS          reduce using rule 99 (BasicLit -> IMAGINARY .)
    NOT_ASSIGN      reduce using rule 99 (BasicLit -> IMAGINARY .)
    LESSER          reduce using rule 99 (BasicLit -> IMAGINARY .)
    GREATER         reduce using rule 99 (BasicLit -> IMAGINARY .)
    LESS_EQUALS     reduce using rule 99 (BasicLit -> IMAGINARY .)
    MORE_EQUALS     reduce using rule 99 (BasicLit -> IMAGINARY .)
    OR              reduce using rule 99 (BasicLit -> IMAGINARY .)
    XOR             reduce using rule 99 (BasicLit -> IMAGINARY .)
    DIVIDE          reduce using rule 99 (BasicLit -> IMAGINARY .)
    MOD             reduce using rule 99 (BasicLit -> IMAGINARY .)
    LSHIFT          reduce using rule 99 (BasicLit -> IMAGINARY .)
    RSHIFT          reduce using rule 99 (BasicLit -> IMAGINARY .)
    PLUS            reduce using rule 99 (BasicLit -> IMAGINARY .)
    MINUS           reduce using rule 99 (BasicLit -> IMAGINARY .)
    STAR            reduce using rule 99 (BasicLit -> IMAGINARY .)
    AND             reduce using rule 99 (BasicLit -> IMAGINARY .)
    COMMA           reduce using rule 99 (BasicLit -> IMAGINARY .)
    SEMICOLON       reduce using rule 99 (BasicLit -> IMAGINARY .)
    PLUS_ASSIGN     reduce using rule 99 (BasicLit -> IMAGINARY .)
    MINUS_ASSIGN    reduce using rule 99 (BasicLit -> IMAGINARY .)
    STAR_ASSIGN     reduce using rule 99 (BasicLit -> IMAGINARY .)
    DIVIDE_ASSIGN   reduce using rule 99 (BasicLit -> IMAGINARY .)
    MOD_ASSIGN      reduce using rule 99 (BasicLit -> IMAGINARY .)
    AND_ASSIGN      reduce using rule 99 (BasicLit -> IMAGINARY .)
    OR_ASSIGN       reduce using rule 99 (BasicLit -> IMAGINARY .)
    XOR_ASSIGN      reduce using rule 99 (BasicLit -> IMAGINARY .)
    LSHIFT_ASSIGN   reduce using rule 99 (BasicLit -> IMAGINARY .)
    RSHIFT_ASSIGN   reduce using rule 99 (BasicLit -> IMAGINARY .)
    ASSIGN          reduce using rule 99 (BasicLit -> IMAGINARY .)
    RSQUARE         reduce using rule 99 (BasicLit -> IMAGINARY .)
    COLON           reduce using rule 99 (BasicLit -> IMAGINARY .)
    LCURL           reduce using rule 99 (BasicLit -> IMAGINARY .)
    RPAREN          reduce using rule 99 (BasicLit -> IMAGINARY .)


state 110

    (102) OperandName -> IDENTIFIER .

    DOT             reduce using rule 102 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 102 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 102 (OperandName -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 102 (OperandName -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 102 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 102 (OperandName -> IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    LESSER          reduce using rule 102 (OperandName -> IDENTIFIER .)
    GREATER         reduce using rule 102 (OperandName -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 102 (OperandName -> IDENTIFIER .)
    MORE_EQUALS     reduce using rule 102 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 102 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 102 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 102 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 102 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 102 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 102 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 102 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 102 (OperandName -> IDENTIFIER .)
    STAR            reduce using rule 102 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 102 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 102 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 102 (OperandName -> IDENTIFIER .)
    RSQUARE         reduce using rule 102 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 102 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 102 (OperandName -> IDENTIFIER .)
    INCR            reduce using rule 102 (OperandName -> IDENTIFIER .)
    DECR            reduce using rule 102 (OperandName -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 102 (OperandName -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 102 (OperandName -> IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 102 (OperandName -> IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 102 (OperandName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 102 (OperandName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 102 (OperandName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 102 (OperandName -> IDENTIFIER .)
    ASSIGN          reduce using rule 102 (OperandName -> IDENTIFIER .)
    LCURL           reduce using rule 102 (OperandName -> IDENTIFIER .)


state 111

    (101) BasicLit -> STRING .

    DOT             reduce using rule 101 (BasicLit -> STRING .)
    LSQUARE         reduce using rule 101 (BasicLit -> STRING .)
    LPAREN          reduce using rule 101 (BasicLit -> STRING .)
    INCR            reduce using rule 101 (BasicLit -> STRING .)
    DECR            reduce using rule 101 (BasicLit -> STRING .)
    LOGICAL_OR      reduce using rule 101 (BasicLit -> STRING .)
    LOGICAL_AND     reduce using rule 101 (BasicLit -> STRING .)
    EQUALS          reduce using rule 101 (BasicLit -> STRING .)
    NOT_ASSIGN      reduce using rule 101 (BasicLit -> STRING .)
    LESSER          reduce using rule 101 (BasicLit -> STRING .)
    GREATER         reduce using rule 101 (BasicLit -> STRING .)
    LESS_EQUALS     reduce using rule 101 (BasicLit -> STRING .)
    MORE_EQUALS     reduce using rule 101 (BasicLit -> STRING .)
    OR              reduce using rule 101 (BasicLit -> STRING .)
    XOR             reduce using rule 101 (BasicLit -> STRING .)
    DIVIDE          reduce using rule 101 (BasicLit -> STRING .)
    MOD             reduce using rule 101 (BasicLit -> STRING .)
    LSHIFT          reduce using rule 101 (BasicLit -> STRING .)
    RSHIFT          reduce using rule 101 (BasicLit -> STRING .)
    PLUS            reduce using rule 101 (BasicLit -> STRING .)
    MINUS           reduce using rule 101 (BasicLit -> STRING .)
    STAR            reduce using rule 101 (BasicLit -> STRING .)
    AND             reduce using rule 101 (BasicLit -> STRING .)
    COMMA           reduce using rule 101 (BasicLit -> STRING .)
    SEMICOLON       reduce using rule 101 (BasicLit -> STRING .)
    PLUS_ASSIGN     reduce using rule 101 (BasicLit -> STRING .)
    MINUS_ASSIGN    reduce using rule 101 (BasicLit -> STRING .)
    STAR_ASSIGN     reduce using rule 101 (BasicLit -> STRING .)
    DIVIDE_ASSIGN   reduce using rule 101 (BasicLit -> STRING .)
    MOD_ASSIGN      reduce using rule 101 (BasicLit -> STRING .)
    AND_ASSIGN      reduce using rule 101 (BasicLit -> STRING .)
    OR_ASSIGN       reduce using rule 101 (BasicLit -> STRING .)
    XOR_ASSIGN      reduce using rule 101 (BasicLit -> STRING .)
    LSHIFT_ASSIGN   reduce using rule 101 (BasicLit -> STRING .)
    RSHIFT_ASSIGN   reduce using rule 101 (BasicLit -> STRING .)
    ASSIGN          reduce using rule 101 (BasicLit -> STRING .)
    RSQUARE         reduce using rule 101 (BasicLit -> STRING .)
    COLON           reduce using rule 101 (BasicLit -> STRING .)
    LCURL           reduce using rule 101 (BasicLit -> STRING .)
    RPAREN          reduce using rule 101 (BasicLit -> STRING .)


state 112

    (97) BasicLit -> HEX .

    DOT             reduce using rule 97 (BasicLit -> HEX .)
    LSQUARE         reduce using rule 97 (BasicLit -> HEX .)
    LPAREN          reduce using rule 97 (BasicLit -> HEX .)
    INCR            reduce using rule 97 (BasicLit -> HEX .)
    DECR            reduce using rule 97 (BasicLit -> HEX .)
    LOGICAL_OR      reduce using rule 97 (BasicLit -> HEX .)
    LOGICAL_AND     reduce using rule 97 (BasicLit -> HEX .)
    EQUALS          reduce using rule 97 (BasicLit -> HEX .)
    NOT_ASSIGN      reduce using rule 97 (BasicLit -> HEX .)
    LESSER          reduce using rule 97 (BasicLit -> HEX .)
    GREATER         reduce using rule 97 (BasicLit -> HEX .)
    LESS_EQUALS     reduce using rule 97 (BasicLit -> HEX .)
    MORE_EQUALS     reduce using rule 97 (BasicLit -> HEX .)
    OR              reduce using rule 97 (BasicLit -> HEX .)
    XOR             reduce using rule 97 (BasicLit -> HEX .)
    DIVIDE          reduce using rule 97 (BasicLit -> HEX .)
    MOD             reduce using rule 97 (BasicLit -> HEX .)
    LSHIFT          reduce using rule 97 (BasicLit -> HEX .)
    RSHIFT          reduce using rule 97 (BasicLit -> HEX .)
    PLUS            reduce using rule 97 (BasicLit -> HEX .)
    MINUS           reduce using rule 97 (BasicLit -> HEX .)
    STAR            reduce using rule 97 (BasicLit -> HEX .)
    AND             reduce using rule 97 (BasicLit -> HEX .)
    COMMA           reduce using rule 97 (BasicLit -> HEX .)
    SEMICOLON       reduce using rule 97 (BasicLit -> HEX .)
    PLUS_ASSIGN     reduce using rule 97 (BasicLit -> HEX .)
    MINUS_ASSIGN    reduce using rule 97 (BasicLit -> HEX .)
    STAR_ASSIGN     reduce using rule 97 (BasicLit -> HEX .)
    DIVIDE_ASSIGN   reduce using rule 97 (BasicLit -> HEX .)
    MOD_ASSIGN      reduce using rule 97 (BasicLit -> HEX .)
    AND_ASSIGN      reduce using rule 97 (BasicLit -> HEX .)
    OR_ASSIGN       reduce using rule 97 (BasicLit -> HEX .)
    XOR_ASSIGN      reduce using rule 97 (BasicLit -> HEX .)
    LSHIFT_ASSIGN   reduce using rule 97 (BasicLit -> HEX .)
    RSHIFT_ASSIGN   reduce using rule 97 (BasicLit -> HEX .)
    ASSIGN          reduce using rule 97 (BasicLit -> HEX .)
    RSQUARE         reduce using rule 97 (BasicLit -> HEX .)
    COLON           reduce using rule 97 (BasicLit -> HEX .)
    LCURL           reduce using rule 97 (BasicLit -> HEX .)
    RPAREN          reduce using rule 97 (BasicLit -> HEX .)


state 113

    (139) Expression -> UnaryExpr .

    LOGICAL_OR      reduce using rule 139 (Expression -> UnaryExpr .)
    LOGICAL_AND     reduce using rule 139 (Expression -> UnaryExpr .)
    EQUALS          reduce using rule 139 (Expression -> UnaryExpr .)
    NOT_ASSIGN      reduce using rule 139 (Expression -> UnaryExpr .)
    LESSER          reduce using rule 139 (Expression -> UnaryExpr .)
    GREATER         reduce using rule 139 (Expression -> UnaryExpr .)
    LESS_EQUALS     reduce using rule 139 (Expression -> UnaryExpr .)
    MORE_EQUALS     reduce using rule 139 (Expression -> UnaryExpr .)
    OR              reduce using rule 139 (Expression -> UnaryExpr .)
    XOR             reduce using rule 139 (Expression -> UnaryExpr .)
    DIVIDE          reduce using rule 139 (Expression -> UnaryExpr .)
    MOD             reduce using rule 139 (Expression -> UnaryExpr .)
    LSHIFT          reduce using rule 139 (Expression -> UnaryExpr .)
    RSHIFT          reduce using rule 139 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 139 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 139 (Expression -> UnaryExpr .)
    STAR            reduce using rule 139 (Expression -> UnaryExpr .)
    AND             reduce using rule 139 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 139 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 139 (Expression -> UnaryExpr .)
    LCURL           reduce using rule 139 (Expression -> UnaryExpr .)
    RSQUARE         reduce using rule 139 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 139 (Expression -> UnaryExpr .)
    COLON           reduce using rule 139 (Expression -> UnaryExpr .)
    INCR            reduce using rule 139 (Expression -> UnaryExpr .)
    DECR            reduce using rule 139 (Expression -> UnaryExpr .)
    PLUS_ASSIGN     reduce using rule 139 (Expression -> UnaryExpr .)
    MINUS_ASSIGN    reduce using rule 139 (Expression -> UnaryExpr .)
    STAR_ASSIGN     reduce using rule 139 (Expression -> UnaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 139 (Expression -> UnaryExpr .)
    MOD_ASSIGN      reduce using rule 139 (Expression -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 139 (Expression -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 139 (Expression -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 139 (Expression -> UnaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 139 (Expression -> UnaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 139 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 139 (Expression -> UnaryExpr .)


state 114

    (20) ArrayType -> LSQUARE ArrayLength . RSQUARE ElementType

    RSQUARE         shift and go to state 166


state 115

    (96) BasicLit -> OCTAL .

    DOT             reduce using rule 96 (BasicLit -> OCTAL .)
    LSQUARE         reduce using rule 96 (BasicLit -> OCTAL .)
    LPAREN          reduce using rule 96 (BasicLit -> OCTAL .)
    INCR            reduce using rule 96 (BasicLit -> OCTAL .)
    DECR            reduce using rule 96 (BasicLit -> OCTAL .)
    LOGICAL_OR      reduce using rule 96 (BasicLit -> OCTAL .)
    LOGICAL_AND     reduce using rule 96 (BasicLit -> OCTAL .)
    EQUALS          reduce using rule 96 (BasicLit -> OCTAL .)
    NOT_ASSIGN      reduce using rule 96 (BasicLit -> OCTAL .)
    LESSER          reduce using rule 96 (BasicLit -> OCTAL .)
    GREATER         reduce using rule 96 (BasicLit -> OCTAL .)
    LESS_EQUALS     reduce using rule 96 (BasicLit -> OCTAL .)
    MORE_EQUALS     reduce using rule 96 (BasicLit -> OCTAL .)
    OR              reduce using rule 96 (BasicLit -> OCTAL .)
    XOR             reduce using rule 96 (BasicLit -> OCTAL .)
    DIVIDE          reduce using rule 96 (BasicLit -> OCTAL .)
    MOD             reduce using rule 96 (BasicLit -> OCTAL .)
    LSHIFT          reduce using rule 96 (BasicLit -> OCTAL .)
    RSHIFT          reduce using rule 96 (BasicLit -> OCTAL .)
    PLUS            reduce using rule 96 (BasicLit -> OCTAL .)
    MINUS           reduce using rule 96 (BasicLit -> OCTAL .)
    STAR            reduce using rule 96 (BasicLit -> OCTAL .)
    AND             reduce using rule 96 (BasicLit -> OCTAL .)
    COMMA           reduce using rule 96 (BasicLit -> OCTAL .)
    SEMICOLON       reduce using rule 96 (BasicLit -> OCTAL .)
    PLUS_ASSIGN     reduce using rule 96 (BasicLit -> OCTAL .)
    MINUS_ASSIGN    reduce using rule 96 (BasicLit -> OCTAL .)
    STAR_ASSIGN     reduce using rule 96 (BasicLit -> OCTAL .)
    DIVIDE_ASSIGN   reduce using rule 96 (BasicLit -> OCTAL .)
    MOD_ASSIGN      reduce using rule 96 (BasicLit -> OCTAL .)
    AND_ASSIGN      reduce using rule 96 (BasicLit -> OCTAL .)
    OR_ASSIGN       reduce using rule 96 (BasicLit -> OCTAL .)
    XOR_ASSIGN      reduce using rule 96 (BasicLit -> OCTAL .)
    LSHIFT_ASSIGN   reduce using rule 96 (BasicLit -> OCTAL .)
    RSHIFT_ASSIGN   reduce using rule 96 (BasicLit -> OCTAL .)
    ASSIGN          reduce using rule 96 (BasicLit -> OCTAL .)
    RSQUARE         reduce using rule 96 (BasicLit -> OCTAL .)
    COLON           reduce using rule 96 (BasicLit -> OCTAL .)
    LCURL           reduce using rule 96 (BasicLit -> OCTAL .)
    RPAREN          reduce using rule 96 (BasicLit -> OCTAL .)


state 116

    (21) ArrayLength -> Expression .
    (140) Expression -> Expression . BinaryOp Expression
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    RSQUARE         reduce using rule 21 (ArrayLength -> Expression .)
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    AddMulOp                       shift and go to state 171
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 174
    UnaryOp                        shift and go to state 167

state 117

    (166) UnaryOp -> AND .

    NOT             reduce using rule 166 (UnaryOp -> AND .)
    PLUS            reduce using rule 166 (UnaryOp -> AND .)
    MINUS           reduce using rule 166 (UnaryOp -> AND .)
    STAR            reduce using rule 166 (UnaryOp -> AND .)
    AND             reduce using rule 166 (UnaryOp -> AND .)
    LPAREN          reduce using rule 166 (UnaryOp -> AND .)
    TYPECAST        reduce using rule 166 (UnaryOp -> AND .)
    IDENTIFIER      reduce using rule 166 (UnaryOp -> AND .)
    INTEGER         reduce using rule 166 (UnaryOp -> AND .)
    OCTAL           reduce using rule 166 (UnaryOp -> AND .)
    HEX             reduce using rule 166 (UnaryOp -> AND .)
    FLOAT           reduce using rule 166 (UnaryOp -> AND .)
    IMAGINARY       reduce using rule 166 (UnaryOp -> AND .)
    RUNE            reduce using rule 166 (UnaryOp -> AND .)
    STRING          reduce using rule 166 (UnaryOp -> AND .)


state 118

    (167) Conversion -> TYPECAST . Type LPAREN Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    Type                           shift and go to state 185
    TypeToken                      shift and go to state 57
    TypeLit                        shift and go to state 58
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    QualifiedIdent                 shift and go to state 74

state 119

    (98) BasicLit -> FLOAT .

    DOT             reduce using rule 98 (BasicLit -> FLOAT .)
    LSQUARE         reduce using rule 98 (BasicLit -> FLOAT .)
    LPAREN          reduce using rule 98 (BasicLit -> FLOAT .)
    INCR            reduce using rule 98 (BasicLit -> FLOAT .)
    DECR            reduce using rule 98 (BasicLit -> FLOAT .)
    LOGICAL_OR      reduce using rule 98 (BasicLit -> FLOAT .)
    LOGICAL_AND     reduce using rule 98 (BasicLit -> FLOAT .)
    EQUALS          reduce using rule 98 (BasicLit -> FLOAT .)
    NOT_ASSIGN      reduce using rule 98 (BasicLit -> FLOAT .)
    LESSER          reduce using rule 98 (BasicLit -> FLOAT .)
    GREATER         reduce using rule 98 (BasicLit -> FLOAT .)
    LESS_EQUALS     reduce using rule 98 (BasicLit -> FLOAT .)
    MORE_EQUALS     reduce using rule 98 (BasicLit -> FLOAT .)
    OR              reduce using rule 98 (BasicLit -> FLOAT .)
    XOR             reduce using rule 98 (BasicLit -> FLOAT .)
    DIVIDE          reduce using rule 98 (BasicLit -> FLOAT .)
    MOD             reduce using rule 98 (BasicLit -> FLOAT .)
    LSHIFT          reduce using rule 98 (BasicLit -> FLOAT .)
    RSHIFT          reduce using rule 98 (BasicLit -> FLOAT .)
    PLUS            reduce using rule 98 (BasicLit -> FLOAT .)
    MINUS           reduce using rule 98 (BasicLit -> FLOAT .)
    STAR            reduce using rule 98 (BasicLit -> FLOAT .)
    AND             reduce using rule 98 (BasicLit -> FLOAT .)
    COMMA           reduce using rule 98 (BasicLit -> FLOAT .)
    SEMICOLON       reduce using rule 98 (BasicLit -> FLOAT .)
    PLUS_ASSIGN     reduce using rule 98 (BasicLit -> FLOAT .)
    MINUS_ASSIGN    reduce using rule 98 (BasicLit -> FLOAT .)
    STAR_ASSIGN     reduce using rule 98 (BasicLit -> FLOAT .)
    DIVIDE_ASSIGN   reduce using rule 98 (BasicLit -> FLOAT .)
    MOD_ASSIGN      reduce using rule 98 (BasicLit -> FLOAT .)
    AND_ASSIGN      reduce using rule 98 (BasicLit -> FLOAT .)
    OR_ASSIGN       reduce using rule 98 (BasicLit -> FLOAT .)
    XOR_ASSIGN      reduce using rule 98 (BasicLit -> FLOAT .)
    LSHIFT_ASSIGN   reduce using rule 98 (BasicLit -> FLOAT .)
    RSHIFT_ASSIGN   reduce using rule 98 (BasicLit -> FLOAT .)
    ASSIGN          reduce using rule 98 (BasicLit -> FLOAT .)
    RSQUARE         reduce using rule 98 (BasicLit -> FLOAT .)
    COLON           reduce using rule 98 (BasicLit -> FLOAT .)
    LCURL           reduce using rule 98 (BasicLit -> FLOAT .)
    RPAREN          reduce using rule 98 (BasicLit -> FLOAT .)


state 120

    (145) UnaryExpr -> NOT . UnaryExpr
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 186
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100

state 121

    (103) QualifiedIdent -> IDENTIFIER DOT . TypeName
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName

    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62

    TypeName                       shift and go to state 187
    QualifiedIdent                 shift and go to state 74
    TypeToken                      shift and go to state 57

state 122

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 188


state 123

    (61) TypeExprListOpt -> TypeOpt ASSIGN . ExpressionList
    (66) ExpressionList -> . Expression ExpressionRep
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Conversion                     shift and go to state 96
    OperandName                    shift and go to state 105
    ExpressionList                 shift and go to state 189
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Literal                        shift and go to state 101
    Expression                     shift and go to state 150

state 124

    (23) StructType -> STRUCT LCURL . FieldDeclRep RCURL
    (24) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOLON
    (25) FieldDeclRep -> . epsilon
    (265) epsilon -> .

    RCURL           reduce using rule 265 (epsilon -> .)
    IDENTIFIER      reduce using rule 265 (epsilon -> .)

    FieldDeclRep                   shift and go to state 190
    epsilon                        shift and go to state 191

state 125

    (14) TypeToken -> TYPE IDENTIFIER .

    LCURL           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    SEMICOLON       reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    RPAREN          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    COMMA           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    STRING          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    ASSIGN          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    LPAREN          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    COLON           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)


state 126

    (64) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 192


state 127

    (35) Result -> Parameters .

    LCURL           reduce using rule 35 (Result -> Parameters .)
    SEMICOLON       reduce using rule 35 (Result -> Parameters .)


state 128

    (36) Result -> Type .

    LCURL           reduce using rule 36 (Result -> Type .)
    SEMICOLON       reduce using rule 36 (Result -> Type .)


state 129

    (32) Signature -> Parameters ResultOpt .

    LCURL           reduce using rule 32 (Signature -> Parameters ResultOpt .)
    SEMICOLON       reduce using rule 32 (Signature -> Parameters ResultOpt .)


state 130

    (34) ResultOpt -> epsilon .

    LCURL           reduce using rule 34 (ResultOpt -> epsilon .)
    SEMICOLON       reduce using rule 34 (ResultOpt -> epsilon .)


state 131

    (37) Parameters -> LPAREN . ParameterListOpt RPAREN
    (4) Type -> LPAREN . Type RPAREN
    (38) ParameterListOpt -> . ParametersList
    (39) ParameterListOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (40) ParametersList -> . Type
    (41) ParametersList -> . IdentifierList Type
    (42) ParametersList -> . ParameterDeclCommaRep
    (265) epsilon -> .
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (63) IdentifierList -> . IDENTIFIER IdentifierRep
    (43) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (44) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType
    (45) ParameterDecl -> . IdentifierList Type
    (46) ParameterDecl -> . Type

    LPAREN          shift and go to state 67
    RPAREN          reduce using rule 265 (epsilon -> .)
    IDENTIFIER      shift and go to state 141
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    TypeLit                        shift and go to state 58
    IdentifierList                 shift and go to state 137
    ParameterListOpt               shift and go to state 136
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    epsilon                        shift and go to state 143
    PointerType                    shift and go to state 72
    ParametersList                 shift and go to state 140
    Type                           shift and go to state 193
    ParameterDeclCommaRep          shift and go to state 138
    QualifiedIdent                 shift and go to state 74
    ParameterDecl                  shift and go to state 142

state 132

    (33) ResultOpt -> Result .

    LCURL           reduce using rule 33 (ResultOpt -> Result .)
    SEMICOLON       reduce using rule 33 (ResultOpt -> Result .)


state 133

    (89) Function -> Signature FunctionBody .

    SEMICOLON       reduce using rule 89 (Function -> Signature FunctionBody .)


state 134

    (90) FunctionBody -> Block .

    SEMICOLON       reduce using rule 90 (FunctionBody -> Block .)


state 135

    (47) Block -> LCURL . StatementList RCURL
    (48) StatementList -> . StatementRep
    (49) StatementRep -> . StatementRep Statement SEMICOLON
    (50) StatementRep -> . epsilon
    (265) epsilon -> .

    RETURN          reduce using rule 265 (epsilon -> .)
    BREAK           reduce using rule 265 (epsilon -> .)
    CONTINUE        reduce using rule 265 (epsilon -> .)
    GOTO            reduce using rule 265 (epsilon -> .)
    LCURL           reduce using rule 265 (epsilon -> .)
    IF              reduce using rule 265 (epsilon -> .)
    FOR             reduce using rule 265 (epsilon -> .)
    CONST           reduce using rule 265 (epsilon -> .)
    TYPE            reduce using rule 265 (epsilon -> .)
    VAR             reduce using rule 265 (epsilon -> .)
    IDENTIFIER      reduce using rule 265 (epsilon -> .)
    SWITCH          reduce using rule 265 (epsilon -> .)
    NOT             reduce using rule 265 (epsilon -> .)
    PLUS            reduce using rule 265 (epsilon -> .)
    MINUS           reduce using rule 265 (epsilon -> .)
    STAR            reduce using rule 265 (epsilon -> .)
    AND             reduce using rule 265 (epsilon -> .)
    LPAREN          reduce using rule 265 (epsilon -> .)
    TYPECAST        reduce using rule 265 (epsilon -> .)
    INTEGER         reduce using rule 265 (epsilon -> .)
    OCTAL           reduce using rule 265 (epsilon -> .)
    HEX             reduce using rule 265 (epsilon -> .)
    FLOAT           reduce using rule 265 (epsilon -> .)
    IMAGINARY       reduce using rule 265 (epsilon -> .)
    RUNE            reduce using rule 265 (epsilon -> .)
    STRING          reduce using rule 265 (epsilon -> .)
    SEMICOLON       reduce using rule 265 (epsilon -> .)
    RCURL           reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 195
    StatementRep                   shift and go to state 194
    StatementList                  shift and go to state 196

state 136

    (37) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 197


state 137

    (41) ParametersList -> IdentifierList . Type
    (45) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    Type                           shift and go to state 198
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 138

    (42) ParametersList -> ParameterDeclCommaRep .
    (43) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 42 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 199


state 139

    (40) ParametersList -> Type .
    (46) ParameterDecl -> Type .

    RPAREN          reduce using rule 40 (ParametersList -> Type .)
    COMMA           reduce using rule 46 (ParameterDecl -> Type .)


state 140

    (38) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 38 (ParameterListOpt -> ParametersList .)


state 141

    (63) IdentifierList -> IDENTIFIER . IdentifierRep
    (103) QualifiedIdent -> IDENTIFIER . DOT TypeName
    (64) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (65) IdentifierRep -> . epsilon
    (265) epsilon -> .

    DOT             shift and go to state 121
    COMMA           reduce using rule 265 (epsilon -> .)
    LPAREN          reduce using rule 265 (epsilon -> .)
    INT_T           reduce using rule 265 (epsilon -> .)
    FLOAT_T         reduce using rule 265 (epsilon -> .)
    UINT_T          reduce using rule 265 (epsilon -> .)
    COMPLEX_T       reduce using rule 265 (epsilon -> .)
    RUNE_T          reduce using rule 265 (epsilon -> .)
    BOOL_T          reduce using rule 265 (epsilon -> .)
    STRING_T        reduce using rule 265 (epsilon -> .)
    TYPE            reduce using rule 265 (epsilon -> .)
    IDENTIFIER      reduce using rule 265 (epsilon -> .)
    LSQUARE         reduce using rule 265 (epsilon -> .)
    STRUCT          reduce using rule 265 (epsilon -> .)
    STAR            reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 76
    IdentifierRep                  shift and go to state 77

state 142

    (44) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    COMMA           shift and go to state 200


state 143

    (39) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 39 (ParameterListOpt -> epsilon .)


state 144

    (78) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOLON       reduce using rule 78 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 145

    (79) VarSpecRep -> VarSpecRep VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 201


state 146

    (84) ExpressionListOpt -> epsilon .

    SEMICOLON       reduce using rule 84 (ExpressionListOpt -> epsilon .)


state 147

    (81) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOLON       reduce using rule 81 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 148

    (83) ExpressionListOpt -> ASSIGN . ExpressionList
    (66) ExpressionList -> . Expression ExpressionRep
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Conversion                     shift and go to state 96
    OperandName                    shift and go to state 105
    ExpressionList                 shift and go to state 202
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Literal                        shift and go to state 101
    Expression                     shift and go to state 150

state 149

    (82) VarSpec -> IdentifierList ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 82 (VarSpec -> IdentifierList ASSIGN ExpressionList .)


state 150

    (66) ExpressionList -> Expression . ExpressionRep
    (140) Expression -> Expression . BinaryOp Expression
    (67) ExpressionRep -> . ExpressionRep COMMA Expression
    (68) ExpressionRep -> . epsilon
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (265) epsilon -> .
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    COMMA           reduce using rule 265 (epsilon -> .)
    SEMICOLON       reduce using rule 265 (epsilon -> .)
    RPAREN          reduce using rule 265 (epsilon -> .)
    LCURL           reduce using rule 265 (epsilon -> .)
    COLON           reduce using rule 265 (epsilon -> .)
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    ExpressionRep                  shift and go to state 203
    RelOp                          shift and go to state 180
    UnaryOp                        shift and go to state 167
    epsilon                        shift and go to state 204
    BinaryOp                       shift and go to state 174
    AddMulOp                       shift and go to state 171

state 151

    (70) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOLON       reduce using rule 70 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 152

    (71) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 205


state 153

    (75) AliasDecl -> IDENTIFIER ASSIGN Type .

    SEMICOLON       reduce using rule 75 (AliasDecl -> IDENTIFIER ASSIGN Type .)


state 154

    (258) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .

    RPAREN          reduce using rule 258 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    DOT             reduce using rule 258 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 258 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    STRING          reduce using rule 258 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)


state 155

    (58) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .

    RPAREN          reduce using rule 58 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)


state 156

    (93) Operand -> LPAREN Expression . RPAREN
    (140) Expression -> Expression . BinaryOp Expression
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    RPAREN          shift and go to state 206
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    AddMulOp                       shift and go to state 171
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 174
    UnaryOp                        shift and go to state 167

state 157

    (144) UnaryExpr -> UnaryOp UnaryExpr .

    LCURL           reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    LOGICAL_OR      reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    LOGICAL_AND     reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUALS          reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOT_ASSIGN      reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESSER          reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREATER         reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESS_EQUALS     reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    MORE_EQUALS     reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSHIFT          reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSHIFT          reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    STAR            reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    INCR            reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    DECR            reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS_ASSIGN     reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS_ASSIGN    reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    STAR_ASSIGN     reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSQUARE         reduce using rule 144 (UnaryExpr -> UnaryOp UnaryExpr .)


state 158

    (125) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LSQUARE         reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LCURL           reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LOGICAL_OR      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LOGICAL_AND     reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    EQUALS          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    NOT_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LESSER          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    GREATER         reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LESS_EQUALS     reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    MORE_EQUALS     reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LSHIFT          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    RSHIFT          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    PLUS            reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    MINUS           reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    STAR            reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    RSQUARE         reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    INCR            reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    DECR            reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    PLUS_ASSIGN     reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    MINUS_ASSIGN    reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    STAR_ASSIGN     reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE_ASSIGN   reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    MOD_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    AND_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    OR_ASSIGN       reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    XOR_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LSHIFT_ASSIGN   reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    RSHIFT_ASSIGN   reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)


state 159

    (126) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LSQUARE         reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LCURL           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LOGICAL_OR      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LOGICAL_AND     reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUALS          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    NOT_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LESSER          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATER         reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS_EQUALS     reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    MORE_EQUALS     reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LSHIFT          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    RSHIFT          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    STAR            reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    RSQUARE         reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    INCR            reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    DECR            reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS_ASSIGN     reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS_ASSIGN    reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    STAR_ASSIGN     reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE_ASSIGN   reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LSHIFT_ASSIGN   reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    RSHIFT_ASSIGN   reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)


state 160

    (134) Arguments -> LPAREN . ExpressionListTypeOpt RPAREN
    (135) ExpressionListTypeOpt -> . ExpressionList
    (136) ExpressionListTypeOpt -> . epsilon
    (66) ExpressionList -> . Expression ExpressionRep
    (265) epsilon -> .
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    RPAREN          reduce using rule 265 (epsilon -> .)
    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    epsilon                        shift and go to state 207
    UnaryExpr                      shift and go to state 113
    PrimaryExpr                    shift and go to state 100
    Conversion                     shift and go to state 96
    OperandName                    shift and go to state 105
    ExpressionList                 shift and go to state 208
    BasicLit                       shift and go to state 106
    ExpressionListTypeOpt          shift and go to state 209
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    Expression                     shift and go to state 150

state 161

    (123) PrimaryExpr -> PrimaryExpr Selector .

    DOT             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LSQUARE         reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LCURL           reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LOGICAL_OR      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LOGICAL_AND     reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUALS          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    NOT_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LESSER          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    GREATER         reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS_EQUALS     reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    MORE_EQUALS     reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LSHIFT          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    RSHIFT          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    STAR            reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    RSQUARE         reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    INCR            reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    DECR            reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS_ASSIGN     reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS_ASSIGN    reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    STAR_ASSIGN     reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE_ASSIGN   reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    OR_ASSIGN       reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LSHIFT_ASSIGN   reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    RSHIFT_ASSIGN   reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)


state 162

    (127) PrimaryExpr -> PrimaryExpr TypeAssertion .

    DOT             reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSQUARE         reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LPAREN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LCURL           reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOGICAL_OR      reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOGICAL_AND     reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQUALS          reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NOT_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESSER          reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATER         reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESS_EQUALS     reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MORE_EQUALS     reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR              reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE          reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MOD             reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSHIFT          reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSHIFT          reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUS            reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUS           reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    STAR            reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND             reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSQUARE         reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    INCR            reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DECR            reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMMA           reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SEMICOLON       reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUS_ASSIGN     reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUS_ASSIGN    reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    STAR_ASSIGN     reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE_ASSIGN   reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MOD_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR_ASSIGN       reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSHIFT_ASSIGN   reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSHIFT_ASSIGN   reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ASSIGN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RPAREN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COLON           reduce using rule 127 (PrimaryExpr -> PrimaryExpr TypeAssertion .)


state 163

    (128) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSQUARE         reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LCURL           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOGICAL_OR      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOGICAL_AND     reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUALS          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    NOT_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESSER          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREATER         reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS_EQUALS     reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MORE_EQUALS     reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSHIFT          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    RSHIFT          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUS            reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUS           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    STAR            reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    RSQUARE         reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    INCR            reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    DECR            reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUS_ASSIGN     reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUS_ASSIGN    reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    STAR_ASSIGN     reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE_ASSIGN   reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGN       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSHIFT_ASSIGN   reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    RSHIFT_ASSIGN   reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)


state 164

    (130) Index -> LSQUARE . Expression RSQUARE
    (131) Slice -> LSQUARE . ExpressionOpt COLON ExpressionOpt RSQUARE
    (132) Slice -> LSQUARE . ExpressionOpt COLON Expression COLON Expression RSQUARE
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (141) ExpressionOpt -> . Expression
    (142) ExpressionOpt -> . epsilon
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (265) epsilon -> .
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    COLON           reduce using rule 265 (epsilon -> .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    Expression                     shift and go to state 212
    BasicLit                       shift and go to state 106
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    epsilon                        shift and go to state 211
    PrimaryExpr                    shift and go to state 100
    ExpressionOpt                  shift and go to state 210

state 165

    (129) Selector -> DOT . IDENTIFIER
    (133) TypeAssertion -> DOT . LPAREN Type RPAREN

    IDENTIFIER      shift and go to state 213
    LPAREN          shift and go to state 214


state 166

    (20) ArrayType -> LSQUARE ArrayLength RSQUARE . ElementType
    (22) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    TypeLit                        shift and go to state 58
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    ElementType                    shift and go to state 216
    Type                           shift and go to state 215
    QualifiedIdent                 shift and go to state 74

state 167

    (156) AddMulOp -> UnaryOp .

    NOT             reduce using rule 156 (AddMulOp -> UnaryOp .)
    PLUS            reduce using rule 156 (AddMulOp -> UnaryOp .)
    MINUS           reduce using rule 156 (AddMulOp -> UnaryOp .)
    STAR            reduce using rule 156 (AddMulOp -> UnaryOp .)
    AND             reduce using rule 156 (AddMulOp -> UnaryOp .)
    LPAREN          reduce using rule 156 (AddMulOp -> UnaryOp .)
    TYPECAST        reduce using rule 156 (AddMulOp -> UnaryOp .)
    IDENTIFIER      reduce using rule 156 (AddMulOp -> UnaryOp .)
    INTEGER         reduce using rule 156 (AddMulOp -> UnaryOp .)
    OCTAL           reduce using rule 156 (AddMulOp -> UnaryOp .)
    HEX             reduce using rule 156 (AddMulOp -> UnaryOp .)
    FLOAT           reduce using rule 156 (AddMulOp -> UnaryOp .)
    IMAGINARY       reduce using rule 156 (AddMulOp -> UnaryOp .)
    RUNE            reduce using rule 156 (AddMulOp -> UnaryOp .)
    STRING          reduce using rule 156 (AddMulOp -> UnaryOp .)


state 168

    (147) BinaryOp -> LOGICAL_AND .

    NOT             reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    PLUS            reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    MINUS           reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    STAR            reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    AND             reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    LPAREN          reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    TYPECAST        reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    IDENTIFIER      reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    INTEGER         reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    OCTAL           reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    HEX             reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    FLOAT           reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    IMAGINARY       reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    RUNE            reduce using rule 147 (BinaryOp -> LOGICAL_AND .)
    STRING          reduce using rule 147 (BinaryOp -> LOGICAL_AND .)


state 169

    (161) AddMulOp -> LSHIFT .

    NOT             reduce using rule 161 (AddMulOp -> LSHIFT .)
    PLUS            reduce using rule 161 (AddMulOp -> LSHIFT .)
    MINUS           reduce using rule 161 (AddMulOp -> LSHIFT .)
    STAR            reduce using rule 161 (AddMulOp -> LSHIFT .)
    AND             reduce using rule 161 (AddMulOp -> LSHIFT .)
    LPAREN          reduce using rule 161 (AddMulOp -> LSHIFT .)
    TYPECAST        reduce using rule 161 (AddMulOp -> LSHIFT .)
    IDENTIFIER      reduce using rule 161 (AddMulOp -> LSHIFT .)
    INTEGER         reduce using rule 161 (AddMulOp -> LSHIFT .)
    OCTAL           reduce using rule 161 (AddMulOp -> LSHIFT .)
    HEX             reduce using rule 161 (AddMulOp -> LSHIFT .)
    FLOAT           reduce using rule 161 (AddMulOp -> LSHIFT .)
    IMAGINARY       reduce using rule 161 (AddMulOp -> LSHIFT .)
    RUNE            reduce using rule 161 (AddMulOp -> LSHIFT .)
    STRING          reduce using rule 161 (AddMulOp -> LSHIFT .)


state 170

    (162) AddMulOp -> RSHIFT .

    NOT             reduce using rule 162 (AddMulOp -> RSHIFT .)
    PLUS            reduce using rule 162 (AddMulOp -> RSHIFT .)
    MINUS           reduce using rule 162 (AddMulOp -> RSHIFT .)
    STAR            reduce using rule 162 (AddMulOp -> RSHIFT .)
    AND             reduce using rule 162 (AddMulOp -> RSHIFT .)
    LPAREN          reduce using rule 162 (AddMulOp -> RSHIFT .)
    TYPECAST        reduce using rule 162 (AddMulOp -> RSHIFT .)
    IDENTIFIER      reduce using rule 162 (AddMulOp -> RSHIFT .)
    INTEGER         reduce using rule 162 (AddMulOp -> RSHIFT .)
    OCTAL           reduce using rule 162 (AddMulOp -> RSHIFT .)
    HEX             reduce using rule 162 (AddMulOp -> RSHIFT .)
    FLOAT           reduce using rule 162 (AddMulOp -> RSHIFT .)
    IMAGINARY       reduce using rule 162 (AddMulOp -> RSHIFT .)
    RUNE            reduce using rule 162 (AddMulOp -> RSHIFT .)
    STRING          reduce using rule 162 (AddMulOp -> RSHIFT .)


state 171

    (149) BinaryOp -> AddMulOp .

    NOT             reduce using rule 149 (BinaryOp -> AddMulOp .)
    PLUS            reduce using rule 149 (BinaryOp -> AddMulOp .)
    MINUS           reduce using rule 149 (BinaryOp -> AddMulOp .)
    STAR            reduce using rule 149 (BinaryOp -> AddMulOp .)
    AND             reduce using rule 149 (BinaryOp -> AddMulOp .)
    LPAREN          reduce using rule 149 (BinaryOp -> AddMulOp .)
    TYPECAST        reduce using rule 149 (BinaryOp -> AddMulOp .)
    IDENTIFIER      reduce using rule 149 (BinaryOp -> AddMulOp .)
    INTEGER         reduce using rule 149 (BinaryOp -> AddMulOp .)
    OCTAL           reduce using rule 149 (BinaryOp -> AddMulOp .)
    HEX             reduce using rule 149 (BinaryOp -> AddMulOp .)
    FLOAT           reduce using rule 149 (BinaryOp -> AddMulOp .)
    IMAGINARY       reduce using rule 149 (BinaryOp -> AddMulOp .)
    RUNE            reduce using rule 149 (BinaryOp -> AddMulOp .)
    STRING          reduce using rule 149 (BinaryOp -> AddMulOp .)


state 172

    (155) RelOp -> MORE_EQUALS .

    NOT             reduce using rule 155 (RelOp -> MORE_EQUALS .)
    PLUS            reduce using rule 155 (RelOp -> MORE_EQUALS .)
    MINUS           reduce using rule 155 (RelOp -> MORE_EQUALS .)
    STAR            reduce using rule 155 (RelOp -> MORE_EQUALS .)
    AND             reduce using rule 155 (RelOp -> MORE_EQUALS .)
    LPAREN          reduce using rule 155 (RelOp -> MORE_EQUALS .)
    TYPECAST        reduce using rule 155 (RelOp -> MORE_EQUALS .)
    IDENTIFIER      reduce using rule 155 (RelOp -> MORE_EQUALS .)
    INTEGER         reduce using rule 155 (RelOp -> MORE_EQUALS .)
    OCTAL           reduce using rule 155 (RelOp -> MORE_EQUALS .)
    HEX             reduce using rule 155 (RelOp -> MORE_EQUALS .)
    FLOAT           reduce using rule 155 (RelOp -> MORE_EQUALS .)
    IMAGINARY       reduce using rule 155 (RelOp -> MORE_EQUALS .)
    RUNE            reduce using rule 155 (RelOp -> MORE_EQUALS .)
    STRING          reduce using rule 155 (RelOp -> MORE_EQUALS .)


state 173

    (154) RelOp -> LESS_EQUALS .

    NOT             reduce using rule 154 (RelOp -> LESS_EQUALS .)
    PLUS            reduce using rule 154 (RelOp -> LESS_EQUALS .)
    MINUS           reduce using rule 154 (RelOp -> LESS_EQUALS .)
    STAR            reduce using rule 154 (RelOp -> LESS_EQUALS .)
    AND             reduce using rule 154 (RelOp -> LESS_EQUALS .)
    LPAREN          reduce using rule 154 (RelOp -> LESS_EQUALS .)
    TYPECAST        reduce using rule 154 (RelOp -> LESS_EQUALS .)
    IDENTIFIER      reduce using rule 154 (RelOp -> LESS_EQUALS .)
    INTEGER         reduce using rule 154 (RelOp -> LESS_EQUALS .)
    OCTAL           reduce using rule 154 (RelOp -> LESS_EQUALS .)
    HEX             reduce using rule 154 (RelOp -> LESS_EQUALS .)
    FLOAT           reduce using rule 154 (RelOp -> LESS_EQUALS .)
    IMAGINARY       reduce using rule 154 (RelOp -> LESS_EQUALS .)
    RUNE            reduce using rule 154 (RelOp -> LESS_EQUALS .)
    STRING          reduce using rule 154 (RelOp -> LESS_EQUALS .)


state 174

    (140) Expression -> Expression BinaryOp . Expression
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Expression                     shift and go to state 217

state 175

    (151) RelOp -> NOT_ASSIGN .

    NOT             reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    PLUS            reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    MINUS           reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    STAR            reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    AND             reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    LPAREN          reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    TYPECAST        reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    IDENTIFIER      reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    INTEGER         reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    OCTAL           reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    HEX             reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    FLOAT           reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    IMAGINARY       reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    RUNE            reduce using rule 151 (RelOp -> NOT_ASSIGN .)
    STRING          reduce using rule 151 (RelOp -> NOT_ASSIGN .)


state 176

    (158) AddMulOp -> XOR .

    NOT             reduce using rule 158 (AddMulOp -> XOR .)
    PLUS            reduce using rule 158 (AddMulOp -> XOR .)
    MINUS           reduce using rule 158 (AddMulOp -> XOR .)
    STAR            reduce using rule 158 (AddMulOp -> XOR .)
    AND             reduce using rule 158 (AddMulOp -> XOR .)
    LPAREN          reduce using rule 158 (AddMulOp -> XOR .)
    TYPECAST        reduce using rule 158 (AddMulOp -> XOR .)
    IDENTIFIER      reduce using rule 158 (AddMulOp -> XOR .)
    INTEGER         reduce using rule 158 (AddMulOp -> XOR .)
    OCTAL           reduce using rule 158 (AddMulOp -> XOR .)
    HEX             reduce using rule 158 (AddMulOp -> XOR .)
    FLOAT           reduce using rule 158 (AddMulOp -> XOR .)
    IMAGINARY       reduce using rule 158 (AddMulOp -> XOR .)
    RUNE            reduce using rule 158 (AddMulOp -> XOR .)
    STRING          reduce using rule 158 (AddMulOp -> XOR .)


state 177

    (159) AddMulOp -> DIVIDE .

    NOT             reduce using rule 159 (AddMulOp -> DIVIDE .)
    PLUS            reduce using rule 159 (AddMulOp -> DIVIDE .)
    MINUS           reduce using rule 159 (AddMulOp -> DIVIDE .)
    STAR            reduce using rule 159 (AddMulOp -> DIVIDE .)
    AND             reduce using rule 159 (AddMulOp -> DIVIDE .)
    LPAREN          reduce using rule 159 (AddMulOp -> DIVIDE .)
    TYPECAST        reduce using rule 159 (AddMulOp -> DIVIDE .)
    IDENTIFIER      reduce using rule 159 (AddMulOp -> DIVIDE .)
    INTEGER         reduce using rule 159 (AddMulOp -> DIVIDE .)
    OCTAL           reduce using rule 159 (AddMulOp -> DIVIDE .)
    HEX             reduce using rule 159 (AddMulOp -> DIVIDE .)
    FLOAT           reduce using rule 159 (AddMulOp -> DIVIDE .)
    IMAGINARY       reduce using rule 159 (AddMulOp -> DIVIDE .)
    RUNE            reduce using rule 159 (AddMulOp -> DIVIDE .)
    STRING          reduce using rule 159 (AddMulOp -> DIVIDE .)


state 178

    (150) RelOp -> EQUALS .

    NOT             reduce using rule 150 (RelOp -> EQUALS .)
    PLUS            reduce using rule 150 (RelOp -> EQUALS .)
    MINUS           reduce using rule 150 (RelOp -> EQUALS .)
    STAR            reduce using rule 150 (RelOp -> EQUALS .)
    AND             reduce using rule 150 (RelOp -> EQUALS .)
    LPAREN          reduce using rule 150 (RelOp -> EQUALS .)
    TYPECAST        reduce using rule 150 (RelOp -> EQUALS .)
    IDENTIFIER      reduce using rule 150 (RelOp -> EQUALS .)
    INTEGER         reduce using rule 150 (RelOp -> EQUALS .)
    OCTAL           reduce using rule 150 (RelOp -> EQUALS .)
    HEX             reduce using rule 150 (RelOp -> EQUALS .)
    FLOAT           reduce using rule 150 (RelOp -> EQUALS .)
    IMAGINARY       reduce using rule 150 (RelOp -> EQUALS .)
    RUNE            reduce using rule 150 (RelOp -> EQUALS .)
    STRING          reduce using rule 150 (RelOp -> EQUALS .)


state 179

    (153) RelOp -> GREATER .

    NOT             reduce using rule 153 (RelOp -> GREATER .)
    PLUS            reduce using rule 153 (RelOp -> GREATER .)
    MINUS           reduce using rule 153 (RelOp -> GREATER .)
    STAR            reduce using rule 153 (RelOp -> GREATER .)
    AND             reduce using rule 153 (RelOp -> GREATER .)
    LPAREN          reduce using rule 153 (RelOp -> GREATER .)
    TYPECAST        reduce using rule 153 (RelOp -> GREATER .)
    IDENTIFIER      reduce using rule 153 (RelOp -> GREATER .)
    INTEGER         reduce using rule 153 (RelOp -> GREATER .)
    OCTAL           reduce using rule 153 (RelOp -> GREATER .)
    HEX             reduce using rule 153 (RelOp -> GREATER .)
    FLOAT           reduce using rule 153 (RelOp -> GREATER .)
    IMAGINARY       reduce using rule 153 (RelOp -> GREATER .)
    RUNE            reduce using rule 153 (RelOp -> GREATER .)
    STRING          reduce using rule 153 (RelOp -> GREATER .)


state 180

    (148) BinaryOp -> RelOp .

    NOT             reduce using rule 148 (BinaryOp -> RelOp .)
    PLUS            reduce using rule 148 (BinaryOp -> RelOp .)
    MINUS           reduce using rule 148 (BinaryOp -> RelOp .)
    STAR            reduce using rule 148 (BinaryOp -> RelOp .)
    AND             reduce using rule 148 (BinaryOp -> RelOp .)
    LPAREN          reduce using rule 148 (BinaryOp -> RelOp .)
    TYPECAST        reduce using rule 148 (BinaryOp -> RelOp .)
    IDENTIFIER      reduce using rule 148 (BinaryOp -> RelOp .)
    INTEGER         reduce using rule 148 (BinaryOp -> RelOp .)
    OCTAL           reduce using rule 148 (BinaryOp -> RelOp .)
    HEX             reduce using rule 148 (BinaryOp -> RelOp .)
    FLOAT           reduce using rule 148 (BinaryOp -> RelOp .)
    IMAGINARY       reduce using rule 148 (BinaryOp -> RelOp .)
    RUNE            reduce using rule 148 (BinaryOp -> RelOp .)
    STRING          reduce using rule 148 (BinaryOp -> RelOp .)


state 181

    (152) RelOp -> LESSER .

    NOT             reduce using rule 152 (RelOp -> LESSER .)
    PLUS            reduce using rule 152 (RelOp -> LESSER .)
    MINUS           reduce using rule 152 (RelOp -> LESSER .)
    STAR            reduce using rule 152 (RelOp -> LESSER .)
    AND             reduce using rule 152 (RelOp -> LESSER .)
    LPAREN          reduce using rule 152 (RelOp -> LESSER .)
    TYPECAST        reduce using rule 152 (RelOp -> LESSER .)
    IDENTIFIER      reduce using rule 152 (RelOp -> LESSER .)
    INTEGER         reduce using rule 152 (RelOp -> LESSER .)
    OCTAL           reduce using rule 152 (RelOp -> LESSER .)
    HEX             reduce using rule 152 (RelOp -> LESSER .)
    FLOAT           reduce using rule 152 (RelOp -> LESSER .)
    IMAGINARY       reduce using rule 152 (RelOp -> LESSER .)
    RUNE            reduce using rule 152 (RelOp -> LESSER .)
    STRING          reduce using rule 152 (RelOp -> LESSER .)


state 182

    (146) BinaryOp -> LOGICAL_OR .

    NOT             reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    PLUS            reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    MINUS           reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    STAR            reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    AND             reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    LPAREN          reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    TYPECAST        reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    IDENTIFIER      reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    INTEGER         reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    OCTAL           reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    HEX             reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    FLOAT           reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    IMAGINARY       reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    RUNE            reduce using rule 146 (BinaryOp -> LOGICAL_OR .)
    STRING          reduce using rule 146 (BinaryOp -> LOGICAL_OR .)


state 183

    (157) AddMulOp -> OR .

    NOT             reduce using rule 157 (AddMulOp -> OR .)
    PLUS            reduce using rule 157 (AddMulOp -> OR .)
    MINUS           reduce using rule 157 (AddMulOp -> OR .)
    STAR            reduce using rule 157 (AddMulOp -> OR .)
    AND             reduce using rule 157 (AddMulOp -> OR .)
    LPAREN          reduce using rule 157 (AddMulOp -> OR .)
    TYPECAST        reduce using rule 157 (AddMulOp -> OR .)
    IDENTIFIER      reduce using rule 157 (AddMulOp -> OR .)
    INTEGER         reduce using rule 157 (AddMulOp -> OR .)
    OCTAL           reduce using rule 157 (AddMulOp -> OR .)
    HEX             reduce using rule 157 (AddMulOp -> OR .)
    FLOAT           reduce using rule 157 (AddMulOp -> OR .)
    IMAGINARY       reduce using rule 157 (AddMulOp -> OR .)
    RUNE            reduce using rule 157 (AddMulOp -> OR .)
    STRING          reduce using rule 157 (AddMulOp -> OR .)


state 184

    (160) AddMulOp -> MOD .

    NOT             reduce using rule 160 (AddMulOp -> MOD .)
    PLUS            reduce using rule 160 (AddMulOp -> MOD .)
    MINUS           reduce using rule 160 (AddMulOp -> MOD .)
    STAR            reduce using rule 160 (AddMulOp -> MOD .)
    AND             reduce using rule 160 (AddMulOp -> MOD .)
    LPAREN          reduce using rule 160 (AddMulOp -> MOD .)
    TYPECAST        reduce using rule 160 (AddMulOp -> MOD .)
    IDENTIFIER      reduce using rule 160 (AddMulOp -> MOD .)
    INTEGER         reduce using rule 160 (AddMulOp -> MOD .)
    OCTAL           reduce using rule 160 (AddMulOp -> MOD .)
    HEX             reduce using rule 160 (AddMulOp -> MOD .)
    FLOAT           reduce using rule 160 (AddMulOp -> MOD .)
    IMAGINARY       reduce using rule 160 (AddMulOp -> MOD .)
    RUNE            reduce using rule 160 (AddMulOp -> MOD .)
    STRING          reduce using rule 160 (AddMulOp -> MOD .)


state 185

    (167) Conversion -> TYPECAST Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 218


state 186

    (145) UnaryExpr -> NOT UnaryExpr .

    LCURL           reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    LOGICAL_OR      reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    LOGICAL_AND     reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    EQUALS          reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    NOT_ASSIGN      reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    LESSER          reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    GREATER         reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    LESS_EQUALS     reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    MORE_EQUALS     reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    OR              reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    XOR             reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    DIVIDE          reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    MOD             reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    LSHIFT          reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    RSHIFT          reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    PLUS            reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    MINUS           reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    STAR            reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    AND             reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    INCR            reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    DECR            reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    COMMA           reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    PLUS_ASSIGN     reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    MINUS_ASSIGN    reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    STAR_ASSIGN     reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    MOD_ASSIGN      reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    AND_ASSIGN      reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    OR_ASSIGN       reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    XOR_ASSIGN      reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    ASSIGN          reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    SEMICOLON       reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    RPAREN          reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    COLON           reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)
    RSQUARE         reduce using rule 145 (UnaryExpr -> NOT UnaryExpr .)


state 187

    (103) QualifiedIdent -> IDENTIFIER DOT TypeName .

    STRING          reduce using rule 103 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    SEMICOLON       reduce using rule 103 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    COMMA           reduce using rule 103 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    RPAREN          reduce using rule 103 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    LPAREN          reduce using rule 103 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    ASSIGN          reduce using rule 103 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    LCURL           reduce using rule 103 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    COLON           reduce using rule 103 (QualifiedIdent -> IDENTIFIER DOT TypeName .)


state 188

    (4) Type -> LPAREN Type RPAREN .

    ASSIGN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LCURL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COLON           reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 189

    (61) TypeExprListOpt -> TypeOpt ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 61 (TypeExprListOpt -> TypeOpt ASSIGN ExpressionList .)


state 190

    (23) StructType -> STRUCT LCURL FieldDeclRep . RCURL
    (24) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOLON
    (26) FieldDecl -> . IdentifierList Type TagOpt
    (63) IdentifierList -> . IDENTIFIER IdentifierRep

    RCURL           shift and go to state 220
    IDENTIFIER      shift and go to state 34

    FieldDecl                      shift and go to state 219
    IdentifierList                 shift and go to state 221

state 191

    (25) FieldDeclRep -> epsilon .

    RCURL           reduce using rule 25 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 25 (FieldDeclRep -> epsilon .)


state 192

    (64) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LPAREN          reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    INT_T           reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FLOAT_T         reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    UINT_T          reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    COMPLEX_T       reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    RUNE_T          reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    BOOL_T          reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRING_T        reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPE            reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    IDENTIFIER      reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LSQUARE         reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STAR            reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    ASSIGN          reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    SEMICOLON       reduce using rule 64 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 193

    (4) Type -> LPAREN Type . RPAREN
    (40) ParametersList -> Type .
    (46) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 188
    COMMA           reduce using rule 46 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 40 (ParametersList -> Type .) ]


state 194

    (48) StatementList -> StatementRep .
    (49) StatementRep -> StatementRep . Statement SEMICOLON
    (168) Statement -> . Declaration
    (169) Statement -> . LabeledStmt
    (170) Statement -> . SimpleStmt
    (171) Statement -> . ReturnStmt
    (172) Statement -> . BreakStmt
    (173) Statement -> . ContinueStmt
    (174) Statement -> . GotoStmt
    (175) Statement -> . Block
    (176) Statement -> . IfStmt
    (177) Statement -> . SwitchStmt
    (178) Statement -> . ForStmt
    (51) Declaration -> . ConstDecl
    (52) Declaration -> . TypeDecl
    (53) Declaration -> . VarDecl
    (184) LabeledStmt -> . Label COLON Statement
    (179) SimpleStmt -> . epsilon
    (180) SimpleStmt -> . ExpressionStmt
    (181) SimpleStmt -> . IncDecStmt
    (182) SimpleStmt -> . Assignment
    (183) SimpleStmt -> . ShortVarDecl
    (241) ReturnStmt -> . RETURN ExpressionListPureOpt
    (244) BreakStmt -> . BREAK LabelOpt
    (245) ContinueStmt -> . CONTINUE LabelOpt
    (248) GotoStmt -> . GOTO Label
    (47) Block -> . LCURL StatementList RCURL
    (202) IfStmt -> . IF Expression Block ElseOpt
    (208) SwitchStmt -> . ExprSwitchStmt
    (209) SwitchStmt -> . TypeSwitchStmt
    (228) ForStmt -> . FOR ConditionBlockOpt Block
    (56) ConstDecl -> . CONST ConstSpec
    (57) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (69) TypeDecl -> . TYPE TypeSpec
    (70) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (77) VarDecl -> . VAR VarSpec
    (78) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (185) Label -> . IDENTIFIER
    (265) epsilon -> .
    (186) ExpressionStmt -> . Expression
    (187) IncDecStmt -> . Expression INCR
    (188) IncDecStmt -> . Expression DECR
    (189) Assignment -> . ExpressionList assign_op ExpressionList
    (85) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (210) ExprSwitchStmt -> . SWITCH ExpressionOpt LCURL ExprCaseClauseRep RCURL
    (216) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LCURL TypeCaseClauseOpt RCURL
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (66) ExpressionList -> . Expression ExpressionRep
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    RCURL           reduce using rule 48 (StatementList -> StatementRep .)
    CASE            reduce using rule 48 (StatementList -> StatementRep .)
    DEFAULT         reduce using rule 48 (StatementList -> StatementRep .)
    RETURN          shift and go to state 229
    BREAK           shift and go to state 245
    CONTINUE        shift and go to state 237
    GOTO            shift and go to state 226
    LCURL           shift and go to state 135
    IF              shift and go to state 250
    FOR             shift and go to state 234
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 240
    SEMICOLON       reduce using rule 265 (epsilon -> .)
    SWITCH          shift and go to state 238
    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    ContinueStmt                   shift and go to state 222
    Conversion                     shift and go to state 96
    SimpleStmt                     shift and go to state 247
    Label                          shift and go to state 230
    ExpressionStmt                 shift and go to state 223
    ForStmt                        shift and go to state 248
    ExprSwitchStmt                 shift and go to state 231
    Statement                      shift and go to state 224
    IfStmt                         shift and go to state 242
    OperandName                    shift and go to state 105
    Assignment                     shift and go to state 225
    IncDecStmt                     shift and go to state 232
    Declaration                    shift and go to state 239
    GotoStmt                       shift and go to state 233
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 227
    epsilon                        shift and go to state 241
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    ExpressionList                 shift and go to state 243
    Literal                        shift and go to state 101
    Expression                     shift and go to state 244
    ShortVarDecl                   shift and go to state 249
    Block                          shift and go to state 235
    TypeSwitchStmt                 shift and go to state 228
    BreakStmt                      shift and go to state 251
    SwitchStmt                     shift and go to state 236
    VarDecl                        shift and go to state 22
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    ReturnStmt                     shift and go to state 246
    ConstDecl                      shift and go to state 18

state 195

    (50) StatementRep -> epsilon .

    RETURN          reduce using rule 50 (StatementRep -> epsilon .)
    BREAK           reduce using rule 50 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 50 (StatementRep -> epsilon .)
    GOTO            reduce using rule 50 (StatementRep -> epsilon .)
    LCURL           reduce using rule 50 (StatementRep -> epsilon .)
    IF              reduce using rule 50 (StatementRep -> epsilon .)
    FOR             reduce using rule 50 (StatementRep -> epsilon .)
    CONST           reduce using rule 50 (StatementRep -> epsilon .)
    TYPE            reduce using rule 50 (StatementRep -> epsilon .)
    VAR             reduce using rule 50 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 50 (StatementRep -> epsilon .)
    SWITCH          reduce using rule 50 (StatementRep -> epsilon .)
    NOT             reduce using rule 50 (StatementRep -> epsilon .)
    PLUS            reduce using rule 50 (StatementRep -> epsilon .)
    MINUS           reduce using rule 50 (StatementRep -> epsilon .)
    STAR            reduce using rule 50 (StatementRep -> epsilon .)
    AND             reduce using rule 50 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 50 (StatementRep -> epsilon .)
    TYPECAST        reduce using rule 50 (StatementRep -> epsilon .)
    INTEGER         reduce using rule 50 (StatementRep -> epsilon .)
    OCTAL           reduce using rule 50 (StatementRep -> epsilon .)
    HEX             reduce using rule 50 (StatementRep -> epsilon .)
    FLOAT           reduce using rule 50 (StatementRep -> epsilon .)
    IMAGINARY       reduce using rule 50 (StatementRep -> epsilon .)
    RUNE            reduce using rule 50 (StatementRep -> epsilon .)
    STRING          reduce using rule 50 (StatementRep -> epsilon .)
    SEMICOLON       reduce using rule 50 (StatementRep -> epsilon .)
    RCURL           reduce using rule 50 (StatementRep -> epsilon .)
    CASE            reduce using rule 50 (StatementRep -> epsilon .)
    DEFAULT         reduce using rule 50 (StatementRep -> epsilon .)


state 196

    (47) Block -> LCURL StatementList . RCURL

    RCURL           shift and go to state 252


state 197

    (37) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    INT_T           reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FLOAT_T         reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    UINT_T          reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COMPLEX_T       reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    RUNE_T          reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    BOOL_T          reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING_T        reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPE            reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    IDENTIFIER      reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LSQUARE         reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STAR            reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LCURL           reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOLON       reduce using rule 37 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 198

    (41) ParametersList -> IdentifierList Type .
    (45) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 41 (ParametersList -> IdentifierList Type .)
    COMMA           reduce using rule 45 (ParameterDecl -> IdentifierList Type .)


state 199

    (43) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (45) ParameterDecl -> . IdentifierList Type
    (46) ParameterDecl -> . Type
    (63) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    IDENTIFIER      shift and go to state 141
    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    ParameterDecl                  shift and go to state 255
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    TypeLit                        shift and go to state 58
    IdentifierList                 shift and go to state 253
    PointerType                    shift and go to state 72
    Type                           shift and go to state 254
    QualifiedIdent                 shift and go to state 74

state 200

    (44) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (45) ParameterDecl -> . IdentifierList Type
    (46) ParameterDecl -> . Type
    (63) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    IDENTIFIER      shift and go to state 141
    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    TypeLit                        shift and go to state 58
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    IdentifierList                 shift and go to state 253
    PointerType                    shift and go to state 72
    Type                           shift and go to state 254
    QualifiedIdent                 shift and go to state 74
    ParameterDecl                  shift and go to state 256

state 201

    (79) VarSpecRep -> VarSpecRep VarSpec SEMICOLON .

    RPAREN          reduce using rule 79 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 79 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)


state 202

    (83) ExpressionListOpt -> ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 83 (ExpressionListOpt -> ASSIGN ExpressionList .)


state 203

    (66) ExpressionList -> Expression ExpressionRep .
    (67) ExpressionRep -> ExpressionRep . COMMA Expression

    SEMICOLON       reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    PLUS_ASSIGN     reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    MINUS_ASSIGN    reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    STAR_ASSIGN     reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    DIVIDE_ASSIGN   reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    MOD_ASSIGN      reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    AND_ASSIGN      reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    OR_ASSIGN       reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    XOR_ASSIGN      reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    LSHIFT_ASSIGN   reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    RSHIFT_ASSIGN   reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    ASSIGN          reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    LCURL           reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    COLON           reduce using rule 66 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 257


state 204

    (68) ExpressionRep -> epsilon .

    COMMA           reduce using rule 68 (ExpressionRep -> epsilon .)
    ASSIGN          reduce using rule 68 (ExpressionRep -> epsilon .)
    PLUS_ASSIGN     reduce using rule 68 (ExpressionRep -> epsilon .)
    MINUS_ASSIGN    reduce using rule 68 (ExpressionRep -> epsilon .)
    STAR_ASSIGN     reduce using rule 68 (ExpressionRep -> epsilon .)
    DIVIDE_ASSIGN   reduce using rule 68 (ExpressionRep -> epsilon .)
    MOD_ASSIGN      reduce using rule 68 (ExpressionRep -> epsilon .)
    AND_ASSIGN      reduce using rule 68 (ExpressionRep -> epsilon .)
    OR_ASSIGN       reduce using rule 68 (ExpressionRep -> epsilon .)
    XOR_ASSIGN      reduce using rule 68 (ExpressionRep -> epsilon .)
    LSHIFT_ASSIGN   reduce using rule 68 (ExpressionRep -> epsilon .)
    RSHIFT_ASSIGN   reduce using rule 68 (ExpressionRep -> epsilon .)
    SEMICOLON       reduce using rule 68 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 68 (ExpressionRep -> epsilon .)
    LCURL           reduce using rule 68 (ExpressionRep -> epsilon .)
    COLON           reduce using rule 68 (ExpressionRep -> epsilon .)


state 205

    (71) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .

    RPAREN          reduce using rule 71 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 71 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)


state 206

    (93) Operand -> LPAREN Expression RPAREN .

    DOT             reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    LSQUARE         reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    LOGICAL_OR      reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    LOGICAL_AND     reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    NOT_ASSIGN      reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    LESSER          reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    GREATER         reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    LESS_EQUALS     reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    MORE_EQUALS     reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    STAR            reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    AND             reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    LCURL           reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    PLUS_ASSIGN     reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    MINUS_ASSIGN    reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    STAR_ASSIGN     reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    MOD_ASSIGN      reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    INCR            reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)
    DECR            reduce using rule 93 (Operand -> LPAREN Expression RPAREN .)


state 207

    (136) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 136 (ExpressionListTypeOpt -> epsilon .)


state 208

    (135) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 135 (ExpressionListTypeOpt -> ExpressionList .)


state 209

    (134) Arguments -> LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 258


state 210

    (131) Slice -> LSQUARE ExpressionOpt . COLON ExpressionOpt RSQUARE
    (132) Slice -> LSQUARE ExpressionOpt . COLON Expression COLON Expression RSQUARE

    COLON           shift and go to state 259


state 211

    (142) ExpressionOpt -> epsilon .

    COLON           reduce using rule 142 (ExpressionOpt -> epsilon .)
    RSQUARE         reduce using rule 142 (ExpressionOpt -> epsilon .)


state 212

    (130) Index -> LSQUARE Expression . RSQUARE
    (140) Expression -> Expression . BinaryOp Expression
    (141) ExpressionOpt -> Expression .
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    RSQUARE         shift and go to state 260
    COLON           reduce using rule 141 (ExpressionOpt -> Expression .)
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    AddMulOp                       shift and go to state 171
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 174
    UnaryOp                        shift and go to state 167

state 213

    (129) Selector -> DOT IDENTIFIER .

    DOT             reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    LSQUARE         reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    LOGICAL_OR      reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    LOGICAL_AND     reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    EQUALS          reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    LESSER          reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    GREATER         reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    LESS_EQUALS     reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    MORE_EQUALS     reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    OR              reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    XOR             reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    DIVIDE          reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    MOD             reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    LSHIFT          reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    RSHIFT          reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    PLUS            reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    MINUS           reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    STAR            reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    AND             reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    RSQUARE         reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    COMMA           reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    COLON           reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    INCR            reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    DECR            reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    AND_ASSIGN      reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    OR_ASSIGN       reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    ASSIGN          reduce using rule 129 (Selector -> DOT IDENTIFIER .)
    LCURL           reduce using rule 129 (Selector -> DOT IDENTIFIER .)


state 214

    (133) TypeAssertion -> DOT LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    Type                           shift and go to state 261
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 215

    (22) ElementType -> Type .

    ASSIGN          reduce using rule 22 (ElementType -> Type .)
    SEMICOLON       reduce using rule 22 (ElementType -> Type .)
    RPAREN          reduce using rule 22 (ElementType -> Type .)
    LCURL           reduce using rule 22 (ElementType -> Type .)
    COMMA           reduce using rule 22 (ElementType -> Type .)
    LPAREN          reduce using rule 22 (ElementType -> Type .)
    STRING          reduce using rule 22 (ElementType -> Type .)
    COLON           reduce using rule 22 (ElementType -> Type .)


state 216

    (20) ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .

    LCURL           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    SEMICOLON       reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    ASSIGN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    RPAREN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    COMMA           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    LPAREN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    STRING          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    COLON           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)


state 217

    (140) Expression -> Expression BinaryOp Expression .
    (140) Expression -> Expression . BinaryOp Expression
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

  ! shift/reduce conflict for LOGICAL_OR resolved as shift
  ! shift/reduce conflict for LOGICAL_AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_ASSIGN resolved as shift
  ! shift/reduce conflict for LESSER resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for MORE_EQUALS resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    COMMA           reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    SEMICOLON       reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    LCURL           reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    RSQUARE         reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    RPAREN          reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    COLON           reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    INCR            reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    DECR            reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    PLUS_ASSIGN     reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    MINUS_ASSIGN    reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    STAR_ASSIGN     reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    DIVIDE_ASSIGN   reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    MOD_ASSIGN      reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    AND_ASSIGN      reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    OR_ASSIGN       reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    XOR_ASSIGN      reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    LSHIFT_ASSIGN   reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    RSHIFT_ASSIGN   reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    ASSIGN          reduce using rule 140 (Expression -> Expression BinaryOp Expression .)
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

  ! LOGICAL_OR      [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! LOGICAL_AND     [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! EQUALS          [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! LESSER          [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! GREATER         [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! OR              [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! XOR             [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! DIVIDE          [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! MOD             [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! LSHIFT          [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! RSHIFT          [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! PLUS            [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! MINUS           [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! STAR            [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]
  ! AND             [ reduce using rule 140 (Expression -> Expression BinaryOp Expression .) ]

    AddMulOp                       shift and go to state 171
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 174
    UnaryOp                        shift and go to state 167

state 218

    (167) Conversion -> TYPECAST Type LPAREN . Expression RPAREN
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Expression                     shift and go to state 262

state 219

    (24) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 263


state 220

    (23) StructType -> STRUCT LCURL FieldDeclRep RCURL .

    COMMA           reduce using rule 23 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    COLON           reduce using rule 23 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    RPAREN          reduce using rule 23 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    SEMICOLON       reduce using rule 23 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    ASSIGN          reduce using rule 23 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    LPAREN          reduce using rule 23 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    LCURL           reduce using rule 23 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    STRING          reduce using rule 23 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)


state 221

    (26) FieldDecl -> IdentifierList . Type TagOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    Type                           shift and go to state 264
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 222

    (173) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 173 (Statement -> ContinueStmt .)


state 223

    (180) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 180 (SimpleStmt -> ExpressionStmt .)
    LCURL           reduce using rule 180 (SimpleStmt -> ExpressionStmt .)


state 224

    (49) StatementRep -> StatementRep Statement . SEMICOLON

    SEMICOLON       shift and go to state 265


state 225

    (182) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 182 (SimpleStmt -> Assignment .)
    LCURL           reduce using rule 182 (SimpleStmt -> Assignment .)


state 226

    (248) GotoStmt -> GOTO . Label
    (185) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 266

    Label                          shift and go to state 267

state 227

    (169) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 169 (Statement -> LabeledStmt .)


state 228

    (209) SwitchStmt -> TypeSwitchStmt .

    SEMICOLON       reduce using rule 209 (SwitchStmt -> TypeSwitchStmt .)


state 229

    (241) ReturnStmt -> RETURN . ExpressionListPureOpt
    (242) ExpressionListPureOpt -> . ExpressionList
    (243) ExpressionListPureOpt -> . epsilon
    (66) ExpressionList -> . Expression ExpressionRep
    (265) epsilon -> .
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    SEMICOLON       reduce using rule 265 (epsilon -> .)
    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    epsilon                        shift and go to state 269
    UnaryExpr                      shift and go to state 113
    ExpressionListPureOpt          shift and go to state 268
    Operand                        shift and go to state 102
    Conversion                     shift and go to state 96
    OperandName                    shift and go to state 105
    ExpressionList                 shift and go to state 270
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Literal                        shift and go to state 101
    Expression                     shift and go to state 150

state 230

    (184) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 271


state 231

    (208) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 208 (SwitchStmt -> ExprSwitchStmt .)


state 232

    (181) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 181 (SimpleStmt -> IncDecStmt .)
    LCURL           reduce using rule 181 (SimpleStmt -> IncDecStmt .)


state 233

    (174) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 174 (Statement -> GotoStmt .)


state 234

    (228) ForStmt -> FOR . ConditionBlockOpt Block
    (229) ConditionBlockOpt -> . epsilon
    (230) ConditionBlockOpt -> . Condition
    (231) ConditionBlockOpt -> . ForClause
    (232) ConditionBlockOpt -> . RangeClause
    (265) epsilon -> .
    (233) Condition -> . Expression
    (234) ForClause -> . SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
    (237) RangeClause -> . ExpressionIdentListOpt RANGE Expression
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (179) SimpleStmt -> . epsilon
    (180) SimpleStmt -> . ExpressionStmt
    (181) SimpleStmt -> . IncDecStmt
    (182) SimpleStmt -> . Assignment
    (183) SimpleStmt -> . ShortVarDecl
    (238) ExpressionIdentListOpt -> . epsilon
    (239) ExpressionIdentListOpt -> . ExpressionIdentifier
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (186) ExpressionStmt -> . Expression
    (187) IncDecStmt -> . Expression INCR
    (188) IncDecStmt -> . Expression DECR
    (189) Assignment -> . ExpressionList assign_op ExpressionList
    (85) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (240) ExpressionIdentifier -> . ExpressionList ASSIGN
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (66) ExpressionList -> . Expression ExpressionRep
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    LCURL           reduce using rule 265 (epsilon -> .)
    SEMICOLON       reduce using rule 265 (epsilon -> .)
    RANGE           reduce using rule 265 (epsilon -> .)
    NOT             shift and go to state 120
    IDENTIFIER      shift and go to state 274
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    PrimaryExpr                    shift and go to state 100
    SimpleStmt                     shift and go to state 272
    ExpressionStmt                 shift and go to state 223
    OperandName                    shift and go to state 105
    Assignment                     shift and go to state 225
    RangeClause                    shift and go to state 273
    IncDecStmt                     shift and go to state 232
    Condition                      shift and go to state 275
    epsilon                        shift and go to state 276
    UnaryExpr                      shift and go to state 113
    ConditionBlockOpt              shift and go to state 277
    ExpressionIdentListOpt         shift and go to state 278
    ExpressionList                 shift and go to state 279
    ForClause                      shift and go to state 280
    Expression                     shift and go to state 281
    ShortVarDecl                   shift and go to state 249
    Literal                        shift and go to state 101
    BasicLit                       shift and go to state 106
    Operand                        shift and go to state 102
    ExpressionIdentifier           shift and go to state 282

state 235

    (175) Statement -> Block .

    SEMICOLON       reduce using rule 175 (Statement -> Block .)


state 236

    (177) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 177 (Statement -> SwitchStmt .)


state 237

    (245) ContinueStmt -> CONTINUE . LabelOpt
    (246) LabelOpt -> . Label
    (247) LabelOpt -> . epsilon
    (185) Label -> . IDENTIFIER
    (265) epsilon -> .

    IDENTIFIER      shift and go to state 266
    SEMICOLON       reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 283
    LabelOpt                       shift and go to state 284
    Label                          shift and go to state 285

state 238

    (210) ExprSwitchStmt -> SWITCH . ExpressionOpt LCURL ExprCaseClauseRep RCURL
    (216) TypeSwitchStmt -> SWITCH . SimpleStmtOpt TypeSwitchGuard LCURL TypeCaseClauseOpt RCURL
    (141) ExpressionOpt -> . Expression
    (142) ExpressionOpt -> . epsilon
    (203) SimpleStmtOpt -> . SimpleStmt SEMICOLON
    (204) SimpleStmtOpt -> . epsilon
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (265) epsilon -> .
    (179) SimpleStmt -> . epsilon
    (180) SimpleStmt -> . ExpressionStmt
    (181) SimpleStmt -> . IncDecStmt
    (182) SimpleStmt -> . Assignment
    (183) SimpleStmt -> . ShortVarDecl
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (186) ExpressionStmt -> . Expression
    (187) IncDecStmt -> . Expression INCR
    (188) IncDecStmt -> . Expression DECR
    (189) Assignment -> . ExpressionList assign_op ExpressionList
    (85) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (66) ExpressionList -> . Expression ExpressionRep
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TYPECAST resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for OCTAL resolved as shift
  ! shift/reduce conflict for HEX resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    LCURL           reduce using rule 265 (epsilon -> .)
    SEMICOLON       reduce using rule 265 (epsilon -> .)
    NOT             shift and go to state 120
    IDENTIFIER      shift and go to state 274
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

  ! IDENTIFIER      [ reduce using rule 265 (epsilon -> .) ]
  ! LPAREN          [ reduce using rule 265 (epsilon -> .) ]
  ! TYPECAST        [ reduce using rule 265 (epsilon -> .) ]
  ! INTEGER         [ reduce using rule 265 (epsilon -> .) ]
  ! OCTAL           [ reduce using rule 265 (epsilon -> .) ]
  ! HEX             [ reduce using rule 265 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 265 (epsilon -> .) ]
  ! IMAGINARY       [ reduce using rule 265 (epsilon -> .) ]
  ! RUNE            [ reduce using rule 265 (epsilon -> .) ]
  ! STRING          [ reduce using rule 265 (epsilon -> .) ]

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    SimpleStmt                     shift and go to state 286
    ExpressionStmt                 shift and go to state 223
    OperandName                    shift and go to state 105
    Assignment                     shift and go to state 225
    IncDecStmt                     shift and go to state 232
    ExpressionOpt                  shift and go to state 287
    epsilon                        shift and go to state 288
    UnaryExpr                      shift and go to state 113
    PrimaryExpr                    shift and go to state 100
    SimpleStmtOpt                  shift and go to state 289
    ExpressionList                 shift and go to state 243
    Literal                        shift and go to state 101
    Expression                     shift and go to state 290
    ShortVarDecl                   shift and go to state 249
    BasicLit                       shift and go to state 106
    Operand                        shift and go to state 102

state 239

    (168) Statement -> Declaration .

    SEMICOLON       reduce using rule 168 (Statement -> Declaration .)


state 240

    (185) Label -> IDENTIFIER .
    (85) ShortVarDecl -> IDENTIFIER . QUICK_ASSIGN Expression
    (102) OperandName -> IDENTIFIER .

    COLON           reduce using rule 185 (Label -> IDENTIFIER .)
    QUICK_ASSIGN    shift and go to state 291
    DOT             reduce using rule 102 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 102 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 102 (OperandName -> IDENTIFIER .)
    INCR            reduce using rule 102 (OperandName -> IDENTIFIER .)
    DECR            reduce using rule 102 (OperandName -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 102 (OperandName -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 102 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 102 (OperandName -> IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    LESSER          reduce using rule 102 (OperandName -> IDENTIFIER .)
    GREATER         reduce using rule 102 (OperandName -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 102 (OperandName -> IDENTIFIER .)
    MORE_EQUALS     reduce using rule 102 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 102 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 102 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 102 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 102 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 102 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 102 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 102 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 102 (OperandName -> IDENTIFIER .)
    STAR            reduce using rule 102 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 102 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 102 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 102 (OperandName -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 102 (OperandName -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 102 (OperandName -> IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 102 (OperandName -> IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 102 (OperandName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 102 (OperandName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 102 (OperandName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 102 (OperandName -> IDENTIFIER .)
    ASSIGN          reduce using rule 102 (OperandName -> IDENTIFIER .)


state 241

    (179) SimpleStmt -> epsilon .

    SEMICOLON       reduce using rule 179 (SimpleStmt -> epsilon .)
    LCURL           reduce using rule 179 (SimpleStmt -> epsilon .)


state 242

    (176) Statement -> IfStmt .

    SEMICOLON       reduce using rule 176 (Statement -> IfStmt .)


state 243

    (189) Assignment -> ExpressionList . assign_op ExpressionList
    (190) assign_op -> . AssignOp
    (191) AssignOp -> . PLUS_ASSIGN
    (192) AssignOp -> . MINUS_ASSIGN
    (193) AssignOp -> . STAR_ASSIGN
    (194) AssignOp -> . DIVIDE_ASSIGN
    (195) AssignOp -> . MOD_ASSIGN
    (196) AssignOp -> . AND_ASSIGN
    (197) AssignOp -> . OR_ASSIGN
    (198) AssignOp -> . XOR_ASSIGN
    (199) AssignOp -> . LSHIFT_ASSIGN
    (200) AssignOp -> . RSHIFT_ASSIGN
    (201) AssignOp -> . ASSIGN

    PLUS_ASSIGN     shift and go to state 302
    MINUS_ASSIGN    shift and go to state 295
    STAR_ASSIGN     shift and go to state 294
    DIVIDE_ASSIGN   shift and go to state 303
    MOD_ASSIGN      shift and go to state 298
    AND_ASSIGN      shift and go to state 300
    OR_ASSIGN       shift and go to state 297
    XOR_ASSIGN      shift and go to state 296
    LSHIFT_ASSIGN   shift and go to state 299
    RSHIFT_ASSIGN   shift and go to state 293
    ASSIGN          shift and go to state 304

    AssignOp                       shift and go to state 292
    assign_op                      shift and go to state 301

state 244

    (186) ExpressionStmt -> Expression .
    (187) IncDecStmt -> Expression . INCR
    (188) IncDecStmt -> Expression . DECR
    (140) Expression -> Expression . BinaryOp Expression
    (66) ExpressionList -> Expression . ExpressionRep
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (67) ExpressionRep -> . ExpressionRep COMMA Expression
    (68) ExpressionRep -> . epsilon
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (265) epsilon -> .
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    SEMICOLON       reduce using rule 186 (ExpressionStmt -> Expression .)
    LCURL           reduce using rule 186 (ExpressionStmt -> Expression .)
    INCR            shift and go to state 306
    DECR            shift and go to state 305
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    COMMA           reduce using rule 265 (epsilon -> .)
    PLUS_ASSIGN     reduce using rule 265 (epsilon -> .)
    MINUS_ASSIGN    reduce using rule 265 (epsilon -> .)
    STAR_ASSIGN     reduce using rule 265 (epsilon -> .)
    DIVIDE_ASSIGN   reduce using rule 265 (epsilon -> .)
    MOD_ASSIGN      reduce using rule 265 (epsilon -> .)
    AND_ASSIGN      reduce using rule 265 (epsilon -> .)
    OR_ASSIGN       reduce using rule 265 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 265 (epsilon -> .)
    LSHIFT_ASSIGN   reduce using rule 265 (epsilon -> .)
    RSHIFT_ASSIGN   reduce using rule 265 (epsilon -> .)
    ASSIGN          reduce using rule 265 (epsilon -> .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    ExpressionRep                  shift and go to state 203
    RelOp                          shift and go to state 180
    UnaryOp                        shift and go to state 167
    BinaryOp                       shift and go to state 174
    epsilon                        shift and go to state 204
    AddMulOp                       shift and go to state 171

state 245

    (244) BreakStmt -> BREAK . LabelOpt
    (246) LabelOpt -> . Label
    (247) LabelOpt -> . epsilon
    (185) Label -> . IDENTIFIER
    (265) epsilon -> .

    IDENTIFIER      shift and go to state 266
    SEMICOLON       reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 283
    LabelOpt                       shift and go to state 307
    Label                          shift and go to state 285

state 246

    (171) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 171 (Statement -> ReturnStmt .)


state 247

    (170) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 170 (Statement -> SimpleStmt .)


state 248

    (178) Statement -> ForStmt .

    SEMICOLON       reduce using rule 178 (Statement -> ForStmt .)


state 249

    (183) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 183 (SimpleStmt -> ShortVarDecl .)
    LCURL           reduce using rule 183 (SimpleStmt -> ShortVarDecl .)


state 250

    (202) IfStmt -> IF . Expression Block ElseOpt
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Expression                     shift and go to state 308

state 251

    (172) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 172 (Statement -> BreakStmt .)


state 252

    (47) Block -> LCURL StatementList RCURL .

    SEMICOLON       reduce using rule 47 (Block -> LCURL StatementList RCURL .)
    ELSE            reduce using rule 47 (Block -> LCURL StatementList RCURL .)


state 253

    (45) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    Type                           shift and go to state 309
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 254

    (46) ParameterDecl -> Type .

    COMMA           reduce using rule 46 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 46 (ParameterDecl -> Type .)


state 255

    (43) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 43 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 43 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 256

    (44) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 44 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 44 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 257

    (67) ExpressionRep -> ExpressionRep COMMA . Expression
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Conversion                     shift and go to state 96
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Literal                        shift and go to state 101
    Expression                     shift and go to state 310

state 258

    (134) Arguments -> LPAREN ExpressionListTypeOpt RPAREN .

    DOT             reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LSQUARE         reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LOGICAL_OR      reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LOGICAL_AND     reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQUALS          reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    NOT_ASSIGN      reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LESSER          reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GREATER         reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LESS_EQUALS     reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MORE_EQUALS     reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    XOR             reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MOD             reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LSHIFT          reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RSHIFT          reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    STAR            reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AND             reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RSQUARE         reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOLON       reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    INCR            reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DECR            reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS_ASSIGN     reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS_ASSIGN    reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    STAR_ASSIGN     reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MOD_ASSIGN      reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AND_ASSIGN      reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR_ASSIGN       reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    XOR_ASSIGN      reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    ASSIGN          reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LCURL           reduce using rule 134 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)


state 259

    (131) Slice -> LSQUARE ExpressionOpt COLON . ExpressionOpt RSQUARE
    (132) Slice -> LSQUARE ExpressionOpt COLON . Expression COLON Expression RSQUARE
    (141) ExpressionOpt -> . Expression
    (142) ExpressionOpt -> . epsilon
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (265) epsilon -> .
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    RSQUARE         reduce using rule 265 (epsilon -> .)
    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    ExpressionOpt                  shift and go to state 311
    BasicLit                       shift and go to state 106
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    epsilon                        shift and go to state 211
    PrimaryExpr                    shift and go to state 100
    Expression                     shift and go to state 312

state 260

    (130) Index -> LSQUARE Expression RSQUARE .

    DOT             reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    LSQUARE         reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    LPAREN          reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    LOGICAL_OR      reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    LOGICAL_AND     reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    EQUALS          reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    NOT_ASSIGN      reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    LESSER          reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    GREATER         reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    LESS_EQUALS     reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    MORE_EQUALS     reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    OR              reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    XOR             reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    DIVIDE          reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    MOD             reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    LSHIFT          reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    RSHIFT          reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    PLUS            reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    MINUS           reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    STAR            reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    AND             reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    RSQUARE         reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    COMMA           reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    SEMICOLON       reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    RPAREN          reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    COLON           reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    INCR            reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    DECR            reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    PLUS_ASSIGN     reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    MINUS_ASSIGN    reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    STAR_ASSIGN     reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    DIVIDE_ASSIGN   reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    MOD_ASSIGN      reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    AND_ASSIGN      reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    OR_ASSIGN       reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    XOR_ASSIGN      reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    LSHIFT_ASSIGN   reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    RSHIFT_ASSIGN   reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    ASSIGN          reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)
    LCURL           reduce using rule 130 (Index -> LSQUARE Expression RSQUARE .)


state 261

    (133) TypeAssertion -> DOT LPAREN Type . RPAREN

    RPAREN          shift and go to state 313


state 262

    (167) Conversion -> TYPECAST Type LPAREN Expression . RPAREN
    (140) Expression -> Expression . BinaryOp Expression
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    RPAREN          shift and go to state 314
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    RelOp                          shift and go to state 180
    UnaryOp                        shift and go to state 167
    AddMulOp                       shift and go to state 171
    BinaryOp                       shift and go to state 174

state 263

    (24) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .

    RCURL           reduce using rule 24 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)
    IDENTIFIER      reduce using rule 24 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)


state 264

    (26) FieldDecl -> IdentifierList Type . TagOpt
    (27) TagOpt -> . Tag
    (28) TagOpt -> . epsilon
    (29) Tag -> . STRING
    (265) epsilon -> .

    STRING          shift and go to state 315
    SEMICOLON       reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 316
    Tag                            shift and go to state 317
    TagOpt                         shift and go to state 318

state 265

    (49) StatementRep -> StatementRep Statement SEMICOLON .

    RETURN          reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    BREAK           reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONTINUE        reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    GOTO            reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    LCURL           reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    IF              reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    FOR             reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONST           reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    TYPE            reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    VAR             reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    SWITCH          reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    NOT             reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    PLUS            reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    MINUS           reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    STAR            reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    AND             reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    LPAREN          reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    TYPECAST        reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    INTEGER         reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    OCTAL           reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    HEX             reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    FLOAT           reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    IMAGINARY       reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    RUNE            reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    STRING          reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    SEMICOLON       reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    RCURL           reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    CASE            reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)
    DEFAULT         reduce using rule 49 (StatementRep -> StatementRep Statement SEMICOLON .)


state 266

    (185) Label -> IDENTIFIER .

    SEMICOLON       reduce using rule 185 (Label -> IDENTIFIER .)


state 267

    (248) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 248 (GotoStmt -> GOTO Label .)


state 268

    (241) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOLON       reduce using rule 241 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 269

    (243) ExpressionListPureOpt -> epsilon .

    SEMICOLON       reduce using rule 243 (ExpressionListPureOpt -> epsilon .)


state 270

    (242) ExpressionListPureOpt -> ExpressionList .

    SEMICOLON       reduce using rule 242 (ExpressionListPureOpt -> ExpressionList .)


state 271

    (184) LabeledStmt -> Label COLON . Statement
    (168) Statement -> . Declaration
    (169) Statement -> . LabeledStmt
    (170) Statement -> . SimpleStmt
    (171) Statement -> . ReturnStmt
    (172) Statement -> . BreakStmt
    (173) Statement -> . ContinueStmt
    (174) Statement -> . GotoStmt
    (175) Statement -> . Block
    (176) Statement -> . IfStmt
    (177) Statement -> . SwitchStmt
    (178) Statement -> . ForStmt
    (51) Declaration -> . ConstDecl
    (52) Declaration -> . TypeDecl
    (53) Declaration -> . VarDecl
    (184) LabeledStmt -> . Label COLON Statement
    (179) SimpleStmt -> . epsilon
    (180) SimpleStmt -> . ExpressionStmt
    (181) SimpleStmt -> . IncDecStmt
    (182) SimpleStmt -> . Assignment
    (183) SimpleStmt -> . ShortVarDecl
    (241) ReturnStmt -> . RETURN ExpressionListPureOpt
    (244) BreakStmt -> . BREAK LabelOpt
    (245) ContinueStmt -> . CONTINUE LabelOpt
    (248) GotoStmt -> . GOTO Label
    (47) Block -> . LCURL StatementList RCURL
    (202) IfStmt -> . IF Expression Block ElseOpt
    (208) SwitchStmt -> . ExprSwitchStmt
    (209) SwitchStmt -> . TypeSwitchStmt
    (228) ForStmt -> . FOR ConditionBlockOpt Block
    (56) ConstDecl -> . CONST ConstSpec
    (57) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (69) TypeDecl -> . TYPE TypeSpec
    (70) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (77) VarDecl -> . VAR VarSpec
    (78) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (185) Label -> . IDENTIFIER
    (265) epsilon -> .
    (186) ExpressionStmt -> . Expression
    (187) IncDecStmt -> . Expression INCR
    (188) IncDecStmt -> . Expression DECR
    (189) Assignment -> . ExpressionList assign_op ExpressionList
    (85) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (210) ExprSwitchStmt -> . SWITCH ExpressionOpt LCURL ExprCaseClauseRep RCURL
    (216) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LCURL TypeCaseClauseOpt RCURL
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (66) ExpressionList -> . Expression ExpressionRep
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    RETURN          shift and go to state 229
    BREAK           shift and go to state 245
    CONTINUE        shift and go to state 237
    GOTO            shift and go to state 226
    LCURL           shift and go to state 135
    IF              shift and go to state 250
    FOR             shift and go to state 234
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 240
    SEMICOLON       reduce using rule 265 (epsilon -> .)
    SWITCH          shift and go to state 238
    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    ContinueStmt                   shift and go to state 222
    Conversion                     shift and go to state 96
    SimpleStmt                     shift and go to state 247
    Label                          shift and go to state 230
    ExpressionStmt                 shift and go to state 223
    ForStmt                        shift and go to state 248
    ExprSwitchStmt                 shift and go to state 231
    Statement                      shift and go to state 319
    IfStmt                         shift and go to state 242
    OperandName                    shift and go to state 105
    Assignment                     shift and go to state 225
    IncDecStmt                     shift and go to state 232
    Declaration                    shift and go to state 239
    GotoStmt                       shift and go to state 233
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 227
    epsilon                        shift and go to state 241
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    ExpressionList                 shift and go to state 243
    Literal                        shift and go to state 101
    Expression                     shift and go to state 244
    ShortVarDecl                   shift and go to state 249
    Block                          shift and go to state 235
    TypeSwitchStmt                 shift and go to state 228
    BreakStmt                      shift and go to state 251
    SwitchStmt                     shift and go to state 236
    VarDecl                        shift and go to state 22
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    ReturnStmt                     shift and go to state 246
    ConstDecl                      shift and go to state 18

state 272

    (234) ForClause -> SimpleStmt . SEMICOLON ConditionOpt SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 320


state 273

    (232) ConditionBlockOpt -> RangeClause .

    LCURL           reduce using rule 232 (ConditionBlockOpt -> RangeClause .)


state 274

    (85) ShortVarDecl -> IDENTIFIER . QUICK_ASSIGN Expression
    (102) OperandName -> IDENTIFIER .

    QUICK_ASSIGN    shift and go to state 291
    DOT             reduce using rule 102 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 102 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 102 (OperandName -> IDENTIFIER .)
    INCR            reduce using rule 102 (OperandName -> IDENTIFIER .)
    DECR            reduce using rule 102 (OperandName -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 102 (OperandName -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 102 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 102 (OperandName -> IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    LESSER          reduce using rule 102 (OperandName -> IDENTIFIER .)
    GREATER         reduce using rule 102 (OperandName -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 102 (OperandName -> IDENTIFIER .)
    MORE_EQUALS     reduce using rule 102 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 102 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 102 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 102 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 102 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 102 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 102 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 102 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 102 (OperandName -> IDENTIFIER .)
    STAR            reduce using rule 102 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 102 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 102 (OperandName -> IDENTIFIER .)
    LCURL           reduce using rule 102 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 102 (OperandName -> IDENTIFIER .)
    ASSIGN          reduce using rule 102 (OperandName -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 102 (OperandName -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 102 (OperandName -> IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 102 (OperandName -> IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 102 (OperandName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 102 (OperandName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 102 (OperandName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 102 (OperandName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 102 (OperandName -> IDENTIFIER .)


state 275

    (230) ConditionBlockOpt -> Condition .

    LCURL           reduce using rule 230 (ConditionBlockOpt -> Condition .)


state 276

    (229) ConditionBlockOpt -> epsilon .
    (179) SimpleStmt -> epsilon .
    (238) ExpressionIdentListOpt -> epsilon .

    LCURL           reduce using rule 229 (ConditionBlockOpt -> epsilon .)
    SEMICOLON       reduce using rule 179 (SimpleStmt -> epsilon .)
    RANGE           reduce using rule 238 (ExpressionIdentListOpt -> epsilon .)


state 277

    (228) ForStmt -> FOR ConditionBlockOpt . Block
    (47) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 135

    Block                          shift and go to state 321

state 278

    (237) RangeClause -> ExpressionIdentListOpt . RANGE Expression

    RANGE           shift and go to state 322


state 279

    (189) Assignment -> ExpressionList . assign_op ExpressionList
    (240) ExpressionIdentifier -> ExpressionList . ASSIGN
    (190) assign_op -> . AssignOp
    (191) AssignOp -> . PLUS_ASSIGN
    (192) AssignOp -> . MINUS_ASSIGN
    (193) AssignOp -> . STAR_ASSIGN
    (194) AssignOp -> . DIVIDE_ASSIGN
    (195) AssignOp -> . MOD_ASSIGN
    (196) AssignOp -> . AND_ASSIGN
    (197) AssignOp -> . OR_ASSIGN
    (198) AssignOp -> . XOR_ASSIGN
    (199) AssignOp -> . LSHIFT_ASSIGN
    (200) AssignOp -> . RSHIFT_ASSIGN
    (201) AssignOp -> . ASSIGN

    ASSIGN          shift and go to state 323
    PLUS_ASSIGN     shift and go to state 302
    MINUS_ASSIGN    shift and go to state 295
    STAR_ASSIGN     shift and go to state 294
    DIVIDE_ASSIGN   shift and go to state 303
    MOD_ASSIGN      shift and go to state 298
    AND_ASSIGN      shift and go to state 300
    OR_ASSIGN       shift and go to state 297
    XOR_ASSIGN      shift and go to state 296
    LSHIFT_ASSIGN   shift and go to state 299
    RSHIFT_ASSIGN   shift and go to state 293

    AssignOp                       shift and go to state 292
    assign_op                      shift and go to state 301

state 280

    (231) ConditionBlockOpt -> ForClause .

    LCURL           reduce using rule 231 (ConditionBlockOpt -> ForClause .)


state 281

    (233) Condition -> Expression .
    (140) Expression -> Expression . BinaryOp Expression
    (186) ExpressionStmt -> Expression .
    (187) IncDecStmt -> Expression . INCR
    (188) IncDecStmt -> Expression . DECR
    (66) ExpressionList -> Expression . ExpressionRep
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (67) ExpressionRep -> . ExpressionRep COMMA Expression
    (68) ExpressionRep -> . epsilon
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (265) epsilon -> .
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    LCURL           reduce using rule 233 (Condition -> Expression .)
    SEMICOLON       reduce using rule 186 (ExpressionStmt -> Expression .)
    INCR            shift and go to state 306
    DECR            shift and go to state 305
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    COMMA           reduce using rule 265 (epsilon -> .)
    ASSIGN          reduce using rule 265 (epsilon -> .)
    PLUS_ASSIGN     reduce using rule 265 (epsilon -> .)
    MINUS_ASSIGN    reduce using rule 265 (epsilon -> .)
    STAR_ASSIGN     reduce using rule 265 (epsilon -> .)
    DIVIDE_ASSIGN   reduce using rule 265 (epsilon -> .)
    MOD_ASSIGN      reduce using rule 265 (epsilon -> .)
    AND_ASSIGN      reduce using rule 265 (epsilon -> .)
    OR_ASSIGN       reduce using rule 265 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 265 (epsilon -> .)
    LSHIFT_ASSIGN   reduce using rule 265 (epsilon -> .)
    RSHIFT_ASSIGN   reduce using rule 265 (epsilon -> .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    ExpressionRep                  shift and go to state 203
    RelOp                          shift and go to state 180
    UnaryOp                        shift and go to state 167
    BinaryOp                       shift and go to state 174
    epsilon                        shift and go to state 204
    AddMulOp                       shift and go to state 171

state 282

    (239) ExpressionIdentListOpt -> ExpressionIdentifier .

    RANGE           reduce using rule 239 (ExpressionIdentListOpt -> ExpressionIdentifier .)


state 283

    (247) LabelOpt -> epsilon .

    SEMICOLON       reduce using rule 247 (LabelOpt -> epsilon .)


state 284

    (245) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOLON       reduce using rule 245 (ContinueStmt -> CONTINUE LabelOpt .)


state 285

    (246) LabelOpt -> Label .

    SEMICOLON       reduce using rule 246 (LabelOpt -> Label .)


state 286

    (203) SimpleStmtOpt -> SimpleStmt . SEMICOLON

    SEMICOLON       shift and go to state 324


state 287

    (210) ExprSwitchStmt -> SWITCH ExpressionOpt . LCURL ExprCaseClauseRep RCURL

    LCURL           shift and go to state 325


state 288

    (142) ExpressionOpt -> epsilon .
    (204) SimpleStmtOpt -> epsilon .
    (179) SimpleStmt -> epsilon .

    LCURL           reduce using rule 142 (ExpressionOpt -> epsilon .)
    IDENTIFIER      reduce using rule 204 (SimpleStmtOpt -> epsilon .)
    LPAREN          reduce using rule 204 (SimpleStmtOpt -> epsilon .)
    TYPECAST        reduce using rule 204 (SimpleStmtOpt -> epsilon .)
    INTEGER         reduce using rule 204 (SimpleStmtOpt -> epsilon .)
    OCTAL           reduce using rule 204 (SimpleStmtOpt -> epsilon .)
    HEX             reduce using rule 204 (SimpleStmtOpt -> epsilon .)
    FLOAT           reduce using rule 204 (SimpleStmtOpt -> epsilon .)
    IMAGINARY       reduce using rule 204 (SimpleStmtOpt -> epsilon .)
    RUNE            reduce using rule 204 (SimpleStmtOpt -> epsilon .)
    STRING          reduce using rule 204 (SimpleStmtOpt -> epsilon .)
    SEMICOLON       reduce using rule 179 (SimpleStmt -> epsilon .)


state 289

    (216) TypeSwitchStmt -> SWITCH SimpleStmtOpt . TypeSwitchGuard LCURL TypeCaseClauseOpt RCURL
    (217) TypeSwitchGuard -> . IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN
    (218) IdentifierOpt -> . IDENTIFIER QUICK_ASSIGN
    (219) IdentifierOpt -> . epsilon
    (265) epsilon -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 329
    LPAREN          reduce using rule 265 (epsilon -> .)
    TYPECAST        reduce using rule 265 (epsilon -> .)
    INTEGER         reduce using rule 265 (epsilon -> .)
    OCTAL           reduce using rule 265 (epsilon -> .)
    HEX             reduce using rule 265 (epsilon -> .)
    FLOAT           reduce using rule 265 (epsilon -> .)
    IMAGINARY       reduce using rule 265 (epsilon -> .)
    RUNE            reduce using rule 265 (epsilon -> .)
    STRING          reduce using rule 265 (epsilon -> .)

  ! IDENTIFIER      [ reduce using rule 265 (epsilon -> .) ]

    epsilon                        shift and go to state 326
    TypeSwitchGuard                shift and go to state 327
    IdentifierOpt                  shift and go to state 328

state 290

    (141) ExpressionOpt -> Expression .
    (140) Expression -> Expression . BinaryOp Expression
    (186) ExpressionStmt -> Expression .
    (187) IncDecStmt -> Expression . INCR
    (188) IncDecStmt -> Expression . DECR
    (66) ExpressionList -> Expression . ExpressionRep
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (67) ExpressionRep -> . ExpressionRep COMMA Expression
    (68) ExpressionRep -> . epsilon
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (265) epsilon -> .
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    LCURL           reduce using rule 141 (ExpressionOpt -> Expression .)
    SEMICOLON       reduce using rule 186 (ExpressionStmt -> Expression .)
    INCR            shift and go to state 306
    DECR            shift and go to state 305
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    COMMA           reduce using rule 265 (epsilon -> .)
    PLUS_ASSIGN     reduce using rule 265 (epsilon -> .)
    MINUS_ASSIGN    reduce using rule 265 (epsilon -> .)
    STAR_ASSIGN     reduce using rule 265 (epsilon -> .)
    DIVIDE_ASSIGN   reduce using rule 265 (epsilon -> .)
    MOD_ASSIGN      reduce using rule 265 (epsilon -> .)
    AND_ASSIGN      reduce using rule 265 (epsilon -> .)
    OR_ASSIGN       reduce using rule 265 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 265 (epsilon -> .)
    LSHIFT_ASSIGN   reduce using rule 265 (epsilon -> .)
    RSHIFT_ASSIGN   reduce using rule 265 (epsilon -> .)
    ASSIGN          reduce using rule 265 (epsilon -> .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    ExpressionRep                  shift and go to state 203
    RelOp                          shift and go to state 180
    UnaryOp                        shift and go to state 167
    BinaryOp                       shift and go to state 174
    epsilon                        shift and go to state 204
    AddMulOp                       shift and go to state 171

state 291

    (85) ShortVarDecl -> IDENTIFIER QUICK_ASSIGN . Expression
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Expression                     shift and go to state 330

state 292

    (190) assign_op -> AssignOp .

    NOT             reduce using rule 190 (assign_op -> AssignOp .)
    PLUS            reduce using rule 190 (assign_op -> AssignOp .)
    MINUS           reduce using rule 190 (assign_op -> AssignOp .)
    STAR            reduce using rule 190 (assign_op -> AssignOp .)
    AND             reduce using rule 190 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 190 (assign_op -> AssignOp .)
    TYPECAST        reduce using rule 190 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 190 (assign_op -> AssignOp .)
    INTEGER         reduce using rule 190 (assign_op -> AssignOp .)
    OCTAL           reduce using rule 190 (assign_op -> AssignOp .)
    HEX             reduce using rule 190 (assign_op -> AssignOp .)
    FLOAT           reduce using rule 190 (assign_op -> AssignOp .)
    IMAGINARY       reduce using rule 190 (assign_op -> AssignOp .)
    RUNE            reduce using rule 190 (assign_op -> AssignOp .)
    STRING          reduce using rule 190 (assign_op -> AssignOp .)


state 293

    (200) AssignOp -> RSHIFT_ASSIGN .

    NOT             reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    PLUS            reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    MINUS           reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    STAR            reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    AND             reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    LPAREN          reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    TYPECAST        reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    INTEGER         reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    OCTAL           reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    HEX             reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    FLOAT           reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    IMAGINARY       reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    RUNE            reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)
    STRING          reduce using rule 200 (AssignOp -> RSHIFT_ASSIGN .)


state 294

    (193) AssignOp -> STAR_ASSIGN .

    NOT             reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    PLUS            reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    MINUS           reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    STAR            reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    AND             reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    LPAREN          reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    TYPECAST        reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    IDENTIFIER      reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    INTEGER         reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    OCTAL           reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    HEX             reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    FLOAT           reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    IMAGINARY       reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    RUNE            reduce using rule 193 (AssignOp -> STAR_ASSIGN .)
    STRING          reduce using rule 193 (AssignOp -> STAR_ASSIGN .)


state 295

    (192) AssignOp -> MINUS_ASSIGN .

    NOT             reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    PLUS            reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    MINUS           reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    STAR            reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    AND             reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    LPAREN          reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    TYPECAST        reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    IDENTIFIER      reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    INTEGER         reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    OCTAL           reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    HEX             reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    FLOAT           reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    IMAGINARY       reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    RUNE            reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)
    STRING          reduce using rule 192 (AssignOp -> MINUS_ASSIGN .)


state 296

    (198) AssignOp -> XOR_ASSIGN .

    NOT             reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    PLUS            reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    MINUS           reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    STAR            reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    AND             reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    LPAREN          reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    TYPECAST        reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    IDENTIFIER      reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    INTEGER         reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    OCTAL           reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    HEX             reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    FLOAT           reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    IMAGINARY       reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    RUNE            reduce using rule 198 (AssignOp -> XOR_ASSIGN .)
    STRING          reduce using rule 198 (AssignOp -> XOR_ASSIGN .)


state 297

    (197) AssignOp -> OR_ASSIGN .

    NOT             reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    PLUS            reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    MINUS           reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    STAR            reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    AND             reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    LPAREN          reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    TYPECAST        reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    IDENTIFIER      reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    INTEGER         reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    OCTAL           reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    HEX             reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    FLOAT           reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    IMAGINARY       reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    RUNE            reduce using rule 197 (AssignOp -> OR_ASSIGN .)
    STRING          reduce using rule 197 (AssignOp -> OR_ASSIGN .)


state 298

    (195) AssignOp -> MOD_ASSIGN .

    NOT             reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    PLUS            reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    MINUS           reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    STAR            reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    AND             reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    LPAREN          reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    TYPECAST        reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    IDENTIFIER      reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    INTEGER         reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    OCTAL           reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    HEX             reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    FLOAT           reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    IMAGINARY       reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    RUNE            reduce using rule 195 (AssignOp -> MOD_ASSIGN .)
    STRING          reduce using rule 195 (AssignOp -> MOD_ASSIGN .)


state 299

    (199) AssignOp -> LSHIFT_ASSIGN .

    NOT             reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    PLUS            reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    MINUS           reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    STAR            reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    AND             reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    LPAREN          reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    TYPECAST        reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    INTEGER         reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    OCTAL           reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    HEX             reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    FLOAT           reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    IMAGINARY       reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    RUNE            reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)
    STRING          reduce using rule 199 (AssignOp -> LSHIFT_ASSIGN .)


state 300

    (196) AssignOp -> AND_ASSIGN .

    NOT             reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    PLUS            reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    MINUS           reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    STAR            reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    AND             reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    LPAREN          reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    TYPECAST        reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    IDENTIFIER      reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    INTEGER         reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    OCTAL           reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    HEX             reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    FLOAT           reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    IMAGINARY       reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    RUNE            reduce using rule 196 (AssignOp -> AND_ASSIGN .)
    STRING          reduce using rule 196 (AssignOp -> AND_ASSIGN .)


state 301

    (189) Assignment -> ExpressionList assign_op . ExpressionList
    (66) ExpressionList -> . Expression ExpressionRep
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Conversion                     shift and go to state 96
    OperandName                    shift and go to state 105
    ExpressionList                 shift and go to state 331
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Literal                        shift and go to state 101
    Expression                     shift and go to state 150

state 302

    (191) AssignOp -> PLUS_ASSIGN .

    NOT             reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    PLUS            reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    MINUS           reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    STAR            reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    AND             reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    LPAREN          reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    TYPECAST        reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    IDENTIFIER      reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    INTEGER         reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    OCTAL           reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    HEX             reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    FLOAT           reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    IMAGINARY       reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    RUNE            reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)
    STRING          reduce using rule 191 (AssignOp -> PLUS_ASSIGN .)


state 303

    (194) AssignOp -> DIVIDE_ASSIGN .

    NOT             reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    PLUS            reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    MINUS           reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    STAR            reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    AND             reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    LPAREN          reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    TYPECAST        reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    IDENTIFIER      reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    INTEGER         reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    OCTAL           reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    HEX             reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    FLOAT           reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    IMAGINARY       reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    RUNE            reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)
    STRING          reduce using rule 194 (AssignOp -> DIVIDE_ASSIGN .)


state 304

    (201) AssignOp -> ASSIGN .

    NOT             reduce using rule 201 (AssignOp -> ASSIGN .)
    PLUS            reduce using rule 201 (AssignOp -> ASSIGN .)
    MINUS           reduce using rule 201 (AssignOp -> ASSIGN .)
    STAR            reduce using rule 201 (AssignOp -> ASSIGN .)
    AND             reduce using rule 201 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 201 (AssignOp -> ASSIGN .)
    TYPECAST        reduce using rule 201 (AssignOp -> ASSIGN .)
    IDENTIFIER      reduce using rule 201 (AssignOp -> ASSIGN .)
    INTEGER         reduce using rule 201 (AssignOp -> ASSIGN .)
    OCTAL           reduce using rule 201 (AssignOp -> ASSIGN .)
    HEX             reduce using rule 201 (AssignOp -> ASSIGN .)
    FLOAT           reduce using rule 201 (AssignOp -> ASSIGN .)
    IMAGINARY       reduce using rule 201 (AssignOp -> ASSIGN .)
    RUNE            reduce using rule 201 (AssignOp -> ASSIGN .)
    STRING          reduce using rule 201 (AssignOp -> ASSIGN .)


state 305

    (188) IncDecStmt -> Expression DECR .

    SEMICOLON       reduce using rule 188 (IncDecStmt -> Expression DECR .)
    LCURL           reduce using rule 188 (IncDecStmt -> Expression DECR .)


state 306

    (187) IncDecStmt -> Expression INCR .

    SEMICOLON       reduce using rule 187 (IncDecStmt -> Expression INCR .)
    LCURL           reduce using rule 187 (IncDecStmt -> Expression INCR .)


state 307

    (244) BreakStmt -> BREAK LabelOpt .

    SEMICOLON       reduce using rule 244 (BreakStmt -> BREAK LabelOpt .)


state 308

    (202) IfStmt -> IF Expression . Block ElseOpt
    (140) Expression -> Expression . BinaryOp Expression
    (47) Block -> . LCURL StatementList RCURL
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    LCURL           shift and go to state 135
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    RelOp                          shift and go to state 180
    UnaryOp                        shift and go to state 167
    AddMulOp                       shift and go to state 171
    BinaryOp                       shift and go to state 174
    Block                          shift and go to state 332

state 309

    (45) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 45 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 45 (ParameterDecl -> IdentifierList Type .)


state 310

    (67) ExpressionRep -> ExpressionRep COMMA Expression .
    (140) Expression -> Expression . BinaryOp Expression
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    COMMA           reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ASSIGN          reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUS_ASSIGN     reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUS_ASSIGN    reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    STAR_ASSIGN     reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDE_ASSIGN   reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MOD_ASSIGN      reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AND_ASSIGN      reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OR_ASSIGN       reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    XOR_ASSIGN      reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LSHIFT_ASSIGN   reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RSHIFT_ASSIGN   reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOLON       reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LCURL           reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    COLON           reduce using rule 67 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    RelOp                          shift and go to state 180
    UnaryOp                        shift and go to state 167
    BinaryOp                       shift and go to state 174
    AddMulOp                       shift and go to state 171

state 311

    (131) Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt . RSQUARE

    RSQUARE         shift and go to state 333


state 312

    (132) Slice -> LSQUARE ExpressionOpt COLON Expression . COLON Expression RSQUARE
    (141) ExpressionOpt -> Expression .
    (140) Expression -> Expression . BinaryOp Expression
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    COLON           shift and go to state 334
    RSQUARE         reduce using rule 141 (ExpressionOpt -> Expression .)
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    RelOp                          shift and go to state 180
    UnaryOp                        shift and go to state 167
    AddMulOp                       shift and go to state 171
    BinaryOp                       shift and go to state 174

state 313

    (133) TypeAssertion -> DOT LPAREN Type RPAREN .

    DOT             reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSQUARE         reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LPAREN          reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LOGICAL_OR      reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LOGICAL_AND     reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    EQUALS          reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    NOT_ASSIGN      reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESSER          reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GREATER         reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESS_EQUALS     reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MORE_EQUALS     reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OR              reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    XOR             reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE          reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MOD             reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSHIFT          reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSHIFT          reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUS            reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUS           reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    STAR            reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AND             reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSQUARE         reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COMMA           reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RPAREN          reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COLON           reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    INCR            reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DECR            reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUS_ASSIGN     reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUS_ASSIGN    reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    STAR_ASSIGN     reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MOD_ASSIGN      reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AND_ASSIGN      reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OR_ASSIGN       reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    XOR_ASSIGN      reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LCURL           reduce using rule 133 (TypeAssertion -> DOT LPAREN Type RPAREN .)


state 314

    (167) Conversion -> TYPECAST Type LPAREN Expression RPAREN .

    DOT             reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSQUARE         reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LOGICAL_OR      reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LOGICAL_AND     reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    NOT_ASSIGN      reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LESSER          reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    GREATER         reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LESS_EQUALS     reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MORE_EQUALS     reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OR              reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    XOR             reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MOD             reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    STAR            reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    AND             reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LCURL           reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PLUS_ASSIGN     reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MINUS_ASSIGN    reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    STAR_ASSIGN     reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MOD_ASSIGN      reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    INCR            reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DECR            reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 167 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)


state 315

    (29) Tag -> STRING .

    SEMICOLON       reduce using rule 29 (Tag -> STRING .)


state 316

    (28) TagOpt -> epsilon .

    SEMICOLON       reduce using rule 28 (TagOpt -> epsilon .)


state 317

    (27) TagOpt -> Tag .

    SEMICOLON       reduce using rule 27 (TagOpt -> Tag .)


state 318

    (26) FieldDecl -> IdentifierList Type TagOpt .

    SEMICOLON       reduce using rule 26 (FieldDecl -> IdentifierList Type TagOpt .)


state 319

    (184) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 184 (LabeledStmt -> Label COLON Statement .)


state 320

    (234) ForClause -> SimpleStmt SEMICOLON . ConditionOpt SEMICOLON SimpleStmt
    (235) ConditionOpt -> . epsilon
    (236) ConditionOpt -> . Condition
    (265) epsilon -> .
    (233) Condition -> . Expression
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    SEMICOLON       reduce using rule 265 (epsilon -> .)
    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    epsilon                        shift and go to state 336
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    ConditionOpt                   shift and go to state 337
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Literal                        shift and go to state 101
    Expression                     shift and go to state 338
    Condition                      shift and go to state 335

state 321

    (228) ForStmt -> FOR ConditionBlockOpt Block .

    SEMICOLON       reduce using rule 228 (ForStmt -> FOR ConditionBlockOpt Block .)


state 322

    (237) RangeClause -> ExpressionIdentListOpt RANGE . Expression
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Operand                        shift and go to state 102
    Expression                     shift and go to state 339

state 323

    (240) ExpressionIdentifier -> ExpressionList ASSIGN .
    (201) AssignOp -> ASSIGN .

    RANGE           reduce using rule 240 (ExpressionIdentifier -> ExpressionList ASSIGN .)
    NOT             reduce using rule 201 (AssignOp -> ASSIGN .)
    PLUS            reduce using rule 201 (AssignOp -> ASSIGN .)
    MINUS           reduce using rule 201 (AssignOp -> ASSIGN .)
    STAR            reduce using rule 201 (AssignOp -> ASSIGN .)
    AND             reduce using rule 201 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 201 (AssignOp -> ASSIGN .)
    TYPECAST        reduce using rule 201 (AssignOp -> ASSIGN .)
    IDENTIFIER      reduce using rule 201 (AssignOp -> ASSIGN .)
    INTEGER         reduce using rule 201 (AssignOp -> ASSIGN .)
    OCTAL           reduce using rule 201 (AssignOp -> ASSIGN .)
    HEX             reduce using rule 201 (AssignOp -> ASSIGN .)
    FLOAT           reduce using rule 201 (AssignOp -> ASSIGN .)
    IMAGINARY       reduce using rule 201 (AssignOp -> ASSIGN .)
    RUNE            reduce using rule 201 (AssignOp -> ASSIGN .)
    STRING          reduce using rule 201 (AssignOp -> ASSIGN .)


state 324

    (203) SimpleStmtOpt -> SimpleStmt SEMICOLON .

    IDENTIFIER      reduce using rule 203 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    LPAREN          reduce using rule 203 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    TYPECAST        reduce using rule 203 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    INTEGER         reduce using rule 203 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    OCTAL           reduce using rule 203 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    HEX             reduce using rule 203 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    FLOAT           reduce using rule 203 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    IMAGINARY       reduce using rule 203 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    RUNE            reduce using rule 203 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    STRING          reduce using rule 203 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)


state 325

    (210) ExprSwitchStmt -> SWITCH ExpressionOpt LCURL . ExprCaseClauseRep RCURL
    (211) ExprCaseClauseRep -> . ExprCaseClauseRep ExprCaseClause
    (212) ExprCaseClauseRep -> . epsilon
    (265) epsilon -> .

    RCURL           reduce using rule 265 (epsilon -> .)
    CASE            reduce using rule 265 (epsilon -> .)
    DEFAULT         reduce using rule 265 (epsilon -> .)

    ExprCaseClauseRep              shift and go to state 340
    epsilon                        shift and go to state 341

state 326

    (219) IdentifierOpt -> epsilon .

    LPAREN          reduce using rule 219 (IdentifierOpt -> epsilon .)
    TYPECAST        reduce using rule 219 (IdentifierOpt -> epsilon .)
    IDENTIFIER      reduce using rule 219 (IdentifierOpt -> epsilon .)
    INTEGER         reduce using rule 219 (IdentifierOpt -> epsilon .)
    OCTAL           reduce using rule 219 (IdentifierOpt -> epsilon .)
    HEX             reduce using rule 219 (IdentifierOpt -> epsilon .)
    FLOAT           reduce using rule 219 (IdentifierOpt -> epsilon .)
    IMAGINARY       reduce using rule 219 (IdentifierOpt -> epsilon .)
    RUNE            reduce using rule 219 (IdentifierOpt -> epsilon .)
    STRING          reduce using rule 219 (IdentifierOpt -> epsilon .)


state 327

    (216) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard . LCURL TypeCaseClauseOpt RCURL

    LCURL           shift and go to state 342


state 328

    (217) TypeSwitchGuard -> IdentifierOpt . PrimaryExpr DOT LPAREN TYPE RPAREN
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    OperandName                    shift and go to state 105
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 343

state 329

    (218) IdentifierOpt -> IDENTIFIER . QUICK_ASSIGN

    QUICK_ASSIGN    shift and go to state 344


state 330

    (85) ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .
    (140) Expression -> Expression . BinaryOp Expression
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    SEMICOLON       reduce using rule 85 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    LCURL           reduce using rule 85 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    AddMulOp                       shift and go to state 171
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 174
    UnaryOp                        shift and go to state 167

state 331

    (189) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 189 (Assignment -> ExpressionList assign_op ExpressionList .)
    LCURL           reduce using rule 189 (Assignment -> ExpressionList assign_op ExpressionList .)


state 332

    (202) IfStmt -> IF Expression Block . ElseOpt
    (205) ElseOpt -> . ELSE IfStmt
    (206) ElseOpt -> . ELSE Block
    (207) ElseOpt -> . epsilon
    (265) epsilon -> .

    ELSE            shift and go to state 346
    SEMICOLON       reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 345
    ElseOpt                        shift and go to state 347

state 333

    (131) Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .

    DOT             reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSQUARE         reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LPAREN          reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LOGICAL_OR      reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LOGICAL_AND     reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    EQUALS          reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    NOT_ASSIGN      reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LESSER          reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    GREATER         reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LESS_EQUALS     reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MORE_EQUALS     reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OR              reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    XOR             reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DIVIDE          reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MOD             reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSHIFT          reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSHIFT          reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PLUS            reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MINUS           reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    STAR            reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    AND             reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSQUARE         reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COMMA           reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    SEMICOLON       reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RPAREN          reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COLON           reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    INCR            reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DECR            reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PLUS_ASSIGN     reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MINUS_ASSIGN    reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    STAR_ASSIGN     reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DIVIDE_ASSIGN   reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MOD_ASSIGN      reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    AND_ASSIGN      reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OR_ASSIGN       reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    XOR_ASSIGN      reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSHIFT_ASSIGN   reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSHIFT_ASSIGN   reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    ASSIGN          reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LCURL           reduce using rule 131 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)


state 334

    (132) Slice -> LSQUARE ExpressionOpt COLON Expression COLON . Expression RSQUARE
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    Conversion                     shift and go to state 96
    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Literal                        shift and go to state 101
    OperandName                    shift and go to state 105
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Expression                     shift and go to state 348

state 335

    (236) ConditionOpt -> Condition .

    SEMICOLON       reduce using rule 236 (ConditionOpt -> Condition .)


state 336

    (235) ConditionOpt -> epsilon .

    SEMICOLON       reduce using rule 235 (ConditionOpt -> epsilon .)


state 337

    (234) ForClause -> SimpleStmt SEMICOLON ConditionOpt . SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 349


state 338

    (233) Condition -> Expression .
    (140) Expression -> Expression . BinaryOp Expression
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    SEMICOLON       reduce using rule 233 (Condition -> Expression .)
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    AddMulOp                       shift and go to state 171
    RelOp                          shift and go to state 180
    BinaryOp                       shift and go to state 174
    UnaryOp                        shift and go to state 167

state 339

    (237) RangeClause -> ExpressionIdentListOpt RANGE Expression .
    (140) Expression -> Expression . BinaryOp Expression
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    LCURL           reduce using rule 237 (RangeClause -> ExpressionIdentListOpt RANGE Expression .)
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    RelOp                          shift and go to state 180
    UnaryOp                        shift and go to state 167
    BinaryOp                       shift and go to state 174
    AddMulOp                       shift and go to state 171

state 340

    (210) ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseRep . RCURL
    (211) ExprCaseClauseRep -> ExprCaseClauseRep . ExprCaseClause
    (213) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (214) ExprSwitchCase -> . CASE ExpressionList
    (215) ExprSwitchCase -> . DEFAULT

    RCURL           shift and go to state 353
    CASE            shift and go to state 350
    DEFAULT         shift and go to state 352

    ExprSwitchCase                 shift and go to state 351
    ExprCaseClause                 shift and go to state 354

state 341

    (212) ExprCaseClauseRep -> epsilon .

    RCURL           reduce using rule 212 (ExprCaseClauseRep -> epsilon .)
    CASE            reduce using rule 212 (ExprCaseClauseRep -> epsilon .)
    DEFAULT         reduce using rule 212 (ExprCaseClauseRep -> epsilon .)


state 342

    (216) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LCURL . TypeCaseClauseOpt RCURL
    (220) TypeCaseClauseOpt -> . TypeCaseClauseOpt TypeCaseClause
    (221) TypeCaseClauseOpt -> . epsilon
    (265) epsilon -> .

    RCURL           reduce using rule 265 (epsilon -> .)
    CASE            reduce using rule 265 (epsilon -> .)
    DEFAULT         reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 356
    TypeCaseClauseOpt              shift and go to state 355

state 343

    (217) TypeSwitchGuard -> IdentifierOpt PrimaryExpr . DOT LPAREN TYPE RPAREN
    (123) PrimaryExpr -> PrimaryExpr . Selector
    (125) PrimaryExpr -> PrimaryExpr . Index
    (126) PrimaryExpr -> PrimaryExpr . Slice
    (127) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (128) PrimaryExpr -> PrimaryExpr . Arguments
    (129) Selector -> . DOT IDENTIFIER
    (130) Index -> . LSQUARE Expression RSQUARE
    (131) Slice -> . LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
    (132) Slice -> . LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
    (133) TypeAssertion -> . DOT LPAREN Type RPAREN
    (134) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    DOT             shift and go to state 357
    LSQUARE         shift and go to state 164
    LPAREN          shift and go to state 160

    Index                          shift and go to state 158
    Slice                          shift and go to state 159
    Selector                       shift and go to state 161
    TypeAssertion                  shift and go to state 162
    Arguments                      shift and go to state 163

state 344

    (218) IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .

    LPAREN          reduce using rule 218 (IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .)
    TYPECAST        reduce using rule 218 (IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .)
    IDENTIFIER      reduce using rule 218 (IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .)
    INTEGER         reduce using rule 218 (IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .)
    OCTAL           reduce using rule 218 (IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .)
    HEX             reduce using rule 218 (IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .)
    FLOAT           reduce using rule 218 (IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .)
    IMAGINARY       reduce using rule 218 (IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .)
    RUNE            reduce using rule 218 (IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .)
    STRING          reduce using rule 218 (IdentifierOpt -> IDENTIFIER QUICK_ASSIGN .)


state 345

    (207) ElseOpt -> epsilon .

    SEMICOLON       reduce using rule 207 (ElseOpt -> epsilon .)


state 346

    (205) ElseOpt -> ELSE . IfStmt
    (206) ElseOpt -> ELSE . Block
    (202) IfStmt -> . IF Expression Block ElseOpt
    (47) Block -> . LCURL StatementList RCURL

    IF              shift and go to state 250
    LCURL           shift and go to state 135

    IfStmt                         shift and go to state 358
    Block                          shift and go to state 359

state 347

    (202) IfStmt -> IF Expression Block ElseOpt .

    SEMICOLON       reduce using rule 202 (IfStmt -> IF Expression Block ElseOpt .)


state 348

    (132) Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression . RSQUARE
    (140) Expression -> Expression . BinaryOp Expression
    (146) BinaryOp -> . LOGICAL_OR
    (147) BinaryOp -> . LOGICAL_AND
    (148) BinaryOp -> . RelOp
    (149) BinaryOp -> . AddMulOp
    (150) RelOp -> . EQUALS
    (151) RelOp -> . NOT_ASSIGN
    (152) RelOp -> . LESSER
    (153) RelOp -> . GREATER
    (154) RelOp -> . LESS_EQUALS
    (155) RelOp -> . MORE_EQUALS
    (156) AddMulOp -> . UnaryOp
    (157) AddMulOp -> . OR
    (158) AddMulOp -> . XOR
    (159) AddMulOp -> . DIVIDE
    (160) AddMulOp -> . MOD
    (161) AddMulOp -> . LSHIFT
    (162) AddMulOp -> . RSHIFT
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND

    RSQUARE         shift and go to state 360
    LOGICAL_OR      shift and go to state 182
    LOGICAL_AND     shift and go to state 168
    EQUALS          shift and go to state 178
    NOT_ASSIGN      shift and go to state 175
    LESSER          shift and go to state 181
    GREATER         shift and go to state 179
    LESS_EQUALS     shift and go to state 173
    MORE_EQUALS     shift and go to state 172
    OR              shift and go to state 183
    XOR             shift and go to state 176
    DIVIDE          shift and go to state 177
    MOD             shift and go to state 184
    LSHIFT          shift and go to state 169
    RSHIFT          shift and go to state 170
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117

    RelOp                          shift and go to state 180
    UnaryOp                        shift and go to state 167
    AddMulOp                       shift and go to state 171
    BinaryOp                       shift and go to state 174

state 349

    (234) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON . SimpleStmt
    (179) SimpleStmt -> . epsilon
    (180) SimpleStmt -> . ExpressionStmt
    (181) SimpleStmt -> . IncDecStmt
    (182) SimpleStmt -> . Assignment
    (183) SimpleStmt -> . ShortVarDecl
    (265) epsilon -> .
    (186) ExpressionStmt -> . Expression
    (187) IncDecStmt -> . Expression INCR
    (188) IncDecStmt -> . Expression DECR
    (189) Assignment -> . ExpressionList assign_op ExpressionList
    (85) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (66) ExpressionList -> . Expression ExpressionRep
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    LCURL           reduce using rule 265 (epsilon -> .)
    IDENTIFIER      shift and go to state 274
    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    PrimaryExpr                    shift and go to state 100
    Conversion                     shift and go to state 96
    SimpleStmt                     shift and go to state 361
    ExpressionStmt                 shift and go to state 223
    OperandName                    shift and go to state 105
    Assignment                     shift and go to state 225
    IncDecStmt                     shift and go to state 232
    epsilon                        shift and go to state 241
    UnaryExpr                      shift and go to state 113
    ExpressionList                 shift and go to state 243
    Expression                     shift and go to state 244
    ShortVarDecl                   shift and go to state 249
    Literal                        shift and go to state 101
    BasicLit                       shift and go to state 106
    Operand                        shift and go to state 102

state 350

    (214) ExprSwitchCase -> CASE . ExpressionList
    (66) ExpressionList -> . Expression ExpressionRep
    (139) Expression -> . UnaryExpr
    (140) Expression -> . Expression BinaryOp Expression
    (143) UnaryExpr -> . PrimaryExpr
    (144) UnaryExpr -> . UnaryOp UnaryExpr
    (145) UnaryExpr -> . NOT UnaryExpr
    (122) PrimaryExpr -> . Operand
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . Conversion
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (163) UnaryOp -> . PLUS
    (164) UnaryOp -> . MINUS
    (165) UnaryOp -> . STAR
    (166) UnaryOp -> . AND
    (91) Operand -> . Literal
    (92) Operand -> . OperandName
    (93) Operand -> . LPAREN Expression RPAREN
    (167) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (94) Literal -> . BasicLit
    (102) OperandName -> . IDENTIFIER
    (95) BasicLit -> . INTEGER
    (96) BasicLit -> . OCTAL
    (97) BasicLit -> . HEX
    (98) BasicLit -> . FLOAT
    (99) BasicLit -> . IMAGINARY
    (100) BasicLit -> . RUNE
    (101) BasicLit -> . STRING

    NOT             shift and go to state 120
    PLUS            shift and go to state 107
    MINUS           shift and go to state 104
    STAR            shift and go to state 97
    AND             shift and go to state 117
    LPAREN          shift and go to state 98
    TYPECAST        shift and go to state 118
    IDENTIFIER      shift and go to state 110
    INTEGER         shift and go to state 108
    OCTAL           shift and go to state 115
    HEX             shift and go to state 112
    FLOAT           shift and go to state 119
    IMAGINARY       shift and go to state 109
    RUNE            shift and go to state 103
    STRING          shift and go to state 111

    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 113
    Operand                        shift and go to state 102
    Conversion                     shift and go to state 96
    OperandName                    shift and go to state 105
    ExpressionList                 shift and go to state 362
    BasicLit                       shift and go to state 106
    PrimaryExpr                    shift and go to state 100
    Literal                        shift and go to state 101
    Expression                     shift and go to state 150

state 351

    (213) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 363


state 352

    (215) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 215 (ExprSwitchCase -> DEFAULT .)


state 353

    (210) ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseRep RCURL .

    SEMICOLON       reduce using rule 210 (ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseRep RCURL .)


state 354

    (211) ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .

    RCURL           reduce using rule 211 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    CASE            reduce using rule 211 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    DEFAULT         reduce using rule 211 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)


state 355

    (216) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LCURL TypeCaseClauseOpt . RCURL
    (220) TypeCaseClauseOpt -> TypeCaseClauseOpt . TypeCaseClause
    (222) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (223) TypeSwitchCase -> . CASE TypeList
    (224) TypeSwitchCase -> . DEFAULT

    RCURL           shift and go to state 366
    CASE            shift and go to state 364
    DEFAULT         shift and go to state 368

    TypeSwitchCase                 shift and go to state 365
    TypeCaseClause                 shift and go to state 367

state 356

    (221) TypeCaseClauseOpt -> epsilon .

    RCURL           reduce using rule 221 (TypeCaseClauseOpt -> epsilon .)
    CASE            reduce using rule 221 (TypeCaseClauseOpt -> epsilon .)
    DEFAULT         reduce using rule 221 (TypeCaseClauseOpt -> epsilon .)


state 357

    (217) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT . LPAREN TYPE RPAREN
    (129) Selector -> DOT . IDENTIFIER
    (133) TypeAssertion -> DOT . LPAREN Type RPAREN

    LPAREN          shift and go to state 369
    IDENTIFIER      shift and go to state 213


state 358

    (205) ElseOpt -> ELSE IfStmt .

    SEMICOLON       reduce using rule 205 (ElseOpt -> ELSE IfStmt .)


state 359

    (206) ElseOpt -> ELSE Block .

    SEMICOLON       reduce using rule 206 (ElseOpt -> ELSE Block .)


state 360

    (132) Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .

    DOT             reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSQUARE         reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LPAREN          reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LOGICAL_OR      reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LOGICAL_AND     reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    EQUALS          reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    NOT_ASSIGN      reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LESSER          reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    GREATER         reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LESS_EQUALS     reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MORE_EQUALS     reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OR              reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    XOR             reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DIVIDE          reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MOD             reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSHIFT          reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSHIFT          reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PLUS            reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MINUS           reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    STAR            reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    AND             reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSQUARE         reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COMMA           reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    SEMICOLON       reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RPAREN          reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COLON           reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    INCR            reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DECR            reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PLUS_ASSIGN     reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MINUS_ASSIGN    reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    STAR_ASSIGN     reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DIVIDE_ASSIGN   reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MOD_ASSIGN      reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    AND_ASSIGN      reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OR_ASSIGN       reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    XOR_ASSIGN      reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSHIFT_ASSIGN   reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSHIFT_ASSIGN   reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    ASSIGN          reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LCURL           reduce using rule 132 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)


state 361

    (234) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .

    LCURL           reduce using rule 234 (ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .)


state 362

    (214) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 214 (ExprSwitchCase -> CASE ExpressionList .)


state 363

    (213) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (48) StatementList -> . StatementRep
    (49) StatementRep -> . StatementRep Statement SEMICOLON
    (50) StatementRep -> . epsilon
    (265) epsilon -> .

    RETURN          reduce using rule 265 (epsilon -> .)
    BREAK           reduce using rule 265 (epsilon -> .)
    CONTINUE        reduce using rule 265 (epsilon -> .)
    GOTO            reduce using rule 265 (epsilon -> .)
    LCURL           reduce using rule 265 (epsilon -> .)
    IF              reduce using rule 265 (epsilon -> .)
    FOR             reduce using rule 265 (epsilon -> .)
    CONST           reduce using rule 265 (epsilon -> .)
    TYPE            reduce using rule 265 (epsilon -> .)
    VAR             reduce using rule 265 (epsilon -> .)
    IDENTIFIER      reduce using rule 265 (epsilon -> .)
    SWITCH          reduce using rule 265 (epsilon -> .)
    NOT             reduce using rule 265 (epsilon -> .)
    PLUS            reduce using rule 265 (epsilon -> .)
    MINUS           reduce using rule 265 (epsilon -> .)
    STAR            reduce using rule 265 (epsilon -> .)
    AND             reduce using rule 265 (epsilon -> .)
    LPAREN          reduce using rule 265 (epsilon -> .)
    TYPECAST        reduce using rule 265 (epsilon -> .)
    INTEGER         reduce using rule 265 (epsilon -> .)
    OCTAL           reduce using rule 265 (epsilon -> .)
    HEX             reduce using rule 265 (epsilon -> .)
    FLOAT           reduce using rule 265 (epsilon -> .)
    IMAGINARY       reduce using rule 265 (epsilon -> .)
    RUNE            reduce using rule 265 (epsilon -> .)
    STRING          reduce using rule 265 (epsilon -> .)
    SEMICOLON       reduce using rule 265 (epsilon -> .)
    RCURL           reduce using rule 265 (epsilon -> .)
    CASE            reduce using rule 265 (epsilon -> .)
    DEFAULT         reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 195
    StatementRep                   shift and go to state 194
    StatementList                  shift and go to state 370

state 364

    (223) TypeSwitchCase -> CASE . TypeList
    (225) TypeList -> . Type TypeRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    TypeList                       shift and go to state 372
    Type                           shift and go to state 371
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 365

    (222) TypeCaseClause -> TypeSwitchCase . COLON StatementList

    COLON           shift and go to state 373


state 366

    (216) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LCURL TypeCaseClauseOpt RCURL .

    SEMICOLON       reduce using rule 216 (TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LCURL TypeCaseClauseOpt RCURL .)


state 367

    (220) TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .

    RCURL           reduce using rule 220 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    CASE            reduce using rule 220 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)
    DEFAULT         reduce using rule 220 (TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause .)


state 368

    (224) TypeSwitchCase -> DEFAULT .

    COLON           reduce using rule 224 (TypeSwitchCase -> DEFAULT .)


state 369

    (217) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN . TYPE RPAREN
    (133) TypeAssertion -> DOT LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    TYPE            shift and go to state 374
    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    Type                           shift and go to state 261
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 370

    (213) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    RCURL           reduce using rule 213 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 213 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 213 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)


state 371

    (225) TypeList -> Type . TypeRep
    (226) TypeRep -> . TypeRep COMMA Type
    (227) TypeRep -> . epsilon
    (265) epsilon -> .

    COMMA           reduce using rule 265 (epsilon -> .)
    COLON           reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 376
    TypeRep                        shift and go to state 375

state 372

    (223) TypeSwitchCase -> CASE TypeList .

    COLON           reduce using rule 223 (TypeSwitchCase -> CASE TypeList .)


state 373

    (222) TypeCaseClause -> TypeSwitchCase COLON . StatementList
    (48) StatementList -> . StatementRep
    (49) StatementRep -> . StatementRep Statement SEMICOLON
    (50) StatementRep -> . epsilon
    (265) epsilon -> .

    RETURN          reduce using rule 265 (epsilon -> .)
    BREAK           reduce using rule 265 (epsilon -> .)
    CONTINUE        reduce using rule 265 (epsilon -> .)
    GOTO            reduce using rule 265 (epsilon -> .)
    LCURL           reduce using rule 265 (epsilon -> .)
    IF              reduce using rule 265 (epsilon -> .)
    FOR             reduce using rule 265 (epsilon -> .)
    CONST           reduce using rule 265 (epsilon -> .)
    TYPE            reduce using rule 265 (epsilon -> .)
    VAR             reduce using rule 265 (epsilon -> .)
    IDENTIFIER      reduce using rule 265 (epsilon -> .)
    SWITCH          reduce using rule 265 (epsilon -> .)
    NOT             reduce using rule 265 (epsilon -> .)
    PLUS            reduce using rule 265 (epsilon -> .)
    MINUS           reduce using rule 265 (epsilon -> .)
    STAR            reduce using rule 265 (epsilon -> .)
    AND             reduce using rule 265 (epsilon -> .)
    LPAREN          reduce using rule 265 (epsilon -> .)
    TYPECAST        reduce using rule 265 (epsilon -> .)
    INTEGER         reduce using rule 265 (epsilon -> .)
    OCTAL           reduce using rule 265 (epsilon -> .)
    HEX             reduce using rule 265 (epsilon -> .)
    FLOAT           reduce using rule 265 (epsilon -> .)
    IMAGINARY       reduce using rule 265 (epsilon -> .)
    RUNE            reduce using rule 265 (epsilon -> .)
    STRING          reduce using rule 265 (epsilon -> .)
    SEMICOLON       reduce using rule 265 (epsilon -> .)
    RCURL           reduce using rule 265 (epsilon -> .)
    CASE            reduce using rule 265 (epsilon -> .)
    DEFAULT         reduce using rule 265 (epsilon -> .)

    epsilon                        shift and go to state 195
    StatementRep                   shift and go to state 194
    StatementList                  shift and go to state 377

state 374

    (217) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE . RPAREN
    (14) TypeToken -> TYPE . IDENTIFIER

    RPAREN          shift and go to state 378
    IDENTIFIER      shift and go to state 125


state 375

    (225) TypeList -> Type TypeRep .
    (226) TypeRep -> TypeRep . COMMA Type

    COLON           reduce using rule 225 (TypeList -> Type TypeRep .)
    COMMA           shift and go to state 379


state 376

    (227) TypeRep -> epsilon .

    COMMA           reduce using rule 227 (TypeRep -> epsilon .)
    COLON           reduce using rule 227 (TypeRep -> epsilon .)


state 377

    (222) TypeCaseClause -> TypeSwitchCase COLON StatementList .

    RCURL           reduce using rule 222 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    CASE            reduce using rule 222 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 222 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)


state 378

    (217) TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN .

    LCURL           reduce using rule 217 (TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN .)


state 379

    (226) TypeRep -> TypeRep COMMA . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (103) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (30) PointerType -> . STAR BaseType

    LPAREN          shift and go to state 67
    INT_T           shift and go to state 66
    FLOAT_T         shift and go to state 59
    UINT_T          shift and go to state 56
    COMPLEX_T       shift and go to state 61
    RUNE_T          shift and go to state 75
    BOOL_T          shift and go to state 63
    STRING_T        shift and go to state 69
    TYPE            shift and go to state 73
    IDENTIFIER      shift and go to state 62
    LSQUARE         shift and go to state 53
    STRUCT          shift and go to state 70
    STAR            shift and go to state 52

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 57
    Type                           shift and go to state 380
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 60
    PointerType                    shift and go to state 72
    TypeLit                        shift and go to state 58
    QualifiedIdent                 shift and go to state 74

state 380

    (226) TypeRep -> TypeRep COMMA Type .

    COMMA           reduce using rule 226 (TypeRep -> TypeRep COMMA Type .)
    COLON           reduce using rule 226 (TypeRep -> TypeRep COMMA Type .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 193 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_OR in state 217 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_AND in state 217 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 217 resolved as shift
WARNING: shift/reduce conflict for NOT_ASSIGN in state 217 resolved as shift
WARNING: shift/reduce conflict for LESSER in state 217 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 217 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 217 resolved as shift
WARNING: shift/reduce conflict for MORE_EQUALS in state 217 resolved as shift
WARNING: shift/reduce conflict for OR in state 217 resolved as shift
WARNING: shift/reduce conflict for XOR in state 217 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 217 resolved as shift
WARNING: shift/reduce conflict for MOD in state 217 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 217 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 217 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 217 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 217 resolved as shift
WARNING: shift/reduce conflict for STAR in state 217 resolved as shift
WARNING: shift/reduce conflict for AND in state 217 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 238 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 238 resolved as shift
WARNING: shift/reduce conflict for TYPECAST in state 238 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 238 resolved as shift
WARNING: shift/reduce conflict for OCTAL in state 238 resolved as shift
WARNING: shift/reduce conflict for HEX in state 238 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 238 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 238 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 238 resolved as shift
WARNING: shift/reduce conflict for STRING in state 238 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 289 resolved as shift
