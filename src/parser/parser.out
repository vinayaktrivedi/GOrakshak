Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
Rule 3     SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist
Rule 4     SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist
Rule 5     SourceFile -> cmtlist PackageClause cmtlist
Rule 6     PackageClause -> PACKAGE IDENTIFIER SEMICOL
Rule 7     Imports -> Import SEMICOL
Rule 8     Imports -> Imports cmtlist Import SEMICOL
Rule 9     Import -> IMPORT ImportStmt
Rule 10    Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN
Rule 11    Import -> IMPORT LPAREN RPAREN
Rule 12    ImportStmt -> ImportHere STRING
Rule 13    ImportStmtList -> ImportStmt
Rule 14    ImportStmtList -> ImportStmtList SEMICOL ImportStmt
Rule 15    ImportHere -> <empty>
Rule 16    ImportHere -> IDENTIFIER
Rule 17    ImportHere -> DOT
Rule 18    Declaration -> CommonDecl
Rule 19    Declaration -> FuncDecl
Rule 20    Declaration -> NonDeclStmt
Rule 21    CommonDecl -> CONSTANT ConstDecl
Rule 22    CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN
Rule 23    CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
Rule 24    CommonDecl -> CONSTANT LPAREN RPAREN
Rule 25    CommonDecl -> VAR VarDecl
Rule 26    CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN
Rule 27    CommonDecl -> VAR LPAREN RPAREN
Rule 28    CommonDecl -> NewType TypeDecl
Rule 29    CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN
Rule 30    CommonDecl -> NewType LPAREN RPAREN
Rule 31    VarDecl -> DeclNameList NType
Rule 32    VarDecl -> DeclNameList NType EQUAL ExprList
Rule 33    VarDecl -> DeclNameList EQUAL ExprList
Rule 34    ConstDecl -> DeclNameList NType EQUAL ExprList
Rule 35    ConstDecl -> DeclNameList NType
Rule 36    ConstDecl -> DeclNameList EQUAL ExprList
Rule 37    ConstDecl1 -> ConstDecl
Rule 38    ConstDecl1 -> DeclNameList
Rule 39    TypeDeclName -> IDENTIFIER
Rule 40    TypeDecl -> TypeDeclName NType
Rule 41    SimpleStmt -> Expr
Rule 42    SimpleStmt -> Expr PLUSEQ Expr
Rule 43    SimpleStmt -> Expr MINUSEQ Expr
Rule 44    SimpleStmt -> Expr TIMESEQ Expr
Rule 45    SimpleStmt -> Expr DIVIDEEQ Expr
Rule 46    SimpleStmt -> Expr MODEQ Expr
Rule 47    SimpleStmt -> Expr OREQ Expr
Rule 48    SimpleStmt -> Expr AMPEQ Expr
Rule 49    SimpleStmt -> Expr CAREQ Expr
Rule 50    SimpleStmt -> Expr SHL_ASSIGN Expr
Rule 51    SimpleStmt -> Expr SHR_ASSIGN Expr
Rule 52    SimpleStmt -> Expr AMPCAREQ Expr
Rule 53    SimpleStmt -> ExprList EQUAL ExprList
Rule 54    SimpleStmt -> ExprList COLONEQ ExprList
Rule 55    SimpleStmt -> Expr PLUSPLUS
Rule 56    SimpleStmt -> Expr MINUSMIN
Rule 57    Case -> CASE ExprOrTypeList COLON
Rule 58    Case -> CASE ExprOrTypeList EQUAL Expr COLON
Rule 59    Case -> CASE ExprOrTypeList COLONEQ Expr COLON
Rule 60    Case -> DEFAULT COLON
Rule 61    CompoundStmt -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 62    CaseBlock -> Case StmtList
Rule 63    CaseBlockList -> <empty>
Rule 64    CaseBlockList -> CaseBlockList CaseBlock
Rule 65    LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 66    RangeStmt -> ExprList EQUAL RANGE Expr
Rule 67    RangeStmt -> ExprList COLONEQ RANGE Expr
Rule 68    RangeStmt -> RANGE Expr
Rule 69    ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
Rule 70    ForHeader -> OSimpleStmt
Rule 71    ForHeader -> RangeStmt
Rule 72    ForBody -> ForHeader LoopBody
Rule 73    ForStmt -> FOR ForBody
Rule 74    IfHeader -> OSimpleStmt
Rule 75    IfHeader -> OSimpleStmt SEMICOL OSimpleStmt
Rule 76    IfStmt -> IF IfHeader LoopBody ElseIfList
Rule 77    ElseIf -> ELSE IF IfHeader LoopBody
Rule 78    ElseIfList -> <empty>
Rule 79    ElseIfList -> ElseIf ElseIfList
Rule 80    ElseIfList -> Else
Rule 81    Else -> <empty>
Rule 82    Else -> ELSE CompoundStmt
Rule 83    NType -> FuncType
Rule 84    NType -> OtherType
Rule 85    NType -> PtrType
Rule 86    NType -> DotName
Rule 87    NType -> LPAREN NType RPAREN
Rule 88    NType -> NewType
Rule 89    NonExprType -> FuncType
Rule 90    NonExprType -> OtherType
Rule 91    NonExprType -> TIMES NonExprType
Rule 92    OtherType -> LBRACK OExpr RBRACK NType
Rule 93    OtherType -> StructType
Rule 94    OtherType -> InterfaceType
Rule 95    OtherType -> ChannelType
Rule 96    ChannelType -> CHAN NewType
Rule 97    ChannelType -> CHAN LMINUS NewType
Rule 98    ChannelType -> LMINUS CHAN NewType
Rule 99    StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE
Rule 100   StructType -> STRUCT LBRACE RBRACE
Rule 101   InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
Rule 102   InterfaceType -> INTERFACE LBRACE RBRACE
Rule 103   FuncDecl -> FUNCTION FuncDecl_ FuncBody
Rule 104   FuncDecl_ -> IDENTIFIER ArgList FuncRes
Rule 105   FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
Rule 106   FuncType -> FUNCTION ArgList FuncRes
Rule 107   ArgList -> LPAREN OArgTypeListOComma RPAREN
Rule 108   ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN
Rule 109   FuncBody -> <empty>
Rule 110   FuncBody -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 111   FuncRes -> <empty>
Rule 112   FuncRes -> FuncRetType
Rule 113   FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT
Rule 114   StructDeclList -> StructDecl
Rule 115   StructDeclList -> StructDeclList SEMICOL StructDecl
Rule 116   InterfaceDeclList -> InterfaceDecl
Rule 117   InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl
Rule 118   StructDecl -> NewNameList NType OLiteral
Rule 119   StructDecl -> Embed OLiteral
Rule 120   StructDecl -> LPAREN Embed RPAREN OLiteral
Rule 121   StructDecl -> TIMES Embed OLiteral
Rule 122   StructDecl -> LPAREN TIMES Embed RPAREN OLiteral
Rule 123   StructDecl -> TIMES LPAREN Embed RPAREN OLiteral
Rule 124   InterfaceDecl -> NewName InDecl
Rule 125   InterfaceDecl -> IDENTIFIER
Rule 126   InterfaceDecl -> LPAREN IDENTIFIER RPAREN
Rule 127   InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes
Rule 128   LabelName -> NewName
Rule 129   NewName -> IDENTIFIER
Rule 130   PtrType -> TIMES NType
Rule 131   FuncRetType -> FuncType
Rule 132   FuncRetType -> OtherType
Rule 133   FuncRetType -> PtrType
Rule 134   FuncRetType -> DotName
Rule 135   FuncRetType -> NewType
Rule 136   DotName -> Name
Rule 137   DotName -> Name DOT IDENTIFIER
Rule 138   OComma -> <empty>
Rule 139   OComma -> COMMA
Rule 140   OSemi -> <empty>
Rule 141   OSemi -> SEMICOL
Rule 142   OSimpleStmt -> <empty>
Rule 143   OSimpleStmt -> SimpleStmt
Rule 144   ONewName -> <empty>
Rule 145   ONewName -> NewName
Rule 146   OExpr -> <empty>
Rule 147   OExpr -> Expr
Rule 148   OExprList -> <empty>
Rule 149   OExprList -> ExprList
Rule 150   FuncLiteralDecl -> FuncType
Rule 151   FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
Rule 152   ExprList -> Expr
Rule 153   ExprList -> ExprList COMMA Expr
Rule 154   ExprOrTypeList -> ExprOrType
Rule 155   ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType
Rule 156   OLiteral -> <empty>
Rule 157   OLiteral -> Literal
Rule 158   Literal -> INTEGER
Rule 159   Literal -> FLOAT
Rule 160   Literal -> STRING
Rule 161   Embed -> IDENTIFIER
Rule 162   DeclList -> Declaration SEMICOL
Rule 163   DeclList -> DeclList cmtlist Declaration SEMICOL
Rule 164   VarDeclList -> VarDecl
Rule 165   VarDeclList -> VarDeclList SEMICOL VarDecl
Rule 166   ConstDeclList -> ConstDecl1
Rule 167   ConstDeclList -> ConstDeclList SEMICOL ConstDecl1
Rule 168   TypeDeclList -> TypeDecl
Rule 169   TypeDeclList -> TypeDeclList SEMICOL TypeDecl
Rule 170   DeclNameList -> DeclName
Rule 171   DeclNameList -> DeclNameList COMMA DeclName
Rule 172   StmtList -> Stmt SEMICOL
Rule 173   StmtList -> StmtList cmtlist Stmt SEMICOL
Rule 174   NewNameList -> NewName
Rule 175   NewNameList -> NewNameList COMMA NewName
Rule 176   KeyvalList -> Keyval
Rule 177   KeyvalList -> BareCompLitExpr
Rule 178   KeyvalList -> KeyvalList COMMA Keyval
Rule 179   KeyvalList -> KeyvalList COMMA BareCompLitExpr
Rule 180   BracedKeyvalList -> <empty>
Rule 181   BracedKeyvalList -> KeyvalList OComma
Rule 182   DeclName -> IDENTIFIER
Rule 183   Name -> IDENTIFIER
Rule 184   ArgType -> NameOrType
Rule 185   ArgType -> IDENTIFIER NameOrType
Rule 186   ArgType -> IDENTIFIER DotDotDot
Rule 187   ArgType -> DotDotDot
Rule 188   ArgTypeList -> ArgType
Rule 189   ArgTypeList -> ArgTypeList COMMA ArgType
Rule 190   OArgTypeListOComma -> <empty>
Rule 191   OArgTypeListOComma -> ArgTypeList OComma
Rule 192   Stmt -> <empty>
Rule 193   Stmt -> CompoundStmt
Rule 194   Stmt -> CommonDecl
Rule 195   Stmt -> NonDeclStmt
Rule 196   NonDeclStmt -> SimpleStmt
Rule 197   NonDeclStmt -> ForStmt
Rule 198   NonDeclStmt -> SwitchStmt
Rule 199   NonDeclStmt -> IfStmt
Rule 200   NonDeclStmt -> LabelName COLON Stmt
Rule 201   NonDeclStmt -> FALLTHROUGH
Rule 202   NonDeclStmt -> BREAK ONewName
Rule 203   NonDeclStmt -> CONTINUE ONewName
Rule 204   NonDeclStmt -> GOTO NewName
Rule 205   NonDeclStmt -> RETURN OExprList
Rule 206   DotDotDot -> DDD
Rule 207   DotDotDot -> DDD NType
Rule 208   PExpr -> PExprNoParen
Rule 209   PExpr -> LPAREN ExprOrType RPAREN
Rule 210   PExprNoParen -> Literal
Rule 211   PExprNoParen -> Name
Rule 212   PExprNoParen -> PExpr DOT IDENTIFIER
Rule 213   PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN
Rule 214   PExprNoParen -> PExpr DOT LPAREN NewType RPAREN
Rule 215   PExprNoParen -> PExpr LBRACK Expr RBRACK
Rule 216   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK
Rule 217   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
Rule 218   PExprNoParen -> PseudoCall
Rule 219   PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
Rule 220   PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 221   PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 222   PExprNoParen -> FuncLiteral
Rule 223   PExprNoParen -> ForCompExpr
Rule 224   NewType -> TYPE
Rule 225   ConvType -> FuncType
Rule 226   ConvType -> OtherType
Rule 227   CompType -> OtherType
Rule 228   Keyval -> Expr COLON CompLitExpr
Rule 229   BareCompLitExpr -> Expr
Rule 230   BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 231   CompLitExpr -> Expr
Rule 232   CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 233   ExprOrType -> Expr
Rule 234   ExprOrType -> NonExprType
Rule 235   NameOrType -> NType
Rule 236   SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE
Rule 237   Prec5Expr_ -> UExpr
Rule 238   Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr
Rule 239   Prec5Expr_ -> Prec5Expr_ MOD UExpr
Rule 240   Prec5Expr_ -> Prec5Expr_ SHL UExpr
Rule 241   Prec5Expr_ -> Prec5Expr_ SHR UExpr
Rule 242   Prec5Expr_ -> Prec5Expr_ AMPERS UExpr
Rule 243   Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr
Rule 244   Prec5Expr_ -> Prec5Expr_ TIMES UExpr
Rule 245   Prec4Expr_ -> Prec5Expr_
Rule 246   Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_
Rule 247   Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_
Rule 248   Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_
Rule 249   Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_
Rule 250   Prec3Expr_ -> Prec4Expr_
Rule 251   Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_
Rule 252   Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_
Rule 253   Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_
Rule 254   Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_
Rule 255   Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_
Rule 256   Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_
Rule 257   Prec2Expr_ -> Prec3Expr_
Rule 258   Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_
Rule 259   Expr -> Prec2Expr_
Rule 260   Expr -> Expr OROR Prec2Expr_
Rule 261   Expr -> CONSTANTS
Rule 262   Expr -> Chexpr
Rule 263   Expr -> Arrayexp
Rule 264   Chexpr -> LMINUS IDENTIFIER
Rule 265   Arrayexp -> OtherType LBRACE ExprList RBRACE
Rule 266   UExpr -> PExpr
Rule 267   UExpr -> AMPERS UExpr
Rule 268   UExpr -> NOT UExpr
Rule 269   UExpr -> TIMES UExpr
Rule 270   UExpr -> PLUS UExpr
Rule 271   UExpr -> MINUS UExpr
Rule 272   UExpr -> XOR UExpr
Rule 273   ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK
Rule 274   PseudoCall -> PExpr LPAREN RPAREN
Rule 275   PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN
Rule 276   PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
Rule 277   cmtlist -> <empty>
Rule 278   cmtlist -> cmtlist COMMENT

Terminals, with rules where they appear

AMPAMP               : 258
AMPCAR               : 243
AMPCAREQ             : 52
AMPEQ                : 48
AMPERS               : 242 267
BREAK                : 202
CAREQ                : 49
CASE                 : 57 58 59
CHAN                 : 96 97 98
COLON                : 57 58 59 60 200 216 217 217 228
COLONEQ              : 54 59 67
COMMA                : 139 153 155 171 175 178 179 189
COMMENT              : 278
CONSTANT             : 21 22 23 24
CONSTANTS            : 261
CONTINUE             : 203
DDD                  : 206 207 276
DEFAULT              : 60
DIVIDE               : 238
DIVIDEEQ             : 45
DOT                  : 17 137 212 213 214
ELSE                 : 77 82
EQEQ                 : 251
EQUAL                : 32 33 34 36 53 58 66
FALLTHROUGH          : 201
FLOAT                : 159
FOR                  : 73
FUNCTION             : 103 106
GEQ                  : 254
GOTO                 : 204
GREAT                : 255
IDENTIFIER           : 6 16 39 104 105 125 126 129 137 161 182 183 185 186 212 264
IF                   : 76 77
IMPORT               : 9 10 11
INTEGER              : 158
INTERFACE            : 101 102
LBRACE               : 61 65 99 100 101 102 110 151 236 265
LBRACK               : 92 215 216 217 273
LEFT_ANGLE           : 219
LEFT_LEFT            : 220 221 230 232
LEFT_OR              : 105 113
LEQ                  : 253
LESS                 : 256
LMINUS               : 97 98 264
LPAREN               : 10 11 22 23 24 26 27 29 30 87 107 108 120 122 123 126 127 209 213 214 274 275 276
MINUS                : 247 271
MINUSEQ              : 43
MINUSMIN             : 56
MOD                  : 239
MODEQ                : 46
NOT                  : 268
NOTEQ                : 252
OR                   : 249
OREQ                 : 47
OROR                 : 260
OR_RIGHT             : 105 113
PACKAGE              : 6
PIPE                 : 273
PLUS                 : 246 270
PLUSEQ               : 42
PLUSPLUS             : 55
RANGE                : 66 67 68
RBRACE               : 61 65 99 100 101 102 110 151 236 265
RBRACK               : 92 215 216 217 273
RETURN               : 205
RIGHT_ANGLE          : 219
RIGHT_RIGHT          : 220 221 230 232
RPAREN               : 10 11 22 23 24 26 27 29 30 87 107 108 120 122 123 126 127 209 213 214 274 275 276
SEMICOL              : 6 7 8 14 23 69 69 75 115 117 141 162 163 165 167 169 172 173
SHL                  : 240
SHL_ASSIGN           : 50
SHR                  : 241
SHR_ASSIGN           : 51
STRING               : 12 160
STRUCT               : 99 100
SWITCH               : 236
TIMES                : 91 121 122 123 130 244 269
TIMESEQ              : 44
TYPE                 : 224
VAR                  : 25 26 27
XOR                  : 248 272
error                : 

Nonterminals, with rules where they appear

ArgList              : 104 105 106 108
ArgType              : 188 189
ArgTypeList          : 189 191
Arrayexp             : 263
BareCompLitExpr      : 177 179
BracedKeyvalList     : 220 221 230 232
Case                 : 62
CaseBlock            : 64
CaseBlockList        : 64 236
ChannelType          : 95
Chexpr               : 262
CommonDecl           : 18 194
CompLitExpr          : 228
CompType             : 220
CompoundStmt         : 82 193
ConstDecl            : 21 22 23 37
ConstDecl1           : 166 167
ConstDeclList        : 23 167
ConvType             : 219
DeclList             : 2 3 163
DeclName             : 170 171
DeclNameList         : 31 32 33 34 35 36 38 171
Declaration          : 162 163
DotDotDot            : 186 187
DotName              : 86 134
Else                 : 80
ElseIf               : 79
ElseIfList           : 76 79
Embed                : 119 120 121 122 123
Expr                 : 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 55 56 58 59 66 67 68 147 152 153 215 219 228 229 231 233 260 273
ExprList             : 32 33 34 36 53 53 54 54 66 67 149 153 265
ExprOrType           : 154 155 209 213
ExprOrTypeList       : 57 58 59 155 275 276
ForBody              : 73
ForCompExpr          : 223
ForHeader            : 72
ForStmt              : 197
FuncBody             : 103
FuncDecl             : 19
FuncDecl_            : 103
FuncLiteral          : 222
FuncLiteralDecl      : 151
FuncRes              : 104 105 106 127
FuncRetType          : 112
FuncType             : 83 89 131 150 225
IfHeader             : 76 77 236
IfStmt               : 199
Import               : 7 8
ImportHere           : 12
ImportStmt           : 9 13 14
ImportStmtList       : 10 14
Imports              : 2 4 8
InDecl               : 124
InterfaceDecl        : 116 117
InterfaceDeclList    : 101 117
InterfaceType        : 94
Keyval               : 176 178
KeyvalList           : 178 179 181
LabelName            : 200
Literal              : 157 210
LoopBody             : 72 76 77
NType                : 31 32 34 35 40 87 92 118 130 207 235
Name                 : 136 137 211
NameOrType           : 184 185
NewName              : 124 128 145 174 175 204
NewNameList          : 118 175
NewType              : 28 29 30 88 96 97 98 135 214
NonDeclStmt          : 20 195
NonExprType          : 91 234
OArgTypeListOComma   : 105 107 108 113 127
OComma               : 181 191 219 275 276
OExpr                : 92 216 216 217 217 217
OExprList            : 205
OLiteral             : 118 119 120 121 122 123
ONewName             : 202 203
OSemi                : 10 22 23 26 29 99 101
OSimpleStmt          : 69 69 69 70 74 75 75
OtherType            : 84 90 132 226 227 265
PExpr                : 212 213 214 215 216 217 221 266 274 275 276
PExprNoParen         : 208
PackageClause        : 2 3 4 5
Prec2Expr_           : 258 259 260
Prec3Expr_           : 251 252 253 254 255 256 257 258
Prec4Expr_           : 246 247 248 249 250 251 252 253 254 255 256
Prec5Expr_           : 238 239 240 241 242 243 244 245 246 247 248 249
PseudoCall           : 218
PtrType              : 85 133
RangeStmt            : 71 273
SimpleStmt           : 143 196
SourceFile           : 1
Stmt                 : 172 173 200
StmtList             : 61 62 65 110 151 173
StructDecl           : 114 115
StructDeclList       : 99 115
StructType           : 93
SwitchStmt           : 198
TypeDecl             : 28 168 169
TypeDeclList         : 29 169
TypeDeclName         : 40
UExpr                : 237 238 239 240 241 242 243 244 267 268 269 270 271 272
VarDecl              : 25 164 165
VarDeclList          : 26 165
cmtlist              : 2 2 2 2 3 3 3 4 4 4 5 5 8 61 61 65 65 110 110 151 151 163 173 278
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (2) SourceFile -> . cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> . cmtlist PackageClause cmtlist DeclList cmtlist
    (4) SourceFile -> . cmtlist PackageClause cmtlist Imports cmtlist
    (5) SourceFile -> . cmtlist PackageClause cmtlist
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 277 (cmtlist -> .)
    PACKAGE         reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 1
    SourceFile                     shift and go to state 2
    start                          shift and go to state 3

state 1

    (2) SourceFile -> cmtlist . PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist . PackageClause cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist . PackageClause cmtlist Imports cmtlist
    (5) SourceFile -> cmtlist . PackageClause cmtlist
    (278) cmtlist -> cmtlist . COMMENT
    (6) PackageClause -> . PACKAGE IDENTIFIER SEMICOL

    COMMENT         shift and go to state 4
    PACKAGE         shift and go to state 6

    PackageClause                  shift and go to state 5

state 2

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 3

    (0) S' -> start .



state 4

    (278) cmtlist -> cmtlist COMMENT .

    RBRACE          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    COMMENT         reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    LBRACE          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    CONSTANT        reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    VAR             reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    FALLTHROUGH     reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    BREAK           reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    CONTINUE        reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    GOTO            reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    RETURN          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    TYPE            reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    FOR             reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    SWITCH          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    IF              reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    CONSTANTS       reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    IDENTIFIER      reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    LMINUS          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    LBRACK          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    STRUCT          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    INTERFACE       reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    CHAN            reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    AMPERS          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    NOT             reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    TIMES           reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    PLUS            reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    MINUS           reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    XOR             reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    LPAREN          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    INTEGER         reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    FLOAT           reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    STRING          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    FUNCTION        reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    SEMICOL         reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    $end            reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    IMPORT          reduce using rule 278 (cmtlist -> cmtlist COMMENT .)
    PACKAGE         reduce using rule 278 (cmtlist -> cmtlist COMMENT .)


state 5

    (2) SourceFile -> cmtlist PackageClause . cmtlist Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist PackageClause . cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause . cmtlist Imports cmtlist
    (5) SourceFile -> cmtlist PackageClause . cmtlist
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 277 (cmtlist -> .)
    IMPORT          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    $end            reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 7

state 6

    (6) PackageClause -> PACKAGE . IDENTIFIER SEMICOL

    IDENTIFIER      shift and go to state 8


state 7

    (2) SourceFile -> cmtlist PackageClause cmtlist . Imports cmtlist DeclList cmtlist
    (3) SourceFile -> cmtlist PackageClause cmtlist . DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist . Imports cmtlist
    (5) SourceFile -> cmtlist PackageClause cmtlist .
    (278) cmtlist -> cmtlist . COMMENT
    (7) Imports -> . Import SEMICOL
    (8) Imports -> . Imports cmtlist Import SEMICOL
    (162) DeclList -> . Declaration SEMICOL
    (163) DeclList -> . DeclList cmtlist Declaration SEMICOL
    (9) Import -> . IMPORT ImportStmt
    (10) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> . IMPORT LPAREN RPAREN
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (103) FuncDecl -> . FUNCTION FuncDecl_ FuncBody
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 5 (SourceFile -> cmtlist PackageClause cmtlist .)
    COMMENT         shift and go to state 4
    IMPORT          shift and go to state 18
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    NewType                        shift and go to state 65
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    IfStmt                         shift and go to state 12
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 52
    ChannelType                    shift and go to state 35
    Import                         shift and go to state 50
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    DeclList                       shift and go to state 57
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Imports                        shift and go to state 58
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 8

    (6) PackageClause -> PACKAGE IDENTIFIER . SEMICOL

    SEMICOL         shift and go to state 77


state 9

    (222) PExprNoParen -> FuncLiteral .

    DOT             reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    LBRACK          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    LEFT_LEFT       reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    LPAREN          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    DIVIDE          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    MOD             reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    SHL             reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    SHR             reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    AMPERS          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    AMPCAR          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    TIMES           reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    PLUS            reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    MINUS           reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    XOR             reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    OR              reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    EQEQ            reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    NOTEQ           reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    LEQ             reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    GEQ             reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    GREAT           reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    LESS            reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    AMPAMP          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    OROR            reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    SEMICOL         reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    LBRACE          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    COMMA           reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    PLUSEQ          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    MINUSEQ         reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    TIMESEQ         reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    DIVIDEEQ        reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    MODEQ           reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    OREQ            reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    AMPEQ           reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    CAREQ           reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    SHL_ASSIGN      reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    SHR_ASSIGN      reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    AMPCAREQ        reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    PLUSPLUS        reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    MINUSMIN        reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    EQUAL           reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    COLONEQ         reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    RPAREN          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    RBRACK          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    PIPE            reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    RIGHT_ANGLE     reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    RBRACE          reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    COLON           reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    RIGHT_RIGHT     reduce using rule 222 (PExprNoParen -> FuncLiteral .)
    DDD             reduce using rule 222 (PExprNoParen -> FuncLiteral .)


state 10

    (257) Prec2Expr_ -> Prec3Expr_ .
    (251) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (252) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (254) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (255) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (256) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    OROR            reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    LBRACE          reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACK          reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    SEMICOL         reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    EQUAL           reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    COLONEQ         reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    COMMA           reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACE          reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    RPAREN          reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    COLON           reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSEQ          reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSEQ         reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    TIMESEQ         reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    MODEQ           reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    OREQ            reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    AMPEQ           reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    CAREQ           reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    AMPCAREQ        reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSPLUS        reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSMIN        reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    PIPE            reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    DDD             reduce using rule 257 (Prec2Expr_ -> Prec3Expr_ .)
    EQEQ            shift and go to state 80
    NOTEQ           shift and go to state 83
    LEQ             shift and go to state 79
    GEQ             shift and go to state 78
    GREAT           shift and go to state 82
    LESS            shift and go to state 81


state 11

    (219) PExprNoParen -> ConvType . LEFT_ANGLE Expr OComma RIGHT_ANGLE

    LEFT_ANGLE      shift and go to state 84


state 12

    (199) NonDeclStmt -> IfStmt .

    SEMICOL         reduce using rule 199 (NonDeclStmt -> IfStmt .)


state 13

    (262) Expr -> Chexpr .

    PLUSEQ          reduce using rule 262 (Expr -> Chexpr .)
    MINUSEQ         reduce using rule 262 (Expr -> Chexpr .)
    TIMESEQ         reduce using rule 262 (Expr -> Chexpr .)
    DIVIDEEQ        reduce using rule 262 (Expr -> Chexpr .)
    MODEQ           reduce using rule 262 (Expr -> Chexpr .)
    OREQ            reduce using rule 262 (Expr -> Chexpr .)
    AMPEQ           reduce using rule 262 (Expr -> Chexpr .)
    CAREQ           reduce using rule 262 (Expr -> Chexpr .)
    SHL_ASSIGN      reduce using rule 262 (Expr -> Chexpr .)
    SHR_ASSIGN      reduce using rule 262 (Expr -> Chexpr .)
    AMPCAREQ        reduce using rule 262 (Expr -> Chexpr .)
    PLUSPLUS        reduce using rule 262 (Expr -> Chexpr .)
    MINUSMIN        reduce using rule 262 (Expr -> Chexpr .)
    OROR            reduce using rule 262 (Expr -> Chexpr .)
    SEMICOL         reduce using rule 262 (Expr -> Chexpr .)
    EQUAL           reduce using rule 262 (Expr -> Chexpr .)
    COLONEQ         reduce using rule 262 (Expr -> Chexpr .)
    COMMA           reduce using rule 262 (Expr -> Chexpr .)
    LBRACE          reduce using rule 262 (Expr -> Chexpr .)
    RBRACK          reduce using rule 262 (Expr -> Chexpr .)
    COLON           reduce using rule 262 (Expr -> Chexpr .)
    RIGHT_RIGHT     reduce using rule 262 (Expr -> Chexpr .)
    RIGHT_ANGLE     reduce using rule 262 (Expr -> Chexpr .)
    DDD             reduce using rule 262 (Expr -> Chexpr .)
    RPAREN          reduce using rule 262 (Expr -> Chexpr .)
    RBRACE          reduce using rule 262 (Expr -> Chexpr .)
    PIPE            reduce using rule 262 (Expr -> Chexpr .)


state 14

    (201) NonDeclStmt -> FALLTHROUGH .

    SEMICOL         reduce using rule 201 (NonDeclStmt -> FALLTHROUGH .)


state 15

    (94) OtherType -> InterfaceType .

    EQUAL           reduce using rule 94 (OtherType -> InterfaceType .)
    SEMICOL         reduce using rule 94 (OtherType -> InterfaceType .)
    RPAREN          reduce using rule 94 (OtherType -> InterfaceType .)
    LBRACE          reduce using rule 94 (OtherType -> InterfaceType .)
    LEFT_ANGLE      reduce using rule 94 (OtherType -> InterfaceType .)
    LEFT_LEFT       reduce using rule 94 (OtherType -> InterfaceType .)
    DDD             reduce using rule 94 (OtherType -> InterfaceType .)
    COMMA           reduce using rule 94 (OtherType -> InterfaceType .)
    COLON           reduce using rule 94 (OtherType -> InterfaceType .)
    COLONEQ         reduce using rule 94 (OtherType -> InterfaceType .)
    RBRACE          reduce using rule 94 (OtherType -> InterfaceType .)
    OR_RIGHT        reduce using rule 94 (OtherType -> InterfaceType .)
    INTEGER         reduce using rule 94 (OtherType -> InterfaceType .)
    FLOAT           reduce using rule 94 (OtherType -> InterfaceType .)
    STRING          reduce using rule 94 (OtherType -> InterfaceType .)


state 16

    (200) NonDeclStmt -> LabelName . COLON Stmt

    COLON           shift and go to state 85


state 17

    (245) Prec4Expr_ -> Prec5Expr_ .
    (238) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (239) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (240) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (241) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (242) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (243) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (244) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    MINUS           reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    XOR             reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    OR              reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    EQEQ            reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    NOTEQ           reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    LEQ             reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    GEQ             reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    GREAT           reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    LESS            reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    AMPAMP          reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    OROR            reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    SEMICOL         reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    LBRACE          reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    COMMA           reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    RPAREN          reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    EQUAL           reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    COLONEQ         reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACE          reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSEQ          reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSEQ         reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    TIMESEQ         reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    MODEQ           reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    OREQ            reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    AMPEQ           reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    CAREQ           reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    AMPCAREQ        reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSPLUS        reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSMIN        reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACK          reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    COLON           reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    PIPE            reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    DDD             reduce using rule 245 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 18

    (9) Import -> IMPORT . ImportStmt
    (10) Import -> IMPORT . LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> IMPORT . LPAREN RPAREN
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    LPAREN          shift and go to state 95
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 94
    DOT             shift and go to state 97

    ImportHere                     shift and go to state 93
    ImportStmt                     shift and go to state 96

state 19

    (264) Chexpr -> LMINUS . IDENTIFIER
    (98) ChannelType -> LMINUS . CHAN NewType

    IDENTIFIER      shift and go to state 98
    CHAN            shift and go to state 99


state 20

    (259) Expr -> Prec2Expr_ .
    (258) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    PLUSEQ          reduce using rule 259 (Expr -> Prec2Expr_ .)
    MINUSEQ         reduce using rule 259 (Expr -> Prec2Expr_ .)
    TIMESEQ         reduce using rule 259 (Expr -> Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 259 (Expr -> Prec2Expr_ .)
    MODEQ           reduce using rule 259 (Expr -> Prec2Expr_ .)
    OREQ            reduce using rule 259 (Expr -> Prec2Expr_ .)
    AMPEQ           reduce using rule 259 (Expr -> Prec2Expr_ .)
    CAREQ           reduce using rule 259 (Expr -> Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 259 (Expr -> Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 259 (Expr -> Prec2Expr_ .)
    AMPCAREQ        reduce using rule 259 (Expr -> Prec2Expr_ .)
    PLUSPLUS        reduce using rule 259 (Expr -> Prec2Expr_ .)
    MINUSMIN        reduce using rule 259 (Expr -> Prec2Expr_ .)
    OROR            reduce using rule 259 (Expr -> Prec2Expr_ .)
    SEMICOL         reduce using rule 259 (Expr -> Prec2Expr_ .)
    EQUAL           reduce using rule 259 (Expr -> Prec2Expr_ .)
    COLONEQ         reduce using rule 259 (Expr -> Prec2Expr_ .)
    COMMA           reduce using rule 259 (Expr -> Prec2Expr_ .)
    LBRACE          reduce using rule 259 (Expr -> Prec2Expr_ .)
    RBRACK          reduce using rule 259 (Expr -> Prec2Expr_ .)
    COLON           reduce using rule 259 (Expr -> Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 259 (Expr -> Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 259 (Expr -> Prec2Expr_ .)
    DDD             reduce using rule 259 (Expr -> Prec2Expr_ .)
    RPAREN          reduce using rule 259 (Expr -> Prec2Expr_ .)
    RBRACE          reduce using rule 259 (Expr -> Prec2Expr_ .)
    PIPE            reduce using rule 259 (Expr -> Prec2Expr_ .)
    AMPAMP          shift and go to state 100


state 21

    (151) FuncLiteral -> FuncLiteralDecl . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 101


state 22

    (158) Literal -> INTEGER .

    DOT             reduce using rule 158 (Literal -> INTEGER .)
    LBRACK          reduce using rule 158 (Literal -> INTEGER .)
    LEFT_LEFT       reduce using rule 158 (Literal -> INTEGER .)
    LPAREN          reduce using rule 158 (Literal -> INTEGER .)
    DIVIDE          reduce using rule 158 (Literal -> INTEGER .)
    MOD             reduce using rule 158 (Literal -> INTEGER .)
    SHL             reduce using rule 158 (Literal -> INTEGER .)
    SHR             reduce using rule 158 (Literal -> INTEGER .)
    AMPERS          reduce using rule 158 (Literal -> INTEGER .)
    AMPCAR          reduce using rule 158 (Literal -> INTEGER .)
    TIMES           reduce using rule 158 (Literal -> INTEGER .)
    PLUS            reduce using rule 158 (Literal -> INTEGER .)
    MINUS           reduce using rule 158 (Literal -> INTEGER .)
    XOR             reduce using rule 158 (Literal -> INTEGER .)
    OR              reduce using rule 158 (Literal -> INTEGER .)
    EQEQ            reduce using rule 158 (Literal -> INTEGER .)
    NOTEQ           reduce using rule 158 (Literal -> INTEGER .)
    LEQ             reduce using rule 158 (Literal -> INTEGER .)
    GEQ             reduce using rule 158 (Literal -> INTEGER .)
    GREAT           reduce using rule 158 (Literal -> INTEGER .)
    LESS            reduce using rule 158 (Literal -> INTEGER .)
    AMPAMP          reduce using rule 158 (Literal -> INTEGER .)
    PLUSEQ          reduce using rule 158 (Literal -> INTEGER .)
    MINUSEQ         reduce using rule 158 (Literal -> INTEGER .)
    TIMESEQ         reduce using rule 158 (Literal -> INTEGER .)
    DIVIDEEQ        reduce using rule 158 (Literal -> INTEGER .)
    MODEQ           reduce using rule 158 (Literal -> INTEGER .)
    OREQ            reduce using rule 158 (Literal -> INTEGER .)
    AMPEQ           reduce using rule 158 (Literal -> INTEGER .)
    CAREQ           reduce using rule 158 (Literal -> INTEGER .)
    SHL_ASSIGN      reduce using rule 158 (Literal -> INTEGER .)
    SHR_ASSIGN      reduce using rule 158 (Literal -> INTEGER .)
    AMPCAREQ        reduce using rule 158 (Literal -> INTEGER .)
    PLUSPLUS        reduce using rule 158 (Literal -> INTEGER .)
    MINUSMIN        reduce using rule 158 (Literal -> INTEGER .)
    OROR            reduce using rule 158 (Literal -> INTEGER .)
    SEMICOL         reduce using rule 158 (Literal -> INTEGER .)
    EQUAL           reduce using rule 158 (Literal -> INTEGER .)
    COLONEQ         reduce using rule 158 (Literal -> INTEGER .)
    COMMA           reduce using rule 158 (Literal -> INTEGER .)
    LBRACE          reduce using rule 158 (Literal -> INTEGER .)
    PIPE            reduce using rule 158 (Literal -> INTEGER .)
    RBRACK          reduce using rule 158 (Literal -> INTEGER .)
    RPAREN          reduce using rule 158 (Literal -> INTEGER .)
    RIGHT_ANGLE     reduce using rule 158 (Literal -> INTEGER .)
    RBRACE          reduce using rule 158 (Literal -> INTEGER .)
    COLON           reduce using rule 158 (Literal -> INTEGER .)
    RIGHT_RIGHT     reduce using rule 158 (Literal -> INTEGER .)
    DDD             reduce using rule 158 (Literal -> INTEGER .)


state 23

    (25) CommonDecl -> VAR . VarDecl
    (26) CommonDecl -> VAR . LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> VAR . LPAREN RPAREN
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (170) DeclNameList -> . DeclName
    (171) DeclNameList -> . DeclNameList COMMA DeclName
    (182) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 105
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    VarDecl                        shift and go to state 104
    DeclNameList                   shift and go to state 106

state 24

    (53) SimpleStmt -> ExprList . EQUAL ExprList
    (54) SimpleStmt -> ExprList . COLONEQ ExprList
    (153) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 109
    COLONEQ         shift and go to state 108
    COMMA           shift and go to state 107


state 25

    (205) NonDeclStmt -> RETURN . OExprList
    (148) OExprList -> .
    (149) OExprList -> . ExprList
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 148 (OExprList -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 110
    OExprList                      shift and go to state 111
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 26

    (21) CommonDecl -> CONSTANT . ConstDecl
    (22) CommonDecl -> CONSTANT . LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> CONSTANT . LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> CONSTANT . LPAREN RPAREN
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (170) DeclNameList -> . DeclName
    (171) DeclNameList -> . DeclNameList COMMA DeclName
    (182) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 115
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    ConstDecl                      shift and go to state 117
    DeclNameList                   shift and go to state 116

state 27

    (267) UExpr -> AMPERS . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 120
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 28

    (250) Prec3Expr_ -> Prec4Expr_ .
    (246) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (247) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (248) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    NOTEQ           reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    LEQ             reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    GEQ             reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    GREAT           reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    LESS            reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    AMPAMP          reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSEQ          reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSEQ         reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    TIMESEQ         reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    MODEQ           reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    OREQ            reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    AMPEQ           reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    CAREQ           reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    AMPCAREQ        reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSPLUS        reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSMIN        reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    OROR            reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    SEMICOL         reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    EQUAL           reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    COLONEQ         reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    COMMA           reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    RPAREN          reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    LBRACE          reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACK          reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    PIPE            reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACE          reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    COLON           reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    DDD             reduce using rule 250 (Prec3Expr_ -> Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 29

    (18) Declaration -> CommonDecl .

    SEMICOL         reduce using rule 18 (Declaration -> CommonDecl .)


state 30

    (271) UExpr -> MINUS . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 126
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 31

    (160) Literal -> STRING .

    DOT             reduce using rule 160 (Literal -> STRING .)
    LBRACK          reduce using rule 160 (Literal -> STRING .)
    LEFT_LEFT       reduce using rule 160 (Literal -> STRING .)
    LPAREN          reduce using rule 160 (Literal -> STRING .)
    DIVIDE          reduce using rule 160 (Literal -> STRING .)
    MOD             reduce using rule 160 (Literal -> STRING .)
    SHL             reduce using rule 160 (Literal -> STRING .)
    SHR             reduce using rule 160 (Literal -> STRING .)
    AMPERS          reduce using rule 160 (Literal -> STRING .)
    AMPCAR          reduce using rule 160 (Literal -> STRING .)
    TIMES           reduce using rule 160 (Literal -> STRING .)
    PLUS            reduce using rule 160 (Literal -> STRING .)
    MINUS           reduce using rule 160 (Literal -> STRING .)
    XOR             reduce using rule 160 (Literal -> STRING .)
    OR              reduce using rule 160 (Literal -> STRING .)
    EQEQ            reduce using rule 160 (Literal -> STRING .)
    NOTEQ           reduce using rule 160 (Literal -> STRING .)
    LEQ             reduce using rule 160 (Literal -> STRING .)
    GEQ             reduce using rule 160 (Literal -> STRING .)
    GREAT           reduce using rule 160 (Literal -> STRING .)
    LESS            reduce using rule 160 (Literal -> STRING .)
    AMPAMP          reduce using rule 160 (Literal -> STRING .)
    PLUSEQ          reduce using rule 160 (Literal -> STRING .)
    MINUSEQ         reduce using rule 160 (Literal -> STRING .)
    TIMESEQ         reduce using rule 160 (Literal -> STRING .)
    DIVIDEEQ        reduce using rule 160 (Literal -> STRING .)
    MODEQ           reduce using rule 160 (Literal -> STRING .)
    OREQ            reduce using rule 160 (Literal -> STRING .)
    AMPEQ           reduce using rule 160 (Literal -> STRING .)
    CAREQ           reduce using rule 160 (Literal -> STRING .)
    SHL_ASSIGN      reduce using rule 160 (Literal -> STRING .)
    SHR_ASSIGN      reduce using rule 160 (Literal -> STRING .)
    AMPCAREQ        reduce using rule 160 (Literal -> STRING .)
    PLUSPLUS        reduce using rule 160 (Literal -> STRING .)
    MINUSMIN        reduce using rule 160 (Literal -> STRING .)
    OROR            reduce using rule 160 (Literal -> STRING .)
    SEMICOL         reduce using rule 160 (Literal -> STRING .)
    EQUAL           reduce using rule 160 (Literal -> STRING .)
    COLONEQ         reduce using rule 160 (Literal -> STRING .)
    COMMA           reduce using rule 160 (Literal -> STRING .)
    LBRACE          reduce using rule 160 (Literal -> STRING .)
    PIPE            reduce using rule 160 (Literal -> STRING .)
    RBRACK          reduce using rule 160 (Literal -> STRING .)
    RPAREN          reduce using rule 160 (Literal -> STRING .)
    RIGHT_ANGLE     reduce using rule 160 (Literal -> STRING .)
    RBRACE          reduce using rule 160 (Literal -> STRING .)
    COLON           reduce using rule 160 (Literal -> STRING .)
    RIGHT_RIGHT     reduce using rule 160 (Literal -> STRING .)
    DDD             reduce using rule 160 (Literal -> STRING .)


state 32

    (19) Declaration -> FuncDecl .

    SEMICOL         reduce using rule 19 (Declaration -> FuncDecl .)


state 33

    (265) Arrayexp -> OtherType . LBRACE ExprList RBRACE
    (226) ConvType -> OtherType .
    (227) CompType -> OtherType .

    LBRACE          shift and go to state 127
    LEFT_ANGLE      reduce using rule 226 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 227 (CompType -> OtherType .)


state 34

    (128) LabelName -> NewName .

    COLON           reduce using rule 128 (LabelName -> NewName .)


state 35

    (95) OtherType -> ChannelType .

    EQUAL           reduce using rule 95 (OtherType -> ChannelType .)
    SEMICOL         reduce using rule 95 (OtherType -> ChannelType .)
    RPAREN          reduce using rule 95 (OtherType -> ChannelType .)
    LBRACE          reduce using rule 95 (OtherType -> ChannelType .)
    LEFT_ANGLE      reduce using rule 95 (OtherType -> ChannelType .)
    LEFT_LEFT       reduce using rule 95 (OtherType -> ChannelType .)
    DDD             reduce using rule 95 (OtherType -> ChannelType .)
    COMMA           reduce using rule 95 (OtherType -> ChannelType .)
    COLON           reduce using rule 95 (OtherType -> ChannelType .)
    COLONEQ         reduce using rule 95 (OtherType -> ChannelType .)
    RBRACE          reduce using rule 95 (OtherType -> ChannelType .)
    OR_RIGHT        reduce using rule 95 (OtherType -> ChannelType .)
    INTEGER         reduce using rule 95 (OtherType -> ChannelType .)
    FLOAT           reduce using rule 95 (OtherType -> ChannelType .)
    STRING          reduce using rule 95 (OtherType -> ChannelType .)


state 36

    (103) FuncDecl -> FUNCTION . FuncDecl_ FuncBody
    (106) FuncType -> FUNCTION . ArgList FuncRes
    (104) FuncDecl_ -> . IDENTIFIER ArgList FuncRes
    (105) FuncDecl_ -> . LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (107) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (108) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    IDENTIFIER      shift and go to state 132
    LEFT_OR         shift and go to state 131
    LPAREN          shift and go to state 130

    FuncDecl_                      shift and go to state 129
    ArgList                        shift and go to state 128

state 37

    (73) ForStmt -> FOR . ForBody
    (72) ForBody -> . ForHeader LoopBody
    (69) ForHeader -> . OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (70) ForHeader -> . OSimpleStmt
    (71) ForHeader -> . RangeStmt
    (142) OSimpleStmt -> .
    (143) OSimpleStmt -> . SimpleStmt
    (66) RangeStmt -> . ExprList EQUAL RANGE Expr
    (67) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (68) RangeStmt -> . RANGE Expr
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 142 (OSimpleStmt -> .)
    LBRACE          reduce using rule 142 (OSimpleStmt -> .)
    RANGE           shift and go to state 137
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    ForBody                        shift and go to state 136
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 138
    OSimpleStmt                    shift and go to state 133
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    ForHeader                      shift and go to state 139
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 38
    RangeStmt                      shift and go to state 134
    ExprList                       shift and go to state 135
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 38

    (218) PExprNoParen -> PseudoCall .

    DOT             reduce using rule 218 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 218 (PExprNoParen -> PseudoCall .)
    LPAREN          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    DIVIDE          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    MOD             reduce using rule 218 (PExprNoParen -> PseudoCall .)
    SHL             reduce using rule 218 (PExprNoParen -> PseudoCall .)
    SHR             reduce using rule 218 (PExprNoParen -> PseudoCall .)
    AMPERS          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    AMPCAR          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    TIMES           reduce using rule 218 (PExprNoParen -> PseudoCall .)
    PLUS            reduce using rule 218 (PExprNoParen -> PseudoCall .)
    MINUS           reduce using rule 218 (PExprNoParen -> PseudoCall .)
    XOR             reduce using rule 218 (PExprNoParen -> PseudoCall .)
    OR              reduce using rule 218 (PExprNoParen -> PseudoCall .)
    EQEQ            reduce using rule 218 (PExprNoParen -> PseudoCall .)
    NOTEQ           reduce using rule 218 (PExprNoParen -> PseudoCall .)
    LEQ             reduce using rule 218 (PExprNoParen -> PseudoCall .)
    GEQ             reduce using rule 218 (PExprNoParen -> PseudoCall .)
    GREAT           reduce using rule 218 (PExprNoParen -> PseudoCall .)
    LESS            reduce using rule 218 (PExprNoParen -> PseudoCall .)
    AMPAMP          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    OROR            reduce using rule 218 (PExprNoParen -> PseudoCall .)
    SEMICOL         reduce using rule 218 (PExprNoParen -> PseudoCall .)
    LBRACE          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    COMMA           reduce using rule 218 (PExprNoParen -> PseudoCall .)
    PLUSEQ          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    MINUSEQ         reduce using rule 218 (PExprNoParen -> PseudoCall .)
    TIMESEQ         reduce using rule 218 (PExprNoParen -> PseudoCall .)
    DIVIDEEQ        reduce using rule 218 (PExprNoParen -> PseudoCall .)
    MODEQ           reduce using rule 218 (PExprNoParen -> PseudoCall .)
    OREQ            reduce using rule 218 (PExprNoParen -> PseudoCall .)
    AMPEQ           reduce using rule 218 (PExprNoParen -> PseudoCall .)
    CAREQ           reduce using rule 218 (PExprNoParen -> PseudoCall .)
    SHL_ASSIGN      reduce using rule 218 (PExprNoParen -> PseudoCall .)
    SHR_ASSIGN      reduce using rule 218 (PExprNoParen -> PseudoCall .)
    AMPCAREQ        reduce using rule 218 (PExprNoParen -> PseudoCall .)
    PLUSPLUS        reduce using rule 218 (PExprNoParen -> PseudoCall .)
    MINUSMIN        reduce using rule 218 (PExprNoParen -> PseudoCall .)
    EQUAL           reduce using rule 218 (PExprNoParen -> PseudoCall .)
    COLONEQ         reduce using rule 218 (PExprNoParen -> PseudoCall .)
    RPAREN          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    RBRACK          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    PIPE            reduce using rule 218 (PExprNoParen -> PseudoCall .)
    RIGHT_ANGLE     reduce using rule 218 (PExprNoParen -> PseudoCall .)
    RBRACE          reduce using rule 218 (PExprNoParen -> PseudoCall .)
    COLON           reduce using rule 218 (PExprNoParen -> PseudoCall .)
    RIGHT_RIGHT     reduce using rule 218 (PExprNoParen -> PseudoCall .)
    DDD             reduce using rule 218 (PExprNoParen -> PseudoCall .)


state 39

    (101) InterfaceType -> INTERFACE . LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> INTERFACE . LBRACE RBRACE

    LBRACE          shift and go to state 141


state 40

    (210) PExprNoParen -> Literal .

    DOT             reduce using rule 210 (PExprNoParen -> Literal .)
    LBRACK          reduce using rule 210 (PExprNoParen -> Literal .)
    LEFT_LEFT       reduce using rule 210 (PExprNoParen -> Literal .)
    LPAREN          reduce using rule 210 (PExprNoParen -> Literal .)
    DIVIDE          reduce using rule 210 (PExprNoParen -> Literal .)
    MOD             reduce using rule 210 (PExprNoParen -> Literal .)
    SHL             reduce using rule 210 (PExprNoParen -> Literal .)
    SHR             reduce using rule 210 (PExprNoParen -> Literal .)
    AMPERS          reduce using rule 210 (PExprNoParen -> Literal .)
    AMPCAR          reduce using rule 210 (PExprNoParen -> Literal .)
    TIMES           reduce using rule 210 (PExprNoParen -> Literal .)
    PLUS            reduce using rule 210 (PExprNoParen -> Literal .)
    MINUS           reduce using rule 210 (PExprNoParen -> Literal .)
    XOR             reduce using rule 210 (PExprNoParen -> Literal .)
    OR              reduce using rule 210 (PExprNoParen -> Literal .)
    EQEQ            reduce using rule 210 (PExprNoParen -> Literal .)
    NOTEQ           reduce using rule 210 (PExprNoParen -> Literal .)
    LEQ             reduce using rule 210 (PExprNoParen -> Literal .)
    GEQ             reduce using rule 210 (PExprNoParen -> Literal .)
    GREAT           reduce using rule 210 (PExprNoParen -> Literal .)
    LESS            reduce using rule 210 (PExprNoParen -> Literal .)
    AMPAMP          reduce using rule 210 (PExprNoParen -> Literal .)
    OROR            reduce using rule 210 (PExprNoParen -> Literal .)
    SEMICOL         reduce using rule 210 (PExprNoParen -> Literal .)
    LBRACE          reduce using rule 210 (PExprNoParen -> Literal .)
    COMMA           reduce using rule 210 (PExprNoParen -> Literal .)
    PLUSEQ          reduce using rule 210 (PExprNoParen -> Literal .)
    MINUSEQ         reduce using rule 210 (PExprNoParen -> Literal .)
    TIMESEQ         reduce using rule 210 (PExprNoParen -> Literal .)
    DIVIDEEQ        reduce using rule 210 (PExprNoParen -> Literal .)
    MODEQ           reduce using rule 210 (PExprNoParen -> Literal .)
    OREQ            reduce using rule 210 (PExprNoParen -> Literal .)
    AMPEQ           reduce using rule 210 (PExprNoParen -> Literal .)
    CAREQ           reduce using rule 210 (PExprNoParen -> Literal .)
    SHL_ASSIGN      reduce using rule 210 (PExprNoParen -> Literal .)
    SHR_ASSIGN      reduce using rule 210 (PExprNoParen -> Literal .)
    AMPCAREQ        reduce using rule 210 (PExprNoParen -> Literal .)
    PLUSPLUS        reduce using rule 210 (PExprNoParen -> Literal .)
    MINUSMIN        reduce using rule 210 (PExprNoParen -> Literal .)
    EQUAL           reduce using rule 210 (PExprNoParen -> Literal .)
    COLONEQ         reduce using rule 210 (PExprNoParen -> Literal .)
    RPAREN          reduce using rule 210 (PExprNoParen -> Literal .)
    RBRACK          reduce using rule 210 (PExprNoParen -> Literal .)
    PIPE            reduce using rule 210 (PExprNoParen -> Literal .)
    RIGHT_ANGLE     reduce using rule 210 (PExprNoParen -> Literal .)
    RBRACE          reduce using rule 210 (PExprNoParen -> Literal .)
    COLON           reduce using rule 210 (PExprNoParen -> Literal .)
    RIGHT_RIGHT     reduce using rule 210 (PExprNoParen -> Literal .)
    DDD             reduce using rule 210 (PExprNoParen -> Literal .)


state 41

    (237) Prec5Expr_ -> UExpr .

    DIVIDE          reduce using rule 237 (Prec5Expr_ -> UExpr .)
    MOD             reduce using rule 237 (Prec5Expr_ -> UExpr .)
    SHL             reduce using rule 237 (Prec5Expr_ -> UExpr .)
    SHR             reduce using rule 237 (Prec5Expr_ -> UExpr .)
    AMPERS          reduce using rule 237 (Prec5Expr_ -> UExpr .)
    AMPCAR          reduce using rule 237 (Prec5Expr_ -> UExpr .)
    TIMES           reduce using rule 237 (Prec5Expr_ -> UExpr .)
    PLUS            reduce using rule 237 (Prec5Expr_ -> UExpr .)
    MINUS           reduce using rule 237 (Prec5Expr_ -> UExpr .)
    XOR             reduce using rule 237 (Prec5Expr_ -> UExpr .)
    OR              reduce using rule 237 (Prec5Expr_ -> UExpr .)
    EQEQ            reduce using rule 237 (Prec5Expr_ -> UExpr .)
    NOTEQ           reduce using rule 237 (Prec5Expr_ -> UExpr .)
    LEQ             reduce using rule 237 (Prec5Expr_ -> UExpr .)
    GEQ             reduce using rule 237 (Prec5Expr_ -> UExpr .)
    GREAT           reduce using rule 237 (Prec5Expr_ -> UExpr .)
    LESS            reduce using rule 237 (Prec5Expr_ -> UExpr .)
    AMPAMP          reduce using rule 237 (Prec5Expr_ -> UExpr .)
    PLUSEQ          reduce using rule 237 (Prec5Expr_ -> UExpr .)
    MINUSEQ         reduce using rule 237 (Prec5Expr_ -> UExpr .)
    TIMESEQ         reduce using rule 237 (Prec5Expr_ -> UExpr .)
    DIVIDEEQ        reduce using rule 237 (Prec5Expr_ -> UExpr .)
    MODEQ           reduce using rule 237 (Prec5Expr_ -> UExpr .)
    OREQ            reduce using rule 237 (Prec5Expr_ -> UExpr .)
    AMPEQ           reduce using rule 237 (Prec5Expr_ -> UExpr .)
    CAREQ           reduce using rule 237 (Prec5Expr_ -> UExpr .)
    SHL_ASSIGN      reduce using rule 237 (Prec5Expr_ -> UExpr .)
    SHR_ASSIGN      reduce using rule 237 (Prec5Expr_ -> UExpr .)
    AMPCAREQ        reduce using rule 237 (Prec5Expr_ -> UExpr .)
    PLUSPLUS        reduce using rule 237 (Prec5Expr_ -> UExpr .)
    MINUSMIN        reduce using rule 237 (Prec5Expr_ -> UExpr .)
    OROR            reduce using rule 237 (Prec5Expr_ -> UExpr .)
    SEMICOL         reduce using rule 237 (Prec5Expr_ -> UExpr .)
    EQUAL           reduce using rule 237 (Prec5Expr_ -> UExpr .)
    COLONEQ         reduce using rule 237 (Prec5Expr_ -> UExpr .)
    COMMA           reduce using rule 237 (Prec5Expr_ -> UExpr .)
    LBRACE          reduce using rule 237 (Prec5Expr_ -> UExpr .)
    PIPE            reduce using rule 237 (Prec5Expr_ -> UExpr .)
    RBRACK          reduce using rule 237 (Prec5Expr_ -> UExpr .)
    RPAREN          reduce using rule 237 (Prec5Expr_ -> UExpr .)
    RIGHT_ANGLE     reduce using rule 237 (Prec5Expr_ -> UExpr .)
    RBRACE          reduce using rule 237 (Prec5Expr_ -> UExpr .)
    COLON           reduce using rule 237 (Prec5Expr_ -> UExpr .)
    RIGHT_RIGHT     reduce using rule 237 (Prec5Expr_ -> UExpr .)
    DDD             reduce using rule 237 (Prec5Expr_ -> UExpr .)


state 42

    (223) PExprNoParen -> ForCompExpr .

    DOT             reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    LBRACK          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    LEFT_LEFT       reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    LPAREN          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    DIVIDE          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    MOD             reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    SHL             reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    SHR             reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    AMPERS          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    AMPCAR          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    TIMES           reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    PLUS            reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    MINUS           reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    XOR             reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    OR              reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    EQEQ            reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    NOTEQ           reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    LEQ             reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    GEQ             reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    GREAT           reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    LESS            reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    AMPAMP          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    OROR            reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    SEMICOL         reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    LBRACE          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    COMMA           reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    PLUSEQ          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    MINUSEQ         reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    TIMESEQ         reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    DIVIDEEQ        reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    MODEQ           reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    OREQ            reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    AMPEQ           reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    CAREQ           reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    SHL_ASSIGN      reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    SHR_ASSIGN      reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    AMPCAREQ        reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    PLUSPLUS        reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    MINUSMIN        reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    EQUAL           reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    COLONEQ         reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    RPAREN          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    RBRACK          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    PIPE            reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    RIGHT_ANGLE     reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    RBRACE          reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    COLON           reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    RIGHT_RIGHT     reduce using rule 223 (PExprNoParen -> ForCompExpr .)
    DDD             reduce using rule 223 (PExprNoParen -> ForCompExpr .)


state 43

    (198) NonDeclStmt -> SwitchStmt .

    SEMICOL         reduce using rule 198 (NonDeclStmt -> SwitchStmt .)


state 44

    (92) OtherType -> LBRACK . OExpr RBRACK NType
    (273) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (146) OExpr -> .
    (147) OExpr -> . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 146 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 142
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 143
    PExpr                          shift and go to state 60

state 45

    (203) NonDeclStmt -> CONTINUE . ONewName
    (144) ONewName -> .
    (145) ONewName -> . NewName
    (129) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 144 (ONewName -> .)
    IDENTIFIER      shift and go to state 145

    NewName                        shift and go to state 144
    ONewName                       shift and go to state 146

state 46

    (268) UExpr -> NOT . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 147
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 47

    (261) Expr -> CONSTANTS .

    PLUSEQ          reduce using rule 261 (Expr -> CONSTANTS .)
    MINUSEQ         reduce using rule 261 (Expr -> CONSTANTS .)
    TIMESEQ         reduce using rule 261 (Expr -> CONSTANTS .)
    DIVIDEEQ        reduce using rule 261 (Expr -> CONSTANTS .)
    MODEQ           reduce using rule 261 (Expr -> CONSTANTS .)
    OREQ            reduce using rule 261 (Expr -> CONSTANTS .)
    AMPEQ           reduce using rule 261 (Expr -> CONSTANTS .)
    CAREQ           reduce using rule 261 (Expr -> CONSTANTS .)
    SHL_ASSIGN      reduce using rule 261 (Expr -> CONSTANTS .)
    SHR_ASSIGN      reduce using rule 261 (Expr -> CONSTANTS .)
    AMPCAREQ        reduce using rule 261 (Expr -> CONSTANTS .)
    PLUSPLUS        reduce using rule 261 (Expr -> CONSTANTS .)
    MINUSMIN        reduce using rule 261 (Expr -> CONSTANTS .)
    OROR            reduce using rule 261 (Expr -> CONSTANTS .)
    SEMICOL         reduce using rule 261 (Expr -> CONSTANTS .)
    EQUAL           reduce using rule 261 (Expr -> CONSTANTS .)
    COLONEQ         reduce using rule 261 (Expr -> CONSTANTS .)
    COMMA           reduce using rule 261 (Expr -> CONSTANTS .)
    LBRACE          reduce using rule 261 (Expr -> CONSTANTS .)
    RBRACK          reduce using rule 261 (Expr -> CONSTANTS .)
    COLON           reduce using rule 261 (Expr -> CONSTANTS .)
    RIGHT_RIGHT     reduce using rule 261 (Expr -> CONSTANTS .)
    RIGHT_ANGLE     reduce using rule 261 (Expr -> CONSTANTS .)
    DDD             reduce using rule 261 (Expr -> CONSTANTS .)
    RPAREN          reduce using rule 261 (Expr -> CONSTANTS .)
    RBRACE          reduce using rule 261 (Expr -> CONSTANTS .)
    PIPE            reduce using rule 261 (Expr -> CONSTANTS .)


state 48

    (208) PExpr -> PExprNoParen .

    DOT             reduce using rule 208 (PExpr -> PExprNoParen .)
    LBRACK          reduce using rule 208 (PExpr -> PExprNoParen .)
    LEFT_LEFT       reduce using rule 208 (PExpr -> PExprNoParen .)
    LPAREN          reduce using rule 208 (PExpr -> PExprNoParen .)
    DIVIDE          reduce using rule 208 (PExpr -> PExprNoParen .)
    MOD             reduce using rule 208 (PExpr -> PExprNoParen .)
    SHL             reduce using rule 208 (PExpr -> PExprNoParen .)
    SHR             reduce using rule 208 (PExpr -> PExprNoParen .)
    AMPERS          reduce using rule 208 (PExpr -> PExprNoParen .)
    AMPCAR          reduce using rule 208 (PExpr -> PExprNoParen .)
    TIMES           reduce using rule 208 (PExpr -> PExprNoParen .)
    PLUS            reduce using rule 208 (PExpr -> PExprNoParen .)
    MINUS           reduce using rule 208 (PExpr -> PExprNoParen .)
    XOR             reduce using rule 208 (PExpr -> PExprNoParen .)
    OR              reduce using rule 208 (PExpr -> PExprNoParen .)
    EQEQ            reduce using rule 208 (PExpr -> PExprNoParen .)
    NOTEQ           reduce using rule 208 (PExpr -> PExprNoParen .)
    LEQ             reduce using rule 208 (PExpr -> PExprNoParen .)
    GEQ             reduce using rule 208 (PExpr -> PExprNoParen .)
    GREAT           reduce using rule 208 (PExpr -> PExprNoParen .)
    LESS            reduce using rule 208 (PExpr -> PExprNoParen .)
    AMPAMP          reduce using rule 208 (PExpr -> PExprNoParen .)
    PLUSEQ          reduce using rule 208 (PExpr -> PExprNoParen .)
    MINUSEQ         reduce using rule 208 (PExpr -> PExprNoParen .)
    TIMESEQ         reduce using rule 208 (PExpr -> PExprNoParen .)
    DIVIDEEQ        reduce using rule 208 (PExpr -> PExprNoParen .)
    MODEQ           reduce using rule 208 (PExpr -> PExprNoParen .)
    OREQ            reduce using rule 208 (PExpr -> PExprNoParen .)
    AMPEQ           reduce using rule 208 (PExpr -> PExprNoParen .)
    CAREQ           reduce using rule 208 (PExpr -> PExprNoParen .)
    SHL_ASSIGN      reduce using rule 208 (PExpr -> PExprNoParen .)
    SHR_ASSIGN      reduce using rule 208 (PExpr -> PExprNoParen .)
    AMPCAREQ        reduce using rule 208 (PExpr -> PExprNoParen .)
    PLUSPLUS        reduce using rule 208 (PExpr -> PExprNoParen .)
    MINUSMIN        reduce using rule 208 (PExpr -> PExprNoParen .)
    OROR            reduce using rule 208 (PExpr -> PExprNoParen .)
    SEMICOL         reduce using rule 208 (PExpr -> PExprNoParen .)
    LBRACE          reduce using rule 208 (PExpr -> PExprNoParen .)
    EQUAL           reduce using rule 208 (PExpr -> PExprNoParen .)
    COLONEQ         reduce using rule 208 (PExpr -> PExprNoParen .)
    COMMA           reduce using rule 208 (PExpr -> PExprNoParen .)
    RBRACE          reduce using rule 208 (PExpr -> PExprNoParen .)
    RPAREN          reduce using rule 208 (PExpr -> PExprNoParen .)
    PIPE            reduce using rule 208 (PExpr -> PExprNoParen .)
    RBRACK          reduce using rule 208 (PExpr -> PExprNoParen .)
    RIGHT_ANGLE     reduce using rule 208 (PExpr -> PExprNoParen .)
    COLON           reduce using rule 208 (PExpr -> PExprNoParen .)
    RIGHT_RIGHT     reduce using rule 208 (PExpr -> PExprNoParen .)
    DDD             reduce using rule 208 (PExpr -> PExprNoParen .)


state 49

    (96) ChannelType -> CHAN . NewType
    (97) ChannelType -> CHAN . LMINUS NewType
    (224) NewType -> . TYPE

    LMINUS          shift and go to state 148
    TYPE            shift and go to state 61

    NewType                        shift and go to state 149

state 50

    (7) Imports -> Import . SEMICOL

    SEMICOL         shift and go to state 150


state 51

    (236) SwitchStmt -> SWITCH . IfHeader LBRACE CaseBlockList RBRACE
    (74) IfHeader -> . OSimpleStmt
    (75) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (142) OSimpleStmt -> .
    (143) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 142 (OSimpleStmt -> .)
    LBRACE          reduce using rule 142 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 138
    OSimpleStmt                    shift and go to state 151
    Prec3Expr_                     shift and go to state 10
    IfHeader                       shift and go to state 152
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    PExpr                          shift and go to state 60

state 52

    (162) DeclList -> Declaration . SEMICOL

    SEMICOL         shift and go to state 153


state 53

    (270) UExpr -> PLUS . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 154
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 54

    (129) NewName -> IDENTIFIER .
    (183) Name -> IDENTIFIER .

    COLON           reduce using rule 129 (NewName -> IDENTIFIER .)
    DOT             reduce using rule 183 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 183 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 183 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 183 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 183 (Name -> IDENTIFIER .)
    MOD             reduce using rule 183 (Name -> IDENTIFIER .)
    SHL             reduce using rule 183 (Name -> IDENTIFIER .)
    SHR             reduce using rule 183 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 183 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 183 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 183 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 183 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 183 (Name -> IDENTIFIER .)
    XOR             reduce using rule 183 (Name -> IDENTIFIER .)
    OR              reduce using rule 183 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 183 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 183 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 183 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 183 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 183 (Name -> IDENTIFIER .)
    LESS            reduce using rule 183 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 183 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 183 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 183 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 183 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 183 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 183 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 183 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 183 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 183 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 183 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 183 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 183 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 183 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 183 (Name -> IDENTIFIER .)
    OROR            reduce using rule 183 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 183 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 183 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 183 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 183 (Name -> IDENTIFIER .)


state 55

    (220) PExprNoParen -> CompType . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LEFT_LEFT       shift and go to state 155


state 56

    (93) OtherType -> StructType .

    EQUAL           reduce using rule 93 (OtherType -> StructType .)
    SEMICOL         reduce using rule 93 (OtherType -> StructType .)
    RPAREN          reduce using rule 93 (OtherType -> StructType .)
    LBRACE          reduce using rule 93 (OtherType -> StructType .)
    LEFT_ANGLE      reduce using rule 93 (OtherType -> StructType .)
    LEFT_LEFT       reduce using rule 93 (OtherType -> StructType .)
    DDD             reduce using rule 93 (OtherType -> StructType .)
    COMMA           reduce using rule 93 (OtherType -> StructType .)
    COLON           reduce using rule 93 (OtherType -> StructType .)
    COLONEQ         reduce using rule 93 (OtherType -> StructType .)
    RBRACE          reduce using rule 93 (OtherType -> StructType .)
    OR_RIGHT        reduce using rule 93 (OtherType -> StructType .)
    INTEGER         reduce using rule 93 (OtherType -> StructType .)
    FLOAT           reduce using rule 93 (OtherType -> StructType .)
    STRING          reduce using rule 93 (OtherType -> StructType .)


state 57

    (3) SourceFile -> cmtlist PackageClause cmtlist DeclList . cmtlist
    (163) DeclList -> DeclList . cmtlist Declaration SEMICOL
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    $end            reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 156

state 58

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports . cmtlist DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist Imports . cmtlist
    (8) Imports -> Imports . cmtlist Import SEMICOL
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 277 (cmtlist -> .)
    IMPORT          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    $end            reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 157

state 59

    (202) NonDeclStmt -> BREAK . ONewName
    (144) ONewName -> .
    (145) ONewName -> . NewName
    (129) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 144 (ONewName -> .)
    IDENTIFIER      shift and go to state 145

    NewName                        shift and go to state 144
    ONewName                       shift and go to state 158

state 60

    (266) UExpr -> PExpr .
    (212) PExprNoParen -> PExpr . DOT IDENTIFIER
    (213) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> PExpr . DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (216) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (221) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (274) PseudoCall -> PExpr . LPAREN RPAREN
    (275) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN

    DIVIDE          reduce using rule 266 (UExpr -> PExpr .)
    MOD             reduce using rule 266 (UExpr -> PExpr .)
    SHL             reduce using rule 266 (UExpr -> PExpr .)
    SHR             reduce using rule 266 (UExpr -> PExpr .)
    AMPERS          reduce using rule 266 (UExpr -> PExpr .)
    AMPCAR          reduce using rule 266 (UExpr -> PExpr .)
    TIMES           reduce using rule 266 (UExpr -> PExpr .)
    PLUS            reduce using rule 266 (UExpr -> PExpr .)
    MINUS           reduce using rule 266 (UExpr -> PExpr .)
    XOR             reduce using rule 266 (UExpr -> PExpr .)
    OR              reduce using rule 266 (UExpr -> PExpr .)
    EQEQ            reduce using rule 266 (UExpr -> PExpr .)
    NOTEQ           reduce using rule 266 (UExpr -> PExpr .)
    LEQ             reduce using rule 266 (UExpr -> PExpr .)
    GEQ             reduce using rule 266 (UExpr -> PExpr .)
    GREAT           reduce using rule 266 (UExpr -> PExpr .)
    LESS            reduce using rule 266 (UExpr -> PExpr .)
    AMPAMP          reduce using rule 266 (UExpr -> PExpr .)
    PLUSEQ          reduce using rule 266 (UExpr -> PExpr .)
    MINUSEQ         reduce using rule 266 (UExpr -> PExpr .)
    TIMESEQ         reduce using rule 266 (UExpr -> PExpr .)
    DIVIDEEQ        reduce using rule 266 (UExpr -> PExpr .)
    MODEQ           reduce using rule 266 (UExpr -> PExpr .)
    OREQ            reduce using rule 266 (UExpr -> PExpr .)
    AMPEQ           reduce using rule 266 (UExpr -> PExpr .)
    CAREQ           reduce using rule 266 (UExpr -> PExpr .)
    SHL_ASSIGN      reduce using rule 266 (UExpr -> PExpr .)
    SHR_ASSIGN      reduce using rule 266 (UExpr -> PExpr .)
    AMPCAREQ        reduce using rule 266 (UExpr -> PExpr .)
    PLUSPLUS        reduce using rule 266 (UExpr -> PExpr .)
    MINUSMIN        reduce using rule 266 (UExpr -> PExpr .)
    OROR            reduce using rule 266 (UExpr -> PExpr .)
    SEMICOL         reduce using rule 266 (UExpr -> PExpr .)
    EQUAL           reduce using rule 266 (UExpr -> PExpr .)
    COLONEQ         reduce using rule 266 (UExpr -> PExpr .)
    COMMA           reduce using rule 266 (UExpr -> PExpr .)
    LBRACE          reduce using rule 266 (UExpr -> PExpr .)
    PIPE            reduce using rule 266 (UExpr -> PExpr .)
    RBRACK          reduce using rule 266 (UExpr -> PExpr .)
    RPAREN          reduce using rule 266 (UExpr -> PExpr .)
    RIGHT_ANGLE     reduce using rule 266 (UExpr -> PExpr .)
    RBRACE          reduce using rule 266 (UExpr -> PExpr .)
    COLON           reduce using rule 266 (UExpr -> PExpr .)
    RIGHT_RIGHT     reduce using rule 266 (UExpr -> PExpr .)
    DDD             reduce using rule 266 (UExpr -> PExpr .)
    DOT             shift and go to state 162
    LBRACK          shift and go to state 159
    LEFT_LEFT       shift and go to state 161
    LPAREN          shift and go to state 160


state 61

    (224) NewType -> TYPE .

    LPAREN          reduce using rule 224 (NewType -> TYPE .)
    IDENTIFIER      reduce using rule 224 (NewType -> TYPE .)
    SEMICOL         reduce using rule 224 (NewType -> TYPE .)
    RPAREN          reduce using rule 224 (NewType -> TYPE .)
    COMMA           reduce using rule 224 (NewType -> TYPE .)
    OR_RIGHT        reduce using rule 224 (NewType -> TYPE .)
    LEFT_ANGLE      reduce using rule 224 (NewType -> TYPE .)
    LBRACE          reduce using rule 224 (NewType -> TYPE .)
    EQUAL           reduce using rule 224 (NewType -> TYPE .)
    DDD             reduce using rule 224 (NewType -> TYPE .)
    COLON           reduce using rule 224 (NewType -> TYPE .)
    COLONEQ         reduce using rule 224 (NewType -> TYPE .)
    LEFT_LEFT       reduce using rule 224 (NewType -> TYPE .)
    INTEGER         reduce using rule 224 (NewType -> TYPE .)
    FLOAT           reduce using rule 224 (NewType -> TYPE .)
    STRING          reduce using rule 224 (NewType -> TYPE .)
    RBRACE          reduce using rule 224 (NewType -> TYPE .)


state 62

    (225) ConvType -> FuncType .
    (150) FuncLiteralDecl -> FuncType .

    LEFT_ANGLE      reduce using rule 225 (ConvType -> FuncType .)
    LBRACE          reduce using rule 150 (FuncLiteralDecl -> FuncType .)


state 63

    (196) NonDeclStmt -> SimpleStmt .

    SEMICOL         reduce using rule 196 (NonDeclStmt -> SimpleStmt .)


state 64

    (197) NonDeclStmt -> ForStmt .

    SEMICOL         reduce using rule 197 (NonDeclStmt -> ForStmt .)


state 65

    (28) CommonDecl -> NewType . TypeDecl
    (29) CommonDecl -> NewType . LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> NewType . LPAREN RPAREN
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    LPAREN          shift and go to state 164
    IDENTIFIER      shift and go to state 166

    TypeDecl                       shift and go to state 163
    TypeDeclName                   shift and go to state 165

state 66

    (204) NonDeclStmt -> GOTO . NewName
    (129) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 145

    NewName                        shift and go to state 167

state 67

    (263) Expr -> Arrayexp .

    PLUSEQ          reduce using rule 263 (Expr -> Arrayexp .)
    MINUSEQ         reduce using rule 263 (Expr -> Arrayexp .)
    TIMESEQ         reduce using rule 263 (Expr -> Arrayexp .)
    DIVIDEEQ        reduce using rule 263 (Expr -> Arrayexp .)
    MODEQ           reduce using rule 263 (Expr -> Arrayexp .)
    OREQ            reduce using rule 263 (Expr -> Arrayexp .)
    AMPEQ           reduce using rule 263 (Expr -> Arrayexp .)
    CAREQ           reduce using rule 263 (Expr -> Arrayexp .)
    SHL_ASSIGN      reduce using rule 263 (Expr -> Arrayexp .)
    SHR_ASSIGN      reduce using rule 263 (Expr -> Arrayexp .)
    AMPCAREQ        reduce using rule 263 (Expr -> Arrayexp .)
    PLUSPLUS        reduce using rule 263 (Expr -> Arrayexp .)
    MINUSMIN        reduce using rule 263 (Expr -> Arrayexp .)
    OROR            reduce using rule 263 (Expr -> Arrayexp .)
    SEMICOL         reduce using rule 263 (Expr -> Arrayexp .)
    EQUAL           reduce using rule 263 (Expr -> Arrayexp .)
    COLONEQ         reduce using rule 263 (Expr -> Arrayexp .)
    COMMA           reduce using rule 263 (Expr -> Arrayexp .)
    LBRACE          reduce using rule 263 (Expr -> Arrayexp .)
    RBRACK          reduce using rule 263 (Expr -> Arrayexp .)
    COLON           reduce using rule 263 (Expr -> Arrayexp .)
    RIGHT_RIGHT     reduce using rule 263 (Expr -> Arrayexp .)
    RIGHT_ANGLE     reduce using rule 263 (Expr -> Arrayexp .)
    DDD             reduce using rule 263 (Expr -> Arrayexp .)
    RPAREN          reduce using rule 263 (Expr -> Arrayexp .)
    RBRACE          reduce using rule 263 (Expr -> Arrayexp .)
    PIPE            reduce using rule 263 (Expr -> Arrayexp .)


state 68

    (211) PExprNoParen -> Name .

    DOT             reduce using rule 211 (PExprNoParen -> Name .)
    LBRACK          reduce using rule 211 (PExprNoParen -> Name .)
    LEFT_LEFT       reduce using rule 211 (PExprNoParen -> Name .)
    LPAREN          reduce using rule 211 (PExprNoParen -> Name .)
    DIVIDE          reduce using rule 211 (PExprNoParen -> Name .)
    MOD             reduce using rule 211 (PExprNoParen -> Name .)
    SHL             reduce using rule 211 (PExprNoParen -> Name .)
    SHR             reduce using rule 211 (PExprNoParen -> Name .)
    AMPERS          reduce using rule 211 (PExprNoParen -> Name .)
    AMPCAR          reduce using rule 211 (PExprNoParen -> Name .)
    TIMES           reduce using rule 211 (PExprNoParen -> Name .)
    PLUS            reduce using rule 211 (PExprNoParen -> Name .)
    MINUS           reduce using rule 211 (PExprNoParen -> Name .)
    XOR             reduce using rule 211 (PExprNoParen -> Name .)
    OR              reduce using rule 211 (PExprNoParen -> Name .)
    EQEQ            reduce using rule 211 (PExprNoParen -> Name .)
    NOTEQ           reduce using rule 211 (PExprNoParen -> Name .)
    LEQ             reduce using rule 211 (PExprNoParen -> Name .)
    GEQ             reduce using rule 211 (PExprNoParen -> Name .)
    GREAT           reduce using rule 211 (PExprNoParen -> Name .)
    LESS            reduce using rule 211 (PExprNoParen -> Name .)
    AMPAMP          reduce using rule 211 (PExprNoParen -> Name .)
    OROR            reduce using rule 211 (PExprNoParen -> Name .)
    SEMICOL         reduce using rule 211 (PExprNoParen -> Name .)
    LBRACE          reduce using rule 211 (PExprNoParen -> Name .)
    COMMA           reduce using rule 211 (PExprNoParen -> Name .)
    PLUSEQ          reduce using rule 211 (PExprNoParen -> Name .)
    MINUSEQ         reduce using rule 211 (PExprNoParen -> Name .)
    TIMESEQ         reduce using rule 211 (PExprNoParen -> Name .)
    DIVIDEEQ        reduce using rule 211 (PExprNoParen -> Name .)
    MODEQ           reduce using rule 211 (PExprNoParen -> Name .)
    OREQ            reduce using rule 211 (PExprNoParen -> Name .)
    AMPEQ           reduce using rule 211 (PExprNoParen -> Name .)
    CAREQ           reduce using rule 211 (PExprNoParen -> Name .)
    SHL_ASSIGN      reduce using rule 211 (PExprNoParen -> Name .)
    SHR_ASSIGN      reduce using rule 211 (PExprNoParen -> Name .)
    AMPCAREQ        reduce using rule 211 (PExprNoParen -> Name .)
    PLUSPLUS        reduce using rule 211 (PExprNoParen -> Name .)
    MINUSMIN        reduce using rule 211 (PExprNoParen -> Name .)
    EQUAL           reduce using rule 211 (PExprNoParen -> Name .)
    COLONEQ         reduce using rule 211 (PExprNoParen -> Name .)
    RPAREN          reduce using rule 211 (PExprNoParen -> Name .)
    RBRACK          reduce using rule 211 (PExprNoParen -> Name .)
    PIPE            reduce using rule 211 (PExprNoParen -> Name .)
    RIGHT_ANGLE     reduce using rule 211 (PExprNoParen -> Name .)
    RBRACE          reduce using rule 211 (PExprNoParen -> Name .)
    COLON           reduce using rule 211 (PExprNoParen -> Name .)
    RIGHT_RIGHT     reduce using rule 211 (PExprNoParen -> Name .)
    DDD             reduce using rule 211 (PExprNoParen -> Name .)


state 69

    (20) Declaration -> NonDeclStmt .

    SEMICOL         reduce using rule 20 (Declaration -> NonDeclStmt .)


state 70

    (41) SimpleStmt -> Expr .
    (42) SimpleStmt -> Expr . PLUSEQ Expr
    (43) SimpleStmt -> Expr . MINUSEQ Expr
    (44) SimpleStmt -> Expr . TIMESEQ Expr
    (45) SimpleStmt -> Expr . DIVIDEEQ Expr
    (46) SimpleStmt -> Expr . MODEQ Expr
    (47) SimpleStmt -> Expr . OREQ Expr
    (48) SimpleStmt -> Expr . AMPEQ Expr
    (49) SimpleStmt -> Expr . CAREQ Expr
    (50) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (51) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (52) SimpleStmt -> Expr . AMPCAREQ Expr
    (55) SimpleStmt -> Expr . PLUSPLUS
    (56) SimpleStmt -> Expr . MINUSMIN
    (260) Expr -> Expr . OROR Prec2Expr_
    (152) ExprList -> Expr .

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 171
    MINUSEQ         shift and go to state 175
    TIMESEQ         shift and go to state 170
    DIVIDEEQ        shift and go to state 181
    MODEQ           shift and go to state 172
    OREQ            shift and go to state 174
    AMPEQ           shift and go to state 177
    CAREQ           shift and go to state 169
    SHL_ASSIGN      shift and go to state 179
    SHR_ASSIGN      shift and go to state 173
    AMPCAREQ        shift and go to state 178
    PLUSPLUS        shift and go to state 180
    MINUSMIN        shift and go to state 176
    OROR            shift and go to state 168
    EQUAL           reduce using rule 152 (ExprList -> Expr .)
    COLONEQ         reduce using rule 152 (ExprList -> Expr .)
    COMMA           reduce using rule 152 (ExprList -> Expr .)


state 71

    (272) UExpr -> XOR . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 182
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 72

    (269) UExpr -> TIMES . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 183
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 73

    (209) PExpr -> LPAREN . ExprOrType RPAREN
    (233) ExprOrType -> . Expr
    (234) ExprOrType -> . NonExprType
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (89) NonExprType -> . FuncType
    (90) NonExprType -> . OtherType
    (91) NonExprType -> . TIMES NonExprType
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 189
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 184
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 185
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 186
    OtherType                      shift and go to state 187
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 188
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 74

    (76) IfStmt -> IF . IfHeader LoopBody ElseIfList
    (74) IfHeader -> . OSimpleStmt
    (75) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (142) OSimpleStmt -> .
    (143) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 142 (OSimpleStmt -> .)
    LBRACE          reduce using rule 142 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 138
    OSimpleStmt                    shift and go to state 151
    Prec3Expr_                     shift and go to state 10
    IfHeader                       shift and go to state 190
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    PExpr                          shift and go to state 60

state 75

    (99) StructType -> STRUCT . LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> STRUCT . LBRACE RBRACE

    LBRACE          shift and go to state 191


state 76

    (159) Literal -> FLOAT .

    DOT             reduce using rule 159 (Literal -> FLOAT .)
    LBRACK          reduce using rule 159 (Literal -> FLOAT .)
    LEFT_LEFT       reduce using rule 159 (Literal -> FLOAT .)
    LPAREN          reduce using rule 159 (Literal -> FLOAT .)
    DIVIDE          reduce using rule 159 (Literal -> FLOAT .)
    MOD             reduce using rule 159 (Literal -> FLOAT .)
    SHL             reduce using rule 159 (Literal -> FLOAT .)
    SHR             reduce using rule 159 (Literal -> FLOAT .)
    AMPERS          reduce using rule 159 (Literal -> FLOAT .)
    AMPCAR          reduce using rule 159 (Literal -> FLOAT .)
    TIMES           reduce using rule 159 (Literal -> FLOAT .)
    PLUS            reduce using rule 159 (Literal -> FLOAT .)
    MINUS           reduce using rule 159 (Literal -> FLOAT .)
    XOR             reduce using rule 159 (Literal -> FLOAT .)
    OR              reduce using rule 159 (Literal -> FLOAT .)
    EQEQ            reduce using rule 159 (Literal -> FLOAT .)
    NOTEQ           reduce using rule 159 (Literal -> FLOAT .)
    LEQ             reduce using rule 159 (Literal -> FLOAT .)
    GEQ             reduce using rule 159 (Literal -> FLOAT .)
    GREAT           reduce using rule 159 (Literal -> FLOAT .)
    LESS            reduce using rule 159 (Literal -> FLOAT .)
    AMPAMP          reduce using rule 159 (Literal -> FLOAT .)
    PLUSEQ          reduce using rule 159 (Literal -> FLOAT .)
    MINUSEQ         reduce using rule 159 (Literal -> FLOAT .)
    TIMESEQ         reduce using rule 159 (Literal -> FLOAT .)
    DIVIDEEQ        reduce using rule 159 (Literal -> FLOAT .)
    MODEQ           reduce using rule 159 (Literal -> FLOAT .)
    OREQ            reduce using rule 159 (Literal -> FLOAT .)
    AMPEQ           reduce using rule 159 (Literal -> FLOAT .)
    CAREQ           reduce using rule 159 (Literal -> FLOAT .)
    SHL_ASSIGN      reduce using rule 159 (Literal -> FLOAT .)
    SHR_ASSIGN      reduce using rule 159 (Literal -> FLOAT .)
    AMPCAREQ        reduce using rule 159 (Literal -> FLOAT .)
    PLUSPLUS        reduce using rule 159 (Literal -> FLOAT .)
    MINUSMIN        reduce using rule 159 (Literal -> FLOAT .)
    OROR            reduce using rule 159 (Literal -> FLOAT .)
    SEMICOL         reduce using rule 159 (Literal -> FLOAT .)
    EQUAL           reduce using rule 159 (Literal -> FLOAT .)
    COLONEQ         reduce using rule 159 (Literal -> FLOAT .)
    COMMA           reduce using rule 159 (Literal -> FLOAT .)
    LBRACE          reduce using rule 159 (Literal -> FLOAT .)
    PIPE            reduce using rule 159 (Literal -> FLOAT .)
    RBRACK          reduce using rule 159 (Literal -> FLOAT .)
    RPAREN          reduce using rule 159 (Literal -> FLOAT .)
    RIGHT_ANGLE     reduce using rule 159 (Literal -> FLOAT .)
    RBRACE          reduce using rule 159 (Literal -> FLOAT .)
    COLON           reduce using rule 159 (Literal -> FLOAT .)
    RIGHT_RIGHT     reduce using rule 159 (Literal -> FLOAT .)
    DDD             reduce using rule 159 (Literal -> FLOAT .)


state 77

    (6) PackageClause -> PACKAGE IDENTIFIER SEMICOL .

    COMMENT         reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IMPORT          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANT        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    VAR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FUNCTION        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FALLTHROUGH     reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    BREAK           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONTINUE        reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    GOTO            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    RETURN          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TYPE            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FOR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    SWITCH          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IF              reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANTS       reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IDENTIFIER      reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LMINUS          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LBRACK          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRUCT          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTERFACE       reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CHAN            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    AMPERS          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    NOT             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TIMES           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    PLUS            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MINUS           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    XOR             reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LPAREN          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTEGER         reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FLOAT           reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRING          reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    $end            reduce using rule 6 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)


state 78

    (254) Prec3Expr_ -> Prec3Expr_ GEQ . Prec4Expr_
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 192
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 79

    (253) Prec3Expr_ -> Prec3Expr_ LEQ . Prec4Expr_
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 193
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 80

    (251) Prec3Expr_ -> Prec3Expr_ EQEQ . Prec4Expr_
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 194
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 81

    (256) Prec3Expr_ -> Prec3Expr_ LESS . Prec4Expr_
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 195
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 82

    (255) Prec3Expr_ -> Prec3Expr_ GREAT . Prec4Expr_
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 196
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 83

    (252) Prec3Expr_ -> Prec3Expr_ NOTEQ . Prec4Expr_
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 197
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 84

    (219) PExprNoParen -> ConvType LEFT_ANGLE . Expr OComma RIGHT_ANGLE
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 198
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 85

    (200) NonDeclStmt -> LabelName COLON . Stmt
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 199
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 203
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 86

    (241) Prec5Expr_ -> Prec5Expr_ SHR . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 204
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 87

    (238) Prec5Expr_ -> Prec5Expr_ DIVIDE . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 205
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 88

    (243) Prec5Expr_ -> Prec5Expr_ AMPCAR . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 206
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 89

    (242) Prec5Expr_ -> Prec5Expr_ AMPERS . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 207
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 90

    (244) Prec5Expr_ -> Prec5Expr_ TIMES . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 208
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 91

    (240) Prec5Expr_ -> Prec5Expr_ SHL . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 209
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 92

    (239) Prec5Expr_ -> Prec5Expr_ MOD . UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 210
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 93

    (12) ImportStmt -> ImportHere . STRING

    STRING          shift and go to state 211


state 94

    (16) ImportHere -> IDENTIFIER .

    STRING          reduce using rule 16 (ImportHere -> IDENTIFIER .)


state 95

    (10) Import -> IMPORT LPAREN . ImportStmtList OSemi RPAREN
    (11) Import -> IMPORT LPAREN . RPAREN
    (13) ImportStmtList -> . ImportStmt
    (14) ImportStmtList -> . ImportStmtList SEMICOL ImportStmt
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    RPAREN          shift and go to state 212
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 94
    DOT             shift and go to state 97

    ImportHere                     shift and go to state 93
    ImportStmt                     shift and go to state 214
    ImportStmtList                 shift and go to state 213

state 96

    (9) Import -> IMPORT ImportStmt .

    SEMICOL         reduce using rule 9 (Import -> IMPORT ImportStmt .)


state 97

    (17) ImportHere -> DOT .

    STRING          reduce using rule 17 (ImportHere -> DOT .)


state 98

    (264) Chexpr -> LMINUS IDENTIFIER .

    OROR            reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    RBRACE          reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    COMMA           reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    PLUSEQ          reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    MINUSEQ         reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    TIMESEQ         reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    DIVIDEEQ        reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    MODEQ           reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    OREQ            reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    AMPEQ           reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    CAREQ           reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    AMPCAREQ        reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    PLUSPLUS        reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    MINUSMIN        reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    SEMICOL         reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    EQUAL           reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    COLONEQ         reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    LBRACE          reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    COLON           reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    RBRACK          reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    PIPE            reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    RPAREN          reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    DDD             reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 264 (Chexpr -> LMINUS IDENTIFIER .)


state 99

    (98) ChannelType -> LMINUS CHAN . NewType
    (224) NewType -> . TYPE

    TYPE            shift and go to state 61

    NewType                        shift and go to state 215

state 100

    (258) Prec2Expr_ -> Prec2Expr_ AMPAMP . Prec3Expr_
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 216
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 101

    (151) FuncLiteral -> FuncLiteralDecl LBRACE . cmtlist StmtList cmtlist RBRACE
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 277 (cmtlist -> .)
    LBRACE          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    SEMICOL         reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 217

state 102

    (182) DeclName -> IDENTIFIER .

    EQUAL           reduce using rule 182 (DeclName -> IDENTIFIER .)
    COMMA           reduce using rule 182 (DeclName -> IDENTIFIER .)
    LPAREN          reduce using rule 182 (DeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 182 (DeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 182 (DeclName -> IDENTIFIER .)
    TIMES           reduce using rule 182 (DeclName -> IDENTIFIER .)
    TYPE            reduce using rule 182 (DeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 182 (DeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 182 (DeclName -> IDENTIFIER .)
    CHAN            reduce using rule 182 (DeclName -> IDENTIFIER .)
    LMINUS          reduce using rule 182 (DeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 182 (DeclName -> IDENTIFIER .)
    SEMICOL         reduce using rule 182 (DeclName -> IDENTIFIER .)
    RPAREN          reduce using rule 182 (DeclName -> IDENTIFIER .)


state 103

    (170) DeclNameList -> DeclName .

    EQUAL           reduce using rule 170 (DeclNameList -> DeclName .)
    COMMA           reduce using rule 170 (DeclNameList -> DeclName .)
    LPAREN          reduce using rule 170 (DeclNameList -> DeclName .)
    FUNCTION        reduce using rule 170 (DeclNameList -> DeclName .)
    LBRACK          reduce using rule 170 (DeclNameList -> DeclName .)
    TIMES           reduce using rule 170 (DeclNameList -> DeclName .)
    TYPE            reduce using rule 170 (DeclNameList -> DeclName .)
    STRUCT          reduce using rule 170 (DeclNameList -> DeclName .)
    INTERFACE       reduce using rule 170 (DeclNameList -> DeclName .)
    CHAN            reduce using rule 170 (DeclNameList -> DeclName .)
    LMINUS          reduce using rule 170 (DeclNameList -> DeclName .)
    IDENTIFIER      reduce using rule 170 (DeclNameList -> DeclName .)
    SEMICOL         reduce using rule 170 (DeclNameList -> DeclName .)
    RPAREN          reduce using rule 170 (DeclNameList -> DeclName .)


state 104

    (25) CommonDecl -> VAR VarDecl .

    SEMICOL         reduce using rule 25 (CommonDecl -> VAR VarDecl .)


state 105

    (26) CommonDecl -> VAR LPAREN . VarDeclList OSemi RPAREN
    (27) CommonDecl -> VAR LPAREN . RPAREN
    (164) VarDeclList -> . VarDecl
    (165) VarDeclList -> . VarDeclList SEMICOL VarDecl
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (170) DeclNameList -> . DeclName
    (171) DeclNameList -> . DeclNameList COMMA DeclName
    (182) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 218
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    VarDecl                        shift and go to state 219
    VarDeclList                    shift and go to state 220
    DeclNameList                   shift and go to state 106

state 106

    (31) VarDecl -> DeclNameList . NType
    (32) VarDecl -> DeclNameList . NType EQUAL ExprList
    (33) VarDecl -> DeclNameList . EQUAL ExprList
    (171) DeclNameList -> DeclNameList . COMMA DeclName
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    EQUAL           shift and go to state 222
    COMMA           shift and go to state 228
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    NewType                        shift and go to state 224
    FuncType                       shift and go to state 221
    NType                          shift and go to state 230
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 225
    Name                           shift and go to state 229

state 107

    (153) ExprList -> ExprList COMMA . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 233
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 108

    (54) SimpleStmt -> ExprList COLONEQ . ExprList
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 234
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 109

    (53) SimpleStmt -> ExprList EQUAL . ExprList
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 235
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 110

    (149) OExprList -> ExprList .
    (153) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 149 (OExprList -> ExprList .)
    COMMA           shift and go to state 107


state 111

    (205) NonDeclStmt -> RETURN OExprList .

    SEMICOL         reduce using rule 205 (NonDeclStmt -> RETURN OExprList .)


state 112

    (106) FuncType -> FUNCTION . ArgList FuncRes
    (107) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (108) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 130

    ArgList                        shift and go to state 128

state 113

    (183) Name -> IDENTIFIER .

    DOT             reduce using rule 183 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 183 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 183 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 183 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 183 (Name -> IDENTIFIER .)
    MOD             reduce using rule 183 (Name -> IDENTIFIER .)
    SHL             reduce using rule 183 (Name -> IDENTIFIER .)
    SHR             reduce using rule 183 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 183 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 183 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 183 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 183 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 183 (Name -> IDENTIFIER .)
    XOR             reduce using rule 183 (Name -> IDENTIFIER .)
    OR              reduce using rule 183 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 183 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 183 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 183 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 183 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 183 (Name -> IDENTIFIER .)
    LESS            reduce using rule 183 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 183 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 183 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 183 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 183 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 183 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 183 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 183 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 183 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 183 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 183 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 183 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 183 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 183 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 183 (Name -> IDENTIFIER .)
    OROR            reduce using rule 183 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 183 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 183 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 183 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 183 (Name -> IDENTIFIER .)
    LBRACE          reduce using rule 183 (Name -> IDENTIFIER .)
    PIPE            reduce using rule 183 (Name -> IDENTIFIER .)
    RBRACK          reduce using rule 183 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 183 (Name -> IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 183 (Name -> IDENTIFIER .)
    RBRACE          reduce using rule 183 (Name -> IDENTIFIER .)
    COLON           reduce using rule 183 (Name -> IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 183 (Name -> IDENTIFIER .)
    DDD             reduce using rule 183 (Name -> IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 183 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 183 (Name -> IDENTIFIER .)
    INTEGER         reduce using rule 183 (Name -> IDENTIFIER .)
    FLOAT           reduce using rule 183 (Name -> IDENTIFIER .)
    STRING          reduce using rule 183 (Name -> IDENTIFIER .)


state 114

    (152) ExprList -> Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 152 (ExprList -> Expr .)
    SEMICOL         reduce using rule 152 (ExprList -> Expr .)
    RPAREN          reduce using rule 152 (ExprList -> Expr .)
    LBRACE          reduce using rule 152 (ExprList -> Expr .)
    RBRACE          reduce using rule 152 (ExprList -> Expr .)
    EQUAL           reduce using rule 152 (ExprList -> Expr .)
    COLONEQ         reduce using rule 152 (ExprList -> Expr .)
    OROR            shift and go to state 168


state 115

    (22) CommonDecl -> CONSTANT LPAREN . ConstDecl OSemi RPAREN
    (23) CommonDecl -> CONSTANT LPAREN . ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> CONSTANT LPAREN . RPAREN
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (170) DeclNameList -> . DeclName
    (171) DeclNameList -> . DeclNameList COMMA DeclName
    (182) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 236
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    ConstDecl                      shift and go to state 237
    DeclNameList                   shift and go to state 116

state 116

    (34) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (35) ConstDecl -> DeclNameList . NType
    (36) ConstDecl -> DeclNameList . EQUAL ExprList
    (171) DeclNameList -> DeclNameList . COMMA DeclName
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    EQUAL           shift and go to state 238
    COMMA           shift and go to state 228
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    NewType                        shift and go to state 224
    FuncType                       shift and go to state 221
    NType                          shift and go to state 239
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 225
    Name                           shift and go to state 229

state 117

    (21) CommonDecl -> CONSTANT ConstDecl .

    SEMICOL         reduce using rule 21 (CommonDecl -> CONSTANT ConstDecl .)


state 118

    (226) ConvType -> OtherType .
    (227) CompType -> OtherType .

    LEFT_ANGLE      reduce using rule 226 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 227 (CompType -> OtherType .)


state 119

    (98) ChannelType -> LMINUS . CHAN NewType

    CHAN            shift and go to state 99


state 120

    (267) UExpr -> AMPERS UExpr .

    DIVIDE          reduce using rule 267 (UExpr -> AMPERS UExpr .)
    MOD             reduce using rule 267 (UExpr -> AMPERS UExpr .)
    SHL             reduce using rule 267 (UExpr -> AMPERS UExpr .)
    SHR             reduce using rule 267 (UExpr -> AMPERS UExpr .)
    AMPERS          reduce using rule 267 (UExpr -> AMPERS UExpr .)
    AMPCAR          reduce using rule 267 (UExpr -> AMPERS UExpr .)
    TIMES           reduce using rule 267 (UExpr -> AMPERS UExpr .)
    PLUS            reduce using rule 267 (UExpr -> AMPERS UExpr .)
    MINUS           reduce using rule 267 (UExpr -> AMPERS UExpr .)
    XOR             reduce using rule 267 (UExpr -> AMPERS UExpr .)
    OR              reduce using rule 267 (UExpr -> AMPERS UExpr .)
    EQEQ            reduce using rule 267 (UExpr -> AMPERS UExpr .)
    NOTEQ           reduce using rule 267 (UExpr -> AMPERS UExpr .)
    LEQ             reduce using rule 267 (UExpr -> AMPERS UExpr .)
    GEQ             reduce using rule 267 (UExpr -> AMPERS UExpr .)
    GREAT           reduce using rule 267 (UExpr -> AMPERS UExpr .)
    LESS            reduce using rule 267 (UExpr -> AMPERS UExpr .)
    AMPAMP          reduce using rule 267 (UExpr -> AMPERS UExpr .)
    PLUSEQ          reduce using rule 267 (UExpr -> AMPERS UExpr .)
    MINUSEQ         reduce using rule 267 (UExpr -> AMPERS UExpr .)
    TIMESEQ         reduce using rule 267 (UExpr -> AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 267 (UExpr -> AMPERS UExpr .)
    MODEQ           reduce using rule 267 (UExpr -> AMPERS UExpr .)
    OREQ            reduce using rule 267 (UExpr -> AMPERS UExpr .)
    AMPEQ           reduce using rule 267 (UExpr -> AMPERS UExpr .)
    CAREQ           reduce using rule 267 (UExpr -> AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 267 (UExpr -> AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 267 (UExpr -> AMPERS UExpr .)
    AMPCAREQ        reduce using rule 267 (UExpr -> AMPERS UExpr .)
    PLUSPLUS        reduce using rule 267 (UExpr -> AMPERS UExpr .)
    MINUSMIN        reduce using rule 267 (UExpr -> AMPERS UExpr .)
    OROR            reduce using rule 267 (UExpr -> AMPERS UExpr .)
    SEMICOL         reduce using rule 267 (UExpr -> AMPERS UExpr .)
    EQUAL           reduce using rule 267 (UExpr -> AMPERS UExpr .)
    COLONEQ         reduce using rule 267 (UExpr -> AMPERS UExpr .)
    COMMA           reduce using rule 267 (UExpr -> AMPERS UExpr .)
    LBRACE          reduce using rule 267 (UExpr -> AMPERS UExpr .)
    PIPE            reduce using rule 267 (UExpr -> AMPERS UExpr .)
    RBRACK          reduce using rule 267 (UExpr -> AMPERS UExpr .)
    RPAREN          reduce using rule 267 (UExpr -> AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 267 (UExpr -> AMPERS UExpr .)
    RBRACE          reduce using rule 267 (UExpr -> AMPERS UExpr .)
    COLON           reduce using rule 267 (UExpr -> AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 267 (UExpr -> AMPERS UExpr .)
    DDD             reduce using rule 267 (UExpr -> AMPERS UExpr .)


state 121

    (273) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (92) OtherType -> LBRACK . OExpr RBRACK NType
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (146) OExpr -> .
    (147) OExpr -> . Expr
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    RBRACK          reduce using rule 146 (OExpr -> .)
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 240
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 143
    PExpr                          shift and go to state 60

state 122

    (248) Prec4Expr_ -> Prec4Expr_ XOR . Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 241
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 123

    (249) Prec4Expr_ -> Prec4Expr_ OR . Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 242
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 124

    (246) Prec4Expr_ -> Prec4Expr_ PLUS . Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 243
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 125

    (247) Prec4Expr_ -> Prec4Expr_ MINUS . Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 244
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 126

    (271) UExpr -> MINUS UExpr .

    DIVIDE          reduce using rule 271 (UExpr -> MINUS UExpr .)
    MOD             reduce using rule 271 (UExpr -> MINUS UExpr .)
    SHL             reduce using rule 271 (UExpr -> MINUS UExpr .)
    SHR             reduce using rule 271 (UExpr -> MINUS UExpr .)
    AMPERS          reduce using rule 271 (UExpr -> MINUS UExpr .)
    AMPCAR          reduce using rule 271 (UExpr -> MINUS UExpr .)
    TIMES           reduce using rule 271 (UExpr -> MINUS UExpr .)
    PLUS            reduce using rule 271 (UExpr -> MINUS UExpr .)
    MINUS           reduce using rule 271 (UExpr -> MINUS UExpr .)
    XOR             reduce using rule 271 (UExpr -> MINUS UExpr .)
    OR              reduce using rule 271 (UExpr -> MINUS UExpr .)
    EQEQ            reduce using rule 271 (UExpr -> MINUS UExpr .)
    NOTEQ           reduce using rule 271 (UExpr -> MINUS UExpr .)
    LEQ             reduce using rule 271 (UExpr -> MINUS UExpr .)
    GEQ             reduce using rule 271 (UExpr -> MINUS UExpr .)
    GREAT           reduce using rule 271 (UExpr -> MINUS UExpr .)
    LESS            reduce using rule 271 (UExpr -> MINUS UExpr .)
    AMPAMP          reduce using rule 271 (UExpr -> MINUS UExpr .)
    PLUSEQ          reduce using rule 271 (UExpr -> MINUS UExpr .)
    MINUSEQ         reduce using rule 271 (UExpr -> MINUS UExpr .)
    TIMESEQ         reduce using rule 271 (UExpr -> MINUS UExpr .)
    DIVIDEEQ        reduce using rule 271 (UExpr -> MINUS UExpr .)
    MODEQ           reduce using rule 271 (UExpr -> MINUS UExpr .)
    OREQ            reduce using rule 271 (UExpr -> MINUS UExpr .)
    AMPEQ           reduce using rule 271 (UExpr -> MINUS UExpr .)
    CAREQ           reduce using rule 271 (UExpr -> MINUS UExpr .)
    SHL_ASSIGN      reduce using rule 271 (UExpr -> MINUS UExpr .)
    SHR_ASSIGN      reduce using rule 271 (UExpr -> MINUS UExpr .)
    AMPCAREQ        reduce using rule 271 (UExpr -> MINUS UExpr .)
    PLUSPLUS        reduce using rule 271 (UExpr -> MINUS UExpr .)
    MINUSMIN        reduce using rule 271 (UExpr -> MINUS UExpr .)
    OROR            reduce using rule 271 (UExpr -> MINUS UExpr .)
    SEMICOL         reduce using rule 271 (UExpr -> MINUS UExpr .)
    EQUAL           reduce using rule 271 (UExpr -> MINUS UExpr .)
    COLONEQ         reduce using rule 271 (UExpr -> MINUS UExpr .)
    COMMA           reduce using rule 271 (UExpr -> MINUS UExpr .)
    LBRACE          reduce using rule 271 (UExpr -> MINUS UExpr .)
    PIPE            reduce using rule 271 (UExpr -> MINUS UExpr .)
    RBRACK          reduce using rule 271 (UExpr -> MINUS UExpr .)
    RPAREN          reduce using rule 271 (UExpr -> MINUS UExpr .)
    RIGHT_ANGLE     reduce using rule 271 (UExpr -> MINUS UExpr .)
    RBRACE          reduce using rule 271 (UExpr -> MINUS UExpr .)
    COLON           reduce using rule 271 (UExpr -> MINUS UExpr .)
    RIGHT_RIGHT     reduce using rule 271 (UExpr -> MINUS UExpr .)
    DDD             reduce using rule 271 (UExpr -> MINUS UExpr .)


state 127

    (265) Arrayexp -> OtherType LBRACE . ExprList RBRACE
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 245
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 128

    (106) FuncType -> FUNCTION ArgList . FuncRes
    (108) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (111) FuncRes -> .
    (112) FuncRes -> . FuncRetType
    (113) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (131) FuncRetType -> . FuncType
    (132) FuncRetType -> . OtherType
    (133) FuncRetType -> . PtrType
    (134) FuncRetType -> . DotName
    (135) FuncRetType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    LPAREN          shift and go to state 246
    LEFT_ANGLE      reduce using rule 111 (FuncRes -> .)
    LBRACE          reduce using rule 111 (FuncRes -> .)
    RPAREN          reduce using rule 111 (FuncRes -> .)
    EQUAL           reduce using rule 111 (FuncRes -> .)
    SEMICOL         reduce using rule 111 (FuncRes -> .)
    COMMA           reduce using rule 111 (FuncRes -> .)
    OR_RIGHT        reduce using rule 111 (FuncRes -> .)
    DDD             reduce using rule 111 (FuncRes -> .)
    COLON           reduce using rule 111 (FuncRes -> .)
    COLONEQ         reduce using rule 111 (FuncRes -> .)
    LEFT_LEFT       reduce using rule 111 (FuncRes -> .)
    INTEGER         reduce using rule 111 (FuncRes -> .)
    FLOAT           reduce using rule 111 (FuncRes -> .)
    STRING          reduce using rule 111 (FuncRes -> .)
    RBRACE          reduce using rule 111 (FuncRes -> .)
    LEFT_OR         shift and go to state 252
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    DotName                        shift and go to state 253
    Name                           shift and go to state 229
    FuncType                       shift and go to state 247
    OtherType                      shift and go to state 250
    InterfaceType                  shift and go to state 15
    FuncRes                        shift and go to state 251
    PtrType                        shift and go to state 248
    ChannelType                    shift and go to state 35
    FuncRetType                    shift and go to state 254
    NewType                        shift and go to state 249

state 129

    (103) FuncDecl -> FUNCTION FuncDecl_ . FuncBody
    (109) FuncBody -> .
    (110) FuncBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    SEMICOL         reduce using rule 109 (FuncBody -> .)
    LBRACE          shift and go to state 255

    FuncBody                       shift and go to state 256

state 130

    (107) ArgList -> LPAREN . OArgTypeListOComma RPAREN
    (190) OArgTypeListOComma -> .
    (191) OArgTypeListOComma -> . ArgTypeList OComma
    (188) ArgTypeList -> . ArgType
    (189) ArgTypeList -> . ArgTypeList COMMA ArgType
    (184) ArgType -> . NameOrType
    (185) ArgType -> . IDENTIFIER NameOrType
    (186) ArgType -> . IDENTIFIER DotDotDot
    (187) ArgType -> . DotDotDot
    (235) NameOrType -> . NType
    (206) DotDotDot -> . DDD
    (207) DotDotDot -> . DDD NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    RPAREN          reduce using rule 190 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 262
    DDD             shift and go to state 264
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 221
    ArgTypeList                    shift and go to state 257
    PtrType                        shift and go to state 223
    ArgType                        shift and go to state 258
    NewType                        shift and go to state 224
    OArgTypeListOComma             shift and go to state 259
    DotDotDot                      shift and go to state 260
    NameOrType                     shift and go to state 261
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    NType                          shift and go to state 263
    DotName                        shift and go to state 225

state 131

    (105) FuncDecl_ -> LEFT_OR . OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (190) OArgTypeListOComma -> .
    (191) OArgTypeListOComma -> . ArgTypeList OComma
    (188) ArgTypeList -> . ArgType
    (189) ArgTypeList -> . ArgTypeList COMMA ArgType
    (184) ArgType -> . NameOrType
    (185) ArgType -> . IDENTIFIER NameOrType
    (186) ArgType -> . IDENTIFIER DotDotDot
    (187) ArgType -> . DotDotDot
    (235) NameOrType -> . NType
    (206) DotDotDot -> . DDD
    (207) DotDotDot -> . DDD NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 190 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 262
    DDD             shift and go to state 264
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 221
    ArgTypeList                    shift and go to state 257
    PtrType                        shift and go to state 223
    ArgType                        shift and go to state 258
    NewType                        shift and go to state 224
    OArgTypeListOComma             shift and go to state 265
    DotDotDot                      shift and go to state 260
    NameOrType                     shift and go to state 261
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    NType                          shift and go to state 263
    DotName                        shift and go to state 225

state 132

    (104) FuncDecl_ -> IDENTIFIER . ArgList FuncRes
    (107) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (108) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 130

    ArgList                        shift and go to state 266

state 133

    (69) ForHeader -> OSimpleStmt . SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (70) ForHeader -> OSimpleStmt .

    SEMICOL         shift and go to state 267
    LBRACE          reduce using rule 70 (ForHeader -> OSimpleStmt .)


state 134

    (71) ForHeader -> RangeStmt .

    LBRACE          reduce using rule 71 (ForHeader -> RangeStmt .)


state 135

    (66) RangeStmt -> ExprList . EQUAL RANGE Expr
    (67) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (53) SimpleStmt -> ExprList . EQUAL ExprList
    (54) SimpleStmt -> ExprList . COLONEQ ExprList
    (153) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 268
    COLONEQ         shift and go to state 269
    COMMA           shift and go to state 107


state 136

    (73) ForStmt -> FOR ForBody .

    SEMICOL         reduce using rule 73 (ForStmt -> FOR ForBody .)


state 137

    (68) RangeStmt -> RANGE . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 270
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 138

    (143) OSimpleStmt -> SimpleStmt .

    LBRACE          reduce using rule 143 (OSimpleStmt -> SimpleStmt .)
    SEMICOL         reduce using rule 143 (OSimpleStmt -> SimpleStmt .)


state 139

    (72) ForBody -> ForHeader . LoopBody
    (65) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 271

    LoopBody                       shift and go to state 272

state 140

    (41) SimpleStmt -> Expr .
    (42) SimpleStmt -> Expr . PLUSEQ Expr
    (43) SimpleStmt -> Expr . MINUSEQ Expr
    (44) SimpleStmt -> Expr . TIMESEQ Expr
    (45) SimpleStmt -> Expr . DIVIDEEQ Expr
    (46) SimpleStmt -> Expr . MODEQ Expr
    (47) SimpleStmt -> Expr . OREQ Expr
    (48) SimpleStmt -> Expr . AMPEQ Expr
    (49) SimpleStmt -> Expr . CAREQ Expr
    (50) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (51) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (52) SimpleStmt -> Expr . AMPCAREQ Expr
    (55) SimpleStmt -> Expr . PLUSPLUS
    (56) SimpleStmt -> Expr . MINUSMIN
    (152) ExprList -> Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 171
    MINUSEQ         shift and go to state 175
    TIMESEQ         shift and go to state 170
    DIVIDEEQ        shift and go to state 181
    MODEQ           shift and go to state 172
    OREQ            shift and go to state 174
    AMPEQ           shift and go to state 177
    CAREQ           shift and go to state 169
    SHL_ASSIGN      shift and go to state 179
    SHR_ASSIGN      shift and go to state 173
    AMPCAREQ        shift and go to state 178
    PLUSPLUS        shift and go to state 180
    MINUSMIN        shift and go to state 176
    EQUAL           reduce using rule 152 (ExprList -> Expr .)
    COLONEQ         reduce using rule 152 (ExprList -> Expr .)
    COMMA           reduce using rule 152 (ExprList -> Expr .)
    OROR            shift and go to state 168


state 141

    (101) InterfaceType -> INTERFACE LBRACE . InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> INTERFACE LBRACE . RBRACE
    (116) InterfaceDeclList -> . InterfaceDecl
    (117) InterfaceDeclList -> . InterfaceDeclList SEMICOL InterfaceDecl
    (124) InterfaceDecl -> . NewName InDecl
    (125) InterfaceDecl -> . IDENTIFIER
    (126) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (129) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 273
    IDENTIFIER      shift and go to state 278
    LPAREN          shift and go to state 277

    InterfaceDecl                  shift and go to state 274
    NewName                        shift and go to state 276
    InterfaceDeclList              shift and go to state 275

state 142

    (273) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (147) OExpr -> Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    PIPE            shift and go to state 279
    RBRACK          reduce using rule 147 (OExpr -> Expr .)
    OROR            shift and go to state 168


state 143

    (92) OtherType -> LBRACK OExpr . RBRACK NType

    RBRACK          shift and go to state 280


state 144

    (145) ONewName -> NewName .

    SEMICOL         reduce using rule 145 (ONewName -> NewName .)


state 145

    (129) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 129 (NewName -> IDENTIFIER .)
    COMMA           reduce using rule 129 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 129 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 129 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 129 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 129 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 129 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 129 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 129 (NewName -> IDENTIFIER .)
    CHAN            reduce using rule 129 (NewName -> IDENTIFIER .)
    LMINUS          reduce using rule 129 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 129 (NewName -> IDENTIFIER .)


state 146

    (203) NonDeclStmt -> CONTINUE ONewName .

    SEMICOL         reduce using rule 203 (NonDeclStmt -> CONTINUE ONewName .)


state 147

    (268) UExpr -> NOT UExpr .

    DIVIDE          reduce using rule 268 (UExpr -> NOT UExpr .)
    MOD             reduce using rule 268 (UExpr -> NOT UExpr .)
    SHL             reduce using rule 268 (UExpr -> NOT UExpr .)
    SHR             reduce using rule 268 (UExpr -> NOT UExpr .)
    AMPERS          reduce using rule 268 (UExpr -> NOT UExpr .)
    AMPCAR          reduce using rule 268 (UExpr -> NOT UExpr .)
    TIMES           reduce using rule 268 (UExpr -> NOT UExpr .)
    PLUS            reduce using rule 268 (UExpr -> NOT UExpr .)
    MINUS           reduce using rule 268 (UExpr -> NOT UExpr .)
    XOR             reduce using rule 268 (UExpr -> NOT UExpr .)
    OR              reduce using rule 268 (UExpr -> NOT UExpr .)
    EQEQ            reduce using rule 268 (UExpr -> NOT UExpr .)
    NOTEQ           reduce using rule 268 (UExpr -> NOT UExpr .)
    LEQ             reduce using rule 268 (UExpr -> NOT UExpr .)
    GEQ             reduce using rule 268 (UExpr -> NOT UExpr .)
    GREAT           reduce using rule 268 (UExpr -> NOT UExpr .)
    LESS            reduce using rule 268 (UExpr -> NOT UExpr .)
    AMPAMP          reduce using rule 268 (UExpr -> NOT UExpr .)
    PLUSEQ          reduce using rule 268 (UExpr -> NOT UExpr .)
    MINUSEQ         reduce using rule 268 (UExpr -> NOT UExpr .)
    TIMESEQ         reduce using rule 268 (UExpr -> NOT UExpr .)
    DIVIDEEQ        reduce using rule 268 (UExpr -> NOT UExpr .)
    MODEQ           reduce using rule 268 (UExpr -> NOT UExpr .)
    OREQ            reduce using rule 268 (UExpr -> NOT UExpr .)
    AMPEQ           reduce using rule 268 (UExpr -> NOT UExpr .)
    CAREQ           reduce using rule 268 (UExpr -> NOT UExpr .)
    SHL_ASSIGN      reduce using rule 268 (UExpr -> NOT UExpr .)
    SHR_ASSIGN      reduce using rule 268 (UExpr -> NOT UExpr .)
    AMPCAREQ        reduce using rule 268 (UExpr -> NOT UExpr .)
    PLUSPLUS        reduce using rule 268 (UExpr -> NOT UExpr .)
    MINUSMIN        reduce using rule 268 (UExpr -> NOT UExpr .)
    OROR            reduce using rule 268 (UExpr -> NOT UExpr .)
    SEMICOL         reduce using rule 268 (UExpr -> NOT UExpr .)
    EQUAL           reduce using rule 268 (UExpr -> NOT UExpr .)
    COLONEQ         reduce using rule 268 (UExpr -> NOT UExpr .)
    COMMA           reduce using rule 268 (UExpr -> NOT UExpr .)
    LBRACE          reduce using rule 268 (UExpr -> NOT UExpr .)
    PIPE            reduce using rule 268 (UExpr -> NOT UExpr .)
    RBRACK          reduce using rule 268 (UExpr -> NOT UExpr .)
    RPAREN          reduce using rule 268 (UExpr -> NOT UExpr .)
    RIGHT_ANGLE     reduce using rule 268 (UExpr -> NOT UExpr .)
    RBRACE          reduce using rule 268 (UExpr -> NOT UExpr .)
    COLON           reduce using rule 268 (UExpr -> NOT UExpr .)
    RIGHT_RIGHT     reduce using rule 268 (UExpr -> NOT UExpr .)
    DDD             reduce using rule 268 (UExpr -> NOT UExpr .)


state 148

    (97) ChannelType -> CHAN LMINUS . NewType
    (224) NewType -> . TYPE

    TYPE            shift and go to state 61

    NewType                        shift and go to state 281

state 149

    (96) ChannelType -> CHAN NewType .

    LBRACE          reduce using rule 96 (ChannelType -> CHAN NewType .)
    LEFT_ANGLE      reduce using rule 96 (ChannelType -> CHAN NewType .)
    LEFT_LEFT       reduce using rule 96 (ChannelType -> CHAN NewType .)
    SEMICOL         reduce using rule 96 (ChannelType -> CHAN NewType .)
    RBRACE          reduce using rule 96 (ChannelType -> CHAN NewType .)
    RPAREN          reduce using rule 96 (ChannelType -> CHAN NewType .)
    COLON           reduce using rule 96 (ChannelType -> CHAN NewType .)
    EQUAL           reduce using rule 96 (ChannelType -> CHAN NewType .)
    COLONEQ         reduce using rule 96 (ChannelType -> CHAN NewType .)
    COMMA           reduce using rule 96 (ChannelType -> CHAN NewType .)
    DDD             reduce using rule 96 (ChannelType -> CHAN NewType .)
    INTEGER         reduce using rule 96 (ChannelType -> CHAN NewType .)
    FLOAT           reduce using rule 96 (ChannelType -> CHAN NewType .)
    STRING          reduce using rule 96 (ChannelType -> CHAN NewType .)
    OR_RIGHT        reduce using rule 96 (ChannelType -> CHAN NewType .)


state 150

    (7) Imports -> Import SEMICOL .

    COMMENT         reduce using rule 7 (Imports -> Import SEMICOL .)
    IMPORT          reduce using rule 7 (Imports -> Import SEMICOL .)
    CONSTANT        reduce using rule 7 (Imports -> Import SEMICOL .)
    VAR             reduce using rule 7 (Imports -> Import SEMICOL .)
    FUNCTION        reduce using rule 7 (Imports -> Import SEMICOL .)
    FALLTHROUGH     reduce using rule 7 (Imports -> Import SEMICOL .)
    BREAK           reduce using rule 7 (Imports -> Import SEMICOL .)
    CONTINUE        reduce using rule 7 (Imports -> Import SEMICOL .)
    GOTO            reduce using rule 7 (Imports -> Import SEMICOL .)
    RETURN          reduce using rule 7 (Imports -> Import SEMICOL .)
    TYPE            reduce using rule 7 (Imports -> Import SEMICOL .)
    FOR             reduce using rule 7 (Imports -> Import SEMICOL .)
    SWITCH          reduce using rule 7 (Imports -> Import SEMICOL .)
    IF              reduce using rule 7 (Imports -> Import SEMICOL .)
    CONSTANTS       reduce using rule 7 (Imports -> Import SEMICOL .)
    IDENTIFIER      reduce using rule 7 (Imports -> Import SEMICOL .)
    LMINUS          reduce using rule 7 (Imports -> Import SEMICOL .)
    LBRACK          reduce using rule 7 (Imports -> Import SEMICOL .)
    STRUCT          reduce using rule 7 (Imports -> Import SEMICOL .)
    INTERFACE       reduce using rule 7 (Imports -> Import SEMICOL .)
    CHAN            reduce using rule 7 (Imports -> Import SEMICOL .)
    AMPERS          reduce using rule 7 (Imports -> Import SEMICOL .)
    NOT             reduce using rule 7 (Imports -> Import SEMICOL .)
    TIMES           reduce using rule 7 (Imports -> Import SEMICOL .)
    PLUS            reduce using rule 7 (Imports -> Import SEMICOL .)
    MINUS           reduce using rule 7 (Imports -> Import SEMICOL .)
    XOR             reduce using rule 7 (Imports -> Import SEMICOL .)
    LPAREN          reduce using rule 7 (Imports -> Import SEMICOL .)
    INTEGER         reduce using rule 7 (Imports -> Import SEMICOL .)
    FLOAT           reduce using rule 7 (Imports -> Import SEMICOL .)
    STRING          reduce using rule 7 (Imports -> Import SEMICOL .)
    $end            reduce using rule 7 (Imports -> Import SEMICOL .)


state 151

    (74) IfHeader -> OSimpleStmt .
    (75) IfHeader -> OSimpleStmt . SEMICOL OSimpleStmt

    LBRACE          reduce using rule 74 (IfHeader -> OSimpleStmt .)
    SEMICOL         shift and go to state 282


state 152

    (236) SwitchStmt -> SWITCH IfHeader . LBRACE CaseBlockList RBRACE

    LBRACE          shift and go to state 283


state 153

    (162) DeclList -> Declaration SEMICOL .

    COMMENT         reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    CONSTANT        reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    VAR             reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    FUNCTION        reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    BREAK           reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    CONTINUE        reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    GOTO            reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    RETURN          reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    TYPE            reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    FOR             reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    SWITCH          reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    IF              reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    CONSTANTS       reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    LMINUS          reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    LBRACK          reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    STRUCT          reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    INTERFACE       reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    CHAN            reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    AMPERS          reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    NOT             reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    TIMES           reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    PLUS            reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    MINUS           reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    XOR             reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    LPAREN          reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    INTEGER         reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    FLOAT           reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    STRING          reduce using rule 162 (DeclList -> Declaration SEMICOL .)
    $end            reduce using rule 162 (DeclList -> Declaration SEMICOL .)


state 154

    (270) UExpr -> PLUS UExpr .

    DIVIDE          reduce using rule 270 (UExpr -> PLUS UExpr .)
    MOD             reduce using rule 270 (UExpr -> PLUS UExpr .)
    SHL             reduce using rule 270 (UExpr -> PLUS UExpr .)
    SHR             reduce using rule 270 (UExpr -> PLUS UExpr .)
    AMPERS          reduce using rule 270 (UExpr -> PLUS UExpr .)
    AMPCAR          reduce using rule 270 (UExpr -> PLUS UExpr .)
    TIMES           reduce using rule 270 (UExpr -> PLUS UExpr .)
    PLUS            reduce using rule 270 (UExpr -> PLUS UExpr .)
    MINUS           reduce using rule 270 (UExpr -> PLUS UExpr .)
    XOR             reduce using rule 270 (UExpr -> PLUS UExpr .)
    OR              reduce using rule 270 (UExpr -> PLUS UExpr .)
    EQEQ            reduce using rule 270 (UExpr -> PLUS UExpr .)
    NOTEQ           reduce using rule 270 (UExpr -> PLUS UExpr .)
    LEQ             reduce using rule 270 (UExpr -> PLUS UExpr .)
    GEQ             reduce using rule 270 (UExpr -> PLUS UExpr .)
    GREAT           reduce using rule 270 (UExpr -> PLUS UExpr .)
    LESS            reduce using rule 270 (UExpr -> PLUS UExpr .)
    AMPAMP          reduce using rule 270 (UExpr -> PLUS UExpr .)
    PLUSEQ          reduce using rule 270 (UExpr -> PLUS UExpr .)
    MINUSEQ         reduce using rule 270 (UExpr -> PLUS UExpr .)
    TIMESEQ         reduce using rule 270 (UExpr -> PLUS UExpr .)
    DIVIDEEQ        reduce using rule 270 (UExpr -> PLUS UExpr .)
    MODEQ           reduce using rule 270 (UExpr -> PLUS UExpr .)
    OREQ            reduce using rule 270 (UExpr -> PLUS UExpr .)
    AMPEQ           reduce using rule 270 (UExpr -> PLUS UExpr .)
    CAREQ           reduce using rule 270 (UExpr -> PLUS UExpr .)
    SHL_ASSIGN      reduce using rule 270 (UExpr -> PLUS UExpr .)
    SHR_ASSIGN      reduce using rule 270 (UExpr -> PLUS UExpr .)
    AMPCAREQ        reduce using rule 270 (UExpr -> PLUS UExpr .)
    PLUSPLUS        reduce using rule 270 (UExpr -> PLUS UExpr .)
    MINUSMIN        reduce using rule 270 (UExpr -> PLUS UExpr .)
    OROR            reduce using rule 270 (UExpr -> PLUS UExpr .)
    SEMICOL         reduce using rule 270 (UExpr -> PLUS UExpr .)
    EQUAL           reduce using rule 270 (UExpr -> PLUS UExpr .)
    COLONEQ         reduce using rule 270 (UExpr -> PLUS UExpr .)
    COMMA           reduce using rule 270 (UExpr -> PLUS UExpr .)
    LBRACE          reduce using rule 270 (UExpr -> PLUS UExpr .)
    PIPE            reduce using rule 270 (UExpr -> PLUS UExpr .)
    RBRACK          reduce using rule 270 (UExpr -> PLUS UExpr .)
    RPAREN          reduce using rule 270 (UExpr -> PLUS UExpr .)
    RIGHT_ANGLE     reduce using rule 270 (UExpr -> PLUS UExpr .)
    RBRACE          reduce using rule 270 (UExpr -> PLUS UExpr .)
    COLON           reduce using rule 270 (UExpr -> PLUS UExpr .)
    RIGHT_RIGHT     reduce using rule 270 (UExpr -> PLUS UExpr .)
    DDD             reduce using rule 270 (UExpr -> PLUS UExpr .)


state 155

    (220) PExprNoParen -> CompType LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (180) BracedKeyvalList -> .
    (181) BracedKeyvalList -> . KeyvalList OComma
    (176) KeyvalList -> . Keyval
    (177) KeyvalList -> . BareCompLitExpr
    (178) KeyvalList -> . KeyvalList COMMA Keyval
    (179) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (228) Keyval -> . Expr COLON CompLitExpr
    (229) BareCompLitExpr -> . Expr
    (230) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 180 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 287
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 286
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 288
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 284
    BareCompLitExpr                shift and go to state 289
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 285

state 156

    (3) SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist .
    (163) DeclList -> DeclList cmtlist . Declaration SEMICOL
    (278) cmtlist -> cmtlist . COMMENT
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (103) FuncDecl -> . FUNCTION FuncDecl_ FuncBody
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 3 (SourceFile -> cmtlist PackageClause cmtlist DeclList cmtlist .)
    COMMENT         shift and go to state 4
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 290
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 157

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist . DeclList cmtlist
    (4) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist .
    (8) Imports -> Imports cmtlist . Import SEMICOL
    (278) cmtlist -> cmtlist . COMMENT
    (162) DeclList -> . Declaration SEMICOL
    (163) DeclList -> . DeclList cmtlist Declaration SEMICOL
    (9) Import -> . IMPORT ImportStmt
    (10) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (11) Import -> . IMPORT LPAREN RPAREN
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (103) FuncDecl -> . FUNCTION FuncDecl_ FuncBody
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 4 (SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist .)
    COMMENT         shift and go to state 4
    IMPORT          shift and go to state 18
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    SwitchStmt                     shift and go to state 43
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    OtherType                      shift and go to state 33
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    NewType                        shift and go to state 65
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    IfStmt                         shift and go to state 12
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 52
    ChannelType                    shift and go to state 35
    Import                         shift and go to state 291
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    DeclList                       shift and go to state 292
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 158

    (202) NonDeclStmt -> BREAK ONewName .

    SEMICOL         reduce using rule 202 (NonDeclStmt -> BREAK ONewName .)


state 159

    (215) PExprNoParen -> PExpr LBRACK . Expr RBRACK
    (216) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr COLON OExpr RBRACK
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (146) OExpr -> .
    (147) OExpr -> . Expr
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    COLON           reduce using rule 146 (OExpr -> .)
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 293
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 294
    PExpr                          shift and go to state 60

state 160

    (274) PseudoCall -> PExpr LPAREN . RPAREN
    (275) PseudoCall -> PExpr LPAREN . ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> PExpr LPAREN . ExprOrTypeList DDD OComma RPAREN
    (154) ExprOrTypeList -> . ExprOrType
    (155) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (233) ExprOrType -> . Expr
    (234) ExprOrType -> . NonExprType
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (89) NonExprType -> . FuncType
    (90) NonExprType -> . OtherType
    (91) NonExprType -> . TIMES NonExprType
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (150) FuncLiteralDecl -> . FuncType

    RPAREN          shift and go to state 297
    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 189
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 184
    Prec4Expr_                     shift and go to state 28
    ExprOrTypeList                 shift and go to state 295
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 296
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 186
    OtherType                      shift and go to state 187
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 188
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 161

    (221) PExprNoParen -> PExpr LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (180) BracedKeyvalList -> .
    (181) BracedKeyvalList -> . KeyvalList OComma
    (176) KeyvalList -> . Keyval
    (177) KeyvalList -> . BareCompLitExpr
    (178) KeyvalList -> . KeyvalList COMMA Keyval
    (179) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (228) Keyval -> . Expr COLON CompLitExpr
    (229) BareCompLitExpr -> . Expr
    (230) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 180 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 287
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 286
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 288
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 284
    BareCompLitExpr                shift and go to state 289
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 298

state 162

    (212) PExprNoParen -> PExpr DOT . IDENTIFIER
    (213) PExprNoParen -> PExpr DOT . LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> PExpr DOT . LPAREN NewType RPAREN

    IDENTIFIER      shift and go to state 300
    LPAREN          shift and go to state 299


state 163

    (28) CommonDecl -> NewType TypeDecl .

    SEMICOL         reduce using rule 28 (CommonDecl -> NewType TypeDecl .)


state 164

    (29) CommonDecl -> NewType LPAREN . TypeDeclList OSemi RPAREN
    (30) CommonDecl -> NewType LPAREN . RPAREN
    (168) TypeDeclList -> . TypeDecl
    (169) TypeDeclList -> . TypeDeclList SEMICOL TypeDecl
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    RPAREN          shift and go to state 301
    IDENTIFIER      shift and go to state 166

    TypeDecl                       shift and go to state 303
    TypeDeclList                   shift and go to state 302
    TypeDeclName                   shift and go to state 165

state 165

    (40) TypeDecl -> TypeDeclName . NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    FuncType                       shift and go to state 221
    NType                          shift and go to state 304
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 225
    NewType                        shift and go to state 224

state 166

    (39) TypeDeclName -> IDENTIFIER .

    LPAREN          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    TIMES           reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    TYPE            reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    CHAN            reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    LMINUS          reduce using rule 39 (TypeDeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 39 (TypeDeclName -> IDENTIFIER .)


state 167

    (204) NonDeclStmt -> GOTO NewName .

    SEMICOL         reduce using rule 204 (NonDeclStmt -> GOTO NewName .)


state 168

    (260) Expr -> Expr OROR . Prec2Expr_
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (150) FuncLiteralDecl -> . FuncType
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType

    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    LBRACK          shift and go to state 121
    FUNCTION        shift and go to state 112
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 118
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 305
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 169

    (49) SimpleStmt -> Expr CAREQ . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 306
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 170

    (44) SimpleStmt -> Expr TIMESEQ . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 307
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 171

    (42) SimpleStmt -> Expr PLUSEQ . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 308
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 172

    (46) SimpleStmt -> Expr MODEQ . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 309
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 173

    (51) SimpleStmt -> Expr SHR_ASSIGN . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 310
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 174

    (47) SimpleStmt -> Expr OREQ . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 311
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 175

    (43) SimpleStmt -> Expr MINUSEQ . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 312
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 176

    (56) SimpleStmt -> Expr MINUSMIN .

    SEMICOL         reduce using rule 56 (SimpleStmt -> Expr MINUSMIN .)
    LBRACE          reduce using rule 56 (SimpleStmt -> Expr MINUSMIN .)


state 177

    (48) SimpleStmt -> Expr AMPEQ . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 313
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 178

    (52) SimpleStmt -> Expr AMPCAREQ . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 314
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 179

    (50) SimpleStmt -> Expr SHL_ASSIGN . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 315
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 180

    (55) SimpleStmt -> Expr PLUSPLUS .

    SEMICOL         reduce using rule 55 (SimpleStmt -> Expr PLUSPLUS .)
    LBRACE          reduce using rule 55 (SimpleStmt -> Expr PLUSPLUS .)


state 181

    (45) SimpleStmt -> Expr DIVIDEEQ . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 316
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 182

    (272) UExpr -> XOR UExpr .

    DIVIDE          reduce using rule 272 (UExpr -> XOR UExpr .)
    MOD             reduce using rule 272 (UExpr -> XOR UExpr .)
    SHL             reduce using rule 272 (UExpr -> XOR UExpr .)
    SHR             reduce using rule 272 (UExpr -> XOR UExpr .)
    AMPERS          reduce using rule 272 (UExpr -> XOR UExpr .)
    AMPCAR          reduce using rule 272 (UExpr -> XOR UExpr .)
    TIMES           reduce using rule 272 (UExpr -> XOR UExpr .)
    PLUS            reduce using rule 272 (UExpr -> XOR UExpr .)
    MINUS           reduce using rule 272 (UExpr -> XOR UExpr .)
    XOR             reduce using rule 272 (UExpr -> XOR UExpr .)
    OR              reduce using rule 272 (UExpr -> XOR UExpr .)
    EQEQ            reduce using rule 272 (UExpr -> XOR UExpr .)
    NOTEQ           reduce using rule 272 (UExpr -> XOR UExpr .)
    LEQ             reduce using rule 272 (UExpr -> XOR UExpr .)
    GEQ             reduce using rule 272 (UExpr -> XOR UExpr .)
    GREAT           reduce using rule 272 (UExpr -> XOR UExpr .)
    LESS            reduce using rule 272 (UExpr -> XOR UExpr .)
    AMPAMP          reduce using rule 272 (UExpr -> XOR UExpr .)
    PLUSEQ          reduce using rule 272 (UExpr -> XOR UExpr .)
    MINUSEQ         reduce using rule 272 (UExpr -> XOR UExpr .)
    TIMESEQ         reduce using rule 272 (UExpr -> XOR UExpr .)
    DIVIDEEQ        reduce using rule 272 (UExpr -> XOR UExpr .)
    MODEQ           reduce using rule 272 (UExpr -> XOR UExpr .)
    OREQ            reduce using rule 272 (UExpr -> XOR UExpr .)
    AMPEQ           reduce using rule 272 (UExpr -> XOR UExpr .)
    CAREQ           reduce using rule 272 (UExpr -> XOR UExpr .)
    SHL_ASSIGN      reduce using rule 272 (UExpr -> XOR UExpr .)
    SHR_ASSIGN      reduce using rule 272 (UExpr -> XOR UExpr .)
    AMPCAREQ        reduce using rule 272 (UExpr -> XOR UExpr .)
    PLUSPLUS        reduce using rule 272 (UExpr -> XOR UExpr .)
    MINUSMIN        reduce using rule 272 (UExpr -> XOR UExpr .)
    OROR            reduce using rule 272 (UExpr -> XOR UExpr .)
    SEMICOL         reduce using rule 272 (UExpr -> XOR UExpr .)
    EQUAL           reduce using rule 272 (UExpr -> XOR UExpr .)
    COLONEQ         reduce using rule 272 (UExpr -> XOR UExpr .)
    COMMA           reduce using rule 272 (UExpr -> XOR UExpr .)
    LBRACE          reduce using rule 272 (UExpr -> XOR UExpr .)
    PIPE            reduce using rule 272 (UExpr -> XOR UExpr .)
    RBRACK          reduce using rule 272 (UExpr -> XOR UExpr .)
    RPAREN          reduce using rule 272 (UExpr -> XOR UExpr .)
    RIGHT_ANGLE     reduce using rule 272 (UExpr -> XOR UExpr .)
    RBRACE          reduce using rule 272 (UExpr -> XOR UExpr .)
    COLON           reduce using rule 272 (UExpr -> XOR UExpr .)
    RIGHT_RIGHT     reduce using rule 272 (UExpr -> XOR UExpr .)
    DDD             reduce using rule 272 (UExpr -> XOR UExpr .)


state 183

    (269) UExpr -> TIMES UExpr .

    DIVIDE          reduce using rule 269 (UExpr -> TIMES UExpr .)
    MOD             reduce using rule 269 (UExpr -> TIMES UExpr .)
    SHL             reduce using rule 269 (UExpr -> TIMES UExpr .)
    SHR             reduce using rule 269 (UExpr -> TIMES UExpr .)
    AMPERS          reduce using rule 269 (UExpr -> TIMES UExpr .)
    AMPCAR          reduce using rule 269 (UExpr -> TIMES UExpr .)
    TIMES           reduce using rule 269 (UExpr -> TIMES UExpr .)
    PLUS            reduce using rule 269 (UExpr -> TIMES UExpr .)
    MINUS           reduce using rule 269 (UExpr -> TIMES UExpr .)
    XOR             reduce using rule 269 (UExpr -> TIMES UExpr .)
    OR              reduce using rule 269 (UExpr -> TIMES UExpr .)
    EQEQ            reduce using rule 269 (UExpr -> TIMES UExpr .)
    NOTEQ           reduce using rule 269 (UExpr -> TIMES UExpr .)
    LEQ             reduce using rule 269 (UExpr -> TIMES UExpr .)
    GEQ             reduce using rule 269 (UExpr -> TIMES UExpr .)
    GREAT           reduce using rule 269 (UExpr -> TIMES UExpr .)
    LESS            reduce using rule 269 (UExpr -> TIMES UExpr .)
    AMPAMP          reduce using rule 269 (UExpr -> TIMES UExpr .)
    PLUSEQ          reduce using rule 269 (UExpr -> TIMES UExpr .)
    MINUSEQ         reduce using rule 269 (UExpr -> TIMES UExpr .)
    TIMESEQ         reduce using rule 269 (UExpr -> TIMES UExpr .)
    DIVIDEEQ        reduce using rule 269 (UExpr -> TIMES UExpr .)
    MODEQ           reduce using rule 269 (UExpr -> TIMES UExpr .)
    OREQ            reduce using rule 269 (UExpr -> TIMES UExpr .)
    AMPEQ           reduce using rule 269 (UExpr -> TIMES UExpr .)
    CAREQ           reduce using rule 269 (UExpr -> TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 269 (UExpr -> TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 269 (UExpr -> TIMES UExpr .)
    AMPCAREQ        reduce using rule 269 (UExpr -> TIMES UExpr .)
    PLUSPLUS        reduce using rule 269 (UExpr -> TIMES UExpr .)
    MINUSMIN        reduce using rule 269 (UExpr -> TIMES UExpr .)
    OROR            reduce using rule 269 (UExpr -> TIMES UExpr .)
    SEMICOL         reduce using rule 269 (UExpr -> TIMES UExpr .)
    EQUAL           reduce using rule 269 (UExpr -> TIMES UExpr .)
    COLONEQ         reduce using rule 269 (UExpr -> TIMES UExpr .)
    COMMA           reduce using rule 269 (UExpr -> TIMES UExpr .)
    LBRACE          reduce using rule 269 (UExpr -> TIMES UExpr .)
    PIPE            reduce using rule 269 (UExpr -> TIMES UExpr .)
    RBRACK          reduce using rule 269 (UExpr -> TIMES UExpr .)
    RPAREN          reduce using rule 269 (UExpr -> TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 269 (UExpr -> TIMES UExpr .)
    RBRACE          reduce using rule 269 (UExpr -> TIMES UExpr .)
    COLON           reduce using rule 269 (UExpr -> TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 269 (UExpr -> TIMES UExpr .)
    DDD             reduce using rule 269 (UExpr -> TIMES UExpr .)


state 184

    (89) NonExprType -> FuncType .
    (225) ConvType -> FuncType .
    (150) FuncLiteralDecl -> FuncType .

    COLON           reduce using rule 89 (NonExprType -> FuncType .)
    EQUAL           reduce using rule 89 (NonExprType -> FuncType .)
    COLONEQ         reduce using rule 89 (NonExprType -> FuncType .)
    COMMA           reduce using rule 89 (NonExprType -> FuncType .)
    DDD             reduce using rule 89 (NonExprType -> FuncType .)
    RPAREN          reduce using rule 89 (NonExprType -> FuncType .)
    LEFT_ANGLE      reduce using rule 225 (ConvType -> FuncType .)
    LBRACE          reduce using rule 150 (FuncLiteralDecl -> FuncType .)


state 185

    (209) PExpr -> LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 317


state 186

    (234) ExprOrType -> NonExprType .

    COLON           reduce using rule 234 (ExprOrType -> NonExprType .)
    EQUAL           reduce using rule 234 (ExprOrType -> NonExprType .)
    COLONEQ         reduce using rule 234 (ExprOrType -> NonExprType .)
    COMMA           reduce using rule 234 (ExprOrType -> NonExprType .)
    RPAREN          reduce using rule 234 (ExprOrType -> NonExprType .)
    DDD             reduce using rule 234 (ExprOrType -> NonExprType .)


state 187

    (90) NonExprType -> OtherType .
    (265) Arrayexp -> OtherType . LBRACE ExprList RBRACE
    (226) ConvType -> OtherType .
    (227) CompType -> OtherType .

    COLON           reduce using rule 90 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 90 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 90 (NonExprType -> OtherType .)
    COMMA           reduce using rule 90 (NonExprType -> OtherType .)
    DDD             reduce using rule 90 (NonExprType -> OtherType .)
    RPAREN          reduce using rule 90 (NonExprType -> OtherType .)
    LBRACE          shift and go to state 127
    LEFT_ANGLE      reduce using rule 226 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 227 (CompType -> OtherType .)


state 188

    (233) ExprOrType -> Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    COLON           reduce using rule 233 (ExprOrType -> Expr .)
    EQUAL           reduce using rule 233 (ExprOrType -> Expr .)
    COLONEQ         reduce using rule 233 (ExprOrType -> Expr .)
    COMMA           reduce using rule 233 (ExprOrType -> Expr .)
    RPAREN          reduce using rule 233 (ExprOrType -> Expr .)
    DDD             reduce using rule 233 (ExprOrType -> Expr .)
    OROR            shift and go to state 168


state 189

    (91) NonExprType -> TIMES . NonExprType
    (269) UExpr -> TIMES . UExpr
    (89) NonExprType -> . FuncType
    (90) NonExprType -> . OtherType
    (91) NonExprType -> . TIMES NonExprType
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (150) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 189
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    LPAREN          shift and go to state 73
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 184
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    NonExprType                    shift and go to state 318
    OtherType                      shift and go to state 319
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    FuncLiteralDecl                shift and go to state 21
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 183
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 190

    (76) IfStmt -> IF IfHeader . LoopBody ElseIfList
    (65) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 271

    LoopBody                       shift and go to state 320

state 191

    (99) StructType -> STRUCT LBRACE . StructDeclList OSemi RBRACE
    (100) StructType -> STRUCT LBRACE . RBRACE
    (114) StructDeclList -> . StructDecl
    (115) StructDeclList -> . StructDeclList SEMICOL StructDecl
    (118) StructDecl -> . NewNameList NType OLiteral
    (119) StructDecl -> . Embed OLiteral
    (120) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (121) StructDecl -> . TIMES Embed OLiteral
    (122) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (123) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (174) NewNameList -> . NewName
    (175) NewNameList -> . NewNameList COMMA NewName
    (161) Embed -> . IDENTIFIER
    (129) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 329
    LPAREN          shift and go to state 324
    TIMES           shift and go to state 323
    IDENTIFIER      shift and go to state 327

    NewName                        shift and go to state 321
    StructDecl                     shift and go to state 322
    NewNameList                    shift and go to state 325
    StructDeclList                 shift and go to state 326
    Embed                          shift and go to state 328

state 192

    (254) Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .
    (246) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (247) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (248) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LEQ             reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GEQ             reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GREAT           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LESS            reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MODEQ           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OREQ            reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    CAREQ           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OROR            reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    EQUAL           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COMMA           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RPAREN          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LBRACE          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACK          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PIPE            reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACE          reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLON           reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DDD             reduce using rule 254 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 193

    (253) Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .
    (246) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (247) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (248) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LEQ             reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GEQ             reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GREAT           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LESS            reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MODEQ           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OREQ            reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    CAREQ           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OROR            reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    EQUAL           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COMMA           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RPAREN          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LBRACE          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACK          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PIPE            reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACE          reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLON           reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DDD             reduce using rule 253 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 194

    (251) Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .
    (246) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (247) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (248) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LEQ             reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GEQ             reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GREAT           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LESS            reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MODEQ           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OREQ            reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    CAREQ           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OROR            reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    EQUAL           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COMMA           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RPAREN          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LBRACE          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACK          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PIPE            reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACE          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLON           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DDD             reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 195

    (256) Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .
    (246) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (247) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (248) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    NOTEQ           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LEQ             reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GEQ             reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GREAT           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LESS            reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPAMP          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSEQ          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSEQ         reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    TIMESEQ         reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MODEQ           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OREQ            reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPEQ           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    CAREQ           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPCAREQ        reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSPLUS        reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSMIN        reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OROR            reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SEMICOL         reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    EQUAL           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLONEQ         reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COMMA           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RPAREN          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LBRACE          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACK          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PIPE            reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACE          reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLON           reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DDD             reduce using rule 256 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 196

    (255) Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .
    (246) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (247) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (248) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    NOTEQ           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LEQ             reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GEQ             reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GREAT           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LESS            reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPAMP          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSEQ          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSEQ         reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    TIMESEQ         reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MODEQ           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OREQ            reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPEQ           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    CAREQ           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPCAREQ        reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSPLUS        reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSMIN        reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OROR            reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SEMICOL         reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    EQUAL           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLONEQ         reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COMMA           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RPAREN          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LBRACE          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACK          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PIPE            reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACE          reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLON           reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DDD             reduce using rule 255 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 197

    (252) Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .
    (246) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (247) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (248) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (249) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LEQ             reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GEQ             reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GREAT           reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LESS            reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MODEQ           reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OREQ            reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    CAREQ           reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OROR            reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    EQUAL           reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COMMA           reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RPAREN          reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LBRACE          reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACK          reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PIPE            reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACE          reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLON           reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DDD             reduce using rule 252 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    XOR             shift and go to state 122
    OR              shift and go to state 123


state 198

    (219) PExprNoParen -> ConvType LEFT_ANGLE Expr . OComma RIGHT_ANGLE
    (260) Expr -> Expr . OROR Prec2Expr_
    (138) OComma -> .
    (139) OComma -> . COMMA

    OROR            shift and go to state 168
    RIGHT_ANGLE     reduce using rule 138 (OComma -> .)
    COMMA           shift and go to state 331

    OComma                         shift and go to state 330

state 199

    (200) NonDeclStmt -> LabelName COLON Stmt .

    SEMICOL         reduce using rule 200 (NonDeclStmt -> LabelName COLON Stmt .)


state 200

    (193) Stmt -> CompoundStmt .

    SEMICOL         reduce using rule 193 (Stmt -> CompoundStmt .)


state 201

    (194) Stmt -> CommonDecl .

    SEMICOL         reduce using rule 194 (Stmt -> CommonDecl .)


state 202

    (61) CompoundStmt -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 277 (cmtlist -> .)
    LBRACE          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    SEMICOL         reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 332

state 203

    (195) Stmt -> NonDeclStmt .

    SEMICOL         reduce using rule 195 (Stmt -> NonDeclStmt .)


state 204

    (241) Prec5Expr_ -> Prec5Expr_ SHR UExpr .

    DIVIDE          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MOD             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPERS          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAR          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMES           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUS            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUS           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    XOR             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OR              reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQEQ            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    NOTEQ           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LEQ             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GEQ             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GREAT           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LESS            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPAMP          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSEQ          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSEQ         reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMESEQ         reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DIVIDEEQ        reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MODEQ           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OREQ            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPEQ           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    CAREQ           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL_ASSIGN      reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR_ASSIGN      reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAREQ        reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSPLUS        reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSMIN        reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OROR            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SEMICOL         reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQUAL           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLONEQ         reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COMMA           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LBRACE          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PIPE            reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACK          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RPAREN          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_ANGLE     reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACE          reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLON           reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_RIGHT     reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DDD             reduce using rule 241 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)


state 205

    (238) Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .

    DIVIDE          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MOD             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPERS          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAR          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMES           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUS            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUS           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    XOR             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OR              reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQEQ            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    NOTEQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LEQ             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GEQ             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GREAT           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LESS            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPAMP          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSEQ          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSEQ         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMESEQ         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DIVIDEEQ        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MODEQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OREQ            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPEQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    CAREQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL_ASSIGN      reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR_ASSIGN      reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAREQ        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSPLUS        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSMIN        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OROR            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SEMICOL         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQUAL           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLONEQ         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COMMA           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LBRACE          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PIPE            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACK          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RPAREN          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_ANGLE     reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACE          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLON           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_RIGHT     reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DDD             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)


state 206

    (243) Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .

    DIVIDE          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MOD             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPERS          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAR          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMES           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUS            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUS           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    XOR             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OR              reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQEQ            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    NOTEQ           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LEQ             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GEQ             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GREAT           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LESS            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPAMP          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSEQ          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSEQ         reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMESEQ         reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DIVIDEEQ        reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MODEQ           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OREQ            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPEQ           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    CAREQ           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL_ASSIGN      reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR_ASSIGN      reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAREQ        reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSPLUS        reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSMIN        reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OROR            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SEMICOL         reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQUAL           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLONEQ         reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COMMA           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LBRACE          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PIPE            reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACK          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RPAREN          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_ANGLE     reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACE          reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLON           reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_RIGHT     reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DDD             reduce using rule 243 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)


state 207

    (242) Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .

    DIVIDE          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MOD             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPERS          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAR          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMES           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUS            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUS           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    XOR             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OR              reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQEQ            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    NOTEQ           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LEQ             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GEQ             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GREAT           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LESS            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPAMP          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSEQ          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSEQ         reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMESEQ         reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MODEQ           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OREQ            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPEQ           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    CAREQ           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAREQ        reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSPLUS        reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSMIN        reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OROR            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SEMICOL         reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQUAL           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLONEQ         reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COMMA           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LBRACE          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PIPE            reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACK          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RPAREN          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACE          reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLON           reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DDD             reduce using rule 242 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)


state 208

    (244) Prec5Expr_ -> Prec5Expr_ TIMES UExpr .

    DIVIDE          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MOD             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPERS          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAR          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMES           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUS            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUS           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    XOR             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OR              reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQEQ            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    NOTEQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LEQ             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GEQ             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GREAT           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LESS            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPAMP          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSEQ          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSEQ         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMESEQ         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DIVIDEEQ        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MODEQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OREQ            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPEQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    CAREQ           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAREQ        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSPLUS        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSMIN        reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OROR            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SEMICOL         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQUAL           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLONEQ         reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COMMA           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LBRACE          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PIPE            reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACK          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RPAREN          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACE          reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLON           reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DDD             reduce using rule 244 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)


state 209

    (240) Prec5Expr_ -> Prec5Expr_ SHL UExpr .

    DIVIDE          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MOD             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPERS          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAR          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMES           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUS            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUS           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    XOR             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OR              reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQEQ            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    NOTEQ           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LEQ             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GEQ             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GREAT           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LESS            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPAMP          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSEQ          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSEQ         reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMESEQ         reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DIVIDEEQ        reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MODEQ           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OREQ            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPEQ           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    CAREQ           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL_ASSIGN      reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR_ASSIGN      reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAREQ        reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSPLUS        reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSMIN        reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OROR            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SEMICOL         reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQUAL           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLONEQ         reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COMMA           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LBRACE          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PIPE            reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACK          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RPAREN          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_ANGLE     reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACE          reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLON           reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_RIGHT     reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DDD             reduce using rule 240 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)


state 210

    (239) Prec5Expr_ -> Prec5Expr_ MOD UExpr .

    DIVIDE          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MOD             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPERS          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAR          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMES           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUS            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUS           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    XOR             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OR              reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQEQ            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    NOTEQ           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LEQ             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GEQ             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GREAT           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LESS            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPAMP          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSEQ          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSEQ         reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMESEQ         reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DIVIDEEQ        reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MODEQ           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OREQ            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPEQ           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    CAREQ           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL_ASSIGN      reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR_ASSIGN      reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAREQ        reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSPLUS        reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSMIN        reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OROR            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SEMICOL         reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQUAL           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLONEQ         reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COMMA           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LBRACE          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PIPE            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACK          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RPAREN          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_ANGLE     reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACE          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLON           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_RIGHT     reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DDD             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)


state 211

    (12) ImportStmt -> ImportHere STRING .

    SEMICOL         reduce using rule 12 (ImportStmt -> ImportHere STRING .)
    RPAREN          reduce using rule 12 (ImportStmt -> ImportHere STRING .)


state 212

    (11) Import -> IMPORT LPAREN RPAREN .

    SEMICOL         reduce using rule 11 (Import -> IMPORT LPAREN RPAREN .)


state 213

    (10) Import -> IMPORT LPAREN ImportStmtList . OSemi RPAREN
    (14) ImportStmtList -> ImportStmtList . SEMICOL ImportStmt
    (140) OSemi -> .
    (141) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 333
    RPAREN          reduce using rule 140 (OSemi -> .)

    OSemi                          shift and go to state 334

state 214

    (13) ImportStmtList -> ImportStmt .

    SEMICOL         reduce using rule 13 (ImportStmtList -> ImportStmt .)
    RPAREN          reduce using rule 13 (ImportStmtList -> ImportStmt .)


state 215

    (98) ChannelType -> LMINUS CHAN NewType .

    LBRACE          reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    LEFT_ANGLE      reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    LEFT_LEFT       reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    SEMICOL         reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    RBRACE          reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    RPAREN          reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    COLON           reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    EQUAL           reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    COLONEQ         reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    COMMA           reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    DDD             reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    INTEGER         reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    FLOAT           reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    STRING          reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)
    OR_RIGHT        reduce using rule 98 (ChannelType -> LMINUS CHAN NewType .)


state 216

    (258) Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .
    (251) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (252) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (254) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (255) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (256) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OROR            reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    LBRACE          reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACK          reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SEMICOL         reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQUAL           reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLONEQ         reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COMMA           reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACE          reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RPAREN          reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLON           reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSEQ          reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSEQ         reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    TIMESEQ         reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MODEQ           reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OREQ            reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPEQ           reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    CAREQ           reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPCAREQ        reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSPLUS        reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSMIN        reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PIPE            reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DDD             reduce using rule 258 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQEQ            shift and go to state 80
    NOTEQ           shift and go to state 83
    LEQ             shift and go to state 79
    GEQ             shift and go to state 78
    GREAT           shift and go to state 82
    LESS            shift and go to state 81


state 217

    (151) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist . StmtList cmtlist RBRACE
    (278) cmtlist -> cmtlist . COMMENT
    (172) StmtList -> . Stmt SEMICOL
    (173) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 336
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    NonDeclStmt                    shift and go to state 203
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 335
    NewType                        shift and go to state 65
    FuncLiteralDecl                shift and go to state 21
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NewName                        shift and go to state 34
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 218

    (27) CommonDecl -> VAR LPAREN RPAREN .

    SEMICOL         reduce using rule 27 (CommonDecl -> VAR LPAREN RPAREN .)


state 219

    (164) VarDeclList -> VarDecl .

    SEMICOL         reduce using rule 164 (VarDeclList -> VarDecl .)
    RPAREN          reduce using rule 164 (VarDeclList -> VarDecl .)


state 220

    (26) CommonDecl -> VAR LPAREN VarDeclList . OSemi RPAREN
    (165) VarDeclList -> VarDeclList . SEMICOL VarDecl
    (140) OSemi -> .
    (141) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 337
    RPAREN          reduce using rule 140 (OSemi -> .)

    OSemi                          shift and go to state 338

state 221

    (83) NType -> FuncType .

    COMMA           reduce using rule 83 (NType -> FuncType .)
    RPAREN          reduce using rule 83 (NType -> FuncType .)
    OR_RIGHT        reduce using rule 83 (NType -> FuncType .)
    EQUAL           reduce using rule 83 (NType -> FuncType .)
    SEMICOL         reduce using rule 83 (NType -> FuncType .)
    LEFT_ANGLE      reduce using rule 83 (NType -> FuncType .)
    LBRACE          reduce using rule 83 (NType -> FuncType .)
    DDD             reduce using rule 83 (NType -> FuncType .)
    COLON           reduce using rule 83 (NType -> FuncType .)
    COLONEQ         reduce using rule 83 (NType -> FuncType .)
    LEFT_LEFT       reduce using rule 83 (NType -> FuncType .)
    INTEGER         reduce using rule 83 (NType -> FuncType .)
    FLOAT           reduce using rule 83 (NType -> FuncType .)
    STRING          reduce using rule 83 (NType -> FuncType .)
    RBRACE          reduce using rule 83 (NType -> FuncType .)


state 222

    (33) VarDecl -> DeclNameList EQUAL . ExprList
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 339
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 223

    (85) NType -> PtrType .

    COMMA           reduce using rule 85 (NType -> PtrType .)
    RPAREN          reduce using rule 85 (NType -> PtrType .)
    OR_RIGHT        reduce using rule 85 (NType -> PtrType .)
    EQUAL           reduce using rule 85 (NType -> PtrType .)
    SEMICOL         reduce using rule 85 (NType -> PtrType .)
    LEFT_ANGLE      reduce using rule 85 (NType -> PtrType .)
    LBRACE          reduce using rule 85 (NType -> PtrType .)
    DDD             reduce using rule 85 (NType -> PtrType .)
    COLON           reduce using rule 85 (NType -> PtrType .)
    COLONEQ         reduce using rule 85 (NType -> PtrType .)
    LEFT_LEFT       reduce using rule 85 (NType -> PtrType .)
    INTEGER         reduce using rule 85 (NType -> PtrType .)
    FLOAT           reduce using rule 85 (NType -> PtrType .)
    STRING          reduce using rule 85 (NType -> PtrType .)
    RBRACE          reduce using rule 85 (NType -> PtrType .)


state 224

    (88) NType -> NewType .

    COMMA           reduce using rule 88 (NType -> NewType .)
    RPAREN          reduce using rule 88 (NType -> NewType .)
    OR_RIGHT        reduce using rule 88 (NType -> NewType .)
    EQUAL           reduce using rule 88 (NType -> NewType .)
    SEMICOL         reduce using rule 88 (NType -> NewType .)
    LEFT_ANGLE      reduce using rule 88 (NType -> NewType .)
    LBRACE          reduce using rule 88 (NType -> NewType .)
    DDD             reduce using rule 88 (NType -> NewType .)
    COLON           reduce using rule 88 (NType -> NewType .)
    COLONEQ         reduce using rule 88 (NType -> NewType .)
    LEFT_LEFT       reduce using rule 88 (NType -> NewType .)
    INTEGER         reduce using rule 88 (NType -> NewType .)
    FLOAT           reduce using rule 88 (NType -> NewType .)
    STRING          reduce using rule 88 (NType -> NewType .)
    RBRACE          reduce using rule 88 (NType -> NewType .)


state 225

    (86) NType -> DotName .

    COMMA           reduce using rule 86 (NType -> DotName .)
    RPAREN          reduce using rule 86 (NType -> DotName .)
    OR_RIGHT        reduce using rule 86 (NType -> DotName .)
    EQUAL           reduce using rule 86 (NType -> DotName .)
    SEMICOL         reduce using rule 86 (NType -> DotName .)
    LEFT_ANGLE      reduce using rule 86 (NType -> DotName .)
    LBRACE          reduce using rule 86 (NType -> DotName .)
    DDD             reduce using rule 86 (NType -> DotName .)
    COLON           reduce using rule 86 (NType -> DotName .)
    COLONEQ         reduce using rule 86 (NType -> DotName .)
    LEFT_LEFT       reduce using rule 86 (NType -> DotName .)
    INTEGER         reduce using rule 86 (NType -> DotName .)
    FLOAT           reduce using rule 86 (NType -> DotName .)
    STRING          reduce using rule 86 (NType -> DotName .)
    RBRACE          reduce using rule 86 (NType -> DotName .)


state 226

    (130) PtrType -> TIMES . NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    FuncType                       shift and go to state 221
    NType                          shift and go to state 340
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 225
    NewType                        shift and go to state 224

state 227

    (84) NType -> OtherType .

    COMMA           reduce using rule 84 (NType -> OtherType .)
    RPAREN          reduce using rule 84 (NType -> OtherType .)
    OR_RIGHT        reduce using rule 84 (NType -> OtherType .)
    EQUAL           reduce using rule 84 (NType -> OtherType .)
    SEMICOL         reduce using rule 84 (NType -> OtherType .)
    LEFT_ANGLE      reduce using rule 84 (NType -> OtherType .)
    LBRACE          reduce using rule 84 (NType -> OtherType .)
    DDD             reduce using rule 84 (NType -> OtherType .)
    COLON           reduce using rule 84 (NType -> OtherType .)
    COLONEQ         reduce using rule 84 (NType -> OtherType .)
    LEFT_LEFT       reduce using rule 84 (NType -> OtherType .)
    INTEGER         reduce using rule 84 (NType -> OtherType .)
    FLOAT           reduce using rule 84 (NType -> OtherType .)
    STRING          reduce using rule 84 (NType -> OtherType .)
    RBRACE          reduce using rule 84 (NType -> OtherType .)


state 228

    (171) DeclNameList -> DeclNameList COMMA . DeclName
    (182) DeclName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 341

state 229

    (136) DotName -> Name .
    (137) DotName -> Name . DOT IDENTIFIER

    EQUAL           reduce using rule 136 (DotName -> Name .)
    SEMICOL         reduce using rule 136 (DotName -> Name .)
    RPAREN          reduce using rule 136 (DotName -> Name .)
    LEFT_ANGLE      reduce using rule 136 (DotName -> Name .)
    LBRACE          reduce using rule 136 (DotName -> Name .)
    COMMA           reduce using rule 136 (DotName -> Name .)
    OR_RIGHT        reduce using rule 136 (DotName -> Name .)
    DDD             reduce using rule 136 (DotName -> Name .)
    COLON           reduce using rule 136 (DotName -> Name .)
    COLONEQ         reduce using rule 136 (DotName -> Name .)
    LEFT_LEFT       reduce using rule 136 (DotName -> Name .)
    INTEGER         reduce using rule 136 (DotName -> Name .)
    FLOAT           reduce using rule 136 (DotName -> Name .)
    STRING          reduce using rule 136 (DotName -> Name .)
    RBRACE          reduce using rule 136 (DotName -> Name .)
    DOT             shift and go to state 342


state 230

    (31) VarDecl -> DeclNameList NType .
    (32) VarDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 31 (VarDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 31 (VarDecl -> DeclNameList NType .)
    EQUAL           shift and go to state 343


state 231

    (87) NType -> LPAREN . NType RPAREN
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    FuncType                       shift and go to state 221
    NType                          shift and go to state 344
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 225
    NewType                        shift and go to state 224

state 232

    (92) OtherType -> LBRACK . OExpr RBRACK NType
    (146) OExpr -> .
    (147) OExpr -> . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 146 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 345
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 143
    PExpr                          shift and go to state 60

state 233

    (153) ExprList -> ExprList COMMA Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 153 (ExprList -> ExprList COMMA Expr .)
    SEMICOL         reduce using rule 153 (ExprList -> ExprList COMMA Expr .)
    RPAREN          reduce using rule 153 (ExprList -> ExprList COMMA Expr .)
    EQUAL           reduce using rule 153 (ExprList -> ExprList COMMA Expr .)
    COLONEQ         reduce using rule 153 (ExprList -> ExprList COMMA Expr .)
    LBRACE          reduce using rule 153 (ExprList -> ExprList COMMA Expr .)
    RBRACE          reduce using rule 153 (ExprList -> ExprList COMMA Expr .)
    OROR            shift and go to state 168


state 234

    (54) SimpleStmt -> ExprList COLONEQ ExprList .
    (153) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 54 (SimpleStmt -> ExprList COLONEQ ExprList .)
    LBRACE          reduce using rule 54 (SimpleStmt -> ExprList COLONEQ ExprList .)
    COMMA           shift and go to state 107


state 235

    (53) SimpleStmt -> ExprList EQUAL ExprList .
    (153) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 53 (SimpleStmt -> ExprList EQUAL ExprList .)
    LBRACE          reduce using rule 53 (SimpleStmt -> ExprList EQUAL ExprList .)
    COMMA           shift and go to state 107


state 236

    (24) CommonDecl -> CONSTANT LPAREN RPAREN .

    SEMICOL         reduce using rule 24 (CommonDecl -> CONSTANT LPAREN RPAREN .)


state 237

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl . OSemi RPAREN
    (23) CommonDecl -> CONSTANT LPAREN ConstDecl . SEMICOL ConstDeclList OSemi RPAREN
    (140) OSemi -> .
    (141) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 347
    RPAREN          reduce using rule 140 (OSemi -> .)

    OSemi                          shift and go to state 346

state 238

    (36) ConstDecl -> DeclNameList EQUAL . ExprList
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 348
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 239

    (34) ConstDecl -> DeclNameList NType . EQUAL ExprList
    (35) ConstDecl -> DeclNameList NType .

    EQUAL           shift and go to state 349
    SEMICOL         reduce using rule 35 (ConstDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 35 (ConstDecl -> DeclNameList NType .)


state 240

    (273) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (260) Expr -> Expr . OROR Prec2Expr_
    (147) OExpr -> Expr .

    PIPE            shift and go to state 279
    OROR            shift and go to state 168
    RBRACK          reduce using rule 147 (OExpr -> Expr .)


state 241

    (248) Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .
    (238) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (239) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (240) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (241) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (242) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (243) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (244) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUS           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    XOR             reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OR              reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQEQ            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    NOTEQ           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LEQ             reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GEQ             reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GREAT           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LESS            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPAMP          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OROR            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SEMICOL         reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LBRACE          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COMMA           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RPAREN          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQUAL           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLONEQ         reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACE          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSEQ          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSEQ         reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    TIMESEQ         reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MODEQ           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OREQ            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPEQ           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    CAREQ           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSMIN        reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACK          reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLON           reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PIPE            reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DDD             reduce using rule 248 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 242

    (249) Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .
    (238) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (239) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (240) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (241) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (242) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (243) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (244) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUS           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    XOR             reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OR              reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQEQ            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    NOTEQ           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LEQ             reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GEQ             reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GREAT           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LESS            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPAMP          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OROR            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SEMICOL         reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LBRACE          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COMMA           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RPAREN          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQUAL           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLONEQ         reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACE          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSEQ          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSEQ         reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    TIMESEQ         reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MODEQ           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OREQ            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPEQ           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    CAREQ           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSMIN        reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACK          reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLON           reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PIPE            reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DDD             reduce using rule 249 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 243

    (246) Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .
    (238) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (239) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (240) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (241) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (242) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (243) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (244) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUS           reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    XOR             reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OR              reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQEQ            reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    NOTEQ           reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LEQ             reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GEQ             reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GREAT           reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LESS            reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPAMP          reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OROR            reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SEMICOL         reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LBRACE          reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COMMA           reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RPAREN          reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQUAL           reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLONEQ         reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACE          reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MODEQ           reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OREQ            reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPEQ           reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    CAREQ           reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACK          reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLON           reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PIPE            reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DDD             reduce using rule 246 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 244

    (247) Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .
    (238) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (239) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (240) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (241) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (242) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (243) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (244) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUS           reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    XOR             reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OR              reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQEQ            reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    NOTEQ           reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LEQ             reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GEQ             reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GREAT           reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LESS            reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPAMP          reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OROR            reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SEMICOL         reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LBRACE          reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COMMA           reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RPAREN          reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQUAL           reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLONEQ         reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACE          reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MODEQ           reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OREQ            reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPEQ           reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    CAREQ           reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACK          reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLON           reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PIPE            reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DDD             reduce using rule 247 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDE          shift and go to state 87
    MOD             shift and go to state 92
    SHL             shift and go to state 91
    SHR             shift and go to state 86
    AMPERS          shift and go to state 89
    AMPCAR          shift and go to state 88
    TIMES           shift and go to state 90


state 245

    (265) Arrayexp -> OtherType LBRACE ExprList . RBRACE
    (153) ExprList -> ExprList . COMMA Expr

    RBRACE          shift and go to state 350
    COMMA           shift and go to state 107


state 246

    (108) ArgList -> ArgList LPAREN . OArgTypeListOComma RPAREN
    (190) OArgTypeListOComma -> .
    (191) OArgTypeListOComma -> . ArgTypeList OComma
    (188) ArgTypeList -> . ArgType
    (189) ArgTypeList -> . ArgTypeList COMMA ArgType
    (184) ArgType -> . NameOrType
    (185) ArgType -> . IDENTIFIER NameOrType
    (186) ArgType -> . IDENTIFIER DotDotDot
    (187) ArgType -> . DotDotDot
    (235) NameOrType -> . NType
    (206) DotDotDot -> . DDD
    (207) DotDotDot -> . DDD NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    RPAREN          reduce using rule 190 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 262
    DDD             shift and go to state 264
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 221
    ArgTypeList                    shift and go to state 257
    PtrType                        shift and go to state 223
    ArgType                        shift and go to state 258
    NewType                        shift and go to state 224
    OArgTypeListOComma             shift and go to state 351
    DotDotDot                      shift and go to state 260
    NameOrType                     shift and go to state 261
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    NType                          shift and go to state 263
    DotName                        shift and go to state 225

state 247

    (131) FuncRetType -> FuncType .

    LBRACE          reduce using rule 131 (FuncRetType -> FuncType .)
    SEMICOL         reduce using rule 131 (FuncRetType -> FuncType .)
    RBRACE          reduce using rule 131 (FuncRetType -> FuncType .)
    LEFT_ANGLE      reduce using rule 131 (FuncRetType -> FuncType .)
    RPAREN          reduce using rule 131 (FuncRetType -> FuncType .)
    EQUAL           reduce using rule 131 (FuncRetType -> FuncType .)
    COMMA           reduce using rule 131 (FuncRetType -> FuncType .)
    OR_RIGHT        reduce using rule 131 (FuncRetType -> FuncType .)
    DDD             reduce using rule 131 (FuncRetType -> FuncType .)
    COLON           reduce using rule 131 (FuncRetType -> FuncType .)
    COLONEQ         reduce using rule 131 (FuncRetType -> FuncType .)
    LEFT_LEFT       reduce using rule 131 (FuncRetType -> FuncType .)
    INTEGER         reduce using rule 131 (FuncRetType -> FuncType .)
    FLOAT           reduce using rule 131 (FuncRetType -> FuncType .)
    STRING          reduce using rule 131 (FuncRetType -> FuncType .)


state 248

    (133) FuncRetType -> PtrType .

    LBRACE          reduce using rule 133 (FuncRetType -> PtrType .)
    SEMICOL         reduce using rule 133 (FuncRetType -> PtrType .)
    RBRACE          reduce using rule 133 (FuncRetType -> PtrType .)
    LEFT_ANGLE      reduce using rule 133 (FuncRetType -> PtrType .)
    RPAREN          reduce using rule 133 (FuncRetType -> PtrType .)
    EQUAL           reduce using rule 133 (FuncRetType -> PtrType .)
    COMMA           reduce using rule 133 (FuncRetType -> PtrType .)
    OR_RIGHT        reduce using rule 133 (FuncRetType -> PtrType .)
    DDD             reduce using rule 133 (FuncRetType -> PtrType .)
    COLON           reduce using rule 133 (FuncRetType -> PtrType .)
    COLONEQ         reduce using rule 133 (FuncRetType -> PtrType .)
    LEFT_LEFT       reduce using rule 133 (FuncRetType -> PtrType .)
    INTEGER         reduce using rule 133 (FuncRetType -> PtrType .)
    FLOAT           reduce using rule 133 (FuncRetType -> PtrType .)
    STRING          reduce using rule 133 (FuncRetType -> PtrType .)


state 249

    (135) FuncRetType -> NewType .

    LBRACE          reduce using rule 135 (FuncRetType -> NewType .)
    SEMICOL         reduce using rule 135 (FuncRetType -> NewType .)
    RBRACE          reduce using rule 135 (FuncRetType -> NewType .)
    LEFT_ANGLE      reduce using rule 135 (FuncRetType -> NewType .)
    RPAREN          reduce using rule 135 (FuncRetType -> NewType .)
    EQUAL           reduce using rule 135 (FuncRetType -> NewType .)
    COMMA           reduce using rule 135 (FuncRetType -> NewType .)
    OR_RIGHT        reduce using rule 135 (FuncRetType -> NewType .)
    DDD             reduce using rule 135 (FuncRetType -> NewType .)
    COLON           reduce using rule 135 (FuncRetType -> NewType .)
    COLONEQ         reduce using rule 135 (FuncRetType -> NewType .)
    LEFT_LEFT       reduce using rule 135 (FuncRetType -> NewType .)
    INTEGER         reduce using rule 135 (FuncRetType -> NewType .)
    FLOAT           reduce using rule 135 (FuncRetType -> NewType .)
    STRING          reduce using rule 135 (FuncRetType -> NewType .)


state 250

    (132) FuncRetType -> OtherType .

    LBRACE          reduce using rule 132 (FuncRetType -> OtherType .)
    SEMICOL         reduce using rule 132 (FuncRetType -> OtherType .)
    RBRACE          reduce using rule 132 (FuncRetType -> OtherType .)
    LEFT_ANGLE      reduce using rule 132 (FuncRetType -> OtherType .)
    RPAREN          reduce using rule 132 (FuncRetType -> OtherType .)
    EQUAL           reduce using rule 132 (FuncRetType -> OtherType .)
    COMMA           reduce using rule 132 (FuncRetType -> OtherType .)
    OR_RIGHT        reduce using rule 132 (FuncRetType -> OtherType .)
    DDD             reduce using rule 132 (FuncRetType -> OtherType .)
    COLON           reduce using rule 132 (FuncRetType -> OtherType .)
    COLONEQ         reduce using rule 132 (FuncRetType -> OtherType .)
    LEFT_LEFT       reduce using rule 132 (FuncRetType -> OtherType .)
    INTEGER         reduce using rule 132 (FuncRetType -> OtherType .)
    FLOAT           reduce using rule 132 (FuncRetType -> OtherType .)
    STRING          reduce using rule 132 (FuncRetType -> OtherType .)


state 251

    (106) FuncType -> FUNCTION ArgList FuncRes .

    LEFT_ANGLE      reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    LBRACE          reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    COLON           reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    EQUAL           reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    COLONEQ         reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    COMMA           reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    RPAREN          reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    OR_RIGHT        reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    SEMICOL         reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    DDD             reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    LEFT_LEFT       reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    INTEGER         reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    FLOAT           reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    STRING          reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACE          reduce using rule 106 (FuncType -> FUNCTION ArgList FuncRes .)


state 252

    (113) FuncRes -> LEFT_OR . OArgTypeListOComma OR_RIGHT
    (190) OArgTypeListOComma -> .
    (191) OArgTypeListOComma -> . ArgTypeList OComma
    (188) ArgTypeList -> . ArgType
    (189) ArgTypeList -> . ArgTypeList COMMA ArgType
    (184) ArgType -> . NameOrType
    (185) ArgType -> . IDENTIFIER NameOrType
    (186) ArgType -> . IDENTIFIER DotDotDot
    (187) ArgType -> . DotDotDot
    (235) NameOrType -> . NType
    (206) DotDotDot -> . DDD
    (207) DotDotDot -> . DDD NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 190 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 262
    DDD             shift and go to state 264
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 221
    ArgTypeList                    shift and go to state 257
    PtrType                        shift and go to state 223
    ArgType                        shift and go to state 258
    NewType                        shift and go to state 224
    OArgTypeListOComma             shift and go to state 352
    DotDotDot                      shift and go to state 260
    NameOrType                     shift and go to state 261
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    NType                          shift and go to state 263
    DotName                        shift and go to state 225

state 253

    (134) FuncRetType -> DotName .

    LBRACE          reduce using rule 134 (FuncRetType -> DotName .)
    SEMICOL         reduce using rule 134 (FuncRetType -> DotName .)
    RBRACE          reduce using rule 134 (FuncRetType -> DotName .)
    LEFT_ANGLE      reduce using rule 134 (FuncRetType -> DotName .)
    RPAREN          reduce using rule 134 (FuncRetType -> DotName .)
    EQUAL           reduce using rule 134 (FuncRetType -> DotName .)
    COMMA           reduce using rule 134 (FuncRetType -> DotName .)
    OR_RIGHT        reduce using rule 134 (FuncRetType -> DotName .)
    DDD             reduce using rule 134 (FuncRetType -> DotName .)
    COLON           reduce using rule 134 (FuncRetType -> DotName .)
    COLONEQ         reduce using rule 134 (FuncRetType -> DotName .)
    LEFT_LEFT       reduce using rule 134 (FuncRetType -> DotName .)
    INTEGER         reduce using rule 134 (FuncRetType -> DotName .)
    FLOAT           reduce using rule 134 (FuncRetType -> DotName .)
    STRING          reduce using rule 134 (FuncRetType -> DotName .)


state 254

    (112) FuncRes -> FuncRetType .

    SEMICOL         reduce using rule 112 (FuncRes -> FuncRetType .)
    RBRACE          reduce using rule 112 (FuncRes -> FuncRetType .)
    LBRACE          reduce using rule 112 (FuncRes -> FuncRetType .)
    LEFT_ANGLE      reduce using rule 112 (FuncRes -> FuncRetType .)
    RPAREN          reduce using rule 112 (FuncRes -> FuncRetType .)
    EQUAL           reduce using rule 112 (FuncRes -> FuncRetType .)
    COMMA           reduce using rule 112 (FuncRes -> FuncRetType .)
    OR_RIGHT        reduce using rule 112 (FuncRes -> FuncRetType .)
    DDD             reduce using rule 112 (FuncRes -> FuncRetType .)
    COLON           reduce using rule 112 (FuncRes -> FuncRetType .)
    COLONEQ         reduce using rule 112 (FuncRes -> FuncRetType .)
    LEFT_LEFT       reduce using rule 112 (FuncRes -> FuncRetType .)
    INTEGER         reduce using rule 112 (FuncRes -> FuncRetType .)
    FLOAT           reduce using rule 112 (FuncRes -> FuncRetType .)
    STRING          reduce using rule 112 (FuncRes -> FuncRetType .)


state 255

    (110) FuncBody -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 277 (cmtlist -> .)
    LBRACE          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    SEMICOL         reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 353

state 256

    (103) FuncDecl -> FUNCTION FuncDecl_ FuncBody .

    SEMICOL         reduce using rule 103 (FuncDecl -> FUNCTION FuncDecl_ FuncBody .)


state 257

    (191) OArgTypeListOComma -> ArgTypeList . OComma
    (189) ArgTypeList -> ArgTypeList . COMMA ArgType
    (138) OComma -> .
    (139) OComma -> . COMMA

    COMMA           shift and go to state 354
    RPAREN          reduce using rule 138 (OComma -> .)
    OR_RIGHT        reduce using rule 138 (OComma -> .)

    OComma                         shift and go to state 355

state 258

    (188) ArgTypeList -> ArgType .

    COMMA           reduce using rule 188 (ArgTypeList -> ArgType .)
    OR_RIGHT        reduce using rule 188 (ArgTypeList -> ArgType .)
    RPAREN          reduce using rule 188 (ArgTypeList -> ArgType .)


state 259

    (107) ArgList -> LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 356


state 260

    (187) ArgType -> DotDotDot .

    COMMA           reduce using rule 187 (ArgType -> DotDotDot .)
    RPAREN          reduce using rule 187 (ArgType -> DotDotDot .)
    OR_RIGHT        reduce using rule 187 (ArgType -> DotDotDot .)


state 261

    (184) ArgType -> NameOrType .

    COMMA           reduce using rule 184 (ArgType -> NameOrType .)
    RPAREN          reduce using rule 184 (ArgType -> NameOrType .)
    OR_RIGHT        reduce using rule 184 (ArgType -> NameOrType .)


state 262

    (185) ArgType -> IDENTIFIER . NameOrType
    (186) ArgType -> IDENTIFIER . DotDotDot
    (183) Name -> IDENTIFIER .
    (235) NameOrType -> . NType
    (206) DotDotDot -> . DDD
    (207) DotDotDot -> . DDD NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    DOT             reduce using rule 183 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 183 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 183 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 183 (Name -> IDENTIFIER .)
    DDD             shift and go to state 264
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    NewType                        shift and go to state 224
    DotDotDot                      shift and go to state 357
    NType                          shift and go to state 263
    NameOrType                     shift and go to state 358
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 225
    FuncType                       shift and go to state 221

state 263

    (235) NameOrType -> NType .

    COMMA           reduce using rule 235 (NameOrType -> NType .)
    RPAREN          reduce using rule 235 (NameOrType -> NType .)
    OR_RIGHT        reduce using rule 235 (NameOrType -> NType .)


state 264

    (206) DotDotDot -> DDD .
    (207) DotDotDot -> DDD . NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    COMMA           reduce using rule 206 (DotDotDot -> DDD .)
    RPAREN          reduce using rule 206 (DotDotDot -> DDD .)
    OR_RIGHT        reduce using rule 206 (DotDotDot -> DDD .)
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    FuncType                       shift and go to state 221
    NType                          shift and go to state 359
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 225
    NewType                        shift and go to state 224

state 265

    (105) FuncDecl_ -> LEFT_OR OArgTypeListOComma . OR_RIGHT IDENTIFIER ArgList FuncRes

    OR_RIGHT        shift and go to state 360


state 266

    (104) FuncDecl_ -> IDENTIFIER ArgList . FuncRes
    (108) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (111) FuncRes -> .
    (112) FuncRes -> . FuncRetType
    (113) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (131) FuncRetType -> . FuncType
    (132) FuncRetType -> . OtherType
    (133) FuncRetType -> . PtrType
    (134) FuncRetType -> . DotName
    (135) FuncRetType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    LPAREN          shift and go to state 246
    LBRACE          reduce using rule 111 (FuncRes -> .)
    SEMICOL         reduce using rule 111 (FuncRes -> .)
    LEFT_OR         shift and go to state 252
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    DotName                        shift and go to state 253
    Name                           shift and go to state 229
    FuncType                       shift and go to state 247
    OtherType                      shift and go to state 250
    InterfaceType                  shift and go to state 15
    FuncRes                        shift and go to state 361
    PtrType                        shift and go to state 248
    ChannelType                    shift and go to state 35
    FuncRetType                    shift and go to state 254
    NewType                        shift and go to state 249

state 267

    (69) ForHeader -> OSimpleStmt SEMICOL . OSimpleStmt SEMICOL OSimpleStmt
    (142) OSimpleStmt -> .
    (143) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 142 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 138
    OSimpleStmt                    shift and go to state 362
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 268

    (66) RangeStmt -> ExprList EQUAL . RANGE Expr
    (53) SimpleStmt -> ExprList EQUAL . ExprList
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 363
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 235
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 269

    (67) RangeStmt -> ExprList COLONEQ . RANGE Expr
    (54) SimpleStmt -> ExprList COLONEQ . ExprList
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 364
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 234
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 270

    (68) RangeStmt -> RANGE Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 68 (RangeStmt -> RANGE Expr .)
    LBRACE          reduce using rule 68 (RangeStmt -> RANGE Expr .)
    OROR            shift and go to state 168


state 271

    (65) LoopBody -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 277 (cmtlist -> .)
    LBRACE          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    SEMICOL         reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 365

state 272

    (72) ForBody -> ForHeader LoopBody .

    SEMICOL         reduce using rule 72 (ForBody -> ForHeader LoopBody .)


state 273

    (102) InterfaceType -> INTERFACE LBRACE RBRACE .

    COMMA           reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RPAREN          reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LBRACE          reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    DDD             reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    INTEGER         reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    FLOAT           reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    STRING          reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    SEMICOL         reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACE          reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    EQUAL           reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLON           reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLONEQ         reduce using rule 102 (InterfaceType -> INTERFACE LBRACE RBRACE .)


state 274

    (116) InterfaceDeclList -> InterfaceDecl .

    SEMICOL         reduce using rule 116 (InterfaceDeclList -> InterfaceDecl .)
    RBRACE          reduce using rule 116 (InterfaceDeclList -> InterfaceDecl .)


state 275

    (101) InterfaceType -> INTERFACE LBRACE InterfaceDeclList . OSemi RBRACE
    (117) InterfaceDeclList -> InterfaceDeclList . SEMICOL InterfaceDecl
    (140) OSemi -> .
    (141) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 366
    RBRACE          reduce using rule 140 (OSemi -> .)

    OSemi                          shift and go to state 367

state 276

    (124) InterfaceDecl -> NewName . InDecl
    (127) InDecl -> . LPAREN OArgTypeListOComma RPAREN FuncRes

    LPAREN          shift and go to state 368

    InDecl                         shift and go to state 369

state 277

    (126) InterfaceDecl -> LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 370


state 278

    (125) InterfaceDecl -> IDENTIFIER .
    (129) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 125 (InterfaceDecl -> IDENTIFIER .)
    RBRACE          reduce using rule 125 (InterfaceDecl -> IDENTIFIER .)
    LPAREN          reduce using rule 129 (NewName -> IDENTIFIER .)


state 279

    (273) ForCompExpr -> LBRACK Expr PIPE . RangeStmt RBRACK
    (66) RangeStmt -> . ExprList EQUAL RANGE Expr
    (67) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (68) RangeStmt -> . RANGE Expr
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 137
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    RangeStmt                      shift and go to state 371
    ExprList                       shift and go to state 372
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 280

    (92) OtherType -> LBRACK OExpr RBRACK . NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    FuncType                       shift and go to state 221
    NType                          shift and go to state 373
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 225
    NewType                        shift and go to state 224

state 281

    (97) ChannelType -> CHAN LMINUS NewType .

    LBRACE          reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    LEFT_ANGLE      reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    LEFT_LEFT       reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    SEMICOL         reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    RBRACE          reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    RPAREN          reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    COLON           reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    EQUAL           reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    COLONEQ         reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    COMMA           reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    DDD             reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    INTEGER         reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    FLOAT           reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    STRING          reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)
    OR_RIGHT        reduce using rule 97 (ChannelType -> CHAN LMINUS NewType .)


state 282

    (75) IfHeader -> OSimpleStmt SEMICOL . OSimpleStmt
    (142) OSimpleStmt -> .
    (143) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    LBRACE          reduce using rule 142 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 138
    OSimpleStmt                    shift and go to state 374
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 283

    (236) SwitchStmt -> SWITCH IfHeader LBRACE . CaseBlockList RBRACE
    (63) CaseBlockList -> .
    (64) CaseBlockList -> . CaseBlockList CaseBlock

    RBRACE          reduce using rule 63 (CaseBlockList -> .)
    CASE            reduce using rule 63 (CaseBlockList -> .)
    DEFAULT         reduce using rule 63 (CaseBlockList -> .)

    CaseBlockList                  shift and go to state 375

state 284

    (176) KeyvalList -> Keyval .

    COMMA           reduce using rule 176 (KeyvalList -> Keyval .)
    RIGHT_RIGHT     reduce using rule 176 (KeyvalList -> Keyval .)


state 285

    (220) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 376


state 286

    (228) Keyval -> Expr . COLON CompLitExpr
    (229) BareCompLitExpr -> Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 377
    COMMA           reduce using rule 229 (BareCompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 229 (BareCompLitExpr -> Expr .)
    OROR            shift and go to state 168


state 287

    (230) BareCompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (180) BracedKeyvalList -> .
    (181) BracedKeyvalList -> . KeyvalList OComma
    (176) KeyvalList -> . Keyval
    (177) KeyvalList -> . BareCompLitExpr
    (178) KeyvalList -> . KeyvalList COMMA Keyval
    (179) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (228) Keyval -> . Expr COLON CompLitExpr
    (229) BareCompLitExpr -> . Expr
    (230) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 180 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 287
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 286
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 288
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 284
    BareCompLitExpr                shift and go to state 289
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 378

state 288

    (181) BracedKeyvalList -> KeyvalList . OComma
    (178) KeyvalList -> KeyvalList . COMMA Keyval
    (179) KeyvalList -> KeyvalList . COMMA BareCompLitExpr
    (138) OComma -> .
    (139) OComma -> . COMMA

    COMMA           shift and go to state 379
    RIGHT_RIGHT     reduce using rule 138 (OComma -> .)

    OComma                         shift and go to state 380

state 289

    (177) KeyvalList -> BareCompLitExpr .

    COMMA           reduce using rule 177 (KeyvalList -> BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 177 (KeyvalList -> BareCompLitExpr .)


state 290

    (163) DeclList -> DeclList cmtlist Declaration . SEMICOL

    SEMICOL         shift and go to state 381


state 291

    (8) Imports -> Imports cmtlist Import . SEMICOL

    SEMICOL         shift and go to state 382


state 292

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList . cmtlist
    (163) DeclList -> DeclList . cmtlist Declaration SEMICOL
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    $end            reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 383

state 293

    (215) PExprNoParen -> PExpr LBRACK Expr . RBRACK
    (260) Expr -> Expr . OROR Prec2Expr_
    (147) OExpr -> Expr .

    RBRACK          shift and go to state 384
    OROR            shift and go to state 168
    COLON           reduce using rule 147 (OExpr -> Expr .)


state 294

    (216) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr RBRACK
    (217) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr COLON OExpr RBRACK

    COLON           shift and go to state 385


state 295

    (275) PseudoCall -> PExpr LPAREN ExprOrTypeList . OComma RPAREN
    (276) PseudoCall -> PExpr LPAREN ExprOrTypeList . DDD OComma RPAREN
    (155) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType
    (138) OComma -> .
    (139) OComma -> . COMMA

    DDD             shift and go to state 388
    COMMA           shift and go to state 387
    RPAREN          reduce using rule 138 (OComma -> .)

    OComma                         shift and go to state 386

state 296

    (154) ExprOrTypeList -> ExprOrType .

    COLON           reduce using rule 154 (ExprOrTypeList -> ExprOrType .)
    EQUAL           reduce using rule 154 (ExprOrTypeList -> ExprOrType .)
    COLONEQ         reduce using rule 154 (ExprOrTypeList -> ExprOrType .)
    COMMA           reduce using rule 154 (ExprOrTypeList -> ExprOrType .)
    DDD             reduce using rule 154 (ExprOrTypeList -> ExprOrType .)
    RPAREN          reduce using rule 154 (ExprOrTypeList -> ExprOrType .)


state 297

    (274) PseudoCall -> PExpr LPAREN RPAREN .

    DOT             reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACK          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEFT_LEFT       reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    LPAREN          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDE          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    MOD             reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL             reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR             reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPERS          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAR          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMES           reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUS            reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUS           reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    XOR             reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    OR              reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQEQ            reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    NOTEQ           reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEQ             reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    GEQ             reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    GREAT           reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    LESS            reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPAMP          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSEQ          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSEQ         reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMESEQ         reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDEEQ        reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    MODEQ           reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    OREQ            reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPEQ           reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    CAREQ           reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAREQ        reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSMIN        reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    OROR            reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    SEMICOL         reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQUAL           reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLONEQ         reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    COMMA           reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACE          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    PIPE            reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACK          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    RPAREN          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_ANGLE     reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACE          reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLON           reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_RIGHT     reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)
    DDD             reduce using rule 274 (PseudoCall -> PExpr LPAREN RPAREN .)


state 298

    (221) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 389


state 299

    (213) PExprNoParen -> PExpr DOT LPAREN . ExprOrType RPAREN
    (214) PExprNoParen -> PExpr DOT LPAREN . NewType RPAREN
    (233) ExprOrType -> . Expr
    (234) ExprOrType -> . NonExprType
    (224) NewType -> . TYPE
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (89) NonExprType -> . FuncType
    (90) NonExprType -> . OtherType
    (91) NonExprType -> . TIMES NonExprType
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (150) FuncLiteralDecl -> . FuncType

    TYPE            shift and go to state 61
    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 189
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 184
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    NewType                        shift and go to state 390
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 391
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 186
    OtherType                      shift and go to state 187
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 188
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 300

    (212) PExprNoParen -> PExpr DOT IDENTIFIER .

    DOT             reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACK          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LPAREN          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDE          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MOD             reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL             reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR             reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPERS          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAR          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMES           reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUS            reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUS           reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    XOR             reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OR              reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQEQ            reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    NOTEQ           reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEQ             reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GEQ             reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GREAT           reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LESS            reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPAMP          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OROR            reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SEMICOL         reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACE          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COMMA           reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MODEQ           reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OREQ            reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPEQ           reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    CAREQ           reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAREQ        reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQUAL           reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLONEQ         reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RPAREN          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACK          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PIPE            reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACE          reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLON           reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DDD             reduce using rule 212 (PExprNoParen -> PExpr DOT IDENTIFIER .)


state 301

    (30) CommonDecl -> NewType LPAREN RPAREN .

    SEMICOL         reduce using rule 30 (CommonDecl -> NewType LPAREN RPAREN .)


state 302

    (29) CommonDecl -> NewType LPAREN TypeDeclList . OSemi RPAREN
    (169) TypeDeclList -> TypeDeclList . SEMICOL TypeDecl
    (140) OSemi -> .
    (141) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 392
    RPAREN          reduce using rule 140 (OSemi -> .)

    OSemi                          shift and go to state 393

state 303

    (168) TypeDeclList -> TypeDecl .

    SEMICOL         reduce using rule 168 (TypeDeclList -> TypeDecl .)
    RPAREN          reduce using rule 168 (TypeDeclList -> TypeDecl .)


state 304

    (40) TypeDecl -> TypeDeclName NType .

    SEMICOL         reduce using rule 40 (TypeDecl -> TypeDeclName NType .)
    RPAREN          reduce using rule 40 (TypeDecl -> TypeDeclName NType .)


state 305

    (260) Expr -> Expr OROR Prec2Expr_ .
    (258) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    PLUSEQ          reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSEQ         reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    TIMESEQ         reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    MODEQ           reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    OREQ            reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    AMPEQ           reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    CAREQ           reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    AMPCAREQ        reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSPLUS        reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSMIN        reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    OROR            reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    SEMICOL         reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    EQUAL           reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    COLONEQ         reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    COMMA           reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    LBRACE          reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACK          reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    COLON           reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    DDD             reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    RPAREN          reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACE          reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    PIPE            reduce using rule 260 (Expr -> Expr OROR Prec2Expr_ .)
    AMPAMP          shift and go to state 100


state 306

    (49) SimpleStmt -> Expr CAREQ Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 49 (SimpleStmt -> Expr CAREQ Expr .)
    LBRACE          reduce using rule 49 (SimpleStmt -> Expr CAREQ Expr .)
    OROR            shift and go to state 168


state 307

    (44) SimpleStmt -> Expr TIMESEQ Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 44 (SimpleStmt -> Expr TIMESEQ Expr .)
    LBRACE          reduce using rule 44 (SimpleStmt -> Expr TIMESEQ Expr .)
    OROR            shift and go to state 168


state 308

    (42) SimpleStmt -> Expr PLUSEQ Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 42 (SimpleStmt -> Expr PLUSEQ Expr .)
    LBRACE          reduce using rule 42 (SimpleStmt -> Expr PLUSEQ Expr .)
    OROR            shift and go to state 168


state 309

    (46) SimpleStmt -> Expr MODEQ Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 46 (SimpleStmt -> Expr MODEQ Expr .)
    LBRACE          reduce using rule 46 (SimpleStmt -> Expr MODEQ Expr .)
    OROR            shift and go to state 168


state 310

    (51) SimpleStmt -> Expr SHR_ASSIGN Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 51 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    LBRACE          reduce using rule 51 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    OROR            shift and go to state 168


state 311

    (47) SimpleStmt -> Expr OREQ Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 47 (SimpleStmt -> Expr OREQ Expr .)
    LBRACE          reduce using rule 47 (SimpleStmt -> Expr OREQ Expr .)
    OROR            shift and go to state 168


state 312

    (43) SimpleStmt -> Expr MINUSEQ Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 43 (SimpleStmt -> Expr MINUSEQ Expr .)
    LBRACE          reduce using rule 43 (SimpleStmt -> Expr MINUSEQ Expr .)
    OROR            shift and go to state 168


state 313

    (48) SimpleStmt -> Expr AMPEQ Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 48 (SimpleStmt -> Expr AMPEQ Expr .)
    LBRACE          reduce using rule 48 (SimpleStmt -> Expr AMPEQ Expr .)
    OROR            shift and go to state 168


state 314

    (52) SimpleStmt -> Expr AMPCAREQ Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 52 (SimpleStmt -> Expr AMPCAREQ Expr .)
    LBRACE          reduce using rule 52 (SimpleStmt -> Expr AMPCAREQ Expr .)
    OROR            shift and go to state 168


state 315

    (50) SimpleStmt -> Expr SHL_ASSIGN Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 50 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    LBRACE          reduce using rule 50 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    OROR            shift and go to state 168


state 316

    (45) SimpleStmt -> Expr DIVIDEEQ Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 45 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    LBRACE          reduce using rule 45 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    OROR            shift and go to state 168


state 317

    (209) PExpr -> LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 209 (PExpr -> LPAREN ExprOrType RPAREN .)


state 318

    (91) NonExprType -> TIMES NonExprType .

    COLON           reduce using rule 91 (NonExprType -> TIMES NonExprType .)
    EQUAL           reduce using rule 91 (NonExprType -> TIMES NonExprType .)
    COLONEQ         reduce using rule 91 (NonExprType -> TIMES NonExprType .)
    COMMA           reduce using rule 91 (NonExprType -> TIMES NonExprType .)
    DDD             reduce using rule 91 (NonExprType -> TIMES NonExprType .)
    RPAREN          reduce using rule 91 (NonExprType -> TIMES NonExprType .)


state 319

    (90) NonExprType -> OtherType .
    (226) ConvType -> OtherType .
    (227) CompType -> OtherType .

    RPAREN          reduce using rule 90 (NonExprType -> OtherType .)
    DDD             reduce using rule 90 (NonExprType -> OtherType .)
    COMMA           reduce using rule 90 (NonExprType -> OtherType .)
    COLON           reduce using rule 90 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 90 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 90 (NonExprType -> OtherType .)
    LEFT_ANGLE      reduce using rule 226 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 227 (CompType -> OtherType .)


state 320

    (76) IfStmt -> IF IfHeader LoopBody . ElseIfList
    (78) ElseIfList -> .
    (79) ElseIfList -> . ElseIf ElseIfList
    (80) ElseIfList -> . Else
    (77) ElseIf -> . ELSE IF IfHeader LoopBody
    (81) Else -> .
    (82) Else -> . ELSE CompoundStmt

  ! reduce/reduce conflict for SEMICOL resolved using rule 78 (ElseIfList -> .)
    SEMICOL         reduce using rule 78 (ElseIfList -> .)
    ELSE            shift and go to state 397

  ! SEMICOL         [ reduce using rule 81 (Else -> .) ]

    ElseIfList                     shift and go to state 394
    Else                           shift and go to state 395
    ElseIf                         shift and go to state 396

state 321

    (174) NewNameList -> NewName .

    COMMA           reduce using rule 174 (NewNameList -> NewName .)
    LPAREN          reduce using rule 174 (NewNameList -> NewName .)
    FUNCTION        reduce using rule 174 (NewNameList -> NewName .)
    LBRACK          reduce using rule 174 (NewNameList -> NewName .)
    TIMES           reduce using rule 174 (NewNameList -> NewName .)
    TYPE            reduce using rule 174 (NewNameList -> NewName .)
    STRUCT          reduce using rule 174 (NewNameList -> NewName .)
    INTERFACE       reduce using rule 174 (NewNameList -> NewName .)
    CHAN            reduce using rule 174 (NewNameList -> NewName .)
    LMINUS          reduce using rule 174 (NewNameList -> NewName .)
    IDENTIFIER      reduce using rule 174 (NewNameList -> NewName .)


state 322

    (114) StructDeclList -> StructDecl .

    SEMICOL         reduce using rule 114 (StructDeclList -> StructDecl .)
    RBRACE          reduce using rule 114 (StructDeclList -> StructDecl .)


state 323

    (121) StructDecl -> TIMES . Embed OLiteral
    (123) StructDecl -> TIMES . LPAREN Embed RPAREN OLiteral
    (161) Embed -> . IDENTIFIER

    LPAREN          shift and go to state 398
    IDENTIFIER      shift and go to state 400

    Embed                          shift and go to state 399

state 324

    (120) StructDecl -> LPAREN . Embed RPAREN OLiteral
    (122) StructDecl -> LPAREN . TIMES Embed RPAREN OLiteral
    (161) Embed -> . IDENTIFIER

    TIMES           shift and go to state 401
    IDENTIFIER      shift and go to state 400

    Embed                          shift and go to state 402

state 325

    (118) StructDecl -> NewNameList . NType OLiteral
    (175) NewNameList -> NewNameList . COMMA NewName
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    COMMA           shift and go to state 403
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    FuncType                       shift and go to state 221
    NType                          shift and go to state 404
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 225
    NewType                        shift and go to state 224

state 326

    (99) StructType -> STRUCT LBRACE StructDeclList . OSemi RBRACE
    (115) StructDeclList -> StructDeclList . SEMICOL StructDecl
    (140) OSemi -> .
    (141) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 405
    RBRACE          reduce using rule 140 (OSemi -> .)

    OSemi                          shift and go to state 406

state 327

    (161) Embed -> IDENTIFIER .
    (129) NewName -> IDENTIFIER .

    INTEGER         reduce using rule 161 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 161 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 161 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 161 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 161 (Embed -> IDENTIFIER .)
    COMMA           reduce using rule 129 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 129 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 129 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 129 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 129 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 129 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 129 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 129 (NewName -> IDENTIFIER .)
    CHAN            reduce using rule 129 (NewName -> IDENTIFIER .)
    LMINUS          reduce using rule 129 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 129 (NewName -> IDENTIFIER .)


state 328

    (119) StructDecl -> Embed . OLiteral
    (156) OLiteral -> .
    (157) OLiteral -> . Literal
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING

    SEMICOL         reduce using rule 156 (OLiteral -> .)
    RBRACE          reduce using rule 156 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 408
    Literal                        shift and go to state 407

state 329

    (100) StructType -> STRUCT LBRACE RBRACE .

    LBRACE          reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    COMMA           reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    RPAREN          reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    EQUAL           reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    SEMICOL         reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    INTEGER         reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    FLOAT           reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    STRING          reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACE          reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    DDD             reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    COLON           reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)
    COLONEQ         reduce using rule 100 (StructType -> STRUCT LBRACE RBRACE .)


state 330

    (219) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma . RIGHT_ANGLE

    RIGHT_ANGLE     shift and go to state 409


state 331

    (139) OComma -> COMMA .

    RIGHT_ANGLE     reduce using rule 139 (OComma -> COMMA .)
    RPAREN          reduce using rule 139 (OComma -> COMMA .)


state 332

    (61) CompoundStmt -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (278) cmtlist -> cmtlist . COMMENT
    (172) StmtList -> . Stmt SEMICOL
    (173) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 410
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 335
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 203
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 333

    (14) ImportStmtList -> ImportStmtList SEMICOL . ImportStmt
    (141) OSemi -> SEMICOL .
    (12) ImportStmt -> . ImportHere STRING
    (15) ImportHere -> .
    (16) ImportHere -> . IDENTIFIER
    (17) ImportHere -> . DOT

    RPAREN          reduce using rule 141 (OSemi -> SEMICOL .)
    STRING          reduce using rule 15 (ImportHere -> .)
    IDENTIFIER      shift and go to state 94
    DOT             shift and go to state 97

    ImportStmt                     shift and go to state 411
    ImportHere                     shift and go to state 93

state 334

    (10) Import -> IMPORT LPAREN ImportStmtList OSemi . RPAREN

    RPAREN          shift and go to state 412


state 335

    (172) StmtList -> Stmt . SEMICOL

    SEMICOL         shift and go to state 413


state 336

    (151) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList . cmtlist RBRACE
    (173) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 277 (cmtlist -> .)
    COMMENT         reduce using rule 277 (cmtlist -> .)
    LBRACE          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    SEMICOL         reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 414

state 337

    (165) VarDeclList -> VarDeclList SEMICOL . VarDecl
    (141) OSemi -> SEMICOL .
    (31) VarDecl -> . DeclNameList NType
    (32) VarDecl -> . DeclNameList NType EQUAL ExprList
    (33) VarDecl -> . DeclNameList EQUAL ExprList
    (170) DeclNameList -> . DeclName
    (171) DeclNameList -> . DeclNameList COMMA DeclName
    (182) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 141 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 102

    DeclName                       shift and go to state 103
    VarDecl                        shift and go to state 415
    DeclNameList                   shift and go to state 106

state 338

    (26) CommonDecl -> VAR LPAREN VarDeclList OSemi . RPAREN

    RPAREN          shift and go to state 416


state 339

    (33) VarDecl -> DeclNameList EQUAL ExprList .
    (153) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 33 (VarDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 33 (VarDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 107


state 340

    (130) PtrType -> TIMES NType .

    LEFT_ANGLE      reduce using rule 130 (PtrType -> TIMES NType .)
    LBRACE          reduce using rule 130 (PtrType -> TIMES NType .)
    RPAREN          reduce using rule 130 (PtrType -> TIMES NType .)
    EQUAL           reduce using rule 130 (PtrType -> TIMES NType .)
    SEMICOL         reduce using rule 130 (PtrType -> TIMES NType .)
    COMMA           reduce using rule 130 (PtrType -> TIMES NType .)
    OR_RIGHT        reduce using rule 130 (PtrType -> TIMES NType .)
    DDD             reduce using rule 130 (PtrType -> TIMES NType .)
    COLON           reduce using rule 130 (PtrType -> TIMES NType .)
    COLONEQ         reduce using rule 130 (PtrType -> TIMES NType .)
    LEFT_LEFT       reduce using rule 130 (PtrType -> TIMES NType .)
    INTEGER         reduce using rule 130 (PtrType -> TIMES NType .)
    FLOAT           reduce using rule 130 (PtrType -> TIMES NType .)
    STRING          reduce using rule 130 (PtrType -> TIMES NType .)
    RBRACE          reduce using rule 130 (PtrType -> TIMES NType .)


state 341

    (171) DeclNameList -> DeclNameList COMMA DeclName .

    EQUAL           reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    COMMA           reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    LPAREN          reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    FUNCTION        reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    LBRACK          reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    TIMES           reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    TYPE            reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    STRUCT          reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    INTERFACE       reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    CHAN            reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    LMINUS          reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    IDENTIFIER      reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    SEMICOL         reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)
    RPAREN          reduce using rule 171 (DeclNameList -> DeclNameList COMMA DeclName .)


state 342

    (137) DotName -> Name DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 417


state 343

    (32) VarDecl -> DeclNameList NType EQUAL . ExprList
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 418
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 344

    (87) NType -> LPAREN NType . RPAREN

    RPAREN          shift and go to state 419


state 345

    (147) OExpr -> Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 147 (OExpr -> Expr .)
    COLON           reduce using rule 147 (OExpr -> Expr .)
    OROR            shift and go to state 168


state 346

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi . RPAREN

    RPAREN          shift and go to state 420


state 347

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL . ConstDeclList OSemi RPAREN
    (141) OSemi -> SEMICOL .
    (166) ConstDeclList -> . ConstDecl1
    (167) ConstDeclList -> . ConstDeclList SEMICOL ConstDecl1
    (37) ConstDecl1 -> . ConstDecl
    (38) ConstDecl1 -> . DeclNameList
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (170) DeclNameList -> . DeclName
    (171) DeclNameList -> . DeclNameList COMMA DeclName
    (182) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 141 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 102

    ConstDecl1                     shift and go to state 423
    DeclName                       shift and go to state 103
    ConstDecl                      shift and go to state 424
    ConstDeclList                  shift and go to state 421
    DeclNameList                   shift and go to state 422

state 348

    (36) ConstDecl -> DeclNameList EQUAL ExprList .
    (153) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 36 (ConstDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 36 (ConstDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 107


state 349

    (34) ConstDecl -> DeclNameList NType EQUAL . ExprList
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 114
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 425
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    FuncLiteral                    shift and go to state 9
    PExpr                          shift and go to state 60

state 350

    (265) Arrayexp -> OtherType LBRACE ExprList RBRACE .

    OROR            reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COLON           reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    EQUAL           reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COLONEQ         reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COMMA           reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RIGHT_RIGHT     reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    LBRACE          reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RBRACK          reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PLUSEQ          reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MINUSEQ         reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    TIMESEQ         reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    DIVIDEEQ        reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MODEQ           reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    OREQ            reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    AMPEQ           reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    CAREQ           reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SHL_ASSIGN      reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SHR_ASSIGN      reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    AMPCAREQ        reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PLUSPLUS        reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MINUSMIN        reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SEMICOL         reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RPAREN          reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PIPE            reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    DDD             reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RBRACE          reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RIGHT_ANGLE     reduce using rule 265 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)


state 351

    (108) ArgList -> ArgList LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 426


state 352

    (113) FuncRes -> LEFT_OR OArgTypeListOComma . OR_RIGHT

    OR_RIGHT        shift and go to state 427


state 353

    (110) FuncBody -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (278) cmtlist -> cmtlist . COMMENT
    (172) StmtList -> . Stmt SEMICOL
    (173) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 428
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 335
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 203
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 354

    (189) ArgTypeList -> ArgTypeList COMMA . ArgType
    (139) OComma -> COMMA .
    (184) ArgType -> . NameOrType
    (185) ArgType -> . IDENTIFIER NameOrType
    (186) ArgType -> . IDENTIFIER DotDotDot
    (187) ArgType -> . DotDotDot
    (235) NameOrType -> . NType
    (206) DotDotDot -> . DDD
    (207) DotDotDot -> . DDD NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    RPAREN          reduce using rule 139 (OComma -> COMMA .)
    OR_RIGHT        reduce using rule 139 (OComma -> COMMA .)
    IDENTIFIER      shift and go to state 262
    DDD             shift and go to state 264
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    StructType                     shift and go to state 56
    DotName                        shift and go to state 225
    Name                           shift and go to state 229
    NewType                        shift and go to state 224
    DotDotDot                      shift and go to state 260
    NType                          shift and go to state 263
    NameOrType                     shift and go to state 261
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    ArgType                        shift and go to state 429
    FuncType                       shift and go to state 221

state 355

    (191) OArgTypeListOComma -> ArgTypeList OComma .

    OR_RIGHT        reduce using rule 191 (OArgTypeListOComma -> ArgTypeList OComma .)
    RPAREN          reduce using rule 191 (OArgTypeListOComma -> ArgTypeList OComma .)


state 356

    (107) ArgList -> LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    CHAN            reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LMINUS          reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 107 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)


state 357

    (186) ArgType -> IDENTIFIER DotDotDot .

    COMMA           reduce using rule 186 (ArgType -> IDENTIFIER DotDotDot .)
    RPAREN          reduce using rule 186 (ArgType -> IDENTIFIER DotDotDot .)
    OR_RIGHT        reduce using rule 186 (ArgType -> IDENTIFIER DotDotDot .)


state 358

    (185) ArgType -> IDENTIFIER NameOrType .

    COMMA           reduce using rule 185 (ArgType -> IDENTIFIER NameOrType .)
    RPAREN          reduce using rule 185 (ArgType -> IDENTIFIER NameOrType .)
    OR_RIGHT        reduce using rule 185 (ArgType -> IDENTIFIER NameOrType .)


state 359

    (207) DotDotDot -> DDD NType .

    COMMA           reduce using rule 207 (DotDotDot -> DDD NType .)
    RPAREN          reduce using rule 207 (DotDotDot -> DDD NType .)
    OR_RIGHT        reduce using rule 207 (DotDotDot -> DDD NType .)


state 360

    (105) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT . IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 430


state 361

    (104) FuncDecl_ -> IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 104 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 104 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)


state 362

    (69) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt . SEMICOL OSimpleStmt

    SEMICOL         shift and go to state 431


state 363

    (66) RangeStmt -> ExprList EQUAL RANGE . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 432
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 364

    (67) RangeStmt -> ExprList COLONEQ RANGE . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 433
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 365

    (65) LoopBody -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (278) cmtlist -> cmtlist . COMMENT
    (172) StmtList -> . Stmt SEMICOL
    (173) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 434
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 335
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 203
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 366

    (117) InterfaceDeclList -> InterfaceDeclList SEMICOL . InterfaceDecl
    (141) OSemi -> SEMICOL .
    (124) InterfaceDecl -> . NewName InDecl
    (125) InterfaceDecl -> . IDENTIFIER
    (126) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (129) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 141 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 278
    LPAREN          shift and go to state 277

    InterfaceDecl                  shift and go to state 435
    NewName                        shift and go to state 276

state 367

    (101) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi . RBRACE

    RBRACE          shift and go to state 436


state 368

    (127) InDecl -> LPAREN . OArgTypeListOComma RPAREN FuncRes
    (190) OArgTypeListOComma -> .
    (191) OArgTypeListOComma -> . ArgTypeList OComma
    (188) ArgTypeList -> . ArgType
    (189) ArgTypeList -> . ArgTypeList COMMA ArgType
    (184) ArgType -> . NameOrType
    (185) ArgType -> . IDENTIFIER NameOrType
    (186) ArgType -> . IDENTIFIER DotDotDot
    (187) ArgType -> . DotDotDot
    (235) NameOrType -> . NType
    (206) DotDotDot -> . DDD
    (207) DotDotDot -> . DDD NType
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    RPAREN          reduce using rule 190 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 262
    DDD             shift and go to state 264
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119

    FuncType                       shift and go to state 221
    ArgTypeList                    shift and go to state 257
    PtrType                        shift and go to state 223
    ArgType                        shift and go to state 258
    NewType                        shift and go to state 224
    OArgTypeListOComma             shift and go to state 437
    DotDotDot                      shift and go to state 260
    NameOrType                     shift and go to state 261
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    ChannelType                    shift and go to state 35
    StructType                     shift and go to state 56
    Name                           shift and go to state 229
    NType                          shift and go to state 263
    DotName                        shift and go to state 225

state 369

    (124) InterfaceDecl -> NewName InDecl .

    SEMICOL         reduce using rule 124 (InterfaceDecl -> NewName InDecl .)
    RBRACE          reduce using rule 124 (InterfaceDecl -> NewName InDecl .)


state 370

    (126) InterfaceDecl -> LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 438


state 371

    (273) ForCompExpr -> LBRACK Expr PIPE RangeStmt . RBRACK

    RBRACK          shift and go to state 439


state 372

    (66) RangeStmt -> ExprList . EQUAL RANGE Expr
    (67) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (153) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 440
    COLONEQ         shift and go to state 441
    COMMA           shift and go to state 107


state 373

    (92) OtherType -> LBRACK OExpr RBRACK NType .

    EQUAL           reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    SEMICOL         reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    RPAREN          reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    LBRACE          reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_ANGLE      reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_LEFT       reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    DDD             reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    COMMA           reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLON           reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLONEQ         reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACE          reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    OR_RIGHT        reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    INTEGER         reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    FLOAT           reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)
    STRING          reduce using rule 92 (OtherType -> LBRACK OExpr RBRACK NType .)


state 374

    (75) IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 75 (IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .)


state 375

    (236) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList . RBRACE
    (64) CaseBlockList -> CaseBlockList . CaseBlock
    (62) CaseBlock -> . Case StmtList
    (57) Case -> . CASE ExprOrTypeList COLON
    (58) Case -> . CASE ExprOrTypeList EQUAL Expr COLON
    (59) Case -> . CASE ExprOrTypeList COLONEQ Expr COLON
    (60) Case -> . DEFAULT COLON

    RBRACE          shift and go to state 444
    CASE            shift and go to state 443
    DEFAULT         shift and go to state 445

    Case                           shift and go to state 442
    CaseBlock                      shift and go to state 446

state 376

    (220) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 220 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 377

    (228) Keyval -> Expr COLON . CompLitExpr
    (231) CompLitExpr -> . Expr
    (232) CompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    LEFT_LEFT       shift and go to state 449
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 448
    PseudoCall                     shift and go to state 38
    CompLitExpr                    shift and go to state 447
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 378

    (230) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 450


state 379

    (178) KeyvalList -> KeyvalList COMMA . Keyval
    (179) KeyvalList -> KeyvalList COMMA . BareCompLitExpr
    (139) OComma -> COMMA .
    (228) Keyval -> . Expr COLON CompLitExpr
    (229) BareCompLitExpr -> . Expr
    (230) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 139 (OComma -> COMMA .)
    LEFT_LEFT       shift and go to state 287
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 286
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 451
    BareCompLitExpr                shift and go to state 452
    PExpr                          shift and go to state 60

state 380

    (181) BracedKeyvalList -> KeyvalList OComma .

    RIGHT_RIGHT     reduce using rule 181 (BracedKeyvalList -> KeyvalList OComma .)


state 381

    (163) DeclList -> DeclList cmtlist Declaration SEMICOL .

    COMMENT         reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANT        reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    VAR             reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FUNCTION        reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    BREAK           reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONTINUE        reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    GOTO            reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    RETURN          reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TYPE            reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FOR             reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    SWITCH          reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IF              reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANTS       reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LMINUS          reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LBRACK          reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRUCT          reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTERFACE       reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CHAN            reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    AMPERS          reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    NOT             reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TIMES           reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    PLUS            reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    MINUS           reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    XOR             reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LPAREN          reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTEGER         reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FLOAT           reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRING          reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    $end            reduce using rule 163 (DeclList -> DeclList cmtlist Declaration SEMICOL .)


state 382

    (8) Imports -> Imports cmtlist Import SEMICOL .

    COMMENT         reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IMPORT          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANT        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    VAR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FUNCTION        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FALLTHROUGH     reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    BREAK           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONTINUE        reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    GOTO            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    RETURN          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    TYPE            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FOR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    SWITCH          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IF              reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANTS       reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    IDENTIFIER      reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LMINUS          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LBRACK          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    STRUCT          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    INTERFACE       reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    CHAN            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    AMPERS          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    NOT             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    TIMES           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    PLUS            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    MINUS           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    XOR             reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    LPAREN          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    INTEGER         reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    FLOAT           reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    STRING          reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)
    $end            reduce using rule 8 (Imports -> Imports cmtlist Import SEMICOL .)


state 383

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .
    (163) DeclList -> DeclList cmtlist . Declaration SEMICOL
    (278) cmtlist -> cmtlist . COMMENT
    (18) Declaration -> . CommonDecl
    (19) Declaration -> . FuncDecl
    (20) Declaration -> . NonDeclStmt
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (103) FuncDecl -> . FUNCTION FuncDecl_ FuncBody
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 2 (SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .)
    COMMENT         shift and go to state 4
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FUNCTION        shift and go to state 36
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 29
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    FuncDecl                       shift and go to state 32
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Declaration                    shift and go to state 290
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 69
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    Prec5Expr_                     shift and go to state 17
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9

state 384

    (215) PExprNoParen -> PExpr LBRACK Expr RBRACK .

    DOT             reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACK          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEFT_LEFT       reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LPAREN          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDE          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MOD             reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL             reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR             reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPERS          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAR          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMES           reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUS            reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUS           reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    XOR             reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OR              reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQEQ            reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    NOTEQ           reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEQ             reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GEQ             reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GREAT           reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LESS            reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPAMP          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OROR            reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SEMICOL         reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACE          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COMMA           reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSEQ          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSEQ         reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMESEQ         reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDEEQ        reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MODEQ           reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OREQ            reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPEQ           reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    CAREQ           reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAREQ        reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSPLUS        reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSMIN        reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQUAL           reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLONEQ         reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RPAREN          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACK          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PIPE            reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_ANGLE     reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACE          reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLON           reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_RIGHT     reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DDD             reduce using rule 215 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)


state 385

    (216) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr RBRACK
    (217) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr COLON OExpr RBRACK
    (146) OExpr -> .
    (147) OExpr -> . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 146 (OExpr -> .)
    COLON           reduce using rule 146 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 345
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 453
    PExpr                          shift and go to state 60

state 386

    (275) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma . RPAREN

    RPAREN          shift and go to state 454


state 387

    (155) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (139) OComma -> COMMA .
    (233) ExprOrType -> . Expr
    (234) ExprOrType -> . NonExprType
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (89) NonExprType -> . FuncType
    (90) NonExprType -> . OtherType
    (91) NonExprType -> . TIMES NonExprType
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (150) FuncLiteralDecl -> . FuncType

    RPAREN          reduce using rule 139 (OComma -> COMMA .)
    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 189
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 184
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 455
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 186
    OtherType                      shift and go to state 187
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 188
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 388

    (276) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD . OComma RPAREN
    (138) OComma -> .
    (139) OComma -> . COMMA

    RPAREN          reduce using rule 138 (OComma -> .)
    COMMA           shift and go to state 331

    OComma                         shift and go to state 456

state 389

    (221) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 221 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 390

    (214) PExprNoParen -> PExpr DOT LPAREN NewType . RPAREN

    RPAREN          shift and go to state 457


state 391

    (213) PExprNoParen -> PExpr DOT LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 458


state 392

    (169) TypeDeclList -> TypeDeclList SEMICOL . TypeDecl
    (141) OSemi -> SEMICOL .
    (40) TypeDecl -> . TypeDeclName NType
    (39) TypeDeclName -> . IDENTIFIER

    RPAREN          reduce using rule 141 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 166

    TypeDeclName                   shift and go to state 165
    TypeDecl                       shift and go to state 459

state 393

    (29) CommonDecl -> NewType LPAREN TypeDeclList OSemi . RPAREN

    RPAREN          shift and go to state 460


state 394

    (76) IfStmt -> IF IfHeader LoopBody ElseIfList .

    SEMICOL         reduce using rule 76 (IfStmt -> IF IfHeader LoopBody ElseIfList .)


state 395

    (80) ElseIfList -> Else .

    SEMICOL         reduce using rule 80 (ElseIfList -> Else .)


state 396

    (79) ElseIfList -> ElseIf . ElseIfList
    (78) ElseIfList -> .
    (79) ElseIfList -> . ElseIf ElseIfList
    (80) ElseIfList -> . Else
    (77) ElseIf -> . ELSE IF IfHeader LoopBody
    (81) Else -> .
    (82) Else -> . ELSE CompoundStmt

  ! reduce/reduce conflict for SEMICOL resolved using rule 78 (ElseIfList -> .)
    SEMICOL         reduce using rule 78 (ElseIfList -> .)
    ELSE            shift and go to state 397

  ! SEMICOL         [ reduce using rule 81 (Else -> .) ]

    ElseIfList                     shift and go to state 461
    Else                           shift and go to state 395
    ElseIf                         shift and go to state 396

state 397

    (77) ElseIf -> ELSE . IF IfHeader LoopBody
    (82) Else -> ELSE . CompoundStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE

    IF              shift and go to state 463
    LBRACE          shift and go to state 202

    CompoundStmt                   shift and go to state 462

state 398

    (123) StructDecl -> TIMES LPAREN . Embed RPAREN OLiteral
    (161) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 400

    Embed                          shift and go to state 464

state 399

    (121) StructDecl -> TIMES Embed . OLiteral
    (156) OLiteral -> .
    (157) OLiteral -> . Literal
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING

    SEMICOL         reduce using rule 156 (OLiteral -> .)
    RBRACE          reduce using rule 156 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 465
    Literal                        shift and go to state 407

state 400

    (161) Embed -> IDENTIFIER .

    RPAREN          reduce using rule 161 (Embed -> IDENTIFIER .)
    INTEGER         reduce using rule 161 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 161 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 161 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 161 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 161 (Embed -> IDENTIFIER .)


state 401

    (122) StructDecl -> LPAREN TIMES . Embed RPAREN OLiteral
    (161) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 400

    Embed                          shift and go to state 466

state 402

    (120) StructDecl -> LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 467


state 403

    (175) NewNameList -> NewNameList COMMA . NewName
    (129) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 145

    NewName                        shift and go to state 468

state 404

    (118) StructDecl -> NewNameList NType . OLiteral
    (156) OLiteral -> .
    (157) OLiteral -> . Literal
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING

    SEMICOL         reduce using rule 156 (OLiteral -> .)
    RBRACE          reduce using rule 156 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    Literal                        shift and go to state 407
    OLiteral                       shift and go to state 469

state 405

    (115) StructDeclList -> StructDeclList SEMICOL . StructDecl
    (141) OSemi -> SEMICOL .
    (118) StructDecl -> . NewNameList NType OLiteral
    (119) StructDecl -> . Embed OLiteral
    (120) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (121) StructDecl -> . TIMES Embed OLiteral
    (122) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (123) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (174) NewNameList -> . NewName
    (175) NewNameList -> . NewNameList COMMA NewName
    (161) Embed -> . IDENTIFIER
    (129) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 141 (OSemi -> SEMICOL .)
    LPAREN          shift and go to state 324
    TIMES           shift and go to state 323
    IDENTIFIER      shift and go to state 327

    NewName                        shift and go to state 321
    StructDecl                     shift and go to state 470
    NewNameList                    shift and go to state 325
    Embed                          shift and go to state 328

state 406

    (99) StructType -> STRUCT LBRACE StructDeclList OSemi . RBRACE

    RBRACE          shift and go to state 471


state 407

    (157) OLiteral -> Literal .

    SEMICOL         reduce using rule 157 (OLiteral -> Literal .)
    RBRACE          reduce using rule 157 (OLiteral -> Literal .)


state 408

    (119) StructDecl -> Embed OLiteral .

    SEMICOL         reduce using rule 119 (StructDecl -> Embed OLiteral .)
    RBRACE          reduce using rule 119 (StructDecl -> Embed OLiteral .)


state 409

    (219) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .

    DOT             reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACK          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEFT_LEFT       reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LPAREN          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDE          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MOD             reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL             reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR             reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPERS          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAR          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMES           reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUS            reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUS           reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    XOR             reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OR              reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQEQ            reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    NOTEQ           reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEQ             reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GEQ             reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GREAT           reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LESS            reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPAMP          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OROR            reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SEMICOL         reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACE          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COMMA           reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSEQ          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSEQ         reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMESEQ         reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDEEQ        reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MODEQ           reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OREQ            reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPEQ           reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    CAREQ           reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL_ASSIGN      reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR_ASSIGN      reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAREQ        reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSPLUS        reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSMIN        reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQUAL           reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLONEQ         reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RPAREN          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACK          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PIPE            reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_ANGLE     reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACE          reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLON           reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_RIGHT     reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DDD             reduce using rule 219 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)


state 410

    (61) CompoundStmt -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (173) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 277 (cmtlist -> .)
    COMMENT         reduce using rule 277 (cmtlist -> .)
    LBRACE          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    SEMICOL         reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 472

state 411

    (14) ImportStmtList -> ImportStmtList SEMICOL ImportStmt .

    SEMICOL         reduce using rule 14 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)
    RPAREN          reduce using rule 14 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)


state 412

    (10) Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .

    SEMICOL         reduce using rule 10 (Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .)


state 413

    (172) StmtList -> Stmt SEMICOL .

    RBRACE          reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    COMMENT         reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    LBRACE          reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    CONSTANT        reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    VAR             reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    BREAK           reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    CONTINUE        reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    GOTO            reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    RETURN          reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    TYPE            reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    FOR             reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    SWITCH          reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    IF              reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    CONSTANTS       reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    LMINUS          reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    LBRACK          reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    STRUCT          reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    INTERFACE       reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    CHAN            reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    AMPERS          reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    NOT             reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    TIMES           reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    PLUS            reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    MINUS           reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    XOR             reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    LPAREN          reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    INTEGER         reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    FLOAT           reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    STRING          reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    FUNCTION        reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    SEMICOL         reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    CASE            reduce using rule 172 (StmtList -> Stmt SEMICOL .)
    DEFAULT         reduce using rule 172 (StmtList -> Stmt SEMICOL .)


state 414

    (151) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist . RBRACE
    (173) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (278) cmtlist -> cmtlist . COMMENT
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 474
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    NonDeclStmt                    shift and go to state 203
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 473
    NewType                        shift and go to state 65
    FuncLiteralDecl                shift and go to state 21
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NewName                        shift and go to state 34
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 415

    (165) VarDeclList -> VarDeclList SEMICOL VarDecl .

    SEMICOL         reduce using rule 165 (VarDeclList -> VarDeclList SEMICOL VarDecl .)
    RPAREN          reduce using rule 165 (VarDeclList -> VarDeclList SEMICOL VarDecl .)


state 416

    (26) CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 26 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)


state 417

    (137) DotName -> Name DOT IDENTIFIER .

    EQUAL           reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    SEMICOL         reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    RPAREN          reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    LBRACE          reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    COMMA           reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    OR_RIGHT        reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    DDD             reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    COLON           reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    COLONEQ         reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    INTEGER         reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    FLOAT           reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    STRING          reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)
    RBRACE          reduce using rule 137 (DotName -> Name DOT IDENTIFIER .)


state 418

    (32) VarDecl -> DeclNameList NType EQUAL ExprList .
    (153) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 32 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 32 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 107


state 419

    (87) NType -> LPAREN NType RPAREN .

    COMMA           reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    RPAREN          reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    OR_RIGHT        reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    EQUAL           reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    SEMICOL         reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    LEFT_ANGLE      reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    LBRACE          reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    DDD             reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    COLON           reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    COLONEQ         reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    LEFT_LEFT       reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    INTEGER         reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    FLOAT           reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    STRING          reduce using rule 87 (NType -> LPAREN NType RPAREN .)
    RBRACE          reduce using rule 87 (NType -> LPAREN NType RPAREN .)


state 420

    (22) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .

    SEMICOL         reduce using rule 22 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)


state 421

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList . OSemi RPAREN
    (167) ConstDeclList -> ConstDeclList . SEMICOL ConstDecl1
    (140) OSemi -> .
    (141) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 476
    RPAREN          reduce using rule 140 (OSemi -> .)

    OSemi                          shift and go to state 475

state 422

    (38) ConstDecl1 -> DeclNameList .
    (34) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (35) ConstDecl -> DeclNameList . NType
    (36) ConstDecl -> DeclNameList . EQUAL ExprList
    (171) DeclNameList -> DeclNameList . COMMA DeclName
    (83) NType -> . FuncType
    (84) NType -> . OtherType
    (85) NType -> . PtrType
    (86) NType -> . DotName
    (87) NType -> . LPAREN NType RPAREN
    (88) NType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 38 (ConstDecl1 -> DeclNameList .)
    RPAREN          reduce using rule 38 (ConstDecl1 -> DeclNameList .)
    EQUAL           shift and go to state 238
    COMMA           shift and go to state 228
    LPAREN          shift and go to state 231
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    NewType                        shift and go to state 224
    FuncType                       shift and go to state 221
    NType                          shift and go to state 239
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 223
    ChannelType                    shift and go to state 35
    DotName                        shift and go to state 225
    Name                           shift and go to state 229

state 423

    (166) ConstDeclList -> ConstDecl1 .

    SEMICOL         reduce using rule 166 (ConstDeclList -> ConstDecl1 .)
    RPAREN          reduce using rule 166 (ConstDeclList -> ConstDecl1 .)


state 424

    (37) ConstDecl1 -> ConstDecl .

    SEMICOL         reduce using rule 37 (ConstDecl1 -> ConstDecl .)
    RPAREN          reduce using rule 37 (ConstDecl1 -> ConstDecl .)


state 425

    (34) ConstDecl -> DeclNameList NType EQUAL ExprList .
    (153) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 34 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 34 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 107


state 426

    (108) ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    CHAN            reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LMINUS          reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 108 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)


state 427

    (113) FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .

    SEMICOL         reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACE          reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LBRACE          reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_ANGLE      reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RPAREN          reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    EQUAL           reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COMMA           reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    OR_RIGHT        reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    DDD             reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLON           reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLONEQ         reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_LEFT       reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    INTEGER         reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    FLOAT           reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    STRING          reduce using rule 113 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)


state 428

    (110) FuncBody -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (173) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 277 (cmtlist -> .)
    COMMENT         reduce using rule 277 (cmtlist -> .)
    LBRACE          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    SEMICOL         reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 477

state 429

    (189) ArgTypeList -> ArgTypeList COMMA ArgType .

    COMMA           reduce using rule 189 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    OR_RIGHT        reduce using rule 189 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    RPAREN          reduce using rule 189 (ArgTypeList -> ArgTypeList COMMA ArgType .)


state 430

    (105) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER . ArgList FuncRes
    (107) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (108) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 130

    ArgList                        shift and go to state 478

state 431

    (69) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL . OSimpleStmt
    (142) OSimpleStmt -> .
    (143) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    LBRACE          reduce using rule 142 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 138
    OSimpleStmt                    shift and go to state 479
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 432

    (66) RangeStmt -> ExprList EQUAL RANGE Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 66 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    LBRACE          reduce using rule 66 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    OROR            shift and go to state 168


state 433

    (67) RangeStmt -> ExprList COLONEQ RANGE Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 67 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    LBRACE          reduce using rule 67 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    OROR            shift and go to state 168


state 434

    (65) LoopBody -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (173) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 277 (cmtlist -> .)
    COMMENT         reduce using rule 277 (cmtlist -> .)
    LBRACE          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    SEMICOL         reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 480

state 435

    (117) InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .

    SEMICOL         reduce using rule 117 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)
    RBRACE          reduce using rule 117 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)


state 436

    (101) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .

    COMMA           reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LBRACE          reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    DDD             reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    STRING          reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLON           reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 101 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)


state 437

    (127) InDecl -> LPAREN OArgTypeListOComma . RPAREN FuncRes

    RPAREN          shift and go to state 481


state 438

    (126) InterfaceDecl -> LPAREN IDENTIFIER RPAREN .

    SEMICOL         reduce using rule 126 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)
    RBRACE          reduce using rule 126 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)


state 439

    (273) ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .

    DOT             reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACK          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEFT_LEFT       reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LPAREN          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDE          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MOD             reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL             reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR             reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPERS          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAR          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMES           reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUS            reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUS           reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    XOR             reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OR              reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQEQ            reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    NOTEQ           reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEQ             reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GEQ             reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GREAT           reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LESS            reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPAMP          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OROR            reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACE          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACK          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SEMICOL         reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLON           reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COMMA           reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_RIGHT     reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSEQ          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSEQ         reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMESEQ         reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDEEQ        reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MODEQ           reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OREQ            reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPEQ           reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    CAREQ           reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL_ASSIGN      reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR_ASSIGN      reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAREQ        reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSPLUS        reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSMIN        reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQUAL           reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLONEQ         reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PIPE            reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RPAREN          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_ANGLE     reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACE          reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DDD             reduce using rule 273 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)


state 440

    (66) RangeStmt -> ExprList EQUAL . RANGE Expr

    RANGE           shift and go to state 363


state 441

    (67) RangeStmt -> ExprList COLONEQ . RANGE Expr

    RANGE           shift and go to state 364


state 442

    (62) CaseBlock -> Case . StmtList
    (172) StmtList -> . Stmt SEMICOL
    (173) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    StmtList                       shift and go to state 482
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 335
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 203
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 443

    (57) Case -> CASE . ExprOrTypeList COLON
    (58) Case -> CASE . ExprOrTypeList EQUAL Expr COLON
    (59) Case -> CASE . ExprOrTypeList COLONEQ Expr COLON
    (154) ExprOrTypeList -> . ExprOrType
    (155) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (233) ExprOrType -> . Expr
    (234) ExprOrType -> . NonExprType
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (89) NonExprType -> . FuncType
    (90) NonExprType -> . OtherType
    (91) NonExprType -> . TIMES NonExprType
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 189
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 184
    Prec4Expr_                     shift and go to state 28
    ExprOrTypeList                 shift and go to state 483
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 296
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 186
    OtherType                      shift and go to state 187
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 188
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 444

    (236) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .

    SEMICOL         reduce using rule 236 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)


state 445

    (60) Case -> DEFAULT . COLON

    COLON           shift and go to state 484


state 446

    (64) CaseBlockList -> CaseBlockList CaseBlock .

    RBRACE          reduce using rule 64 (CaseBlockList -> CaseBlockList CaseBlock .)
    CASE            reduce using rule 64 (CaseBlockList -> CaseBlockList CaseBlock .)
    DEFAULT         reduce using rule 64 (CaseBlockList -> CaseBlockList CaseBlock .)


state 447

    (228) Keyval -> Expr COLON CompLitExpr .

    COMMA           reduce using rule 228 (Keyval -> Expr COLON CompLitExpr .)
    RIGHT_RIGHT     reduce using rule 228 (Keyval -> Expr COLON CompLitExpr .)


state 448

    (231) CompLitExpr -> Expr .
    (260) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 231 (CompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 231 (CompLitExpr -> Expr .)
    OROR            shift and go to state 168


state 449

    (232) CompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (180) BracedKeyvalList -> .
    (181) BracedKeyvalList -> . KeyvalList OComma
    (176) KeyvalList -> . Keyval
    (177) KeyvalList -> . BareCompLitExpr
    (178) KeyvalList -> . KeyvalList COMMA Keyval
    (179) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (228) Keyval -> . Expr COLON CompLitExpr
    (229) BareCompLitExpr -> . Expr
    (230) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 180 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 287
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 286
    PseudoCall                     shift and go to state 38
    KeyvalList                     shift and go to state 288
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Keyval                         shift and go to state 284
    BareCompLitExpr                shift and go to state 289
    PExpr                          shift and go to state 60
    BracedKeyvalList               shift and go to state 485

state 450

    (230) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 230 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 230 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 451

    (178) KeyvalList -> KeyvalList COMMA Keyval .

    COMMA           reduce using rule 178 (KeyvalList -> KeyvalList COMMA Keyval .)
    RIGHT_RIGHT     reduce using rule 178 (KeyvalList -> KeyvalList COMMA Keyval .)


state 452

    (179) KeyvalList -> KeyvalList COMMA BareCompLitExpr .

    COMMA           reduce using rule 179 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 179 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)


state 453

    (216) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . RBRACK
    (217) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . COLON OExpr RBRACK

    RBRACK          shift and go to state 486
    COLON           shift and go to state 487


state 454

    (275) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .

    DOT             reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACK          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEFT_LEFT       reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LPAREN          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDE          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MOD             reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL             reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR             reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPERS          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAR          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMES           reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUS            reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUS           reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    XOR             reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OR              reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQEQ            reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    NOTEQ           reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEQ             reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GEQ             reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GREAT           reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LESS            reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPAMP          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSEQ          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSEQ         reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMESEQ         reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDEEQ        reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MODEQ           reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OREQ            reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPEQ           reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    CAREQ           reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAREQ        reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSPLUS        reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSMIN        reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OROR            reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SEMICOL         reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQUAL           reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLONEQ         reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COMMA           reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACE          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PIPE            reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACK          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RPAREN          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACE          reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLON           reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DDD             reduce using rule 275 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)


state 455

    (155) ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .

    COLON           reduce using rule 155 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    EQUAL           reduce using rule 155 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLONEQ         reduce using rule 155 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COMMA           reduce using rule 155 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    DDD             reduce using rule 155 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    RPAREN          reduce using rule 155 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)


state 456

    (276) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma . RPAREN

    RPAREN          shift and go to state 488


state 457

    (214) PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .

    DOT             reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LBRACK          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LEFT_LEFT       reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LPAREN          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DIVIDE          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MOD             reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHL             reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHR             reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPERS          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPCAR          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    TIMES           reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUS            reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUS           reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    XOR             reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OR              reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    EQEQ            reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    NOTEQ           reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LEQ             reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    GEQ             reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    GREAT           reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LESS            reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPAMP          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OROR            reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SEMICOL         reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    LBRACE          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COMMA           reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUSEQ          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUSEQ         reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    TIMESEQ         reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DIVIDEEQ        reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MODEQ           reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    OREQ            reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPEQ           reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    CAREQ           reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHL_ASSIGN      reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    SHR_ASSIGN      reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    AMPCAREQ        reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PLUSPLUS        reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    MINUSMIN        reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    EQUAL           reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COLONEQ         reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RPAREN          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RBRACK          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    PIPE            reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RIGHT_ANGLE     reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RBRACE          reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    COLON           reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    RIGHT_RIGHT     reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)
    DDD             reduce using rule 214 (PExprNoParen -> PExpr DOT LPAREN NewType RPAREN .)


state 458

    (213) PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 213 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)


state 459

    (169) TypeDeclList -> TypeDeclList SEMICOL TypeDecl .

    SEMICOL         reduce using rule 169 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)
    RPAREN          reduce using rule 169 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)


state 460

    (29) CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 29 (CommonDecl -> NewType LPAREN TypeDeclList OSemi RPAREN .)


state 461

    (79) ElseIfList -> ElseIf ElseIfList .

    SEMICOL         reduce using rule 79 (ElseIfList -> ElseIf ElseIfList .)


state 462

    (82) Else -> ELSE CompoundStmt .

    SEMICOL         reduce using rule 82 (Else -> ELSE CompoundStmt .)


state 463

    (77) ElseIf -> ELSE IF . IfHeader LoopBody
    (74) IfHeader -> . OSimpleStmt
    (75) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (142) OSimpleStmt -> .
    (143) OSimpleStmt -> . SimpleStmt
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 142 (OSimpleStmt -> .)
    LBRACE          reduce using rule 142 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 138
    OSimpleStmt                    shift and go to state 151
    Prec3Expr_                     shift and go to state 10
    IfHeader                       shift and go to state 489
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    Literal                        shift and go to state 40
    PExpr                          shift and go to state 60

state 464

    (123) StructDecl -> TIMES LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 490


state 465

    (121) StructDecl -> TIMES Embed OLiteral .

    SEMICOL         reduce using rule 121 (StructDecl -> TIMES Embed OLiteral .)
    RBRACE          reduce using rule 121 (StructDecl -> TIMES Embed OLiteral .)


state 466

    (122) StructDecl -> LPAREN TIMES Embed . RPAREN OLiteral

    RPAREN          shift and go to state 491


state 467

    (120) StructDecl -> LPAREN Embed RPAREN . OLiteral
    (156) OLiteral -> .
    (157) OLiteral -> . Literal
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING

    SEMICOL         reduce using rule 156 (OLiteral -> .)
    RBRACE          reduce using rule 156 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 492
    Literal                        shift and go to state 407

state 468

    (175) NewNameList -> NewNameList COMMA NewName .

    COMMA           reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)
    LPAREN          reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)
    FUNCTION        reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)
    LBRACK          reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)
    TIMES           reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)
    TYPE            reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)
    STRUCT          reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)
    INTERFACE       reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)
    CHAN            reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)
    LMINUS          reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)
    IDENTIFIER      reduce using rule 175 (NewNameList -> NewNameList COMMA NewName .)


state 469

    (118) StructDecl -> NewNameList NType OLiteral .

    SEMICOL         reduce using rule 118 (StructDecl -> NewNameList NType OLiteral .)
    RBRACE          reduce using rule 118 (StructDecl -> NewNameList NType OLiteral .)


state 470

    (115) StructDeclList -> StructDeclList SEMICOL StructDecl .

    SEMICOL         reduce using rule 115 (StructDeclList -> StructDeclList SEMICOL StructDecl .)
    RBRACE          reduce using rule 115 (StructDeclList -> StructDeclList SEMICOL StructDecl .)


state 471

    (99) StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .

    LBRACE          reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COMMA           reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    STRING          reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    DDD             reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLON           reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 99 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)


state 472

    (61) CompoundStmt -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (173) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (278) cmtlist -> cmtlist . COMMENT
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 493
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 473
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 203
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 473

    (173) StmtList -> StmtList cmtlist Stmt . SEMICOL

    SEMICOL         shift and go to state 494


state 474

    (151) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .

    DOT             reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACK          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEFT_LEFT       reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LPAREN          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDE          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MOD             reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL             reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR             reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPERS          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAR          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMES           reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUS            reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUS           reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    XOR             reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OR              reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQEQ            reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    NOTEQ           reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEQ             reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GEQ             reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GREAT           reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LESS            reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPAMP          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OROR            reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACE          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACK          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COMMA           reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SEMICOL         reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RPAREN          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSEQ          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSEQ         reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMESEQ         reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDEEQ        reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MODEQ           reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OREQ            reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPEQ           reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    CAREQ           reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL_ASSIGN      reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR_ASSIGN      reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAREQ        reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSPLUS        reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSMIN        reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQUAL           reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLONEQ         reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PIPE            reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_ANGLE     reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACE          reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLON           reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_RIGHT     reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DDD             reduce using rule 151 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)


state 475

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi . RPAREN

    RPAREN          shift and go to state 495


state 476

    (167) ConstDeclList -> ConstDeclList SEMICOL . ConstDecl1
    (141) OSemi -> SEMICOL .
    (37) ConstDecl1 -> . ConstDecl
    (38) ConstDecl1 -> . DeclNameList
    (34) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (35) ConstDecl -> . DeclNameList NType
    (36) ConstDecl -> . DeclNameList EQUAL ExprList
    (170) DeclNameList -> . DeclName
    (171) DeclNameList -> . DeclNameList COMMA DeclName
    (182) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 141 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 102

    ConstDecl1                     shift and go to state 496
    DeclName                       shift and go to state 103
    DeclNameList                   shift and go to state 422
    ConstDecl                      shift and go to state 424

state 477

    (110) FuncBody -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (173) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (278) cmtlist -> cmtlist . COMMENT
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 497
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 473
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 203
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 478

    (105) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList . FuncRes
    (108) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (111) FuncRes -> .
    (112) FuncRes -> . FuncRetType
    (113) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (131) FuncRetType -> . FuncType
    (132) FuncRetType -> . OtherType
    (133) FuncRetType -> . PtrType
    (134) FuncRetType -> . DotName
    (135) FuncRetType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    LPAREN          shift and go to state 246
    LBRACE          reduce using rule 111 (FuncRes -> .)
    SEMICOL         reduce using rule 111 (FuncRes -> .)
    LEFT_OR         shift and go to state 252
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    DotName                        shift and go to state 253
    Name                           shift and go to state 229
    FuncType                       shift and go to state 247
    OtherType                      shift and go to state 250
    InterfaceType                  shift and go to state 15
    FuncRes                        shift and go to state 498
    PtrType                        shift and go to state 248
    ChannelType                    shift and go to state 35
    FuncRetType                    shift and go to state 254
    NewType                        shift and go to state 249

state 479

    (69) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 69 (ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .)


state 480

    (65) LoopBody -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (173) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (278) cmtlist -> cmtlist . COMMENT
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 499
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 473
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 203
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 481

    (127) InDecl -> LPAREN OArgTypeListOComma RPAREN . FuncRes
    (111) FuncRes -> .
    (112) FuncRes -> . FuncRetType
    (113) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (131) FuncRetType -> . FuncType
    (132) FuncRetType -> . OtherType
    (133) FuncRetType -> . PtrType
    (134) FuncRetType -> . DotName
    (135) FuncRetType -> . NewType
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (130) PtrType -> . TIMES NType
    (136) DotName -> . Name
    (137) DotName -> . Name DOT IDENTIFIER
    (224) NewType -> . TYPE
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (183) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 111 (FuncRes -> .)
    RBRACE          reduce using rule 111 (FuncRes -> .)
    LEFT_OR         shift and go to state 252
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    TYPE            shift and go to state 61
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    LMINUS          shift and go to state 119
    IDENTIFIER      shift and go to state 113

    StructType                     shift and go to state 56
    DotName                        shift and go to state 253
    Name                           shift and go to state 229
    FuncType                       shift and go to state 247
    OtherType                      shift and go to state 250
    InterfaceType                  shift and go to state 15
    PtrType                        shift and go to state 248
    ChannelType                    shift and go to state 35
    FuncRes                        shift and go to state 500
    FuncRetType                    shift and go to state 254
    NewType                        shift and go to state 249

state 482

    (62) CaseBlock -> Case StmtList .
    (173) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (277) cmtlist -> .
    (278) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 62 (CaseBlock -> Case StmtList .)
    CASE            reduce using rule 62 (CaseBlock -> Case StmtList .)
    DEFAULT         reduce using rule 62 (CaseBlock -> Case StmtList .)
    COMMENT         reduce using rule 277 (cmtlist -> .)
    LBRACE          reduce using rule 277 (cmtlist -> .)
    CONSTANT        reduce using rule 277 (cmtlist -> .)
    VAR             reduce using rule 277 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 277 (cmtlist -> .)
    BREAK           reduce using rule 277 (cmtlist -> .)
    CONTINUE        reduce using rule 277 (cmtlist -> .)
    GOTO            reduce using rule 277 (cmtlist -> .)
    RETURN          reduce using rule 277 (cmtlist -> .)
    TYPE            reduce using rule 277 (cmtlist -> .)
    FOR             reduce using rule 277 (cmtlist -> .)
    SWITCH          reduce using rule 277 (cmtlist -> .)
    IF              reduce using rule 277 (cmtlist -> .)
    CONSTANTS       reduce using rule 277 (cmtlist -> .)
    IDENTIFIER      reduce using rule 277 (cmtlist -> .)
    LMINUS          reduce using rule 277 (cmtlist -> .)
    LBRACK          reduce using rule 277 (cmtlist -> .)
    STRUCT          reduce using rule 277 (cmtlist -> .)
    INTERFACE       reduce using rule 277 (cmtlist -> .)
    CHAN            reduce using rule 277 (cmtlist -> .)
    AMPERS          reduce using rule 277 (cmtlist -> .)
    NOT             reduce using rule 277 (cmtlist -> .)
    TIMES           reduce using rule 277 (cmtlist -> .)
    PLUS            reduce using rule 277 (cmtlist -> .)
    MINUS           reduce using rule 277 (cmtlist -> .)
    XOR             reduce using rule 277 (cmtlist -> .)
    LPAREN          reduce using rule 277 (cmtlist -> .)
    INTEGER         reduce using rule 277 (cmtlist -> .)
    FLOAT           reduce using rule 277 (cmtlist -> .)
    STRING          reduce using rule 277 (cmtlist -> .)
    FUNCTION        reduce using rule 277 (cmtlist -> .)
    SEMICOL         reduce using rule 277 (cmtlist -> .)

    cmtlist                        shift and go to state 501

state 483

    (57) Case -> CASE ExprOrTypeList . COLON
    (58) Case -> CASE ExprOrTypeList . EQUAL Expr COLON
    (59) Case -> CASE ExprOrTypeList . COLONEQ Expr COLON
    (155) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType

    COLON           shift and go to state 504
    EQUAL           shift and go to state 502
    COLONEQ         shift and go to state 503
    COMMA           shift and go to state 505


state 484

    (60) Case -> DEFAULT COLON .

    LBRACE          reduce using rule 60 (Case -> DEFAULT COLON .)
    CONSTANT        reduce using rule 60 (Case -> DEFAULT COLON .)
    VAR             reduce using rule 60 (Case -> DEFAULT COLON .)
    FALLTHROUGH     reduce using rule 60 (Case -> DEFAULT COLON .)
    BREAK           reduce using rule 60 (Case -> DEFAULT COLON .)
    CONTINUE        reduce using rule 60 (Case -> DEFAULT COLON .)
    GOTO            reduce using rule 60 (Case -> DEFAULT COLON .)
    RETURN          reduce using rule 60 (Case -> DEFAULT COLON .)
    TYPE            reduce using rule 60 (Case -> DEFAULT COLON .)
    FOR             reduce using rule 60 (Case -> DEFAULT COLON .)
    SWITCH          reduce using rule 60 (Case -> DEFAULT COLON .)
    IF              reduce using rule 60 (Case -> DEFAULT COLON .)
    CONSTANTS       reduce using rule 60 (Case -> DEFAULT COLON .)
    IDENTIFIER      reduce using rule 60 (Case -> DEFAULT COLON .)
    LMINUS          reduce using rule 60 (Case -> DEFAULT COLON .)
    LBRACK          reduce using rule 60 (Case -> DEFAULT COLON .)
    STRUCT          reduce using rule 60 (Case -> DEFAULT COLON .)
    INTERFACE       reduce using rule 60 (Case -> DEFAULT COLON .)
    CHAN            reduce using rule 60 (Case -> DEFAULT COLON .)
    AMPERS          reduce using rule 60 (Case -> DEFAULT COLON .)
    NOT             reduce using rule 60 (Case -> DEFAULT COLON .)
    TIMES           reduce using rule 60 (Case -> DEFAULT COLON .)
    PLUS            reduce using rule 60 (Case -> DEFAULT COLON .)
    MINUS           reduce using rule 60 (Case -> DEFAULT COLON .)
    XOR             reduce using rule 60 (Case -> DEFAULT COLON .)
    LPAREN          reduce using rule 60 (Case -> DEFAULT COLON .)
    INTEGER         reduce using rule 60 (Case -> DEFAULT COLON .)
    FLOAT           reduce using rule 60 (Case -> DEFAULT COLON .)
    STRING          reduce using rule 60 (Case -> DEFAULT COLON .)
    FUNCTION        reduce using rule 60 (Case -> DEFAULT COLON .)
    SEMICOL         reduce using rule 60 (Case -> DEFAULT COLON .)


state 485

    (232) CompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 506


state 486

    (216) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 216 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)


state 487

    (217) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON . OExpr RBRACK
    (146) OExpr -> .
    (147) OExpr -> . Expr
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 146 (OExpr -> .)
    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 345
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    OExpr                          shift and go to state 507
    PExpr                          shift and go to state 60

state 488

    (276) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .

    DOT             reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACK          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEFT_LEFT       reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LPAREN          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDE          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MOD             reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL             reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR             reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPERS          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAR          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMES           reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUS            reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUS           reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    XOR             reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OR              reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQEQ            reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    NOTEQ           reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEQ             reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GEQ             reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GREAT           reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LESS            reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPAMP          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSEQ          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSEQ         reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMESEQ         reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDEEQ        reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MODEQ           reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OREQ            reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPEQ           reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    CAREQ           reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAREQ        reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSPLUS        reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSMIN        reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OROR            reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SEMICOL         reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQUAL           reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLONEQ         reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COMMA           reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACE          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PIPE            reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACK          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RPAREN          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACE          reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLON           reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DDD             reduce using rule 276 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)


state 489

    (77) ElseIf -> ELSE IF IfHeader . LoopBody
    (65) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 271

    LoopBody                       shift and go to state 508

state 490

    (123) StructDecl -> TIMES LPAREN Embed RPAREN . OLiteral
    (156) OLiteral -> .
    (157) OLiteral -> . Literal
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING

    SEMICOL         reduce using rule 156 (OLiteral -> .)
    RBRACE          reduce using rule 156 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 509
    Literal                        shift and go to state 407

state 491

    (122) StructDecl -> LPAREN TIMES Embed RPAREN . OLiteral
    (156) OLiteral -> .
    (157) OLiteral -> . Literal
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING

    SEMICOL         reduce using rule 156 (OLiteral -> .)
    RBRACE          reduce using rule 156 (OLiteral -> .)
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31

    OLiteral                       shift and go to state 510
    Literal                        shift and go to state 407

state 492

    (120) StructDecl -> LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 120 (StructDecl -> LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 120 (StructDecl -> LPAREN Embed RPAREN OLiteral .)


state 493

    (61) CompoundStmt -> LBRACE cmtlist StmtList cmtlist RBRACE .

    SEMICOL         reduce using rule 61 (CompoundStmt -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 494

    (173) StmtList -> StmtList cmtlist Stmt SEMICOL .

    RBRACE          reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    COMMENT         reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACE          reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANT        reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    VAR             reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    BREAK           reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONTINUE        reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    GOTO            reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    RETURN          reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TYPE            reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FOR             reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SWITCH          reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IF              reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANTS       reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LMINUS          reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACK          reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRUCT          reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTERFACE       reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CHAN            reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    AMPERS          reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    NOT             reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TIMES           reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    PLUS            reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    MINUS           reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    XOR             reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LPAREN          reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTEGER         reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FLOAT           reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRING          reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FUNCTION        reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SEMICOL         reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CASE            reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    DEFAULT         reduce using rule 173 (StmtList -> StmtList cmtlist Stmt SEMICOL .)


state 495

    (23) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 23 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)


state 496

    (167) ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .

    SEMICOL         reduce using rule 167 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)
    RPAREN          reduce using rule 167 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)


state 497

    (110) FuncBody -> LBRACE cmtlist StmtList cmtlist RBRACE .

    SEMICOL         reduce using rule 110 (FuncBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 498

    (105) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 105 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 105 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)


state 499

    (65) LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .

    ELSE            reduce using rule 65 (LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)
    SEMICOL         reduce using rule 65 (LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 500

    (127) InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .

    SEMICOL         reduce using rule 127 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)
    RBRACE          reduce using rule 127 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)


state 501

    (173) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (278) cmtlist -> cmtlist . COMMENT
    (192) Stmt -> .
    (193) Stmt -> . CompoundStmt
    (194) Stmt -> . CommonDecl
    (195) Stmt -> . NonDeclStmt
    (61) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (21) CommonDecl -> . CONSTANT ConstDecl
    (22) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (23) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (24) CommonDecl -> . CONSTANT LPAREN RPAREN
    (25) CommonDecl -> . VAR VarDecl
    (26) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (27) CommonDecl -> . VAR LPAREN RPAREN
    (28) CommonDecl -> . NewType TypeDecl
    (29) CommonDecl -> . NewType LPAREN TypeDeclList OSemi RPAREN
    (30) CommonDecl -> . NewType LPAREN RPAREN
    (196) NonDeclStmt -> . SimpleStmt
    (197) NonDeclStmt -> . ForStmt
    (198) NonDeclStmt -> . SwitchStmt
    (199) NonDeclStmt -> . IfStmt
    (200) NonDeclStmt -> . LabelName COLON Stmt
    (201) NonDeclStmt -> . FALLTHROUGH
    (202) NonDeclStmt -> . BREAK ONewName
    (203) NonDeclStmt -> . CONTINUE ONewName
    (204) NonDeclStmt -> . GOTO NewName
    (205) NonDeclStmt -> . RETURN OExprList
    (224) NewType -> . TYPE
    (41) SimpleStmt -> . Expr
    (42) SimpleStmt -> . Expr PLUSEQ Expr
    (43) SimpleStmt -> . Expr MINUSEQ Expr
    (44) SimpleStmt -> . Expr TIMESEQ Expr
    (45) SimpleStmt -> . Expr DIVIDEEQ Expr
    (46) SimpleStmt -> . Expr MODEQ Expr
    (47) SimpleStmt -> . Expr OREQ Expr
    (48) SimpleStmt -> . Expr AMPEQ Expr
    (49) SimpleStmt -> . Expr CAREQ Expr
    (50) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (51) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (52) SimpleStmt -> . Expr AMPCAREQ Expr
    (53) SimpleStmt -> . ExprList EQUAL ExprList
    (54) SimpleStmt -> . ExprList COLONEQ ExprList
    (55) SimpleStmt -> . Expr PLUSPLUS
    (56) SimpleStmt -> . Expr MINUSMIN
    (73) ForStmt -> . FOR ForBody
    (236) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (76) IfStmt -> . IF IfHeader LoopBody ElseIfList
    (128) LabelName -> . NewName
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (152) ExprList -> . Expr
    (153) ExprList -> . ExprList COMMA Expr
    (129) NewName -> . IDENTIFIER
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 192 (Stmt -> .)
    LBRACE          shift and go to state 202
    CONSTANT        shift and go to state 26
    VAR             shift and go to state 23
    FALLTHROUGH     shift and go to state 14
    BREAK           shift and go to state 59
    CONTINUE        shift and go to state 45
    GOTO            shift and go to state 66
    RETURN          shift and go to state 25
    TYPE            shift and go to state 61
    FOR             shift and go to state 37
    SWITCH          shift and go to state 51
    IF              shift and go to state 74
    CONSTANTS       shift and go to state 47
    IDENTIFIER      shift and go to state 54
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    FUNCTION        shift and go to state 112

    FuncType                       shift and go to state 62
    PExprNoParen                   shift and go to state 48
    Prec4Expr_                     shift and go to state 28
    SimpleStmt                     shift and go to state 63
    Prec3Expr_                     shift and go to state 10
    ForStmt                        shift and go to state 64
    CommonDecl                     shift and go to state 201
    ConvType                       shift and go to state 11
    OtherType                      shift and go to state 33
    IfStmt                         shift and go to state 12
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    Stmt                           shift and go to state 473
    NewType                        shift and go to state 65
    NewName                        shift and go to state 34
    InterfaceType                  shift and go to state 15
    LabelName                      shift and go to state 16
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    NonDeclStmt                    shift and go to state 203
    Expr                           shift and go to state 70
    PseudoCall                     shift and go to state 38
    PExpr                          shift and go to state 60
    FuncLiteralDecl                shift and go to state 21
    ExprList                       shift and go to state 24
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    SwitchStmt                     shift and go to state 43
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    CompoundStmt                   shift and go to state 200

state 502

    (58) Case -> CASE ExprOrTypeList EQUAL . Expr COLON
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 511
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 503

    (59) Case -> CASE ExprOrTypeList COLONEQ . Expr COLON
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    LMINUS          shift and go to state 19
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    TIMES           shift and go to state 72
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113
    FUNCTION        shift and go to state 112

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 62
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    Arrayexp                       shift and go to state 67
    OtherType                      shift and go to state 33
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 512
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 504

    (57) Case -> CASE ExprOrTypeList COLON .

    LBRACE          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANT        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    VAR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FALLTHROUGH     reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    BREAK           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONTINUE        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    GOTO            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    RETURN          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    TYPE            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FOR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    SWITCH          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    IF              reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANTS       reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    IDENTIFIER      reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LMINUS          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LBRACK          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    STRUCT          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    INTERFACE       reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    CHAN            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    AMPERS          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    NOT             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    TIMES           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    PLUS            reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    MINUS           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    XOR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    LPAREN          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    INTEGER         reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FLOAT           reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    STRING          reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    FUNCTION        reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)
    SEMICOL         reduce using rule 57 (Case -> CASE ExprOrTypeList COLON .)


state 505

    (155) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (233) ExprOrType -> . Expr
    (234) ExprOrType -> . NonExprType
    (259) Expr -> . Prec2Expr_
    (260) Expr -> . Expr OROR Prec2Expr_
    (261) Expr -> . CONSTANTS
    (262) Expr -> . Chexpr
    (263) Expr -> . Arrayexp
    (89) NonExprType -> . FuncType
    (90) NonExprType -> . OtherType
    (91) NonExprType -> . TIMES NonExprType
    (257) Prec2Expr_ -> . Prec3Expr_
    (258) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (264) Chexpr -> . LMINUS IDENTIFIER
    (265) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (106) FuncType -> . FUNCTION ArgList FuncRes
    (92) OtherType -> . LBRACK OExpr RBRACK NType
    (93) OtherType -> . StructType
    (94) OtherType -> . InterfaceType
    (95) OtherType -> . ChannelType
    (250) Prec3Expr_ -> . Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (252) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (253) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (254) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (255) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (256) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (99) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (100) StructType -> . STRUCT LBRACE RBRACE
    (101) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (102) InterfaceType -> . INTERFACE LBRACE RBRACE
    (96) ChannelType -> . CHAN NewType
    (97) ChannelType -> . CHAN LMINUS NewType
    (98) ChannelType -> . LMINUS CHAN NewType
    (245) Prec4Expr_ -> . Prec5Expr_
    (246) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (247) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (248) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (249) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (237) Prec5Expr_ -> . UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (240) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (241) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (242) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (243) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (244) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (266) UExpr -> . PExpr
    (267) UExpr -> . AMPERS UExpr
    (268) UExpr -> . NOT UExpr
    (269) UExpr -> . TIMES UExpr
    (270) UExpr -> . PLUS UExpr
    (271) UExpr -> . MINUS UExpr
    (272) UExpr -> . XOR UExpr
    (208) PExpr -> . PExprNoParen
    (209) PExpr -> . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . Literal
    (211) PExprNoParen -> . Name
    (212) PExprNoParen -> . PExpr DOT IDENTIFIER
    (213) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (214) PExprNoParen -> . PExpr DOT LPAREN NewType RPAREN
    (215) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (216) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (218) PExprNoParen -> . PseudoCall
    (219) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (220) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (221) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (222) PExprNoParen -> . FuncLiteral
    (223) PExprNoParen -> . ForCompExpr
    (158) Literal -> . INTEGER
    (159) Literal -> . FLOAT
    (160) Literal -> . STRING
    (183) Name -> . IDENTIFIER
    (274) PseudoCall -> . PExpr LPAREN RPAREN
    (275) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (276) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (225) ConvType -> . FuncType
    (226) ConvType -> . OtherType
    (227) CompType -> . OtherType
    (151) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (273) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (150) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 47
    TIMES           shift and go to state 189
    LMINUS          shift and go to state 19
    FUNCTION        shift and go to state 112
    LBRACK          shift and go to state 44
    STRUCT          shift and go to state 75
    INTERFACE       shift and go to state 39
    CHAN            shift and go to state 49
    AMPERS          shift and go to state 27
    NOT             shift and go to state 46
    PLUS            shift and go to state 53
    MINUS           shift and go to state 30
    XOR             shift and go to state 71
    LPAREN          shift and go to state 73
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 76
    STRING          shift and go to state 31
    IDENTIFIER      shift and go to state 113

    PExprNoParen                   shift and go to state 48
    FuncType                       shift and go to state 184
    Prec4Expr_                     shift and go to state 28
    Prec3Expr_                     shift and go to state 10
    Literal                        shift and go to state 40
    FuncLiteral                    shift and go to state 9
    ConvType                       shift and go to state 11
    Chexpr                         shift and go to state 13
    ExprOrType                     shift and go to state 455
    Arrayexp                       shift and go to state 67
    NonExprType                    shift and go to state 186
    OtherType                      shift and go to state 187
    InterfaceType                  shift and go to state 15
    Prec5Expr_                     shift and go to state 17
    ChannelType                    shift and go to state 35
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 68
    Prec2Expr_                     shift and go to state 20
    FuncLiteralDecl                shift and go to state 21
    Expr                           shift and go to state 188
    PseudoCall                     shift and go to state 38
    UExpr                          shift and go to state 41
    ForCompExpr                    shift and go to state 42
    PExpr                          shift and go to state 60

state 506

    (232) CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 232 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 232 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 507

    (217) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr . RBRACK

    RBRACK          shift and go to state 513


state 508

    (77) ElseIf -> ELSE IF IfHeader LoopBody .

    ELSE            reduce using rule 77 (ElseIf -> ELSE IF IfHeader LoopBody .)
    SEMICOL         reduce using rule 77 (ElseIf -> ELSE IF IfHeader LoopBody .)


state 509

    (123) StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 123 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 123 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)


state 510

    (122) StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 122 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 122 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)


state 511

    (58) Case -> CASE ExprOrTypeList EQUAL Expr . COLON
    (260) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 514
    OROR            shift and go to state 168


state 512

    (59) Case -> CASE ExprOrTypeList COLONEQ Expr . COLON
    (260) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 515
    OROR            shift and go to state 168


state 513

    (217) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 217 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)


state 514

    (58) Case -> CASE ExprOrTypeList EQUAL Expr COLON .

    LBRACE          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANT        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    VAR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FALLTHROUGH     reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    BREAK           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONTINUE        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    GOTO            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    RETURN          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TYPE            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FOR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SWITCH          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IF              reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANTS       reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IDENTIFIER      reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LMINUS          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LBRACK          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRUCT          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTERFACE       reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CHAN            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    AMPERS          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    NOT             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TIMES           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    PLUS            reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MINUS           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    XOR             reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LPAREN          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTEGER         reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FLOAT           reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRING          reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FUNCTION        reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SEMICOL         reduce using rule 58 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)


state 515

    (59) Case -> CASE ExprOrTypeList COLONEQ Expr COLON .

    LBRACE          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANT        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    VAR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FALLTHROUGH     reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    BREAK           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONTINUE        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    GOTO            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    RETURN          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TYPE            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FOR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SWITCH          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IF              reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANTS       reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IDENTIFIER      reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LMINUS          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LBRACK          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRUCT          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTERFACE       reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CHAN            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    AMPERS          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    NOT             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TIMES           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    PLUS            reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MINUS           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    XOR             reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LPAREN          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTEGER         reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FLOAT           reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRING          reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FUNCTION        reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SEMICOL         reduce using rule 59 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 320 resolved using rule (ElseIfList -> <empty>)
WARNING: rejected rule (Else -> <empty>) in state 320
WARNING: reduce/reduce conflict in state 396 resolved using rule (ElseIfList -> <empty>)
WARNING: rejected rule (Else -> <empty>) in state 396
WARNING: Rule (Else -> <empty>) is never reduced
