Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GO
    COMMENT
    LMINUS
    SELECT
    CONSTANTS
    CHAN
    AND_NOT

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     SourceFile -> PackageClause Imports DeclList
Rule 3     PackageClause -> PACKAGE IDENTIFIER SEMICOL
Rule 4     Imports -> empty
Rule 5     Imports -> Imports Import SEMICOL
Rule 6     Import -> IMPORT ImportStmt
Rule 7     Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN
Rule 8     Import -> IMPORT LPAREN RPAREN
Rule 9     ImportStmt -> ImportHere STRING
Rule 10    ImportStmtList -> ImportStmt
Rule 11    ImportStmtList -> ImportStmtList SEMICOL ImportStmt
Rule 12    ImportHere -> empty
Rule 13    ImportHere -> IDENTIFIER
Rule 14    ImportHere -> DOT
Rule 15    Declaration -> CommonDecl
Rule 16    Declaration -> FuncDecl
Rule 17    Declaration -> NonDeclStmt
Rule 18    Declaration -> error
Rule 19    CommonDecl -> CONSTANT ConstDecl
Rule 20    CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN
Rule 21    CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
Rule 22    CommonDecl -> CONSTANT LPAREN RPAREN
Rule 23    CommonDecl -> VAR VarDecl
Rule 24    CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN
Rule 25    CommonDecl -> VAR LPAREN RPAREN
Rule 26    CommonDecl -> TYPE TypeDecl
Rule 27    CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN
Rule 28    CommonDecl -> TYPE LPAREN RPAREN
Rule 29    VarDecl -> DeclNameList NType
Rule 30    VarDecl -> DeclNameList NType EQUAL ExprList
Rule 31    VarDecl -> DeclNameList EQUAL ExprList
Rule 32    ConstDecl -> DeclNameList NType EQUAL ExprList
Rule 33    ConstDecl -> DeclNameList EQUAL ExprList
Rule 34    ConstDecl1 -> ConstDecl
Rule 35    ConstDecl1 -> DeclNameList NType
Rule 36    ConstDecl1 -> DeclNameList
Rule 37    TypeDeclName -> IDENTIFIER
Rule 38    TypeDecl -> TypeDeclName NType
Rule 39    SimpleStmt -> Expr
Rule 40    SimpleStmt -> Expr PLUSEQ Expr
Rule 41    SimpleStmt -> Expr MINUSEQ Expr
Rule 42    SimpleStmt -> Expr TIMESEQ Expr
Rule 43    SimpleStmt -> Expr DIVIDEEQ Expr
Rule 44    SimpleStmt -> Expr MODEQ Expr
Rule 45    SimpleStmt -> Expr OREQ Expr
Rule 46    SimpleStmt -> Expr AMPEQ Expr
Rule 47    SimpleStmt -> Expr CAREQ Expr
Rule 48    SimpleStmt -> Expr SHL_ASSIGN Expr
Rule 49    SimpleStmt -> Expr SHR_ASSIGN Expr
Rule 50    SimpleStmt -> Expr AMPCAREQ Expr
Rule 51    SimpleStmt -> ExprList EQUAL ExprList
Rule 52    SimpleStmt -> ExprList COLONEQ ExprList
Rule 53    SimpleStmt -> Expr PLUSPLUS
Rule 54    SimpleStmt -> Expr MINUSMIN
Rule 55    Case -> CASE ExprOrTypeList COLON
Rule 56    Case -> CASE ExprOrTypeList EQUAL Expr COLON
Rule 57    Case -> CASE ExprOrTypeList COLONEQ Expr COLON
Rule 58    Case -> DEFAULT COLON
Rule 59    CompoundStmt -> LBRACE StmtList RBRACE
Rule 60    CaseBlock -> Case StmtList
Rule 61    CaseBlockList -> empty
Rule 62    CaseBlockList -> CaseBlockList CaseBlock
Rule 63    LoopBody -> LBRACE StmtList RBRACE
Rule 64    RangeStmt -> ExprList EQUAL RANGE Expr
Rule 65    RangeStmt -> ExprList COLONEQ RANGE Expr
Rule 66    RangeStmt -> RANGE Expr
Rule 67    ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
Rule 68    ForHeader -> OSimpleStmt
Rule 69    ForHeader -> RangeStmt
Rule 70    ForBody -> ForHeader LoopBody
Rule 71    ForStmt -> FOR ForBody
Rule 72    IfHeader -> OSimpleStmt
Rule 73    IfHeader -> OSimpleStmt SEMICOL OSimpleStmt
Rule 74    IfStmt -> IF IfHeader LoopBody ElseIfList Else
Rule 75    ElseIf -> ELSE IF IfHeader LoopBody
Rule 76    ElseIfList -> empty
Rule 77    ElseIfList -> ElseIfList ElseIf
Rule 78    Else -> empty
Rule 79    Else -> ELSE CompoundStmt
Rule 80    NType -> FuncType
Rule 81    NType -> OtherType
Rule 82    NType -> PtrType
Rule 83    NType -> DotName
Rule 84    NType -> LPAREN NType RPAREN
Rule 85    NonExprType -> FuncType
Rule 86    NonExprType -> OtherType
Rule 87    NonExprType -> TIMES NonExprType
Rule 88    OtherType -> LBRACK OExpr RBRACK NType
Rule 89    OtherType -> MAP LBRACK NType RBRACK NType
Rule 90    OtherType -> StructType
Rule 91    OtherType -> InterfaceType
Rule 92    StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE
Rule 93    StructType -> STRUCT LBRACE RBRACE
Rule 94    InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
Rule 95    InterfaceType -> INTERFACE LBRACE RBRACE
Rule 96    FuncDecl -> FUNCTION FuncDecl_ FuncBody
Rule 97    FuncDecl_ -> IDENTIFIER ArgList FuncRes
Rule 98    FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
Rule 99    FuncType -> FUNCTION ArgList FuncRes
Rule 100   ArgList -> LPAREN OArgTypeListOComma RPAREN
Rule 101   ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN
Rule 102   FuncBody -> empty
Rule 103   FuncBody -> LBRACE StmtList RBRACE
Rule 104   FuncRes -> empty
Rule 105   FuncRes -> FuncRetType
Rule 106   FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT
Rule 107   StructDeclList -> StructDecl
Rule 108   StructDeclList -> StructDeclList SEMICOL StructDecl
Rule 109   InterfaceDeclList -> InterfaceDecl
Rule 110   InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl
Rule 111   StructDecl -> NewNameList NType OLiteral
Rule 112   StructDecl -> Embed OLiteral
Rule 113   StructDecl -> LPAREN Embed RPAREN OLiteral
Rule 114   StructDecl -> TIMES Embed OLiteral
Rule 115   StructDecl -> LPAREN TIMES Embed RPAREN OLiteral
Rule 116   StructDecl -> TIMES LPAREN Embed RPAREN OLiteral
Rule 117   InterfaceDecl -> NewName InDecl
Rule 118   InterfaceDecl -> IDENTIFIER
Rule 119   InterfaceDecl -> LPAREN IDENTIFIER RPAREN
Rule 120   InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes
Rule 121   LabelName -> NewName
Rule 122   NewName -> IDENTIFIER
Rule 123   PtrType -> TIMES NType
Rule 124   FuncRetType -> FuncType
Rule 125   FuncRetType -> OtherType
Rule 126   FuncRetType -> PtrType
Rule 127   FuncRetType -> DotName
Rule 128   DotName -> Name
Rule 129   DotName -> Name DOT IDENTIFIER
Rule 130   OComma -> empty
Rule 131   OComma -> COMMA
Rule 132   OSemi -> empty
Rule 133   OSemi -> SEMICOL
Rule 134   OSimpleStmt -> empty
Rule 135   OSimpleStmt -> SimpleStmt
Rule 136   ONewName -> empty
Rule 137   ONewName -> NewName
Rule 138   OExpr -> empty
Rule 139   OExpr -> Expr
Rule 140   OExprList -> empty
Rule 141   OExprList -> ExprList
Rule 142   FuncLiteralDecl -> FuncType
Rule 143   FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE
Rule 144   ExprList -> Expr
Rule 145   ExprList -> ExprList COMMA Expr
Rule 146   ExprOrTypeList -> ExprOrType
Rule 147   ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType
Rule 148   OLiteral -> empty
Rule 149   OLiteral -> Literal
Rule 150   Literal -> INTEGER
Rule 151   Literal -> FLOAT
Rule 152   Literal -> STRING
Rule 153   Embed -> IDENTIFIER
Rule 154   DeclList -> empty
Rule 155   DeclList -> DeclList Declaration SEMICOL
Rule 156   VarDeclList -> VarDecl
Rule 157   VarDeclList -> VarDeclList SEMICOL VarDecl
Rule 158   ConstDeclList -> ConstDecl1
Rule 159   ConstDeclList -> ConstDeclList SEMICOL ConstDecl1
Rule 160   TypeDeclList -> TypeDecl
Rule 161   TypeDeclList -> TypeDeclList SEMICOL TypeDecl
Rule 162   DeclNameList -> DeclName
Rule 163   DeclNameList -> DeclNameList COMMA DeclName
Rule 164   StmtList -> Stmt
Rule 165   StmtList -> StmtList SEMICOL Stmt
Rule 166   NewNameList -> NewName
Rule 167   NewNameList -> NewNameList COMMA NewName
Rule 168   KeyvalList -> Keyval
Rule 169   KeyvalList -> BareCompLitExpr
Rule 170   KeyvalList -> KeyvalList COMMA Keyval
Rule 171   KeyvalList -> KeyvalList COMMA BareCompLitExpr
Rule 172   BracedKeyvalList -> empty
Rule 173   BracedKeyvalList -> KeyvalList OComma
Rule 174   DeclName -> IDENTIFIER
Rule 175   Name -> IDENTIFIER
Rule 176   ArgType -> NameOrType
Rule 177   ArgType -> IDENTIFIER NameOrType
Rule 178   ArgType -> IDENTIFIER DotDotDot
Rule 179   ArgType -> DotDotDot
Rule 180   ArgTypeList -> ArgType
Rule 181   ArgTypeList -> ArgTypeList COMMA ArgType
Rule 182   OArgTypeListOComma -> empty
Rule 183   OArgTypeListOComma -> ArgTypeList OComma
Rule 184   Stmt -> empty
Rule 185   Stmt -> CompoundStmt
Rule 186   Stmt -> CommonDecl
Rule 187   Stmt -> NonDeclStmt
Rule 188   NonDeclStmt -> SimpleStmt
Rule 189   NonDeclStmt -> ForStmt
Rule 190   NonDeclStmt -> SwitchStmt
Rule 191   NonDeclStmt -> IfStmt
Rule 192   NonDeclStmt -> LabelName COLON Stmt
Rule 193   NonDeclStmt -> FALLTHROUGH
Rule 194   NonDeclStmt -> BREAK ONewName
Rule 195   NonDeclStmt -> CONTINUE ONewName
Rule 196   NonDeclStmt -> DEFER PseudoCall
Rule 197   NonDeclStmt -> GOTO NewName
Rule 198   NonDeclStmt -> RETURN OExprList
Rule 199   DotDotDot -> DDD
Rule 200   DotDotDot -> DDD NType
Rule 201   PExpr -> PExprNoParen
Rule 202   PExpr -> LPAREN ExprOrType RPAREN
Rule 203   PExprNoParen -> Literal
Rule 204   PExprNoParen -> Name
Rule 205   PExprNoParen -> PExpr DOT IDENTIFIER
Rule 206   PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN
Rule 207   PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN
Rule 208   PExprNoParen -> PExpr LBRACK Expr RBRACK
Rule 209   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK
Rule 210   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
Rule 211   PExprNoParen -> PseudoCall
Rule 212   PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
Rule 213   PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 214   PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 215   PExprNoParen -> FuncLiteral
Rule 216   PExprNoParen -> ForCompExpr
Rule 217   ConvType -> FuncType
Rule 218   ConvType -> OtherType
Rule 219   CompType -> OtherType
Rule 220   StartCompLit -> empty
Rule 221   Keyval -> Expr COLON CompLitExpr
Rule 222   BareCompLitExpr -> Expr
Rule 223   BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 224   CompLitExpr -> Expr
Rule 225   CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 226   ExprOrType -> Expr
Rule 227   ExprOrType -> NonExprType
Rule 228   NameOrType -> NType
Rule 229   SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE
Rule 230   Prec5Expr_ -> UExpr
Rule 231   Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr
Rule 232   Prec5Expr_ -> Prec5Expr_ MOD UExpr
Rule 233   Prec5Expr_ -> Prec5Expr_ SHL UExpr
Rule 234   Prec5Expr_ -> Prec5Expr_ SHR UExpr
Rule 235   Prec5Expr_ -> Prec5Expr_ AMPERS UExpr
Rule 236   Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr
Rule 237   Prec5Expr_ -> Prec5Expr_ TIMES UExpr
Rule 238   Prec4Expr_ -> Prec5Expr_
Rule 239   Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_
Rule 240   Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_
Rule 241   Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_
Rule 242   Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_
Rule 243   Prec3Expr_ -> Prec4Expr_
Rule 244   Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_
Rule 245   Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_
Rule 246   Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_
Rule 247   Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_
Rule 248   Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_
Rule 249   Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_
Rule 250   Prec2Expr_ -> Prec3Expr_
Rule 251   Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_
Rule 252   Expr -> Prec2Expr_
Rule 253   Expr -> Expr OROR Prec2Expr_
Rule 254   UExpr -> PExpr
Rule 255   UExpr -> AMPERS UExpr
Rule 256   UExpr -> NOT UExpr
Rule 257   UExpr -> TIMES UExpr
Rule 258   UExpr -> PLUS UExpr
Rule 259   UExpr -> MINUS UExpr
Rule 260   UExpr -> XOR UExpr
Rule 261   ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK
Rule 262   PseudoCall -> PExpr LPAREN RPAREN
Rule 263   PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN
Rule 264   PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
Rule 265   empty -> <empty>

Terminals, with rules where they appear

AMPAMP               : 251
AMPCAR               : 236
AMPCAREQ             : 50
AMPEQ                : 46
AMPERS               : 235 255
AND_NOT              : 
BREAK                : 194
CAREQ                : 47
CASE                 : 55 56 57
CHAN                 : 
COLON                : 55 56 57 58 192 209 210 210 221
COLONEQ              : 52 57 65
COMMA                : 131 145 147 163 167 170 171 181
COMMENT              : 
CONSTANT             : 19 20 21 22
CONSTANTS            : 
CONTINUE             : 195
DDD                  : 199 200 264
DEFAULT              : 58
DEFER                : 196
DIVIDE               : 231
DIVIDEEQ             : 43
DOT                  : 14 129 205 206 207
ELSE                 : 75 79
EQEQ                 : 244
EQUAL                : 30 31 32 33 51 56 64
FALLTHROUGH          : 193
FLOAT                : 151
FOR                  : 71
FUNCTION             : 96 99
GEQ                  : 247
GO                   : 
GOTO                 : 197
GREAT                : 248
IDENTIFIER           : 3 13 37 97 98 118 119 122 129 153 174 175 177 178 205
IF                   : 74 75
IMPORT               : 6 7 8
INTEGER              : 150
INTERFACE            : 94 95
LBRACE               : 59 63 92 93 94 95 103 143 229
LBRACK               : 88 89 208 209 210 261
LEFT_ANGLE           : 212
LEFT_LEFT            : 213 214 223 225
LEFT_OR              : 98 106
LEQ                  : 246
LESS                 : 249
LMINUS               : 
LPAREN               : 7 8 20 21 22 24 25 27 28 84 100 101 113 115 116 119 120 202 206 207 262 263 264
MAP                  : 89
MINUS                : 240 259
MINUSEQ              : 41
MINUSMIN             : 54
MOD                  : 232
MODEQ                : 44
NOT                  : 256
NOTEQ                : 245
OR                   : 242
OREQ                 : 45
OROR                 : 253
OR_RIGHT             : 98 106
PACKAGE              : 3
PIPE                 : 261
PLUS                 : 239 258
PLUSEQ               : 40
PLUSPLUS             : 53
RANGE                : 64 65 66
RBRACE               : 59 63 92 93 94 95 103 143 229
RBRACK               : 88 89 208 209 210 261
RETURN               : 198
RIGHT_ANGLE          : 212
RIGHT_RIGHT          : 213 214 223 225
RPAREN               : 7 8 20 21 22 24 25 27 28 84 100 101 113 115 116 119 120 202 206 207 262 263 264
SELECT               : 
SEMICOL              : 3 5 11 21 67 67 73 108 110 133 155 157 159 161 165
SHL                  : 233
SHL_ASSIGN           : 48
SHR                  : 234
SHR_ASSIGN           : 49
STRING               : 9 152
STRUCT               : 92 93
SWITCH               : 229
TIMES                : 87 114 115 116 123 237 257
TIMESEQ              : 42
TYPE                 : 26 27 28 207
VAR                  : 23 24 25
XOR                  : 241 260
error                : 18

Nonterminals, with rules where they appear

ArgList              : 97 98 99 101
ArgType              : 180 181
ArgTypeList          : 181 183
BareCompLitExpr      : 169 171
BracedKeyvalList     : 213 214 223 225
Case                 : 60
CaseBlock            : 62
CaseBlockList        : 62 229
CommonDecl           : 15 186
CompLitExpr          : 221
CompType             : 213
CompoundStmt         : 79 185
ConstDecl            : 19 20 21 34
ConstDecl1           : 158 159
ConstDeclList        : 21 159
ConvType             : 212
DeclList             : 2 155
DeclName             : 162 163
DeclNameList         : 29 30 31 32 33 35 36 163
Declaration          : 155
DotDotDot            : 178 179
DotName              : 83 127
Else                 : 74
ElseIf               : 77
ElseIfList           : 74 77
Embed                : 112 113 114 115 116
Expr                 : 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 53 54 56 57 64 65 66 139 144 145 208 212 221 222 224 226 253 261
ExprList             : 30 31 32 33 51 51 52 52 64 65 141 145
ExprOrType           : 146 147 202 206
ExprOrTypeList       : 55 56 57 147 263 264
ForBody              : 71
ForCompExpr          : 216
ForHeader            : 70
ForStmt              : 189
FuncBody             : 96
FuncDecl             : 16
FuncDecl_            : 96
FuncLiteral          : 215
FuncLiteralDecl      : 143
FuncRes              : 97 98 99 120
FuncRetType          : 105
FuncType             : 80 85 124 142 217
IfHeader             : 74 75 229
IfStmt               : 191
Import               : 5
ImportHere           : 9
ImportStmt           : 6 10 11
ImportStmtList       : 7 11
Imports              : 2 5
InDecl               : 117
InterfaceDecl        : 109 110
InterfaceDeclList    : 94 110
InterfaceType        : 91
Keyval               : 168 170
KeyvalList           : 170 171 173
LabelName            : 192
Literal              : 149 203
LoopBody             : 70 74 75
NType                : 29 30 32 35 38 84 88 89 89 111 123 200 228
Name                 : 128 129 204
NameOrType           : 176 177
NewName              : 117 121 137 166 167 197
NewNameList          : 111 167
NonDeclStmt          : 17 187
NonExprType          : 87 227
OArgTypeListOComma   : 98 100 101 106 120
OComma               : 173 183 212 263 264
OExpr                : 88 209 209 210 210 210
OExprList            : 198
OLiteral             : 111 112 113 114 115 116
ONewName             : 194 195
OSemi                : 7 20 21 24 27 92 94
OSimpleStmt          : 67 67 67 68 72 73 73
OtherType            : 81 86 125 218 219
PExpr                : 205 206 207 208 209 210 214 254 262 263 264
PExprNoParen         : 201
PackageClause        : 2
Prec2Expr_           : 251 252 253
Prec3Expr_           : 244 245 246 247 248 249 250 251
Prec4Expr_           : 239 240 241 242 243 244 245 246 247 248 249
Prec5Expr_           : 231 232 233 234 235 236 237 238 239 240 241 242
PseudoCall           : 196 211
PtrType              : 82 126
RangeStmt            : 69 261
SimpleStmt           : 135 188
SourceFile           : 1
StartCompLit         : 
Stmt                 : 164 165 192
StmtList             : 59 60 63 103 143 165
StructDecl           : 107 108
StructDeclList       : 92 108
StructType           : 90
SwitchStmt           : 190
TypeDecl             : 26 160 161
TypeDeclList         : 27 161
TypeDeclName         : 38
UExpr                : 230 231 232 233 234 235 236 237 255 256 257 258 259 260
VarDecl              : 23 156 157
VarDeclList          : 24 157
empty                : 4 12 61 76 78 102 104 130 132 134 136 138 140 148 154 172 182 184 220
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (2) SourceFile -> . PackageClause Imports DeclList
    (3) PackageClause -> . PACKAGE IDENTIFIER SEMICOL

    PACKAGE         shift and go to state 2

    start                          shift and go to state 4
    PackageClause                  shift and go to state 1
    SourceFile                     shift and go to state 3

state 1

    (2) SourceFile -> PackageClause . Imports DeclList
    (4) Imports -> . empty
    (5) Imports -> . Imports Import SEMICOL
    (265) empty -> .

    IMPORT          reduce using rule 265 (empty -> .)
    error           reduce using rule 265 (empty -> .)
    CONSTANT        reduce using rule 265 (empty -> .)
    VAR             reduce using rule 265 (empty -> .)
    TYPE            reduce using rule 265 (empty -> .)
    FUNCTION        reduce using rule 265 (empty -> .)
    FALLTHROUGH     reduce using rule 265 (empty -> .)
    BREAK           reduce using rule 265 (empty -> .)
    CONTINUE        reduce using rule 265 (empty -> .)
    DEFER           reduce using rule 265 (empty -> .)
    GOTO            reduce using rule 265 (empty -> .)
    RETURN          reduce using rule 265 (empty -> .)
    FOR             reduce using rule 265 (empty -> .)
    SWITCH          reduce using rule 265 (empty -> .)
    IF              reduce using rule 265 (empty -> .)
    IDENTIFIER      reduce using rule 265 (empty -> .)
    AMPERS          reduce using rule 265 (empty -> .)
    NOT             reduce using rule 265 (empty -> .)
    TIMES           reduce using rule 265 (empty -> .)
    PLUS            reduce using rule 265 (empty -> .)
    MINUS           reduce using rule 265 (empty -> .)
    XOR             reduce using rule 265 (empty -> .)
    LPAREN          reduce using rule 265 (empty -> .)
    INTEGER         reduce using rule 265 (empty -> .)
    FLOAT           reduce using rule 265 (empty -> .)
    STRING          reduce using rule 265 (empty -> .)
    LBRACK          reduce using rule 265 (empty -> .)
    MAP             reduce using rule 265 (empty -> .)
    STRUCT          reduce using rule 265 (empty -> .)
    INTERFACE       reduce using rule 265 (empty -> .)
    $end            reduce using rule 265 (empty -> .)

    Imports                        shift and go to state 5
    empty                          shift and go to state 6

state 2

    (3) PackageClause -> PACKAGE . IDENTIFIER SEMICOL

    IDENTIFIER      shift and go to state 7


state 3

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 4

    (0) S' -> start .



state 5

    (2) SourceFile -> PackageClause Imports . DeclList
    (5) Imports -> Imports . Import SEMICOL
    (154) DeclList -> . empty
    (155) DeclList -> . DeclList Declaration SEMICOL
    (6) Import -> . IMPORT ImportStmt
    (7) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (8) Import -> . IMPORT LPAREN RPAREN
    (265) empty -> .

    IMPORT          shift and go to state 9
    error           reduce using rule 265 (empty -> .)
    CONSTANT        reduce using rule 265 (empty -> .)
    VAR             reduce using rule 265 (empty -> .)
    TYPE            reduce using rule 265 (empty -> .)
    FUNCTION        reduce using rule 265 (empty -> .)
    FALLTHROUGH     reduce using rule 265 (empty -> .)
    BREAK           reduce using rule 265 (empty -> .)
    CONTINUE        reduce using rule 265 (empty -> .)
    DEFER           reduce using rule 265 (empty -> .)
    GOTO            reduce using rule 265 (empty -> .)
    RETURN          reduce using rule 265 (empty -> .)
    FOR             reduce using rule 265 (empty -> .)
    SWITCH          reduce using rule 265 (empty -> .)
    IF              reduce using rule 265 (empty -> .)
    IDENTIFIER      reduce using rule 265 (empty -> .)
    AMPERS          reduce using rule 265 (empty -> .)
    NOT             reduce using rule 265 (empty -> .)
    TIMES           reduce using rule 265 (empty -> .)
    PLUS            reduce using rule 265 (empty -> .)
    MINUS           reduce using rule 265 (empty -> .)
    XOR             reduce using rule 265 (empty -> .)
    LPAREN          reduce using rule 265 (empty -> .)
    INTEGER         reduce using rule 265 (empty -> .)
    FLOAT           reduce using rule 265 (empty -> .)
    STRING          reduce using rule 265 (empty -> .)
    LBRACK          reduce using rule 265 (empty -> .)
    MAP             reduce using rule 265 (empty -> .)
    STRUCT          reduce using rule 265 (empty -> .)
    INTERFACE       reduce using rule 265 (empty -> .)
    $end            reduce using rule 265 (empty -> .)

    DeclList                       shift and go to state 8
    Import                         shift and go to state 10
    empty                          shift and go to state 11

state 6

    (4) Imports -> empty .

    IMPORT          reduce using rule 4 (Imports -> empty .)
    error           reduce using rule 4 (Imports -> empty .)
    CONSTANT        reduce using rule 4 (Imports -> empty .)
    VAR             reduce using rule 4 (Imports -> empty .)
    TYPE            reduce using rule 4 (Imports -> empty .)
    FUNCTION        reduce using rule 4 (Imports -> empty .)
    FALLTHROUGH     reduce using rule 4 (Imports -> empty .)
    BREAK           reduce using rule 4 (Imports -> empty .)
    CONTINUE        reduce using rule 4 (Imports -> empty .)
    DEFER           reduce using rule 4 (Imports -> empty .)
    GOTO            reduce using rule 4 (Imports -> empty .)
    RETURN          reduce using rule 4 (Imports -> empty .)
    FOR             reduce using rule 4 (Imports -> empty .)
    SWITCH          reduce using rule 4 (Imports -> empty .)
    IF              reduce using rule 4 (Imports -> empty .)
    IDENTIFIER      reduce using rule 4 (Imports -> empty .)
    AMPERS          reduce using rule 4 (Imports -> empty .)
    NOT             reduce using rule 4 (Imports -> empty .)
    TIMES           reduce using rule 4 (Imports -> empty .)
    PLUS            reduce using rule 4 (Imports -> empty .)
    MINUS           reduce using rule 4 (Imports -> empty .)
    XOR             reduce using rule 4 (Imports -> empty .)
    LPAREN          reduce using rule 4 (Imports -> empty .)
    INTEGER         reduce using rule 4 (Imports -> empty .)
    FLOAT           reduce using rule 4 (Imports -> empty .)
    STRING          reduce using rule 4 (Imports -> empty .)
    LBRACK          reduce using rule 4 (Imports -> empty .)
    MAP             reduce using rule 4 (Imports -> empty .)
    STRUCT          reduce using rule 4 (Imports -> empty .)
    INTERFACE       reduce using rule 4 (Imports -> empty .)
    $end            reduce using rule 4 (Imports -> empty .)


state 7

    (3) PackageClause -> PACKAGE IDENTIFIER . SEMICOL

    SEMICOL         shift and go to state 12


state 8

    (2) SourceFile -> PackageClause Imports DeclList .
    (155) DeclList -> DeclList . Declaration SEMICOL
    (15) Declaration -> . CommonDecl
    (16) Declaration -> . FuncDecl
    (17) Declaration -> . NonDeclStmt
    (18) Declaration -> . error
    (19) CommonDecl -> . CONSTANT ConstDecl
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (22) CommonDecl -> . CONSTANT LPAREN RPAREN
    (23) CommonDecl -> . VAR VarDecl
    (24) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (25) CommonDecl -> . VAR LPAREN RPAREN
    (26) CommonDecl -> . TYPE TypeDecl
    (27) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (28) CommonDecl -> . TYPE LPAREN RPAREN
    (96) FuncDecl -> . FUNCTION FuncDecl_ FuncBody
    (188) NonDeclStmt -> . SimpleStmt
    (189) NonDeclStmt -> . ForStmt
    (190) NonDeclStmt -> . SwitchStmt
    (191) NonDeclStmt -> . IfStmt
    (192) NonDeclStmt -> . LabelName COLON Stmt
    (193) NonDeclStmt -> . FALLTHROUGH
    (194) NonDeclStmt -> . BREAK ONewName
    (195) NonDeclStmt -> . CONTINUE ONewName
    (196) NonDeclStmt -> . DEFER PseudoCall
    (197) NonDeclStmt -> . GOTO NewName
    (198) NonDeclStmt -> . RETURN OExprList
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (71) ForStmt -> . FOR ForBody
    (229) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (74) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    $end            reduce using rule 2 (SourceFile -> PackageClause Imports DeclList .)
    error           shift and go to state 58
    CONSTANT        shift and go to state 28
    VAR             shift and go to state 25
    TYPE            shift and go to state 44
    FUNCTION        shift and go to state 37
    FALLTHROUGH     shift and go to state 19
    BREAK           shift and go to state 57
    CONTINUE        shift and go to state 47
    DEFER           shift and go to state 18
    GOTO            shift and go to state 63
    RETURN          shift and go to state 50
    FOR             shift and go to state 38
    SWITCH          shift and go to state 51
    IF              shift and go to state 70
    IDENTIFIER      shift and go to state 54
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    LBRACK          shift and go to state 46
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 61
    Prec3Expr_                     shift and go to state 14
    ForStmt                        shift and go to state 62
    CommonDecl                     shift and go to state 31
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    IfStmt                         shift and go to state 34
    FuncType                       shift and go to state 60
    FuncLiteralDecl                shift and go to state 24
    FuncDecl                       shift and go to state 33
    NewName                        shift and go to state 35
    InterfaceType                  shift and go to state 53
    LabelName                      shift and go to state 21
    Declaration                    shift and go to state 52
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    NonDeclStmt                    shift and go to state 65
    Expr                           shift and go to state 66
    Prec5Expr_                     shift and go to state 22
    PseudoCall                     shift and go to state 39
    PExpr                          shift and go to state 59
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    SwitchStmt                     shift and go to state 45
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13

state 9

    (6) Import -> IMPORT . ImportStmt
    (7) Import -> IMPORT . LPAREN ImportStmtList OSemi RPAREN
    (8) Import -> IMPORT . LPAREN RPAREN
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> . empty
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT
    (265) empty -> .

    LPAREN          shift and go to state 76
    IDENTIFIER      shift and go to state 74
    DOT             shift and go to state 75
    STRING          reduce using rule 265 (empty -> .)

    ImportHere                     shift and go to state 73
    ImportStmt                     shift and go to state 77
    empty                          shift and go to state 78

state 10

    (5) Imports -> Imports Import . SEMICOL

    SEMICOL         shift and go to state 79


state 11

    (154) DeclList -> empty .

    error           reduce using rule 154 (DeclList -> empty .)
    CONSTANT        reduce using rule 154 (DeclList -> empty .)
    VAR             reduce using rule 154 (DeclList -> empty .)
    TYPE            reduce using rule 154 (DeclList -> empty .)
    FUNCTION        reduce using rule 154 (DeclList -> empty .)
    FALLTHROUGH     reduce using rule 154 (DeclList -> empty .)
    BREAK           reduce using rule 154 (DeclList -> empty .)
    CONTINUE        reduce using rule 154 (DeclList -> empty .)
    DEFER           reduce using rule 154 (DeclList -> empty .)
    GOTO            reduce using rule 154 (DeclList -> empty .)
    RETURN          reduce using rule 154 (DeclList -> empty .)
    FOR             reduce using rule 154 (DeclList -> empty .)
    SWITCH          reduce using rule 154 (DeclList -> empty .)
    IF              reduce using rule 154 (DeclList -> empty .)
    IDENTIFIER      reduce using rule 154 (DeclList -> empty .)
    AMPERS          reduce using rule 154 (DeclList -> empty .)
    NOT             reduce using rule 154 (DeclList -> empty .)
    TIMES           reduce using rule 154 (DeclList -> empty .)
    PLUS            reduce using rule 154 (DeclList -> empty .)
    MINUS           reduce using rule 154 (DeclList -> empty .)
    XOR             reduce using rule 154 (DeclList -> empty .)
    LPAREN          reduce using rule 154 (DeclList -> empty .)
    INTEGER         reduce using rule 154 (DeclList -> empty .)
    FLOAT           reduce using rule 154 (DeclList -> empty .)
    STRING          reduce using rule 154 (DeclList -> empty .)
    LBRACK          reduce using rule 154 (DeclList -> empty .)
    MAP             reduce using rule 154 (DeclList -> empty .)
    STRUCT          reduce using rule 154 (DeclList -> empty .)
    INTERFACE       reduce using rule 154 (DeclList -> empty .)
    $end            reduce using rule 154 (DeclList -> empty .)


state 12

    (3) PackageClause -> PACKAGE IDENTIFIER SEMICOL .

    IMPORT          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    error           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANT        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    VAR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TYPE            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FUNCTION        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FALLTHROUGH     reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    BREAK           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONTINUE        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    DEFER           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    GOTO            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    RETURN          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FOR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    SWITCH          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IF              reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IDENTIFIER      reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    AMPERS          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    NOT             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TIMES           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    PLUS            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MINUS           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    XOR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LPAREN          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTEGER         reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FLOAT           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRING          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LBRACK          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MAP             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRUCT          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTERFACE       reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    $end            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)


state 13

    (215) PExprNoParen -> FuncLiteral .

    DOT             reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    LBRACK          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    LEFT_LEFT       reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    LPAREN          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    DIVIDE          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    MOD             reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    SHL             reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    SHR             reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    AMPERS          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    AMPCAR          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    TIMES           reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    PLUS            reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    MINUS           reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    XOR             reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    OR              reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    EQEQ            reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    NOTEQ           reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    LEQ             reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    GEQ             reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    GREAT           reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    LESS            reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    AMPAMP          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    OROR            reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    SEMICOL         reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    LBRACE          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    RBRACE          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    CASE            reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    DEFAULT         reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    COMMA           reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    PLUSEQ          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    MINUSEQ         reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    TIMESEQ         reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    DIVIDEEQ        reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    MODEQ           reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    OREQ            reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    AMPEQ           reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    CAREQ           reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    SHL_ASSIGN      reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    SHR_ASSIGN      reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    AMPCAREQ        reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    PLUSPLUS        reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    MINUSMIN        reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    EQUAL           reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    COLONEQ         reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    PIPE            reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    RBRACK          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    RPAREN          reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    RIGHT_ANGLE     reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    COLON           reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    RIGHT_RIGHT     reduce using rule 215 (PExprNoParen -> FuncLiteral .)
    DDD             reduce using rule 215 (PExprNoParen -> FuncLiteral .)


state 14

    (250) Prec2Expr_ -> Prec3Expr_ .
    (244) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (245) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (247) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (248) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (249) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    PIPE            reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    OROR            reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACK          reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    COMMA           reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    SEMICOL         reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    LBRACE          reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACE          reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    CASE            reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    DEFAULT         reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    COLON           reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    EQUAL           reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    COLONEQ         reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    RPAREN          reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSEQ          reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSEQ         reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    TIMESEQ         reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    MODEQ           reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    OREQ            reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    AMPEQ           reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    CAREQ           reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    AMPCAREQ        reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSPLUS        reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSMIN        reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    DDD             reduce using rule 250 (Prec2Expr_ -> Prec3Expr_ .)
    EQEQ            shift and go to state 82
    NOTEQ           shift and go to state 85
    LEQ             shift and go to state 81
    GEQ             shift and go to state 80
    GREAT           shift and go to state 84
    LESS            shift and go to state 83


state 15

    (212) PExprNoParen -> ConvType . LEFT_ANGLE Expr OComma RIGHT_ANGLE

    LEFT_ANGLE      shift and go to state 86


state 16

    (218) ConvType -> OtherType .
    (219) CompType -> OtherType .

    LEFT_ANGLE      reduce using rule 218 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 219 (CompType -> OtherType .)


state 17

    (259) UExpr -> MINUS . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 89
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 18

    (196) NonDeclStmt -> DEFER . PseudoCall
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 90
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 91

state 19

    (193) NonDeclStmt -> FALLTHROUGH .

    SEMICOL         reduce using rule 193 (NonDeclStmt -> FALLTHROUGH .)
    RBRACE          reduce using rule 193 (NonDeclStmt -> FALLTHROUGH .)
    CASE            reduce using rule 193 (NonDeclStmt -> FALLTHROUGH .)
    DEFAULT         reduce using rule 193 (NonDeclStmt -> FALLTHROUGH .)


state 20

    (258) UExpr -> PLUS . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 92
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 21

    (192) NonDeclStmt -> LabelName . COLON Stmt

    COLON           shift and go to state 93


state 22

    (238) Prec4Expr_ -> Prec5Expr_ .
    (231) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (232) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    MINUS           reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    XOR             reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    OR              reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    EQEQ            reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    NOTEQ           reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    LEQ             reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    GEQ             reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    GREAT           reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    LESS            reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    AMPAMP          reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    OROR            reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    SEMICOL         reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    LBRACE          reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACE          reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    CASE            reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    DEFAULT         reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    COMMA           reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSEQ          reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSEQ         reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    TIMESEQ         reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    MODEQ           reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    OREQ            reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    AMPEQ           reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    CAREQ           reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    AMPCAREQ        reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSPLUS        reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSMIN        reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    EQUAL           reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    COLONEQ         reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    PIPE            reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACK          reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    RPAREN          reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    COLON           reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    DDD             reduce using rule 238 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDE          shift and go to state 95
    MOD             shift and go to state 100
    SHL             shift and go to state 99
    SHR             shift and go to state 94
    AMPERS          shift and go to state 97
    AMPCAR          shift and go to state 96
    TIMES           shift and go to state 98


state 23

    (252) Expr -> Prec2Expr_ .
    (251) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    COLON           reduce using rule 252 (Expr -> Prec2Expr_ .)
    OROR            reduce using rule 252 (Expr -> Prec2Expr_ .)
    COMMA           reduce using rule 252 (Expr -> Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 252 (Expr -> Prec2Expr_ .)
    EQUAL           reduce using rule 252 (Expr -> Prec2Expr_ .)
    COLONEQ         reduce using rule 252 (Expr -> Prec2Expr_ .)
    SEMICOL         reduce using rule 252 (Expr -> Prec2Expr_ .)
    RBRACE          reduce using rule 252 (Expr -> Prec2Expr_ .)
    CASE            reduce using rule 252 (Expr -> Prec2Expr_ .)
    DEFAULT         reduce using rule 252 (Expr -> Prec2Expr_ .)
    LBRACE          reduce using rule 252 (Expr -> Prec2Expr_ .)
    RPAREN          reduce using rule 252 (Expr -> Prec2Expr_ .)
    PLUSEQ          reduce using rule 252 (Expr -> Prec2Expr_ .)
    MINUSEQ         reduce using rule 252 (Expr -> Prec2Expr_ .)
    TIMESEQ         reduce using rule 252 (Expr -> Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 252 (Expr -> Prec2Expr_ .)
    MODEQ           reduce using rule 252 (Expr -> Prec2Expr_ .)
    OREQ            reduce using rule 252 (Expr -> Prec2Expr_ .)
    AMPEQ           reduce using rule 252 (Expr -> Prec2Expr_ .)
    CAREQ           reduce using rule 252 (Expr -> Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 252 (Expr -> Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 252 (Expr -> Prec2Expr_ .)
    AMPCAREQ        reduce using rule 252 (Expr -> Prec2Expr_ .)
    PLUSPLUS        reduce using rule 252 (Expr -> Prec2Expr_ .)
    MINUSMIN        reduce using rule 252 (Expr -> Prec2Expr_ .)
    RBRACK          reduce using rule 252 (Expr -> Prec2Expr_ .)
    PIPE            reduce using rule 252 (Expr -> Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 252 (Expr -> Prec2Expr_ .)
    DDD             reduce using rule 252 (Expr -> Prec2Expr_ .)
    AMPAMP          shift and go to state 101


state 24

    (143) FuncLiteral -> FuncLiteralDecl . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 102


state 25

    (23) CommonDecl -> VAR . VarDecl
    (24) CommonDecl -> VAR . LPAREN VarDeclList OSemi RPAREN
    (25) CommonDecl -> VAR . LPAREN RPAREN
    (29) VarDecl -> . DeclNameList NType
    (30) VarDecl -> . DeclNameList NType EQUAL ExprList
    (31) VarDecl -> . DeclNameList EQUAL ExprList
    (162) DeclNameList -> . DeclName
    (163) DeclNameList -> . DeclNameList COMMA DeclName
    (174) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 106
    IDENTIFIER      shift and go to state 103

    DeclName                       shift and go to state 104
    VarDecl                        shift and go to state 105
    DeclNameList                   shift and go to state 107

state 26

    (51) SimpleStmt -> ExprList . EQUAL ExprList
    (52) SimpleStmt -> ExprList . COLONEQ ExprList
    (145) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 110
    COLONEQ         shift and go to state 109
    COMMA           shift and go to state 108


state 27

    (89) OtherType -> MAP . LBRACK NType RBRACK NType

    LBRACK          shift and go to state 111


state 28

    (19) CommonDecl -> CONSTANT . ConstDecl
    (20) CommonDecl -> CONSTANT . LPAREN ConstDecl OSemi RPAREN
    (21) CommonDecl -> CONSTANT . LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (22) CommonDecl -> CONSTANT . LPAREN RPAREN
    (32) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (33) ConstDecl -> . DeclNameList EQUAL ExprList
    (162) DeclNameList -> . DeclName
    (163) DeclNameList -> . DeclNameList COMMA DeclName
    (174) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 112
    IDENTIFIER      shift and go to state 103

    DeclName                       shift and go to state 104
    ConstDecl                      shift and go to state 114
    DeclNameList                   shift and go to state 113

state 29

    (255) UExpr -> AMPERS . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 115
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 30

    (243) Prec3Expr_ -> Prec4Expr_ .
    (239) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    NOTEQ           reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    LEQ             reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    GEQ             reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    GREAT           reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    LESS            reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    AMPAMP          reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSEQ          reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSEQ         reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    TIMESEQ         reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    MODEQ           reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    OREQ            reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    AMPEQ           reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    CAREQ           reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    AMPCAREQ        reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSPLUS        reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSMIN        reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    OROR            reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    SEMICOL         reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    LBRACE          reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    EQUAL           reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    COLONEQ         reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    COMMA           reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACE          reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    COLON           reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    CASE            reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    DEFAULT         reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    PIPE            reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACK          reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    RPAREN          reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    DDD             reduce using rule 243 (Prec3Expr_ -> Prec4Expr_ .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    XOR             shift and go to state 116
    OR              shift and go to state 117


state 31

    (15) Declaration -> CommonDecl .

    SEMICOL         reduce using rule 15 (Declaration -> CommonDecl .)


state 32

    (152) Literal -> STRING .

    DOT             reduce using rule 152 (Literal -> STRING .)
    LBRACK          reduce using rule 152 (Literal -> STRING .)
    LEFT_LEFT       reduce using rule 152 (Literal -> STRING .)
    LPAREN          reduce using rule 152 (Literal -> STRING .)
    DIVIDE          reduce using rule 152 (Literal -> STRING .)
    MOD             reduce using rule 152 (Literal -> STRING .)
    SHL             reduce using rule 152 (Literal -> STRING .)
    SHR             reduce using rule 152 (Literal -> STRING .)
    AMPERS          reduce using rule 152 (Literal -> STRING .)
    AMPCAR          reduce using rule 152 (Literal -> STRING .)
    TIMES           reduce using rule 152 (Literal -> STRING .)
    PLUS            reduce using rule 152 (Literal -> STRING .)
    MINUS           reduce using rule 152 (Literal -> STRING .)
    XOR             reduce using rule 152 (Literal -> STRING .)
    OR              reduce using rule 152 (Literal -> STRING .)
    EQEQ            reduce using rule 152 (Literal -> STRING .)
    NOTEQ           reduce using rule 152 (Literal -> STRING .)
    LEQ             reduce using rule 152 (Literal -> STRING .)
    GEQ             reduce using rule 152 (Literal -> STRING .)
    GREAT           reduce using rule 152 (Literal -> STRING .)
    LESS            reduce using rule 152 (Literal -> STRING .)
    AMPAMP          reduce using rule 152 (Literal -> STRING .)
    OROR            reduce using rule 152 (Literal -> STRING .)
    SEMICOL         reduce using rule 152 (Literal -> STRING .)
    LBRACE          reduce using rule 152 (Literal -> STRING .)
    RBRACE          reduce using rule 152 (Literal -> STRING .)
    CASE            reduce using rule 152 (Literal -> STRING .)
    DEFAULT         reduce using rule 152 (Literal -> STRING .)
    PLUSEQ          reduce using rule 152 (Literal -> STRING .)
    MINUSEQ         reduce using rule 152 (Literal -> STRING .)
    TIMESEQ         reduce using rule 152 (Literal -> STRING .)
    DIVIDEEQ        reduce using rule 152 (Literal -> STRING .)
    MODEQ           reduce using rule 152 (Literal -> STRING .)
    OREQ            reduce using rule 152 (Literal -> STRING .)
    AMPEQ           reduce using rule 152 (Literal -> STRING .)
    CAREQ           reduce using rule 152 (Literal -> STRING .)
    SHL_ASSIGN      reduce using rule 152 (Literal -> STRING .)
    SHR_ASSIGN      reduce using rule 152 (Literal -> STRING .)
    AMPCAREQ        reduce using rule 152 (Literal -> STRING .)
    PLUSPLUS        reduce using rule 152 (Literal -> STRING .)
    MINUSMIN        reduce using rule 152 (Literal -> STRING .)
    EQUAL           reduce using rule 152 (Literal -> STRING .)
    COLONEQ         reduce using rule 152 (Literal -> STRING .)
    COMMA           reduce using rule 152 (Literal -> STRING .)
    PIPE            reduce using rule 152 (Literal -> STRING .)
    RBRACK          reduce using rule 152 (Literal -> STRING .)
    RPAREN          reduce using rule 152 (Literal -> STRING .)
    RIGHT_ANGLE     reduce using rule 152 (Literal -> STRING .)
    COLON           reduce using rule 152 (Literal -> STRING .)
    RIGHT_RIGHT     reduce using rule 152 (Literal -> STRING .)
    DDD             reduce using rule 152 (Literal -> STRING .)


state 33

    (16) Declaration -> FuncDecl .

    SEMICOL         reduce using rule 16 (Declaration -> FuncDecl .)


state 34

    (191) NonDeclStmt -> IfStmt .

    SEMICOL         reduce using rule 191 (NonDeclStmt -> IfStmt .)
    RBRACE          reduce using rule 191 (NonDeclStmt -> IfStmt .)
    CASE            reduce using rule 191 (NonDeclStmt -> IfStmt .)
    DEFAULT         reduce using rule 191 (NonDeclStmt -> IfStmt .)


state 35

    (121) LabelName -> NewName .

    COLON           reduce using rule 121 (LabelName -> NewName .)


state 36

    (150) Literal -> INTEGER .

    DOT             reduce using rule 150 (Literal -> INTEGER .)
    LBRACK          reduce using rule 150 (Literal -> INTEGER .)
    LEFT_LEFT       reduce using rule 150 (Literal -> INTEGER .)
    LPAREN          reduce using rule 150 (Literal -> INTEGER .)
    DIVIDE          reduce using rule 150 (Literal -> INTEGER .)
    MOD             reduce using rule 150 (Literal -> INTEGER .)
    SHL             reduce using rule 150 (Literal -> INTEGER .)
    SHR             reduce using rule 150 (Literal -> INTEGER .)
    AMPERS          reduce using rule 150 (Literal -> INTEGER .)
    AMPCAR          reduce using rule 150 (Literal -> INTEGER .)
    TIMES           reduce using rule 150 (Literal -> INTEGER .)
    PLUS            reduce using rule 150 (Literal -> INTEGER .)
    MINUS           reduce using rule 150 (Literal -> INTEGER .)
    XOR             reduce using rule 150 (Literal -> INTEGER .)
    OR              reduce using rule 150 (Literal -> INTEGER .)
    EQEQ            reduce using rule 150 (Literal -> INTEGER .)
    NOTEQ           reduce using rule 150 (Literal -> INTEGER .)
    LEQ             reduce using rule 150 (Literal -> INTEGER .)
    GEQ             reduce using rule 150 (Literal -> INTEGER .)
    GREAT           reduce using rule 150 (Literal -> INTEGER .)
    LESS            reduce using rule 150 (Literal -> INTEGER .)
    AMPAMP          reduce using rule 150 (Literal -> INTEGER .)
    OROR            reduce using rule 150 (Literal -> INTEGER .)
    SEMICOL         reduce using rule 150 (Literal -> INTEGER .)
    LBRACE          reduce using rule 150 (Literal -> INTEGER .)
    RBRACE          reduce using rule 150 (Literal -> INTEGER .)
    CASE            reduce using rule 150 (Literal -> INTEGER .)
    DEFAULT         reduce using rule 150 (Literal -> INTEGER .)
    PLUSEQ          reduce using rule 150 (Literal -> INTEGER .)
    MINUSEQ         reduce using rule 150 (Literal -> INTEGER .)
    TIMESEQ         reduce using rule 150 (Literal -> INTEGER .)
    DIVIDEEQ        reduce using rule 150 (Literal -> INTEGER .)
    MODEQ           reduce using rule 150 (Literal -> INTEGER .)
    OREQ            reduce using rule 150 (Literal -> INTEGER .)
    AMPEQ           reduce using rule 150 (Literal -> INTEGER .)
    CAREQ           reduce using rule 150 (Literal -> INTEGER .)
    SHL_ASSIGN      reduce using rule 150 (Literal -> INTEGER .)
    SHR_ASSIGN      reduce using rule 150 (Literal -> INTEGER .)
    AMPCAREQ        reduce using rule 150 (Literal -> INTEGER .)
    PLUSPLUS        reduce using rule 150 (Literal -> INTEGER .)
    MINUSMIN        reduce using rule 150 (Literal -> INTEGER .)
    EQUAL           reduce using rule 150 (Literal -> INTEGER .)
    COLONEQ         reduce using rule 150 (Literal -> INTEGER .)
    COMMA           reduce using rule 150 (Literal -> INTEGER .)
    PIPE            reduce using rule 150 (Literal -> INTEGER .)
    RBRACK          reduce using rule 150 (Literal -> INTEGER .)
    RPAREN          reduce using rule 150 (Literal -> INTEGER .)
    RIGHT_ANGLE     reduce using rule 150 (Literal -> INTEGER .)
    COLON           reduce using rule 150 (Literal -> INTEGER .)
    RIGHT_RIGHT     reduce using rule 150 (Literal -> INTEGER .)
    DDD             reduce using rule 150 (Literal -> INTEGER .)


state 37

    (96) FuncDecl -> FUNCTION . FuncDecl_ FuncBody
    (99) FuncType -> FUNCTION . ArgList FuncRes
    (97) FuncDecl_ -> . IDENTIFIER ArgList FuncRes
    (98) FuncDecl_ -> . LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (100) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (101) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    IDENTIFIER      shift and go to state 124
    LEFT_OR         shift and go to state 123
    LPAREN          shift and go to state 122

    FuncDecl_                      shift and go to state 121
    ArgList                        shift and go to state 120

state 38

    (71) ForStmt -> FOR . ForBody
    (70) ForBody -> . ForHeader LoopBody
    (67) ForHeader -> . OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (68) ForHeader -> . OSimpleStmt
    (69) ForHeader -> . RangeStmt
    (134) OSimpleStmt -> . empty
    (135) OSimpleStmt -> . SimpleStmt
    (64) RangeStmt -> . ExprList EQUAL RANGE Expr
    (65) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (66) RangeStmt -> . RANGE Expr
    (265) empty -> .
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RANGE           shift and go to state 129
    SEMICOL         reduce using rule 265 (empty -> .)
    LBRACE          reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    ForBody                        shift and go to state 128
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 131
    OSimpleStmt                    shift and go to state 125
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    FuncType                       shift and go to state 60
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    ForHeader                      shift and go to state 132
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 133
    PseudoCall                     shift and go to state 39
    RangeStmt                      shift and go to state 126
    ExprList                       shift and go to state 127
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    empty                          shift and go to state 130
    PExpr                          shift and go to state 59

state 39

    (211) PExprNoParen -> PseudoCall .

    DOT             reduce using rule 211 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 211 (PExprNoParen -> PseudoCall .)
    LPAREN          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    DIVIDE          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    MOD             reduce using rule 211 (PExprNoParen -> PseudoCall .)
    SHL             reduce using rule 211 (PExprNoParen -> PseudoCall .)
    SHR             reduce using rule 211 (PExprNoParen -> PseudoCall .)
    AMPERS          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    AMPCAR          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    TIMES           reduce using rule 211 (PExprNoParen -> PseudoCall .)
    PLUS            reduce using rule 211 (PExprNoParen -> PseudoCall .)
    MINUS           reduce using rule 211 (PExprNoParen -> PseudoCall .)
    XOR             reduce using rule 211 (PExprNoParen -> PseudoCall .)
    OR              reduce using rule 211 (PExprNoParen -> PseudoCall .)
    EQEQ            reduce using rule 211 (PExprNoParen -> PseudoCall .)
    NOTEQ           reduce using rule 211 (PExprNoParen -> PseudoCall .)
    LEQ             reduce using rule 211 (PExprNoParen -> PseudoCall .)
    GEQ             reduce using rule 211 (PExprNoParen -> PseudoCall .)
    GREAT           reduce using rule 211 (PExprNoParen -> PseudoCall .)
    LESS            reduce using rule 211 (PExprNoParen -> PseudoCall .)
    AMPAMP          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    OROR            reduce using rule 211 (PExprNoParen -> PseudoCall .)
    SEMICOL         reduce using rule 211 (PExprNoParen -> PseudoCall .)
    LBRACE          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    RBRACE          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    CASE            reduce using rule 211 (PExprNoParen -> PseudoCall .)
    DEFAULT         reduce using rule 211 (PExprNoParen -> PseudoCall .)
    COMMA           reduce using rule 211 (PExprNoParen -> PseudoCall .)
    PLUSEQ          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    MINUSEQ         reduce using rule 211 (PExprNoParen -> PseudoCall .)
    TIMESEQ         reduce using rule 211 (PExprNoParen -> PseudoCall .)
    DIVIDEEQ        reduce using rule 211 (PExprNoParen -> PseudoCall .)
    MODEQ           reduce using rule 211 (PExprNoParen -> PseudoCall .)
    OREQ            reduce using rule 211 (PExprNoParen -> PseudoCall .)
    AMPEQ           reduce using rule 211 (PExprNoParen -> PseudoCall .)
    CAREQ           reduce using rule 211 (PExprNoParen -> PseudoCall .)
    SHL_ASSIGN      reduce using rule 211 (PExprNoParen -> PseudoCall .)
    SHR_ASSIGN      reduce using rule 211 (PExprNoParen -> PseudoCall .)
    AMPCAREQ        reduce using rule 211 (PExprNoParen -> PseudoCall .)
    PLUSPLUS        reduce using rule 211 (PExprNoParen -> PseudoCall .)
    MINUSMIN        reduce using rule 211 (PExprNoParen -> PseudoCall .)
    EQUAL           reduce using rule 211 (PExprNoParen -> PseudoCall .)
    COLONEQ         reduce using rule 211 (PExprNoParen -> PseudoCall .)
    PIPE            reduce using rule 211 (PExprNoParen -> PseudoCall .)
    RBRACK          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    RPAREN          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    RIGHT_ANGLE     reduce using rule 211 (PExprNoParen -> PseudoCall .)
    COLON           reduce using rule 211 (PExprNoParen -> PseudoCall .)
    RIGHT_RIGHT     reduce using rule 211 (PExprNoParen -> PseudoCall .)
    DDD             reduce using rule 211 (PExprNoParen -> PseudoCall .)


state 40

    (94) InterfaceType -> INTERFACE . LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> INTERFACE . LBRACE RBRACE

    LBRACE          shift and go to state 134


state 41

    (203) PExprNoParen -> Literal .

    DOT             reduce using rule 203 (PExprNoParen -> Literal .)
    LBRACK          reduce using rule 203 (PExprNoParen -> Literal .)
    LEFT_LEFT       reduce using rule 203 (PExprNoParen -> Literal .)
    LPAREN          reduce using rule 203 (PExprNoParen -> Literal .)
    DIVIDE          reduce using rule 203 (PExprNoParen -> Literal .)
    MOD             reduce using rule 203 (PExprNoParen -> Literal .)
    SHL             reduce using rule 203 (PExprNoParen -> Literal .)
    SHR             reduce using rule 203 (PExprNoParen -> Literal .)
    AMPERS          reduce using rule 203 (PExprNoParen -> Literal .)
    AMPCAR          reduce using rule 203 (PExprNoParen -> Literal .)
    TIMES           reduce using rule 203 (PExprNoParen -> Literal .)
    PLUS            reduce using rule 203 (PExprNoParen -> Literal .)
    MINUS           reduce using rule 203 (PExprNoParen -> Literal .)
    XOR             reduce using rule 203 (PExprNoParen -> Literal .)
    OR              reduce using rule 203 (PExprNoParen -> Literal .)
    EQEQ            reduce using rule 203 (PExprNoParen -> Literal .)
    NOTEQ           reduce using rule 203 (PExprNoParen -> Literal .)
    LEQ             reduce using rule 203 (PExprNoParen -> Literal .)
    GEQ             reduce using rule 203 (PExprNoParen -> Literal .)
    GREAT           reduce using rule 203 (PExprNoParen -> Literal .)
    LESS            reduce using rule 203 (PExprNoParen -> Literal .)
    AMPAMP          reduce using rule 203 (PExprNoParen -> Literal .)
    OROR            reduce using rule 203 (PExprNoParen -> Literal .)
    SEMICOL         reduce using rule 203 (PExprNoParen -> Literal .)
    LBRACE          reduce using rule 203 (PExprNoParen -> Literal .)
    RBRACE          reduce using rule 203 (PExprNoParen -> Literal .)
    CASE            reduce using rule 203 (PExprNoParen -> Literal .)
    DEFAULT         reduce using rule 203 (PExprNoParen -> Literal .)
    COMMA           reduce using rule 203 (PExprNoParen -> Literal .)
    PLUSEQ          reduce using rule 203 (PExprNoParen -> Literal .)
    MINUSEQ         reduce using rule 203 (PExprNoParen -> Literal .)
    TIMESEQ         reduce using rule 203 (PExprNoParen -> Literal .)
    DIVIDEEQ        reduce using rule 203 (PExprNoParen -> Literal .)
    MODEQ           reduce using rule 203 (PExprNoParen -> Literal .)
    OREQ            reduce using rule 203 (PExprNoParen -> Literal .)
    AMPEQ           reduce using rule 203 (PExprNoParen -> Literal .)
    CAREQ           reduce using rule 203 (PExprNoParen -> Literal .)
    SHL_ASSIGN      reduce using rule 203 (PExprNoParen -> Literal .)
    SHR_ASSIGN      reduce using rule 203 (PExprNoParen -> Literal .)
    AMPCAREQ        reduce using rule 203 (PExprNoParen -> Literal .)
    PLUSPLUS        reduce using rule 203 (PExprNoParen -> Literal .)
    MINUSMIN        reduce using rule 203 (PExprNoParen -> Literal .)
    EQUAL           reduce using rule 203 (PExprNoParen -> Literal .)
    COLONEQ         reduce using rule 203 (PExprNoParen -> Literal .)
    PIPE            reduce using rule 203 (PExprNoParen -> Literal .)
    RBRACK          reduce using rule 203 (PExprNoParen -> Literal .)
    RPAREN          reduce using rule 203 (PExprNoParen -> Literal .)
    RIGHT_ANGLE     reduce using rule 203 (PExprNoParen -> Literal .)
    COLON           reduce using rule 203 (PExprNoParen -> Literal .)
    RIGHT_RIGHT     reduce using rule 203 (PExprNoParen -> Literal .)
    DDD             reduce using rule 203 (PExprNoParen -> Literal .)


state 42

    (230) Prec5Expr_ -> UExpr .

    DIVIDE          reduce using rule 230 (Prec5Expr_ -> UExpr .)
    MOD             reduce using rule 230 (Prec5Expr_ -> UExpr .)
    SHL             reduce using rule 230 (Prec5Expr_ -> UExpr .)
    SHR             reduce using rule 230 (Prec5Expr_ -> UExpr .)
    AMPERS          reduce using rule 230 (Prec5Expr_ -> UExpr .)
    AMPCAR          reduce using rule 230 (Prec5Expr_ -> UExpr .)
    TIMES           reduce using rule 230 (Prec5Expr_ -> UExpr .)
    PLUS            reduce using rule 230 (Prec5Expr_ -> UExpr .)
    MINUS           reduce using rule 230 (Prec5Expr_ -> UExpr .)
    XOR             reduce using rule 230 (Prec5Expr_ -> UExpr .)
    OR              reduce using rule 230 (Prec5Expr_ -> UExpr .)
    EQEQ            reduce using rule 230 (Prec5Expr_ -> UExpr .)
    NOTEQ           reduce using rule 230 (Prec5Expr_ -> UExpr .)
    LEQ             reduce using rule 230 (Prec5Expr_ -> UExpr .)
    GEQ             reduce using rule 230 (Prec5Expr_ -> UExpr .)
    GREAT           reduce using rule 230 (Prec5Expr_ -> UExpr .)
    LESS            reduce using rule 230 (Prec5Expr_ -> UExpr .)
    AMPAMP          reduce using rule 230 (Prec5Expr_ -> UExpr .)
    PLUSEQ          reduce using rule 230 (Prec5Expr_ -> UExpr .)
    MINUSEQ         reduce using rule 230 (Prec5Expr_ -> UExpr .)
    TIMESEQ         reduce using rule 230 (Prec5Expr_ -> UExpr .)
    DIVIDEEQ        reduce using rule 230 (Prec5Expr_ -> UExpr .)
    MODEQ           reduce using rule 230 (Prec5Expr_ -> UExpr .)
    OREQ            reduce using rule 230 (Prec5Expr_ -> UExpr .)
    AMPEQ           reduce using rule 230 (Prec5Expr_ -> UExpr .)
    CAREQ           reduce using rule 230 (Prec5Expr_ -> UExpr .)
    SHL_ASSIGN      reduce using rule 230 (Prec5Expr_ -> UExpr .)
    SHR_ASSIGN      reduce using rule 230 (Prec5Expr_ -> UExpr .)
    AMPCAREQ        reduce using rule 230 (Prec5Expr_ -> UExpr .)
    PLUSPLUS        reduce using rule 230 (Prec5Expr_ -> UExpr .)
    MINUSMIN        reduce using rule 230 (Prec5Expr_ -> UExpr .)
    OROR            reduce using rule 230 (Prec5Expr_ -> UExpr .)
    SEMICOL         reduce using rule 230 (Prec5Expr_ -> UExpr .)
    EQUAL           reduce using rule 230 (Prec5Expr_ -> UExpr .)
    COLONEQ         reduce using rule 230 (Prec5Expr_ -> UExpr .)
    COMMA           reduce using rule 230 (Prec5Expr_ -> UExpr .)
    LBRACE          reduce using rule 230 (Prec5Expr_ -> UExpr .)
    PIPE            reduce using rule 230 (Prec5Expr_ -> UExpr .)
    RBRACK          reduce using rule 230 (Prec5Expr_ -> UExpr .)
    RBRACE          reduce using rule 230 (Prec5Expr_ -> UExpr .)
    CASE            reduce using rule 230 (Prec5Expr_ -> UExpr .)
    DEFAULT         reduce using rule 230 (Prec5Expr_ -> UExpr .)
    RPAREN          reduce using rule 230 (Prec5Expr_ -> UExpr .)
    RIGHT_ANGLE     reduce using rule 230 (Prec5Expr_ -> UExpr .)
    COLON           reduce using rule 230 (Prec5Expr_ -> UExpr .)
    RIGHT_RIGHT     reduce using rule 230 (Prec5Expr_ -> UExpr .)
    DDD             reduce using rule 230 (Prec5Expr_ -> UExpr .)


state 43

    (216) PExprNoParen -> ForCompExpr .

    DOT             reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    LBRACK          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    LEFT_LEFT       reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    LPAREN          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    DIVIDE          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    MOD             reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    SHL             reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    SHR             reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    AMPERS          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    AMPCAR          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    TIMES           reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    PLUS            reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    MINUS           reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    XOR             reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    OR              reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    EQEQ            reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    NOTEQ           reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    LEQ             reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    GEQ             reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    GREAT           reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    LESS            reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    AMPAMP          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    OROR            reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    SEMICOL         reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    LBRACE          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    RBRACE          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    CASE            reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    DEFAULT         reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    COMMA           reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    PLUSEQ          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    MINUSEQ         reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    TIMESEQ         reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    DIVIDEEQ        reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    MODEQ           reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    OREQ            reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    AMPEQ           reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    CAREQ           reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    SHL_ASSIGN      reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    SHR_ASSIGN      reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    AMPCAREQ        reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    PLUSPLUS        reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    MINUSMIN        reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    EQUAL           reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    COLONEQ         reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    PIPE            reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    RBRACK          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    RPAREN          reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    RIGHT_ANGLE     reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    COLON           reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    RIGHT_RIGHT     reduce using rule 216 (PExprNoParen -> ForCompExpr .)
    DDD             reduce using rule 216 (PExprNoParen -> ForCompExpr .)


state 44

    (26) CommonDecl -> TYPE . TypeDecl
    (27) CommonDecl -> TYPE . LPAREN TypeDeclList OSemi RPAREN
    (28) CommonDecl -> TYPE . LPAREN RPAREN
    (38) TypeDecl -> . TypeDeclName NType
    (37) TypeDeclName -> . IDENTIFIER

    LPAREN          shift and go to state 136
    IDENTIFIER      shift and go to state 138

    TypeDecl                       shift and go to state 135
    TypeDeclName                   shift and go to state 137

state 45

    (190) NonDeclStmt -> SwitchStmt .

    SEMICOL         reduce using rule 190 (NonDeclStmt -> SwitchStmt .)
    RBRACE          reduce using rule 190 (NonDeclStmt -> SwitchStmt .)
    CASE            reduce using rule 190 (NonDeclStmt -> SwitchStmt .)
    DEFAULT         reduce using rule 190 (NonDeclStmt -> SwitchStmt .)


state 46

    (261) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (88) OtherType -> LBRACK . OExpr RBRACK NType
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (138) OExpr -> . empty
    (139) OExpr -> . Expr
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (265) empty -> .
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 139
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 140
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    OExpr                          shift and go to state 141
    PExpr                          shift and go to state 59

state 47

    (195) NonDeclStmt -> CONTINUE . ONewName
    (136) ONewName -> . empty
    (137) ONewName -> . NewName
    (265) empty -> .
    (122) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    CASE            reduce using rule 265 (empty -> .)
    DEFAULT         reduce using rule 265 (empty -> .)
    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 142
    empty                          shift and go to state 144
    ONewName                       shift and go to state 145

state 48

    (256) UExpr -> NOT . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 146
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 49

    (201) PExpr -> PExprNoParen .

    DOT             reduce using rule 201 (PExpr -> PExprNoParen .)
    LBRACK          reduce using rule 201 (PExpr -> PExprNoParen .)
    LEFT_LEFT       reduce using rule 201 (PExpr -> PExprNoParen .)
    LPAREN          reduce using rule 201 (PExpr -> PExprNoParen .)
    DIVIDE          reduce using rule 201 (PExpr -> PExprNoParen .)
    MOD             reduce using rule 201 (PExpr -> PExprNoParen .)
    SHL             reduce using rule 201 (PExpr -> PExprNoParen .)
    SHR             reduce using rule 201 (PExpr -> PExprNoParen .)
    AMPERS          reduce using rule 201 (PExpr -> PExprNoParen .)
    AMPCAR          reduce using rule 201 (PExpr -> PExprNoParen .)
    TIMES           reduce using rule 201 (PExpr -> PExprNoParen .)
    PLUS            reduce using rule 201 (PExpr -> PExprNoParen .)
    MINUS           reduce using rule 201 (PExpr -> PExprNoParen .)
    XOR             reduce using rule 201 (PExpr -> PExprNoParen .)
    OR              reduce using rule 201 (PExpr -> PExprNoParen .)
    EQEQ            reduce using rule 201 (PExpr -> PExprNoParen .)
    NOTEQ           reduce using rule 201 (PExpr -> PExprNoParen .)
    LEQ             reduce using rule 201 (PExpr -> PExprNoParen .)
    GEQ             reduce using rule 201 (PExpr -> PExprNoParen .)
    GREAT           reduce using rule 201 (PExpr -> PExprNoParen .)
    LESS            reduce using rule 201 (PExpr -> PExprNoParen .)
    AMPAMP          reduce using rule 201 (PExpr -> PExprNoParen .)
    OROR            reduce using rule 201 (PExpr -> PExprNoParen .)
    SEMICOL         reduce using rule 201 (PExpr -> PExprNoParen .)
    LBRACE          reduce using rule 201 (PExpr -> PExprNoParen .)
    RBRACE          reduce using rule 201 (PExpr -> PExprNoParen .)
    CASE            reduce using rule 201 (PExpr -> PExprNoParen .)
    DEFAULT         reduce using rule 201 (PExpr -> PExprNoParen .)
    RBRACK          reduce using rule 201 (PExpr -> PExprNoParen .)
    PLUSEQ          reduce using rule 201 (PExpr -> PExprNoParen .)
    MINUSEQ         reduce using rule 201 (PExpr -> PExprNoParen .)
    TIMESEQ         reduce using rule 201 (PExpr -> PExprNoParen .)
    DIVIDEEQ        reduce using rule 201 (PExpr -> PExprNoParen .)
    MODEQ           reduce using rule 201 (PExpr -> PExprNoParen .)
    OREQ            reduce using rule 201 (PExpr -> PExprNoParen .)
    AMPEQ           reduce using rule 201 (PExpr -> PExprNoParen .)
    CAREQ           reduce using rule 201 (PExpr -> PExprNoParen .)
    SHL_ASSIGN      reduce using rule 201 (PExpr -> PExprNoParen .)
    SHR_ASSIGN      reduce using rule 201 (PExpr -> PExprNoParen .)
    AMPCAREQ        reduce using rule 201 (PExpr -> PExprNoParen .)
    PLUSPLUS        reduce using rule 201 (PExpr -> PExprNoParen .)
    MINUSMIN        reduce using rule 201 (PExpr -> PExprNoParen .)
    EQUAL           reduce using rule 201 (PExpr -> PExprNoParen .)
    COLONEQ         reduce using rule 201 (PExpr -> PExprNoParen .)
    COMMA           reduce using rule 201 (PExpr -> PExprNoParen .)
    COLON           reduce using rule 201 (PExpr -> PExprNoParen .)
    RIGHT_RIGHT     reduce using rule 201 (PExpr -> PExprNoParen .)
    PIPE            reduce using rule 201 (PExpr -> PExprNoParen .)
    RPAREN          reduce using rule 201 (PExpr -> PExprNoParen .)
    RIGHT_ANGLE     reduce using rule 201 (PExpr -> PExprNoParen .)
    DDD             reduce using rule 201 (PExpr -> PExprNoParen .)


state 50

    (198) NonDeclStmt -> RETURN . OExprList
    (140) OExprList -> . empty
    (141) OExprList -> . ExprList
    (265) empty -> .
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    CASE            reduce using rule 265 (empty -> .)
    DEFAULT         reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 147
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 148
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 149
    OExprList                      shift and go to state 150
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 51

    (229) SwitchStmt -> SWITCH . IfHeader LBRACE CaseBlockList RBRACE
    (72) IfHeader -> . OSimpleStmt
    (73) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (134) OSimpleStmt -> . empty
    (135) OSimpleStmt -> . SimpleStmt
    (265) empty -> .
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 265 (empty -> .)
    LBRACE          reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 131
    OSimpleStmt                    shift and go to state 151
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 130
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    IfHeader                       shift and go to state 152
    PExpr                          shift and go to state 59

state 52

    (155) DeclList -> DeclList Declaration . SEMICOL

    SEMICOL         shift and go to state 153


state 53

    (91) OtherType -> InterfaceType .

    LEFT_ANGLE      reduce using rule 91 (OtherType -> InterfaceType .)
    LEFT_LEFT       reduce using rule 91 (OtherType -> InterfaceType .)
    LBRACE          reduce using rule 91 (OtherType -> InterfaceType .)
    SEMICOL         reduce using rule 91 (OtherType -> InterfaceType .)
    COLON           reduce using rule 91 (OtherType -> InterfaceType .)
    EQUAL           reduce using rule 91 (OtherType -> InterfaceType .)
    COLONEQ         reduce using rule 91 (OtherType -> InterfaceType .)
    COMMA           reduce using rule 91 (OtherType -> InterfaceType .)
    RPAREN          reduce using rule 91 (OtherType -> InterfaceType .)
    DDD             reduce using rule 91 (OtherType -> InterfaceType .)
    RBRACE          reduce using rule 91 (OtherType -> InterfaceType .)
    CASE            reduce using rule 91 (OtherType -> InterfaceType .)
    DEFAULT         reduce using rule 91 (OtherType -> InterfaceType .)
    RBRACK          reduce using rule 91 (OtherType -> InterfaceType .)
    OR_RIGHT        reduce using rule 91 (OtherType -> InterfaceType .)
    INTEGER         reduce using rule 91 (OtherType -> InterfaceType .)
    FLOAT           reduce using rule 91 (OtherType -> InterfaceType .)
    STRING          reduce using rule 91 (OtherType -> InterfaceType .)


state 54

    (122) NewName -> IDENTIFIER .
    (175) Name -> IDENTIFIER .

    COLON           reduce using rule 122 (NewName -> IDENTIFIER .)
    DOT             reduce using rule 175 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 175 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 175 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 175 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 175 (Name -> IDENTIFIER .)
    MOD             reduce using rule 175 (Name -> IDENTIFIER .)
    SHL             reduce using rule 175 (Name -> IDENTIFIER .)
    SHR             reduce using rule 175 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 175 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 175 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 175 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 175 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 175 (Name -> IDENTIFIER .)
    XOR             reduce using rule 175 (Name -> IDENTIFIER .)
    OR              reduce using rule 175 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 175 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 175 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 175 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 175 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 175 (Name -> IDENTIFIER .)
    LESS            reduce using rule 175 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 175 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 175 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 175 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 175 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 175 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 175 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 175 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 175 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 175 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 175 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 175 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 175 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 175 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 175 (Name -> IDENTIFIER .)
    OROR            reduce using rule 175 (Name -> IDENTIFIER .)
    RBRACE          reduce using rule 175 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 175 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 175 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 175 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 175 (Name -> IDENTIFIER .)
    CASE            reduce using rule 175 (Name -> IDENTIFIER .)
    DEFAULT         reduce using rule 175 (Name -> IDENTIFIER .)


state 55

    (213) PExprNoParen -> CompType . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LEFT_LEFT       shift and go to state 154


state 56

    (90) OtherType -> StructType .

    LEFT_ANGLE      reduce using rule 90 (OtherType -> StructType .)
    LEFT_LEFT       reduce using rule 90 (OtherType -> StructType .)
    LBRACE          reduce using rule 90 (OtherType -> StructType .)
    SEMICOL         reduce using rule 90 (OtherType -> StructType .)
    COLON           reduce using rule 90 (OtherType -> StructType .)
    EQUAL           reduce using rule 90 (OtherType -> StructType .)
    COLONEQ         reduce using rule 90 (OtherType -> StructType .)
    COMMA           reduce using rule 90 (OtherType -> StructType .)
    RPAREN          reduce using rule 90 (OtherType -> StructType .)
    DDD             reduce using rule 90 (OtherType -> StructType .)
    RBRACE          reduce using rule 90 (OtherType -> StructType .)
    CASE            reduce using rule 90 (OtherType -> StructType .)
    DEFAULT         reduce using rule 90 (OtherType -> StructType .)
    RBRACK          reduce using rule 90 (OtherType -> StructType .)
    OR_RIGHT        reduce using rule 90 (OtherType -> StructType .)
    INTEGER         reduce using rule 90 (OtherType -> StructType .)
    FLOAT           reduce using rule 90 (OtherType -> StructType .)
    STRING          reduce using rule 90 (OtherType -> StructType .)


state 57

    (194) NonDeclStmt -> BREAK . ONewName
    (136) ONewName -> . empty
    (137) ONewName -> . NewName
    (265) empty -> .
    (122) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    CASE            reduce using rule 265 (empty -> .)
    DEFAULT         reduce using rule 265 (empty -> .)
    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 142
    empty                          shift and go to state 144
    ONewName                       shift and go to state 155

state 58

    (18) Declaration -> error .

    SEMICOL         reduce using rule 18 (Declaration -> error .)


state 59

    (254) UExpr -> PExpr .
    (205) PExprNoParen -> PExpr . DOT IDENTIFIER
    (206) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> PExpr . DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (209) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (262) PseudoCall -> PExpr . LPAREN RPAREN
    (263) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN

    DIVIDE          reduce using rule 254 (UExpr -> PExpr .)
    MOD             reduce using rule 254 (UExpr -> PExpr .)
    SHL             reduce using rule 254 (UExpr -> PExpr .)
    SHR             reduce using rule 254 (UExpr -> PExpr .)
    AMPERS          reduce using rule 254 (UExpr -> PExpr .)
    AMPCAR          reduce using rule 254 (UExpr -> PExpr .)
    TIMES           reduce using rule 254 (UExpr -> PExpr .)
    PLUS            reduce using rule 254 (UExpr -> PExpr .)
    MINUS           reduce using rule 254 (UExpr -> PExpr .)
    XOR             reduce using rule 254 (UExpr -> PExpr .)
    OR              reduce using rule 254 (UExpr -> PExpr .)
    EQEQ            reduce using rule 254 (UExpr -> PExpr .)
    NOTEQ           reduce using rule 254 (UExpr -> PExpr .)
    LEQ             reduce using rule 254 (UExpr -> PExpr .)
    GEQ             reduce using rule 254 (UExpr -> PExpr .)
    GREAT           reduce using rule 254 (UExpr -> PExpr .)
    LESS            reduce using rule 254 (UExpr -> PExpr .)
    AMPAMP          reduce using rule 254 (UExpr -> PExpr .)
    OROR            reduce using rule 254 (UExpr -> PExpr .)
    RBRACK          reduce using rule 254 (UExpr -> PExpr .)
    COLON           reduce using rule 254 (UExpr -> PExpr .)
    PLUSEQ          reduce using rule 254 (UExpr -> PExpr .)
    MINUSEQ         reduce using rule 254 (UExpr -> PExpr .)
    TIMESEQ         reduce using rule 254 (UExpr -> PExpr .)
    DIVIDEEQ        reduce using rule 254 (UExpr -> PExpr .)
    MODEQ           reduce using rule 254 (UExpr -> PExpr .)
    OREQ            reduce using rule 254 (UExpr -> PExpr .)
    AMPEQ           reduce using rule 254 (UExpr -> PExpr .)
    CAREQ           reduce using rule 254 (UExpr -> PExpr .)
    SHL_ASSIGN      reduce using rule 254 (UExpr -> PExpr .)
    SHR_ASSIGN      reduce using rule 254 (UExpr -> PExpr .)
    AMPCAREQ        reduce using rule 254 (UExpr -> PExpr .)
    PLUSPLUS        reduce using rule 254 (UExpr -> PExpr .)
    MINUSMIN        reduce using rule 254 (UExpr -> PExpr .)
    SEMICOL         reduce using rule 254 (UExpr -> PExpr .)
    EQUAL           reduce using rule 254 (UExpr -> PExpr .)
    COLONEQ         reduce using rule 254 (UExpr -> PExpr .)
    COMMA           reduce using rule 254 (UExpr -> PExpr .)
    LBRACE          reduce using rule 254 (UExpr -> PExpr .)
    PIPE            reduce using rule 254 (UExpr -> PExpr .)
    RBRACE          reduce using rule 254 (UExpr -> PExpr .)
    CASE            reduce using rule 254 (UExpr -> PExpr .)
    DEFAULT         reduce using rule 254 (UExpr -> PExpr .)
    RPAREN          reduce using rule 254 (UExpr -> PExpr .)
    RIGHT_ANGLE     reduce using rule 254 (UExpr -> PExpr .)
    RIGHT_RIGHT     reduce using rule 254 (UExpr -> PExpr .)
    DDD             reduce using rule 254 (UExpr -> PExpr .)
    DOT             shift and go to state 159
    LBRACK          shift and go to state 156
    LEFT_LEFT       shift and go to state 158
    LPAREN          shift and go to state 157


state 60

    (217) ConvType -> FuncType .
    (142) FuncLiteralDecl -> FuncType .

    LEFT_ANGLE      reduce using rule 217 (ConvType -> FuncType .)
    LBRACE          reduce using rule 142 (FuncLiteralDecl -> FuncType .)


state 61

    (188) NonDeclStmt -> SimpleStmt .

    SEMICOL         reduce using rule 188 (NonDeclStmt -> SimpleStmt .)
    RBRACE          reduce using rule 188 (NonDeclStmt -> SimpleStmt .)
    CASE            reduce using rule 188 (NonDeclStmt -> SimpleStmt .)
    DEFAULT         reduce using rule 188 (NonDeclStmt -> SimpleStmt .)


state 62

    (189) NonDeclStmt -> ForStmt .

    SEMICOL         reduce using rule 189 (NonDeclStmt -> ForStmt .)
    RBRACE          reduce using rule 189 (NonDeclStmt -> ForStmt .)
    CASE            reduce using rule 189 (NonDeclStmt -> ForStmt .)
    DEFAULT         reduce using rule 189 (NonDeclStmt -> ForStmt .)


state 63

    (197) NonDeclStmt -> GOTO . NewName
    (122) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 160

state 64

    (204) PExprNoParen -> Name .

    DOT             reduce using rule 204 (PExprNoParen -> Name .)
    LBRACK          reduce using rule 204 (PExprNoParen -> Name .)
    LEFT_LEFT       reduce using rule 204 (PExprNoParen -> Name .)
    LPAREN          reduce using rule 204 (PExprNoParen -> Name .)
    DIVIDE          reduce using rule 204 (PExprNoParen -> Name .)
    MOD             reduce using rule 204 (PExprNoParen -> Name .)
    SHL             reduce using rule 204 (PExprNoParen -> Name .)
    SHR             reduce using rule 204 (PExprNoParen -> Name .)
    AMPERS          reduce using rule 204 (PExprNoParen -> Name .)
    AMPCAR          reduce using rule 204 (PExprNoParen -> Name .)
    TIMES           reduce using rule 204 (PExprNoParen -> Name .)
    PLUS            reduce using rule 204 (PExprNoParen -> Name .)
    MINUS           reduce using rule 204 (PExprNoParen -> Name .)
    XOR             reduce using rule 204 (PExprNoParen -> Name .)
    OR              reduce using rule 204 (PExprNoParen -> Name .)
    EQEQ            reduce using rule 204 (PExprNoParen -> Name .)
    NOTEQ           reduce using rule 204 (PExprNoParen -> Name .)
    LEQ             reduce using rule 204 (PExprNoParen -> Name .)
    GEQ             reduce using rule 204 (PExprNoParen -> Name .)
    GREAT           reduce using rule 204 (PExprNoParen -> Name .)
    LESS            reduce using rule 204 (PExprNoParen -> Name .)
    AMPAMP          reduce using rule 204 (PExprNoParen -> Name .)
    OROR            reduce using rule 204 (PExprNoParen -> Name .)
    SEMICOL         reduce using rule 204 (PExprNoParen -> Name .)
    LBRACE          reduce using rule 204 (PExprNoParen -> Name .)
    RBRACE          reduce using rule 204 (PExprNoParen -> Name .)
    CASE            reduce using rule 204 (PExprNoParen -> Name .)
    DEFAULT         reduce using rule 204 (PExprNoParen -> Name .)
    COMMA           reduce using rule 204 (PExprNoParen -> Name .)
    PLUSEQ          reduce using rule 204 (PExprNoParen -> Name .)
    MINUSEQ         reduce using rule 204 (PExprNoParen -> Name .)
    TIMESEQ         reduce using rule 204 (PExprNoParen -> Name .)
    DIVIDEEQ        reduce using rule 204 (PExprNoParen -> Name .)
    MODEQ           reduce using rule 204 (PExprNoParen -> Name .)
    OREQ            reduce using rule 204 (PExprNoParen -> Name .)
    AMPEQ           reduce using rule 204 (PExprNoParen -> Name .)
    CAREQ           reduce using rule 204 (PExprNoParen -> Name .)
    SHL_ASSIGN      reduce using rule 204 (PExprNoParen -> Name .)
    SHR_ASSIGN      reduce using rule 204 (PExprNoParen -> Name .)
    AMPCAREQ        reduce using rule 204 (PExprNoParen -> Name .)
    PLUSPLUS        reduce using rule 204 (PExprNoParen -> Name .)
    MINUSMIN        reduce using rule 204 (PExprNoParen -> Name .)
    EQUAL           reduce using rule 204 (PExprNoParen -> Name .)
    COLONEQ         reduce using rule 204 (PExprNoParen -> Name .)
    PIPE            reduce using rule 204 (PExprNoParen -> Name .)
    RBRACK          reduce using rule 204 (PExprNoParen -> Name .)
    RPAREN          reduce using rule 204 (PExprNoParen -> Name .)
    RIGHT_ANGLE     reduce using rule 204 (PExprNoParen -> Name .)
    COLON           reduce using rule 204 (PExprNoParen -> Name .)
    RIGHT_RIGHT     reduce using rule 204 (PExprNoParen -> Name .)
    DDD             reduce using rule 204 (PExprNoParen -> Name .)


state 65

    (17) Declaration -> NonDeclStmt .

    SEMICOL         reduce using rule 17 (Declaration -> NonDeclStmt .)


state 66

    (39) SimpleStmt -> Expr .
    (40) SimpleStmt -> Expr . PLUSEQ Expr
    (41) SimpleStmt -> Expr . MINUSEQ Expr
    (42) SimpleStmt -> Expr . TIMESEQ Expr
    (43) SimpleStmt -> Expr . DIVIDEEQ Expr
    (44) SimpleStmt -> Expr . MODEQ Expr
    (45) SimpleStmt -> Expr . OREQ Expr
    (46) SimpleStmt -> Expr . AMPEQ Expr
    (47) SimpleStmt -> Expr . CAREQ Expr
    (48) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (49) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (50) SimpleStmt -> Expr . AMPCAREQ Expr
    (53) SimpleStmt -> Expr . PLUSPLUS
    (54) SimpleStmt -> Expr . MINUSMIN
    (253) Expr -> Expr . OROR Prec2Expr_
    (144) ExprList -> Expr .

    SEMICOL         reduce using rule 39 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 39 (SimpleStmt -> Expr .)
    RBRACE          reduce using rule 39 (SimpleStmt -> Expr .)
    CASE            reduce using rule 39 (SimpleStmt -> Expr .)
    DEFAULT         reduce using rule 39 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 164
    MINUSEQ         shift and go to state 168
    TIMESEQ         shift and go to state 163
    DIVIDEEQ        shift and go to state 174
    MODEQ           shift and go to state 165
    OREQ            shift and go to state 167
    AMPEQ           shift and go to state 170
    CAREQ           shift and go to state 162
    SHL_ASSIGN      shift and go to state 172
    SHR_ASSIGN      shift and go to state 166
    AMPCAREQ        shift and go to state 171
    PLUSPLUS        shift and go to state 173
    MINUSMIN        shift and go to state 169
    OROR            shift and go to state 161
    EQUAL           reduce using rule 144 (ExprList -> Expr .)
    COLONEQ         reduce using rule 144 (ExprList -> Expr .)
    COMMA           reduce using rule 144 (ExprList -> Expr .)


state 67

    (260) UExpr -> XOR . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 175
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 68

    (257) UExpr -> TIMES . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 176
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 69

    (202) PExpr -> LPAREN . ExprOrType RPAREN
    (226) ExprOrType -> . Expr
    (227) ExprOrType -> . NonExprType
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (142) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 179
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 183
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 177
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    ExprOrType                     shift and go to state 178
    NonExprType                    shift and go to state 180
    OtherType                      shift and go to state 181
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 182
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 70

    (74) IfStmt -> IF . IfHeader LoopBody ElseIfList Else
    (72) IfHeader -> . OSimpleStmt
    (73) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (134) OSimpleStmt -> . empty
    (135) OSimpleStmt -> . SimpleStmt
    (265) empty -> .
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 265 (empty -> .)
    LBRACE          reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 131
    OSimpleStmt                    shift and go to state 151
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    IfHeader                       shift and go to state 184
    empty                          shift and go to state 130
    PExpr                          shift and go to state 59

state 71

    (92) StructType -> STRUCT . LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> STRUCT . LBRACE RBRACE

    LBRACE          shift and go to state 185


state 72

    (151) Literal -> FLOAT .

    DOT             reduce using rule 151 (Literal -> FLOAT .)
    LBRACK          reduce using rule 151 (Literal -> FLOAT .)
    LEFT_LEFT       reduce using rule 151 (Literal -> FLOAT .)
    LPAREN          reduce using rule 151 (Literal -> FLOAT .)
    DIVIDE          reduce using rule 151 (Literal -> FLOAT .)
    MOD             reduce using rule 151 (Literal -> FLOAT .)
    SHL             reduce using rule 151 (Literal -> FLOAT .)
    SHR             reduce using rule 151 (Literal -> FLOAT .)
    AMPERS          reduce using rule 151 (Literal -> FLOAT .)
    AMPCAR          reduce using rule 151 (Literal -> FLOAT .)
    TIMES           reduce using rule 151 (Literal -> FLOAT .)
    PLUS            reduce using rule 151 (Literal -> FLOAT .)
    MINUS           reduce using rule 151 (Literal -> FLOAT .)
    XOR             reduce using rule 151 (Literal -> FLOAT .)
    OR              reduce using rule 151 (Literal -> FLOAT .)
    EQEQ            reduce using rule 151 (Literal -> FLOAT .)
    NOTEQ           reduce using rule 151 (Literal -> FLOAT .)
    LEQ             reduce using rule 151 (Literal -> FLOAT .)
    GEQ             reduce using rule 151 (Literal -> FLOAT .)
    GREAT           reduce using rule 151 (Literal -> FLOAT .)
    LESS            reduce using rule 151 (Literal -> FLOAT .)
    AMPAMP          reduce using rule 151 (Literal -> FLOAT .)
    OROR            reduce using rule 151 (Literal -> FLOAT .)
    SEMICOL         reduce using rule 151 (Literal -> FLOAT .)
    LBRACE          reduce using rule 151 (Literal -> FLOAT .)
    RBRACE          reduce using rule 151 (Literal -> FLOAT .)
    CASE            reduce using rule 151 (Literal -> FLOAT .)
    DEFAULT         reduce using rule 151 (Literal -> FLOAT .)
    PLUSEQ          reduce using rule 151 (Literal -> FLOAT .)
    MINUSEQ         reduce using rule 151 (Literal -> FLOAT .)
    TIMESEQ         reduce using rule 151 (Literal -> FLOAT .)
    DIVIDEEQ        reduce using rule 151 (Literal -> FLOAT .)
    MODEQ           reduce using rule 151 (Literal -> FLOAT .)
    OREQ            reduce using rule 151 (Literal -> FLOAT .)
    AMPEQ           reduce using rule 151 (Literal -> FLOAT .)
    CAREQ           reduce using rule 151 (Literal -> FLOAT .)
    SHL_ASSIGN      reduce using rule 151 (Literal -> FLOAT .)
    SHR_ASSIGN      reduce using rule 151 (Literal -> FLOAT .)
    AMPCAREQ        reduce using rule 151 (Literal -> FLOAT .)
    PLUSPLUS        reduce using rule 151 (Literal -> FLOAT .)
    MINUSMIN        reduce using rule 151 (Literal -> FLOAT .)
    EQUAL           reduce using rule 151 (Literal -> FLOAT .)
    COLONEQ         reduce using rule 151 (Literal -> FLOAT .)
    COMMA           reduce using rule 151 (Literal -> FLOAT .)
    PIPE            reduce using rule 151 (Literal -> FLOAT .)
    RBRACK          reduce using rule 151 (Literal -> FLOAT .)
    RPAREN          reduce using rule 151 (Literal -> FLOAT .)
    RIGHT_ANGLE     reduce using rule 151 (Literal -> FLOAT .)
    COLON           reduce using rule 151 (Literal -> FLOAT .)
    RIGHT_RIGHT     reduce using rule 151 (Literal -> FLOAT .)
    DDD             reduce using rule 151 (Literal -> FLOAT .)


state 73

    (9) ImportStmt -> ImportHere . STRING

    STRING          shift and go to state 186


state 74

    (13) ImportHere -> IDENTIFIER .

    STRING          reduce using rule 13 (ImportHere -> IDENTIFIER .)


state 75

    (14) ImportHere -> DOT .

    STRING          reduce using rule 14 (ImportHere -> DOT .)


state 76

    (7) Import -> IMPORT LPAREN . ImportStmtList OSemi RPAREN
    (8) Import -> IMPORT LPAREN . RPAREN
    (10) ImportStmtList -> . ImportStmt
    (11) ImportStmtList -> . ImportStmtList SEMICOL ImportStmt
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> . empty
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT
    (265) empty -> .

    RPAREN          shift and go to state 187
    IDENTIFIER      shift and go to state 74
    DOT             shift and go to state 75
    STRING          reduce using rule 265 (empty -> .)

    ImportHere                     shift and go to state 73
    ImportStmt                     shift and go to state 189
    empty                          shift and go to state 78
    ImportStmtList                 shift and go to state 188

state 77

    (6) Import -> IMPORT ImportStmt .

    SEMICOL         reduce using rule 6 (Import -> IMPORT ImportStmt .)


state 78

    (12) ImportHere -> empty .

    STRING          reduce using rule 12 (ImportHere -> empty .)


state 79

    (5) Imports -> Imports Import SEMICOL .

    IMPORT          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    error           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    CONSTANT        reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    VAR             reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    TYPE            reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    FUNCTION        reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    FALLTHROUGH     reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    BREAK           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    CONTINUE        reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    DEFER           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    GOTO            reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    RETURN          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    FOR             reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    SWITCH          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    IF              reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    IDENTIFIER      reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    AMPERS          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    NOT             reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    TIMES           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    PLUS            reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    MINUS           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    XOR             reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    LPAREN          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    INTEGER         reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    FLOAT           reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    STRING          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    LBRACK          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    MAP             reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    STRUCT          reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    INTERFACE       reduce using rule 5 (Imports -> Imports Import SEMICOL .)
    $end            reduce using rule 5 (Imports -> Imports Import SEMICOL .)


state 80

    (247) Prec3Expr_ -> Prec3Expr_ GEQ . Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 190
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 81

    (246) Prec3Expr_ -> Prec3Expr_ LEQ . Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 191
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 82

    (244) Prec3Expr_ -> Prec3Expr_ EQEQ . Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 192
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 83

    (249) Prec3Expr_ -> Prec3Expr_ LESS . Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 193
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 84

    (248) Prec3Expr_ -> Prec3Expr_ GREAT . Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 194
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 85

    (245) Prec3Expr_ -> Prec3Expr_ NOTEQ . Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 195
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 86

    (212) PExprNoParen -> ConvType LEFT_ANGLE . Expr OComma RIGHT_ANGLE
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 196
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 87

    (175) Name -> IDENTIFIER .

    DOT             reduce using rule 175 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 175 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 175 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 175 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 175 (Name -> IDENTIFIER .)
    MOD             reduce using rule 175 (Name -> IDENTIFIER .)
    SHL             reduce using rule 175 (Name -> IDENTIFIER .)
    SHR             reduce using rule 175 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 175 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 175 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 175 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 175 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 175 (Name -> IDENTIFIER .)
    XOR             reduce using rule 175 (Name -> IDENTIFIER .)
    OR              reduce using rule 175 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 175 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 175 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 175 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 175 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 175 (Name -> IDENTIFIER .)
    LESS            reduce using rule 175 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 175 (Name -> IDENTIFIER .)
    OROR            reduce using rule 175 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 175 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 175 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 175 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 175 (Name -> IDENTIFIER .)
    RBRACE          reduce using rule 175 (Name -> IDENTIFIER .)
    CASE            reduce using rule 175 (Name -> IDENTIFIER .)
    DEFAULT         reduce using rule 175 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 175 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 175 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 175 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 175 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 175 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 175 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 175 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 175 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 175 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 175 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 175 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 175 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 175 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 175 (Name -> IDENTIFIER .)
    LBRACE          reduce using rule 175 (Name -> IDENTIFIER .)
    PIPE            reduce using rule 175 (Name -> IDENTIFIER .)
    RBRACK          reduce using rule 175 (Name -> IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 175 (Name -> IDENTIFIER .)
    COLON           reduce using rule 175 (Name -> IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 175 (Name -> IDENTIFIER .)
    DDD             reduce using rule 175 (Name -> IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 175 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 175 (Name -> IDENTIFIER .)
    INTEGER         reduce using rule 175 (Name -> IDENTIFIER .)
    FLOAT           reduce using rule 175 (Name -> IDENTIFIER .)
    STRING          reduce using rule 175 (Name -> IDENTIFIER .)


state 88

    (99) FuncType -> FUNCTION . ArgList FuncRes
    (100) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (101) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 122

    ArgList                        shift and go to state 120

state 89

    (259) UExpr -> MINUS UExpr .

    DIVIDE          reduce using rule 259 (UExpr -> MINUS UExpr .)
    MOD             reduce using rule 259 (UExpr -> MINUS UExpr .)
    SHL             reduce using rule 259 (UExpr -> MINUS UExpr .)
    SHR             reduce using rule 259 (UExpr -> MINUS UExpr .)
    AMPERS          reduce using rule 259 (UExpr -> MINUS UExpr .)
    AMPCAR          reduce using rule 259 (UExpr -> MINUS UExpr .)
    TIMES           reduce using rule 259 (UExpr -> MINUS UExpr .)
    PLUS            reduce using rule 259 (UExpr -> MINUS UExpr .)
    MINUS           reduce using rule 259 (UExpr -> MINUS UExpr .)
    XOR             reduce using rule 259 (UExpr -> MINUS UExpr .)
    OR              reduce using rule 259 (UExpr -> MINUS UExpr .)
    EQEQ            reduce using rule 259 (UExpr -> MINUS UExpr .)
    NOTEQ           reduce using rule 259 (UExpr -> MINUS UExpr .)
    LEQ             reduce using rule 259 (UExpr -> MINUS UExpr .)
    GEQ             reduce using rule 259 (UExpr -> MINUS UExpr .)
    GREAT           reduce using rule 259 (UExpr -> MINUS UExpr .)
    LESS            reduce using rule 259 (UExpr -> MINUS UExpr .)
    AMPAMP          reduce using rule 259 (UExpr -> MINUS UExpr .)
    OROR            reduce using rule 259 (UExpr -> MINUS UExpr .)
    RBRACK          reduce using rule 259 (UExpr -> MINUS UExpr .)
    COLON           reduce using rule 259 (UExpr -> MINUS UExpr .)
    PLUSEQ          reduce using rule 259 (UExpr -> MINUS UExpr .)
    MINUSEQ         reduce using rule 259 (UExpr -> MINUS UExpr .)
    TIMESEQ         reduce using rule 259 (UExpr -> MINUS UExpr .)
    DIVIDEEQ        reduce using rule 259 (UExpr -> MINUS UExpr .)
    MODEQ           reduce using rule 259 (UExpr -> MINUS UExpr .)
    OREQ            reduce using rule 259 (UExpr -> MINUS UExpr .)
    AMPEQ           reduce using rule 259 (UExpr -> MINUS UExpr .)
    CAREQ           reduce using rule 259 (UExpr -> MINUS UExpr .)
    SHL_ASSIGN      reduce using rule 259 (UExpr -> MINUS UExpr .)
    SHR_ASSIGN      reduce using rule 259 (UExpr -> MINUS UExpr .)
    AMPCAREQ        reduce using rule 259 (UExpr -> MINUS UExpr .)
    PLUSPLUS        reduce using rule 259 (UExpr -> MINUS UExpr .)
    MINUSMIN        reduce using rule 259 (UExpr -> MINUS UExpr .)
    SEMICOL         reduce using rule 259 (UExpr -> MINUS UExpr .)
    EQUAL           reduce using rule 259 (UExpr -> MINUS UExpr .)
    COLONEQ         reduce using rule 259 (UExpr -> MINUS UExpr .)
    COMMA           reduce using rule 259 (UExpr -> MINUS UExpr .)
    LBRACE          reduce using rule 259 (UExpr -> MINUS UExpr .)
    PIPE            reduce using rule 259 (UExpr -> MINUS UExpr .)
    RBRACE          reduce using rule 259 (UExpr -> MINUS UExpr .)
    CASE            reduce using rule 259 (UExpr -> MINUS UExpr .)
    DEFAULT         reduce using rule 259 (UExpr -> MINUS UExpr .)
    RPAREN          reduce using rule 259 (UExpr -> MINUS UExpr .)
    RIGHT_ANGLE     reduce using rule 259 (UExpr -> MINUS UExpr .)
    RIGHT_RIGHT     reduce using rule 259 (UExpr -> MINUS UExpr .)
    DDD             reduce using rule 259 (UExpr -> MINUS UExpr .)


state 90

    (196) NonDeclStmt -> DEFER PseudoCall .
    (211) PExprNoParen -> PseudoCall .

    SEMICOL         reduce using rule 196 (NonDeclStmt -> DEFER PseudoCall .)
    RBRACE          reduce using rule 196 (NonDeclStmt -> DEFER PseudoCall .)
    CASE            reduce using rule 196 (NonDeclStmt -> DEFER PseudoCall .)
    DEFAULT         reduce using rule 196 (NonDeclStmt -> DEFER PseudoCall .)
    LPAREN          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    DOT             reduce using rule 211 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 211 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 211 (PExprNoParen -> PseudoCall .)


state 91

    (262) PseudoCall -> PExpr . LPAREN RPAREN
    (263) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN
    (205) PExprNoParen -> PExpr . DOT IDENTIFIER
    (206) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> PExpr . DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (209) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LPAREN          shift and go to state 157
    DOT             shift and go to state 159
    LBRACK          shift and go to state 156
    LEFT_LEFT       shift and go to state 158


state 92

    (258) UExpr -> PLUS UExpr .

    DIVIDE          reduce using rule 258 (UExpr -> PLUS UExpr .)
    MOD             reduce using rule 258 (UExpr -> PLUS UExpr .)
    SHL             reduce using rule 258 (UExpr -> PLUS UExpr .)
    SHR             reduce using rule 258 (UExpr -> PLUS UExpr .)
    AMPERS          reduce using rule 258 (UExpr -> PLUS UExpr .)
    AMPCAR          reduce using rule 258 (UExpr -> PLUS UExpr .)
    TIMES           reduce using rule 258 (UExpr -> PLUS UExpr .)
    PLUS            reduce using rule 258 (UExpr -> PLUS UExpr .)
    MINUS           reduce using rule 258 (UExpr -> PLUS UExpr .)
    XOR             reduce using rule 258 (UExpr -> PLUS UExpr .)
    OR              reduce using rule 258 (UExpr -> PLUS UExpr .)
    EQEQ            reduce using rule 258 (UExpr -> PLUS UExpr .)
    NOTEQ           reduce using rule 258 (UExpr -> PLUS UExpr .)
    LEQ             reduce using rule 258 (UExpr -> PLUS UExpr .)
    GEQ             reduce using rule 258 (UExpr -> PLUS UExpr .)
    GREAT           reduce using rule 258 (UExpr -> PLUS UExpr .)
    LESS            reduce using rule 258 (UExpr -> PLUS UExpr .)
    AMPAMP          reduce using rule 258 (UExpr -> PLUS UExpr .)
    OROR            reduce using rule 258 (UExpr -> PLUS UExpr .)
    RBRACK          reduce using rule 258 (UExpr -> PLUS UExpr .)
    COLON           reduce using rule 258 (UExpr -> PLUS UExpr .)
    PLUSEQ          reduce using rule 258 (UExpr -> PLUS UExpr .)
    MINUSEQ         reduce using rule 258 (UExpr -> PLUS UExpr .)
    TIMESEQ         reduce using rule 258 (UExpr -> PLUS UExpr .)
    DIVIDEEQ        reduce using rule 258 (UExpr -> PLUS UExpr .)
    MODEQ           reduce using rule 258 (UExpr -> PLUS UExpr .)
    OREQ            reduce using rule 258 (UExpr -> PLUS UExpr .)
    AMPEQ           reduce using rule 258 (UExpr -> PLUS UExpr .)
    CAREQ           reduce using rule 258 (UExpr -> PLUS UExpr .)
    SHL_ASSIGN      reduce using rule 258 (UExpr -> PLUS UExpr .)
    SHR_ASSIGN      reduce using rule 258 (UExpr -> PLUS UExpr .)
    AMPCAREQ        reduce using rule 258 (UExpr -> PLUS UExpr .)
    PLUSPLUS        reduce using rule 258 (UExpr -> PLUS UExpr .)
    MINUSMIN        reduce using rule 258 (UExpr -> PLUS UExpr .)
    SEMICOL         reduce using rule 258 (UExpr -> PLUS UExpr .)
    EQUAL           reduce using rule 258 (UExpr -> PLUS UExpr .)
    COLONEQ         reduce using rule 258 (UExpr -> PLUS UExpr .)
    COMMA           reduce using rule 258 (UExpr -> PLUS UExpr .)
    LBRACE          reduce using rule 258 (UExpr -> PLUS UExpr .)
    PIPE            reduce using rule 258 (UExpr -> PLUS UExpr .)
    RBRACE          reduce using rule 258 (UExpr -> PLUS UExpr .)
    CASE            reduce using rule 258 (UExpr -> PLUS UExpr .)
    DEFAULT         reduce using rule 258 (UExpr -> PLUS UExpr .)
    RPAREN          reduce using rule 258 (UExpr -> PLUS UExpr .)
    RIGHT_ANGLE     reduce using rule 258 (UExpr -> PLUS UExpr .)
    RIGHT_RIGHT     reduce using rule 258 (UExpr -> PLUS UExpr .)
    DDD             reduce using rule 258 (UExpr -> PLUS UExpr .)


state 93

    (192) NonDeclStmt -> LabelName COLON . Stmt
    (184) Stmt -> . empty
    (185) Stmt -> . CompoundStmt
    (186) Stmt -> . CommonDecl
    (187) Stmt -> . NonDeclStmt
    (265) empty -> .
    (59) CompoundStmt -> . LBRACE StmtList RBRACE
    (19) CommonDecl -> . CONSTANT ConstDecl
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (22) CommonDecl -> . CONSTANT LPAREN RPAREN
    (23) CommonDecl -> . VAR VarDecl
    (24) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (25) CommonDecl -> . VAR LPAREN RPAREN
    (26) CommonDecl -> . TYPE TypeDecl
    (27) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (28) CommonDecl -> . TYPE LPAREN RPAREN
    (188) NonDeclStmt -> . SimpleStmt
    (189) NonDeclStmt -> . ForStmt
    (190) NonDeclStmt -> . SwitchStmt
    (191) NonDeclStmt -> . IfStmt
    (192) NonDeclStmt -> . LabelName COLON Stmt
    (193) NonDeclStmt -> . FALLTHROUGH
    (194) NonDeclStmt -> . BREAK ONewName
    (195) NonDeclStmt -> . CONTINUE ONewName
    (196) NonDeclStmt -> . DEFER PseudoCall
    (197) NonDeclStmt -> . GOTO NewName
    (198) NonDeclStmt -> . RETURN OExprList
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (71) ForStmt -> . FOR ForBody
    (229) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (74) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    CASE            reduce using rule 265 (empty -> .)
    DEFAULT         reduce using rule 265 (empty -> .)
    LBRACE          shift and go to state 199
    CONSTANT        shift and go to state 28
    VAR             shift and go to state 25
    TYPE            shift and go to state 44
    FALLTHROUGH     shift and go to state 19
    BREAK           shift and go to state 57
    CONTINUE        shift and go to state 47
    DEFER           shift and go to state 18
    GOTO            shift and go to state 63
    RETURN          shift and go to state 50
    FOR             shift and go to state 38
    SWITCH          shift and go to state 51
    IF              shift and go to state 70
    IDENTIFIER      shift and go to state 54
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 61
    Prec3Expr_                     shift and go to state 14
    ForStmt                        shift and go to state 62
    CommonDecl                     shift and go to state 198
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    IfStmt                         shift and go to state 34
    FuncType                       shift and go to state 60
    FuncLiteralDecl                shift and go to state 24
    Stmt                           shift and go to state 197
    NewName                        shift and go to state 35
    InterfaceType                  shift and go to state 53
    LabelName                      shift and go to state 21
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 201
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    PExpr                          shift and go to state 59
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    SwitchStmt                     shift and go to state 45
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    CompoundStmt                   shift and go to state 200

state 94

    (234) Prec5Expr_ -> Prec5Expr_ SHR . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 203
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 95

    (231) Prec5Expr_ -> Prec5Expr_ DIVIDE . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 204
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 96

    (236) Prec5Expr_ -> Prec5Expr_ AMPCAR . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 205
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 97

    (235) Prec5Expr_ -> Prec5Expr_ AMPERS . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 206
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 98

    (237) Prec5Expr_ -> Prec5Expr_ TIMES . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 207
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 99

    (233) Prec5Expr_ -> Prec5Expr_ SHL . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 208
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 100

    (232) Prec5Expr_ -> Prec5Expr_ MOD . UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 209
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 101

    (251) Prec2Expr_ -> Prec2Expr_ AMPAMP . Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 210
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 102

    (143) FuncLiteral -> FuncLiteralDecl LBRACE . StmtList RBRACE
    (164) StmtList -> . Stmt
    (165) StmtList -> . StmtList SEMICOL Stmt
    (184) Stmt -> . empty
    (185) Stmt -> . CompoundStmt
    (186) Stmt -> . CommonDecl
    (187) Stmt -> . NonDeclStmt
    (265) empty -> .
    (59) CompoundStmt -> . LBRACE StmtList RBRACE
    (19) CommonDecl -> . CONSTANT ConstDecl
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (22) CommonDecl -> . CONSTANT LPAREN RPAREN
    (23) CommonDecl -> . VAR VarDecl
    (24) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (25) CommonDecl -> . VAR LPAREN RPAREN
    (26) CommonDecl -> . TYPE TypeDecl
    (27) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (28) CommonDecl -> . TYPE LPAREN RPAREN
    (188) NonDeclStmt -> . SimpleStmt
    (189) NonDeclStmt -> . ForStmt
    (190) NonDeclStmt -> . SwitchStmt
    (191) NonDeclStmt -> . IfStmt
    (192) NonDeclStmt -> . LabelName COLON Stmt
    (193) NonDeclStmt -> . FALLTHROUGH
    (194) NonDeclStmt -> . BREAK ONewName
    (195) NonDeclStmt -> . CONTINUE ONewName
    (196) NonDeclStmt -> . DEFER PseudoCall
    (197) NonDeclStmt -> . GOTO NewName
    (198) NonDeclStmt -> . RETURN OExprList
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (71) ForStmt -> . FOR ForBody
    (229) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (74) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          reduce using rule 265 (empty -> .)
    SEMICOL         reduce using rule 265 (empty -> .)
    LBRACE          shift and go to state 199
    CONSTANT        shift and go to state 28
    VAR             shift and go to state 25
    TYPE            shift and go to state 44
    FALLTHROUGH     shift and go to state 19
    BREAK           shift and go to state 57
    CONTINUE        shift and go to state 47
    DEFER           shift and go to state 18
    GOTO            shift and go to state 63
    RETURN          shift and go to state 50
    FOR             shift and go to state 38
    SWITCH          shift and go to state 51
    IF              shift and go to state 70
    IDENTIFIER      shift and go to state 54
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 61
    Prec3Expr_                     shift and go to state 14
    ForStmt                        shift and go to state 62
    StmtList                       shift and go to state 212
    CommonDecl                     shift and go to state 198
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    IfStmt                         shift and go to state 34
    FuncType                       shift and go to state 60
    NonDeclStmt                    shift and go to state 202
    Stmt                           shift and go to state 211
    FuncLiteralDecl                shift and go to state 24
    InterfaceType                  shift and go to state 53
    LabelName                      shift and go to state 21
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 201
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    NewName                        shift and go to state 35
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    PExpr                          shift and go to state 59
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    SwitchStmt                     shift and go to state 45
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    CompoundStmt                   shift and go to state 200

state 103

    (174) DeclName -> IDENTIFIER .

    EQUAL           reduce using rule 174 (DeclName -> IDENTIFIER .)
    COMMA           reduce using rule 174 (DeclName -> IDENTIFIER .)
    LPAREN          reduce using rule 174 (DeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 174 (DeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 174 (DeclName -> IDENTIFIER .)
    MAP             reduce using rule 174 (DeclName -> IDENTIFIER .)
    TIMES           reduce using rule 174 (DeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 174 (DeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 174 (DeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 174 (DeclName -> IDENTIFIER .)
    SEMICOL         reduce using rule 174 (DeclName -> IDENTIFIER .)
    RPAREN          reduce using rule 174 (DeclName -> IDENTIFIER .)


state 104

    (162) DeclNameList -> DeclName .

    EQUAL           reduce using rule 162 (DeclNameList -> DeclName .)
    COMMA           reduce using rule 162 (DeclNameList -> DeclName .)
    LPAREN          reduce using rule 162 (DeclNameList -> DeclName .)
    FUNCTION        reduce using rule 162 (DeclNameList -> DeclName .)
    LBRACK          reduce using rule 162 (DeclNameList -> DeclName .)
    MAP             reduce using rule 162 (DeclNameList -> DeclName .)
    TIMES           reduce using rule 162 (DeclNameList -> DeclName .)
    STRUCT          reduce using rule 162 (DeclNameList -> DeclName .)
    INTERFACE       reduce using rule 162 (DeclNameList -> DeclName .)
    IDENTIFIER      reduce using rule 162 (DeclNameList -> DeclName .)
    SEMICOL         reduce using rule 162 (DeclNameList -> DeclName .)
    RPAREN          reduce using rule 162 (DeclNameList -> DeclName .)


state 105

    (23) CommonDecl -> VAR VarDecl .

    RBRACE          reduce using rule 23 (CommonDecl -> VAR VarDecl .)
    SEMICOL         reduce using rule 23 (CommonDecl -> VAR VarDecl .)
    CASE            reduce using rule 23 (CommonDecl -> VAR VarDecl .)
    DEFAULT         reduce using rule 23 (CommonDecl -> VAR VarDecl .)


state 106

    (24) CommonDecl -> VAR LPAREN . VarDeclList OSemi RPAREN
    (25) CommonDecl -> VAR LPAREN . RPAREN
    (156) VarDeclList -> . VarDecl
    (157) VarDeclList -> . VarDeclList SEMICOL VarDecl
    (29) VarDecl -> . DeclNameList NType
    (30) VarDecl -> . DeclNameList NType EQUAL ExprList
    (31) VarDecl -> . DeclNameList EQUAL ExprList
    (162) DeclNameList -> . DeclName
    (163) DeclNameList -> . DeclNameList COMMA DeclName
    (174) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 213
    IDENTIFIER      shift and go to state 103

    DeclName                       shift and go to state 104
    VarDecl                        shift and go to state 214
    VarDeclList                    shift and go to state 215
    DeclNameList                   shift and go to state 107

state 107

    (29) VarDecl -> DeclNameList . NType
    (30) VarDecl -> DeclNameList . NType EQUAL ExprList
    (31) VarDecl -> DeclNameList . EQUAL ExprList
    (163) DeclNameList -> DeclNameList . COMMA DeclName
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    EQUAL           shift and go to state 217
    COMMA           shift and go to state 222
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    FuncType                       shift and go to state 216
    NType                          shift and go to state 224
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219
    Name                           shift and go to state 223

state 108

    (145) ExprList -> ExprList COMMA . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 227
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 109

    (52) SimpleStmt -> ExprList COLONEQ . ExprList
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 148
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 228
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 110

    (51) SimpleStmt -> ExprList EQUAL . ExprList
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 148
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 229
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 111

    (89) OtherType -> MAP LBRACK . NType RBRACK NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    Name                           shift and go to state 223
    FuncType                       shift and go to state 216
    NType                          shift and go to state 230
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219

state 112

    (20) CommonDecl -> CONSTANT LPAREN . ConstDecl OSemi RPAREN
    (21) CommonDecl -> CONSTANT LPAREN . ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (22) CommonDecl -> CONSTANT LPAREN . RPAREN
    (32) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (33) ConstDecl -> . DeclNameList EQUAL ExprList
    (162) DeclNameList -> . DeclName
    (163) DeclNameList -> . DeclNameList COMMA DeclName
    (174) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 231
    IDENTIFIER      shift and go to state 103

    DeclName                       shift and go to state 104
    ConstDecl                      shift and go to state 232
    DeclNameList                   shift and go to state 113

state 113

    (32) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (33) ConstDecl -> DeclNameList . EQUAL ExprList
    (163) DeclNameList -> DeclNameList . COMMA DeclName
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    EQUAL           shift and go to state 233
    COMMA           shift and go to state 222
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    FuncType                       shift and go to state 216
    NType                          shift and go to state 234
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219
    Name                           shift and go to state 223

state 114

    (19) CommonDecl -> CONSTANT ConstDecl .

    RBRACE          reduce using rule 19 (CommonDecl -> CONSTANT ConstDecl .)
    SEMICOL         reduce using rule 19 (CommonDecl -> CONSTANT ConstDecl .)
    CASE            reduce using rule 19 (CommonDecl -> CONSTANT ConstDecl .)
    DEFAULT         reduce using rule 19 (CommonDecl -> CONSTANT ConstDecl .)


state 115

    (255) UExpr -> AMPERS UExpr .

    DIVIDE          reduce using rule 255 (UExpr -> AMPERS UExpr .)
    MOD             reduce using rule 255 (UExpr -> AMPERS UExpr .)
    SHL             reduce using rule 255 (UExpr -> AMPERS UExpr .)
    SHR             reduce using rule 255 (UExpr -> AMPERS UExpr .)
    AMPERS          reduce using rule 255 (UExpr -> AMPERS UExpr .)
    AMPCAR          reduce using rule 255 (UExpr -> AMPERS UExpr .)
    TIMES           reduce using rule 255 (UExpr -> AMPERS UExpr .)
    PLUS            reduce using rule 255 (UExpr -> AMPERS UExpr .)
    MINUS           reduce using rule 255 (UExpr -> AMPERS UExpr .)
    XOR             reduce using rule 255 (UExpr -> AMPERS UExpr .)
    OR              reduce using rule 255 (UExpr -> AMPERS UExpr .)
    EQEQ            reduce using rule 255 (UExpr -> AMPERS UExpr .)
    NOTEQ           reduce using rule 255 (UExpr -> AMPERS UExpr .)
    LEQ             reduce using rule 255 (UExpr -> AMPERS UExpr .)
    GEQ             reduce using rule 255 (UExpr -> AMPERS UExpr .)
    GREAT           reduce using rule 255 (UExpr -> AMPERS UExpr .)
    LESS            reduce using rule 255 (UExpr -> AMPERS UExpr .)
    AMPAMP          reduce using rule 255 (UExpr -> AMPERS UExpr .)
    OROR            reduce using rule 255 (UExpr -> AMPERS UExpr .)
    RBRACK          reduce using rule 255 (UExpr -> AMPERS UExpr .)
    COLON           reduce using rule 255 (UExpr -> AMPERS UExpr .)
    PLUSEQ          reduce using rule 255 (UExpr -> AMPERS UExpr .)
    MINUSEQ         reduce using rule 255 (UExpr -> AMPERS UExpr .)
    TIMESEQ         reduce using rule 255 (UExpr -> AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 255 (UExpr -> AMPERS UExpr .)
    MODEQ           reduce using rule 255 (UExpr -> AMPERS UExpr .)
    OREQ            reduce using rule 255 (UExpr -> AMPERS UExpr .)
    AMPEQ           reduce using rule 255 (UExpr -> AMPERS UExpr .)
    CAREQ           reduce using rule 255 (UExpr -> AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 255 (UExpr -> AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 255 (UExpr -> AMPERS UExpr .)
    AMPCAREQ        reduce using rule 255 (UExpr -> AMPERS UExpr .)
    PLUSPLUS        reduce using rule 255 (UExpr -> AMPERS UExpr .)
    MINUSMIN        reduce using rule 255 (UExpr -> AMPERS UExpr .)
    SEMICOL         reduce using rule 255 (UExpr -> AMPERS UExpr .)
    EQUAL           reduce using rule 255 (UExpr -> AMPERS UExpr .)
    COLONEQ         reduce using rule 255 (UExpr -> AMPERS UExpr .)
    COMMA           reduce using rule 255 (UExpr -> AMPERS UExpr .)
    LBRACE          reduce using rule 255 (UExpr -> AMPERS UExpr .)
    PIPE            reduce using rule 255 (UExpr -> AMPERS UExpr .)
    RBRACE          reduce using rule 255 (UExpr -> AMPERS UExpr .)
    CASE            reduce using rule 255 (UExpr -> AMPERS UExpr .)
    DEFAULT         reduce using rule 255 (UExpr -> AMPERS UExpr .)
    RPAREN          reduce using rule 255 (UExpr -> AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 255 (UExpr -> AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 255 (UExpr -> AMPERS UExpr .)
    DDD             reduce using rule 255 (UExpr -> AMPERS UExpr .)


state 116

    (241) Prec4Expr_ -> Prec4Expr_ XOR . Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 235
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 117

    (242) Prec4Expr_ -> Prec4Expr_ OR . Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 236
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 118

    (239) Prec4Expr_ -> Prec4Expr_ PLUS . Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 237
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 119

    (240) Prec4Expr_ -> Prec4Expr_ MINUS . Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 238
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 120

    (99) FuncType -> FUNCTION ArgList . FuncRes
    (101) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (104) FuncRes -> . empty
    (105) FuncRes -> . FuncRetType
    (106) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (265) empty -> .
    (124) FuncRetType -> . FuncType
    (125) FuncRetType -> . OtherType
    (126) FuncRetType -> . PtrType
    (127) FuncRetType -> . DotName
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    LPAREN          shift and go to state 239
    LEFT_OR         shift and go to state 245
    LEFT_ANGLE      reduce using rule 265 (empty -> .)
    LBRACE          reduce using rule 265 (empty -> .)
    RPAREN          reduce using rule 265 (empty -> .)
    EQUAL           reduce using rule 265 (empty -> .)
    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    CASE            reduce using rule 265 (empty -> .)
    DEFAULT         reduce using rule 265 (empty -> .)
    RBRACK          reduce using rule 265 (empty -> .)
    COMMA           reduce using rule 265 (empty -> .)
    OR_RIGHT        reduce using rule 265 (empty -> .)
    DDD             reduce using rule 265 (empty -> .)
    COLON           reduce using rule 265 (empty -> .)
    COLONEQ         reduce using rule 265 (empty -> .)
    LEFT_LEFT       reduce using rule 265 (empty -> .)
    INTEGER         reduce using rule 265 (empty -> .)
    FLOAT           reduce using rule 265 (empty -> .)
    STRING          reduce using rule 265 (empty -> .)
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    DotName                        shift and go to state 246
    Name                           shift and go to state 223
    FuncType                       shift and go to state 240
    FuncRes                        shift and go to state 244
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 241
    FuncRetType                    shift and go to state 247
    OtherType                      shift and go to state 242
    empty                          shift and go to state 243

state 121

    (96) FuncDecl -> FUNCTION FuncDecl_ . FuncBody
    (102) FuncBody -> . empty
    (103) FuncBody -> . LBRACE StmtList RBRACE
    (265) empty -> .

    LBRACE          shift and go to state 248
    SEMICOL         reduce using rule 265 (empty -> .)

    empty                          shift and go to state 250
    FuncBody                       shift and go to state 249

state 122

    (100) ArgList -> LPAREN . OArgTypeListOComma RPAREN
    (182) OArgTypeListOComma -> . empty
    (183) OArgTypeListOComma -> . ArgTypeList OComma
    (265) empty -> .
    (180) ArgTypeList -> . ArgType
    (181) ArgTypeList -> . ArgTypeList COMMA ArgType
    (176) ArgType -> . NameOrType
    (177) ArgType -> . IDENTIFIER NameOrType
    (178) ArgType -> . IDENTIFIER DotDotDot
    (179) ArgType -> . DotDotDot
    (228) NameOrType -> . NType
    (199) DotDotDot -> . DDD
    (200) DotDotDot -> . DDD NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    RPAREN          reduce using rule 265 (empty -> .)
    IDENTIFIER      shift and go to state 256
    DDD             shift and go to state 259
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    StructType                     shift and go to state 56
    DotName                        shift and go to state 219
    OArgTypeListOComma             shift and go to state 253
    Name                           shift and go to state 223
    DotDotDot                      shift and go to state 254
    NType                          shift and go to state 258
    NameOrType                     shift and go to state 255
    ArgTypeList                    shift and go to state 251
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    ArgType                        shift and go to state 252
    FuncType                       shift and go to state 216
    empty                          shift and go to state 257

state 123

    (98) FuncDecl_ -> LEFT_OR . OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (182) OArgTypeListOComma -> . empty
    (183) OArgTypeListOComma -> . ArgTypeList OComma
    (265) empty -> .
    (180) ArgTypeList -> . ArgType
    (181) ArgTypeList -> . ArgTypeList COMMA ArgType
    (176) ArgType -> . NameOrType
    (177) ArgType -> . IDENTIFIER NameOrType
    (178) ArgType -> . IDENTIFIER DotDotDot
    (179) ArgType -> . DotDotDot
    (228) NameOrType -> . NType
    (199) DotDotDot -> . DDD
    (200) DotDotDot -> . DDD NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 265 (empty -> .)
    IDENTIFIER      shift and go to state 256
    DDD             shift and go to state 259
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    StructType                     shift and go to state 56
    DotName                        shift and go to state 219
    OArgTypeListOComma             shift and go to state 260
    Name                           shift and go to state 223
    DotDotDot                      shift and go to state 254
    NType                          shift and go to state 258
    NameOrType                     shift and go to state 255
    ArgTypeList                    shift and go to state 251
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    ArgType                        shift and go to state 252
    FuncType                       shift and go to state 216
    empty                          shift and go to state 257

state 124

    (97) FuncDecl_ -> IDENTIFIER . ArgList FuncRes
    (100) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (101) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 122

    ArgList                        shift and go to state 261

state 125

    (67) ForHeader -> OSimpleStmt . SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (68) ForHeader -> OSimpleStmt .

    SEMICOL         shift and go to state 262
    LBRACE          reduce using rule 68 (ForHeader -> OSimpleStmt .)


state 126

    (69) ForHeader -> RangeStmt .

    LBRACE          reduce using rule 69 (ForHeader -> RangeStmt .)


state 127

    (64) RangeStmt -> ExprList . EQUAL RANGE Expr
    (65) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (51) SimpleStmt -> ExprList . EQUAL ExprList
    (52) SimpleStmt -> ExprList . COLONEQ ExprList
    (145) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 263
    COLONEQ         shift and go to state 264
    COMMA           shift and go to state 108


state 128

    (71) ForStmt -> FOR ForBody .

    SEMICOL         reduce using rule 71 (ForStmt -> FOR ForBody .)
    RBRACE          reduce using rule 71 (ForStmt -> FOR ForBody .)
    CASE            reduce using rule 71 (ForStmt -> FOR ForBody .)
    DEFAULT         reduce using rule 71 (ForStmt -> FOR ForBody .)


state 129

    (66) RangeStmt -> RANGE . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 265
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 130

    (134) OSimpleStmt -> empty .

    SEMICOL         reduce using rule 134 (OSimpleStmt -> empty .)
    LBRACE          reduce using rule 134 (OSimpleStmt -> empty .)


state 131

    (135) OSimpleStmt -> SimpleStmt .

    SEMICOL         reduce using rule 135 (OSimpleStmt -> SimpleStmt .)
    LBRACE          reduce using rule 135 (OSimpleStmt -> SimpleStmt .)


state 132

    (70) ForBody -> ForHeader . LoopBody
    (63) LoopBody -> . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 267

    LoopBody                       shift and go to state 266

state 133

    (39) SimpleStmt -> Expr .
    (40) SimpleStmt -> Expr . PLUSEQ Expr
    (41) SimpleStmt -> Expr . MINUSEQ Expr
    (42) SimpleStmt -> Expr . TIMESEQ Expr
    (43) SimpleStmt -> Expr . DIVIDEEQ Expr
    (44) SimpleStmt -> Expr . MODEQ Expr
    (45) SimpleStmt -> Expr . OREQ Expr
    (46) SimpleStmt -> Expr . AMPEQ Expr
    (47) SimpleStmt -> Expr . CAREQ Expr
    (48) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (49) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (50) SimpleStmt -> Expr . AMPCAREQ Expr
    (53) SimpleStmt -> Expr . PLUSPLUS
    (54) SimpleStmt -> Expr . MINUSMIN
    (144) ExprList -> Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 39 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 39 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 164
    MINUSEQ         shift and go to state 168
    TIMESEQ         shift and go to state 163
    DIVIDEEQ        shift and go to state 174
    MODEQ           shift and go to state 165
    OREQ            shift and go to state 167
    AMPEQ           shift and go to state 170
    CAREQ           shift and go to state 162
    SHL_ASSIGN      shift and go to state 172
    SHR_ASSIGN      shift and go to state 166
    AMPCAREQ        shift and go to state 171
    PLUSPLUS        shift and go to state 173
    MINUSMIN        shift and go to state 169
    EQUAL           reduce using rule 144 (ExprList -> Expr .)
    COLONEQ         reduce using rule 144 (ExprList -> Expr .)
    COMMA           reduce using rule 144 (ExprList -> Expr .)
    OROR            shift and go to state 161


state 134

    (94) InterfaceType -> INTERFACE LBRACE . InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> INTERFACE LBRACE . RBRACE
    (109) InterfaceDeclList -> . InterfaceDecl
    (110) InterfaceDeclList -> . InterfaceDeclList SEMICOL InterfaceDecl
    (117) InterfaceDecl -> . NewName InDecl
    (118) InterfaceDecl -> . IDENTIFIER
    (119) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (122) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 268
    IDENTIFIER      shift and go to state 273
    LPAREN          shift and go to state 272

    InterfaceDecl                  shift and go to state 269
    NewName                        shift and go to state 271
    InterfaceDeclList              shift and go to state 270

state 135

    (26) CommonDecl -> TYPE TypeDecl .

    RBRACE          reduce using rule 26 (CommonDecl -> TYPE TypeDecl .)
    SEMICOL         reduce using rule 26 (CommonDecl -> TYPE TypeDecl .)
    CASE            reduce using rule 26 (CommonDecl -> TYPE TypeDecl .)
    DEFAULT         reduce using rule 26 (CommonDecl -> TYPE TypeDecl .)


state 136

    (27) CommonDecl -> TYPE LPAREN . TypeDeclList OSemi RPAREN
    (28) CommonDecl -> TYPE LPAREN . RPAREN
    (160) TypeDeclList -> . TypeDecl
    (161) TypeDeclList -> . TypeDeclList SEMICOL TypeDecl
    (38) TypeDecl -> . TypeDeclName NType
    (37) TypeDeclName -> . IDENTIFIER

    RPAREN          shift and go to state 276
    IDENTIFIER      shift and go to state 138

    TypeDeclList                   shift and go to state 275
    TypeDecl                       shift and go to state 274
    TypeDeclName                   shift and go to state 137

state 137

    (38) TypeDecl -> TypeDeclName . NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    Name                           shift and go to state 223
    FuncType                       shift and go to state 216
    NType                          shift and go to state 277
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219

state 138

    (37) TypeDeclName -> IDENTIFIER .

    LPAREN          reduce using rule 37 (TypeDeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 37 (TypeDeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 37 (TypeDeclName -> IDENTIFIER .)
    MAP             reduce using rule 37 (TypeDeclName -> IDENTIFIER .)
    TIMES           reduce using rule 37 (TypeDeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 37 (TypeDeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 37 (TypeDeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 37 (TypeDeclName -> IDENTIFIER .)


state 139

    (138) OExpr -> empty .

    RBRACK          reduce using rule 138 (OExpr -> empty .)
    COLON           reduce using rule 138 (OExpr -> empty .)


state 140

    (261) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (253) Expr -> Expr . OROR Prec2Expr_
    (139) OExpr -> Expr .

    PIPE            shift and go to state 278
    OROR            shift and go to state 161
    RBRACK          reduce using rule 139 (OExpr -> Expr .)


state 141

    (88) OtherType -> LBRACK OExpr . RBRACK NType

    RBRACK          shift and go to state 279


state 142

    (137) ONewName -> NewName .

    SEMICOL         reduce using rule 137 (ONewName -> NewName .)
    RBRACE          reduce using rule 137 (ONewName -> NewName .)
    CASE            reduce using rule 137 (ONewName -> NewName .)
    DEFAULT         reduce using rule 137 (ONewName -> NewName .)


state 143

    (122) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 122 (NewName -> IDENTIFIER .)
    RBRACE          reduce using rule 122 (NewName -> IDENTIFIER .)
    CASE            reduce using rule 122 (NewName -> IDENTIFIER .)
    DEFAULT         reduce using rule 122 (NewName -> IDENTIFIER .)
    COMMA           reduce using rule 122 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 122 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 122 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 122 (NewName -> IDENTIFIER .)
    MAP             reduce using rule 122 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 122 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 122 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 122 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 122 (NewName -> IDENTIFIER .)


state 144

    (136) ONewName -> empty .

    SEMICOL         reduce using rule 136 (ONewName -> empty .)
    RBRACE          reduce using rule 136 (ONewName -> empty .)
    CASE            reduce using rule 136 (ONewName -> empty .)
    DEFAULT         reduce using rule 136 (ONewName -> empty .)


state 145

    (195) NonDeclStmt -> CONTINUE ONewName .

    SEMICOL         reduce using rule 195 (NonDeclStmt -> CONTINUE ONewName .)
    RBRACE          reduce using rule 195 (NonDeclStmt -> CONTINUE ONewName .)
    CASE            reduce using rule 195 (NonDeclStmt -> CONTINUE ONewName .)
    DEFAULT         reduce using rule 195 (NonDeclStmt -> CONTINUE ONewName .)


state 146

    (256) UExpr -> NOT UExpr .

    DIVIDE          reduce using rule 256 (UExpr -> NOT UExpr .)
    MOD             reduce using rule 256 (UExpr -> NOT UExpr .)
    SHL             reduce using rule 256 (UExpr -> NOT UExpr .)
    SHR             reduce using rule 256 (UExpr -> NOT UExpr .)
    AMPERS          reduce using rule 256 (UExpr -> NOT UExpr .)
    AMPCAR          reduce using rule 256 (UExpr -> NOT UExpr .)
    TIMES           reduce using rule 256 (UExpr -> NOT UExpr .)
    PLUS            reduce using rule 256 (UExpr -> NOT UExpr .)
    MINUS           reduce using rule 256 (UExpr -> NOT UExpr .)
    XOR             reduce using rule 256 (UExpr -> NOT UExpr .)
    OR              reduce using rule 256 (UExpr -> NOT UExpr .)
    EQEQ            reduce using rule 256 (UExpr -> NOT UExpr .)
    NOTEQ           reduce using rule 256 (UExpr -> NOT UExpr .)
    LEQ             reduce using rule 256 (UExpr -> NOT UExpr .)
    GEQ             reduce using rule 256 (UExpr -> NOT UExpr .)
    GREAT           reduce using rule 256 (UExpr -> NOT UExpr .)
    LESS            reduce using rule 256 (UExpr -> NOT UExpr .)
    AMPAMP          reduce using rule 256 (UExpr -> NOT UExpr .)
    OROR            reduce using rule 256 (UExpr -> NOT UExpr .)
    RBRACK          reduce using rule 256 (UExpr -> NOT UExpr .)
    COLON           reduce using rule 256 (UExpr -> NOT UExpr .)
    PLUSEQ          reduce using rule 256 (UExpr -> NOT UExpr .)
    MINUSEQ         reduce using rule 256 (UExpr -> NOT UExpr .)
    TIMESEQ         reduce using rule 256 (UExpr -> NOT UExpr .)
    DIVIDEEQ        reduce using rule 256 (UExpr -> NOT UExpr .)
    MODEQ           reduce using rule 256 (UExpr -> NOT UExpr .)
    OREQ            reduce using rule 256 (UExpr -> NOT UExpr .)
    AMPEQ           reduce using rule 256 (UExpr -> NOT UExpr .)
    CAREQ           reduce using rule 256 (UExpr -> NOT UExpr .)
    SHL_ASSIGN      reduce using rule 256 (UExpr -> NOT UExpr .)
    SHR_ASSIGN      reduce using rule 256 (UExpr -> NOT UExpr .)
    AMPCAREQ        reduce using rule 256 (UExpr -> NOT UExpr .)
    PLUSPLUS        reduce using rule 256 (UExpr -> NOT UExpr .)
    MINUSMIN        reduce using rule 256 (UExpr -> NOT UExpr .)
    SEMICOL         reduce using rule 256 (UExpr -> NOT UExpr .)
    EQUAL           reduce using rule 256 (UExpr -> NOT UExpr .)
    COLONEQ         reduce using rule 256 (UExpr -> NOT UExpr .)
    COMMA           reduce using rule 256 (UExpr -> NOT UExpr .)
    LBRACE          reduce using rule 256 (UExpr -> NOT UExpr .)
    PIPE            reduce using rule 256 (UExpr -> NOT UExpr .)
    RBRACE          reduce using rule 256 (UExpr -> NOT UExpr .)
    CASE            reduce using rule 256 (UExpr -> NOT UExpr .)
    DEFAULT         reduce using rule 256 (UExpr -> NOT UExpr .)
    RPAREN          reduce using rule 256 (UExpr -> NOT UExpr .)
    RIGHT_ANGLE     reduce using rule 256 (UExpr -> NOT UExpr .)
    RIGHT_RIGHT     reduce using rule 256 (UExpr -> NOT UExpr .)
    DDD             reduce using rule 256 (UExpr -> NOT UExpr .)


state 147

    (140) OExprList -> empty .

    SEMICOL         reduce using rule 140 (OExprList -> empty .)
    RBRACE          reduce using rule 140 (OExprList -> empty .)
    CASE            reduce using rule 140 (OExprList -> empty .)
    DEFAULT         reduce using rule 140 (OExprList -> empty .)


state 148

    (144) ExprList -> Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    EQUAL           reduce using rule 144 (ExprList -> Expr .)
    COLONEQ         reduce using rule 144 (ExprList -> Expr .)
    COMMA           reduce using rule 144 (ExprList -> Expr .)
    SEMICOL         reduce using rule 144 (ExprList -> Expr .)
    LBRACE          reduce using rule 144 (ExprList -> Expr .)
    RBRACE          reduce using rule 144 (ExprList -> Expr .)
    CASE            reduce using rule 144 (ExprList -> Expr .)
    DEFAULT         reduce using rule 144 (ExprList -> Expr .)
    RPAREN          reduce using rule 144 (ExprList -> Expr .)
    OROR            shift and go to state 161


state 149

    (141) OExprList -> ExprList .
    (145) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 141 (OExprList -> ExprList .)
    RBRACE          reduce using rule 141 (OExprList -> ExprList .)
    CASE            reduce using rule 141 (OExprList -> ExprList .)
    DEFAULT         reduce using rule 141 (OExprList -> ExprList .)
    COMMA           shift and go to state 108


state 150

    (198) NonDeclStmt -> RETURN OExprList .

    SEMICOL         reduce using rule 198 (NonDeclStmt -> RETURN OExprList .)
    RBRACE          reduce using rule 198 (NonDeclStmt -> RETURN OExprList .)
    CASE            reduce using rule 198 (NonDeclStmt -> RETURN OExprList .)
    DEFAULT         reduce using rule 198 (NonDeclStmt -> RETURN OExprList .)


state 151

    (72) IfHeader -> OSimpleStmt .
    (73) IfHeader -> OSimpleStmt . SEMICOL OSimpleStmt

    LBRACE          reduce using rule 72 (IfHeader -> OSimpleStmt .)
    SEMICOL         shift and go to state 280


state 152

    (229) SwitchStmt -> SWITCH IfHeader . LBRACE CaseBlockList RBRACE

    LBRACE          shift and go to state 281


state 153

    (155) DeclList -> DeclList Declaration SEMICOL .

    error           reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    CONSTANT        reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    VAR             reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    TYPE            reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    FUNCTION        reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    BREAK           reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    CONTINUE        reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    DEFER           reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    GOTO            reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    RETURN          reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    FOR             reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    SWITCH          reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    IF              reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    AMPERS          reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    NOT             reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    TIMES           reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    PLUS            reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    MINUS           reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    XOR             reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    LPAREN          reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    INTEGER         reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    FLOAT           reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    STRING          reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    LBRACK          reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    MAP             reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    STRUCT          reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    INTERFACE       reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)
    $end            reduce using rule 155 (DeclList -> DeclList Declaration SEMICOL .)


state 154

    (213) PExprNoParen -> CompType LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (172) BracedKeyvalList -> . empty
    (173) BracedKeyvalList -> . KeyvalList OComma
    (265) empty -> .
    (168) KeyvalList -> . Keyval
    (169) KeyvalList -> . BareCompLitExpr
    (170) KeyvalList -> . KeyvalList COMMA Keyval
    (171) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (221) Keyval -> . Expr COLON CompLitExpr
    (222) BareCompLitExpr -> . Expr
    (223) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 265 (empty -> .)
    LEFT_LEFT       shift and go to state 284
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 282
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 39
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    Keyval                         shift and go to state 286
    BareCompLitExpr                shift and go to state 288
    PExpr                          shift and go to state 59
    BracedKeyvalList               shift and go to state 287

state 155

    (194) NonDeclStmt -> BREAK ONewName .

    SEMICOL         reduce using rule 194 (NonDeclStmt -> BREAK ONewName .)
    RBRACE          reduce using rule 194 (NonDeclStmt -> BREAK ONewName .)
    CASE            reduce using rule 194 (NonDeclStmt -> BREAK ONewName .)
    DEFAULT         reduce using rule 194 (NonDeclStmt -> BREAK ONewName .)


state 156

    (208) PExprNoParen -> PExpr LBRACK . Expr RBRACK
    (209) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr COLON OExpr RBRACK
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (138) OExpr -> . empty
    (139) OExpr -> . Expr
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (265) empty -> .
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    COLON           reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 139
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 289
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    OExpr                          shift and go to state 290
    PExpr                          shift and go to state 59

state 157

    (262) PseudoCall -> PExpr LPAREN . RPAREN
    (263) PseudoCall -> PExpr LPAREN . ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> PExpr LPAREN . ExprOrTypeList DDD OComma RPAREN
    (146) ExprOrTypeList -> . ExprOrType
    (147) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (226) ExprOrType -> . Expr
    (227) ExprOrType -> . NonExprType
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (142) FuncLiteralDecl -> . FuncType

    RPAREN          shift and go to state 293
    TIMES           shift and go to state 179
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 183
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 177
    Prec4Expr_                     shift and go to state 30
    ExprOrTypeList                 shift and go to state 291
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    ExprOrType                     shift and go to state 292
    NonExprType                    shift and go to state 180
    OtherType                      shift and go to state 181
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 182
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 158

    (214) PExprNoParen -> PExpr LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (172) BracedKeyvalList -> . empty
    (173) BracedKeyvalList -> . KeyvalList OComma
    (265) empty -> .
    (168) KeyvalList -> . Keyval
    (169) KeyvalList -> . BareCompLitExpr
    (170) KeyvalList -> . KeyvalList COMMA Keyval
    (171) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (221) Keyval -> . Expr COLON CompLitExpr
    (222) BareCompLitExpr -> . Expr
    (223) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 265 (empty -> .)
    LEFT_LEFT       shift and go to state 284
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 282
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 39
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    Keyval                         shift and go to state 286
    BareCompLitExpr                shift and go to state 288
    PExpr                          shift and go to state 59
    BracedKeyvalList               shift and go to state 294

state 159

    (205) PExprNoParen -> PExpr DOT . IDENTIFIER
    (206) PExprNoParen -> PExpr DOT . LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> PExpr DOT . LPAREN TYPE RPAREN

    IDENTIFIER      shift and go to state 296
    LPAREN          shift and go to state 295


state 160

    (197) NonDeclStmt -> GOTO NewName .

    SEMICOL         reduce using rule 197 (NonDeclStmt -> GOTO NewName .)
    RBRACE          reduce using rule 197 (NonDeclStmt -> GOTO NewName .)
    CASE            reduce using rule 197 (NonDeclStmt -> GOTO NewName .)
    DEFAULT         reduce using rule 197 (NonDeclStmt -> GOTO NewName .)


state 161

    (253) Expr -> Expr OROR . Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 297
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 162

    (47) SimpleStmt -> Expr CAREQ . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 298
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 163

    (42) SimpleStmt -> Expr TIMESEQ . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 299
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 164

    (40) SimpleStmt -> Expr PLUSEQ . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 300
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 165

    (44) SimpleStmt -> Expr MODEQ . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 301
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 166

    (49) SimpleStmt -> Expr SHR_ASSIGN . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 302
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 167

    (45) SimpleStmt -> Expr OREQ . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 303
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 168

    (41) SimpleStmt -> Expr MINUSEQ . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 304
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 169

    (54) SimpleStmt -> Expr MINUSMIN .

    SEMICOL         reduce using rule 54 (SimpleStmt -> Expr MINUSMIN .)
    LBRACE          reduce using rule 54 (SimpleStmt -> Expr MINUSMIN .)
    RBRACE          reduce using rule 54 (SimpleStmt -> Expr MINUSMIN .)
    CASE            reduce using rule 54 (SimpleStmt -> Expr MINUSMIN .)
    DEFAULT         reduce using rule 54 (SimpleStmt -> Expr MINUSMIN .)


state 170

    (46) SimpleStmt -> Expr AMPEQ . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 305
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 171

    (50) SimpleStmt -> Expr AMPCAREQ . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 306
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 172

    (48) SimpleStmt -> Expr SHL_ASSIGN . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 307
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 173

    (53) SimpleStmt -> Expr PLUSPLUS .

    SEMICOL         reduce using rule 53 (SimpleStmt -> Expr PLUSPLUS .)
    LBRACE          reduce using rule 53 (SimpleStmt -> Expr PLUSPLUS .)
    RBRACE          reduce using rule 53 (SimpleStmt -> Expr PLUSPLUS .)
    CASE            reduce using rule 53 (SimpleStmt -> Expr PLUSPLUS .)
    DEFAULT         reduce using rule 53 (SimpleStmt -> Expr PLUSPLUS .)


state 174

    (43) SimpleStmt -> Expr DIVIDEEQ . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 308
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 175

    (260) UExpr -> XOR UExpr .

    DIVIDE          reduce using rule 260 (UExpr -> XOR UExpr .)
    MOD             reduce using rule 260 (UExpr -> XOR UExpr .)
    SHL             reduce using rule 260 (UExpr -> XOR UExpr .)
    SHR             reduce using rule 260 (UExpr -> XOR UExpr .)
    AMPERS          reduce using rule 260 (UExpr -> XOR UExpr .)
    AMPCAR          reduce using rule 260 (UExpr -> XOR UExpr .)
    TIMES           reduce using rule 260 (UExpr -> XOR UExpr .)
    PLUS            reduce using rule 260 (UExpr -> XOR UExpr .)
    MINUS           reduce using rule 260 (UExpr -> XOR UExpr .)
    XOR             reduce using rule 260 (UExpr -> XOR UExpr .)
    OR              reduce using rule 260 (UExpr -> XOR UExpr .)
    EQEQ            reduce using rule 260 (UExpr -> XOR UExpr .)
    NOTEQ           reduce using rule 260 (UExpr -> XOR UExpr .)
    LEQ             reduce using rule 260 (UExpr -> XOR UExpr .)
    GEQ             reduce using rule 260 (UExpr -> XOR UExpr .)
    GREAT           reduce using rule 260 (UExpr -> XOR UExpr .)
    LESS            reduce using rule 260 (UExpr -> XOR UExpr .)
    AMPAMP          reduce using rule 260 (UExpr -> XOR UExpr .)
    OROR            reduce using rule 260 (UExpr -> XOR UExpr .)
    RBRACK          reduce using rule 260 (UExpr -> XOR UExpr .)
    COLON           reduce using rule 260 (UExpr -> XOR UExpr .)
    PLUSEQ          reduce using rule 260 (UExpr -> XOR UExpr .)
    MINUSEQ         reduce using rule 260 (UExpr -> XOR UExpr .)
    TIMESEQ         reduce using rule 260 (UExpr -> XOR UExpr .)
    DIVIDEEQ        reduce using rule 260 (UExpr -> XOR UExpr .)
    MODEQ           reduce using rule 260 (UExpr -> XOR UExpr .)
    OREQ            reduce using rule 260 (UExpr -> XOR UExpr .)
    AMPEQ           reduce using rule 260 (UExpr -> XOR UExpr .)
    CAREQ           reduce using rule 260 (UExpr -> XOR UExpr .)
    SHL_ASSIGN      reduce using rule 260 (UExpr -> XOR UExpr .)
    SHR_ASSIGN      reduce using rule 260 (UExpr -> XOR UExpr .)
    AMPCAREQ        reduce using rule 260 (UExpr -> XOR UExpr .)
    PLUSPLUS        reduce using rule 260 (UExpr -> XOR UExpr .)
    MINUSMIN        reduce using rule 260 (UExpr -> XOR UExpr .)
    SEMICOL         reduce using rule 260 (UExpr -> XOR UExpr .)
    EQUAL           reduce using rule 260 (UExpr -> XOR UExpr .)
    COLONEQ         reduce using rule 260 (UExpr -> XOR UExpr .)
    COMMA           reduce using rule 260 (UExpr -> XOR UExpr .)
    LBRACE          reduce using rule 260 (UExpr -> XOR UExpr .)
    PIPE            reduce using rule 260 (UExpr -> XOR UExpr .)
    RBRACE          reduce using rule 260 (UExpr -> XOR UExpr .)
    CASE            reduce using rule 260 (UExpr -> XOR UExpr .)
    DEFAULT         reduce using rule 260 (UExpr -> XOR UExpr .)
    RPAREN          reduce using rule 260 (UExpr -> XOR UExpr .)
    RIGHT_ANGLE     reduce using rule 260 (UExpr -> XOR UExpr .)
    RIGHT_RIGHT     reduce using rule 260 (UExpr -> XOR UExpr .)
    DDD             reduce using rule 260 (UExpr -> XOR UExpr .)


state 176

    (257) UExpr -> TIMES UExpr .

    DIVIDE          reduce using rule 257 (UExpr -> TIMES UExpr .)
    MOD             reduce using rule 257 (UExpr -> TIMES UExpr .)
    SHL             reduce using rule 257 (UExpr -> TIMES UExpr .)
    SHR             reduce using rule 257 (UExpr -> TIMES UExpr .)
    AMPERS          reduce using rule 257 (UExpr -> TIMES UExpr .)
    AMPCAR          reduce using rule 257 (UExpr -> TIMES UExpr .)
    TIMES           reduce using rule 257 (UExpr -> TIMES UExpr .)
    PLUS            reduce using rule 257 (UExpr -> TIMES UExpr .)
    MINUS           reduce using rule 257 (UExpr -> TIMES UExpr .)
    XOR             reduce using rule 257 (UExpr -> TIMES UExpr .)
    OR              reduce using rule 257 (UExpr -> TIMES UExpr .)
    EQEQ            reduce using rule 257 (UExpr -> TIMES UExpr .)
    NOTEQ           reduce using rule 257 (UExpr -> TIMES UExpr .)
    LEQ             reduce using rule 257 (UExpr -> TIMES UExpr .)
    GEQ             reduce using rule 257 (UExpr -> TIMES UExpr .)
    GREAT           reduce using rule 257 (UExpr -> TIMES UExpr .)
    LESS            reduce using rule 257 (UExpr -> TIMES UExpr .)
    AMPAMP          reduce using rule 257 (UExpr -> TIMES UExpr .)
    OROR            reduce using rule 257 (UExpr -> TIMES UExpr .)
    RBRACK          reduce using rule 257 (UExpr -> TIMES UExpr .)
    COLON           reduce using rule 257 (UExpr -> TIMES UExpr .)
    PLUSEQ          reduce using rule 257 (UExpr -> TIMES UExpr .)
    MINUSEQ         reduce using rule 257 (UExpr -> TIMES UExpr .)
    TIMESEQ         reduce using rule 257 (UExpr -> TIMES UExpr .)
    DIVIDEEQ        reduce using rule 257 (UExpr -> TIMES UExpr .)
    MODEQ           reduce using rule 257 (UExpr -> TIMES UExpr .)
    OREQ            reduce using rule 257 (UExpr -> TIMES UExpr .)
    AMPEQ           reduce using rule 257 (UExpr -> TIMES UExpr .)
    CAREQ           reduce using rule 257 (UExpr -> TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 257 (UExpr -> TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 257 (UExpr -> TIMES UExpr .)
    AMPCAREQ        reduce using rule 257 (UExpr -> TIMES UExpr .)
    PLUSPLUS        reduce using rule 257 (UExpr -> TIMES UExpr .)
    MINUSMIN        reduce using rule 257 (UExpr -> TIMES UExpr .)
    SEMICOL         reduce using rule 257 (UExpr -> TIMES UExpr .)
    EQUAL           reduce using rule 257 (UExpr -> TIMES UExpr .)
    COLONEQ         reduce using rule 257 (UExpr -> TIMES UExpr .)
    COMMA           reduce using rule 257 (UExpr -> TIMES UExpr .)
    LBRACE          reduce using rule 257 (UExpr -> TIMES UExpr .)
    PIPE            reduce using rule 257 (UExpr -> TIMES UExpr .)
    RBRACE          reduce using rule 257 (UExpr -> TIMES UExpr .)
    CASE            reduce using rule 257 (UExpr -> TIMES UExpr .)
    DEFAULT         reduce using rule 257 (UExpr -> TIMES UExpr .)
    RPAREN          reduce using rule 257 (UExpr -> TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 257 (UExpr -> TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 257 (UExpr -> TIMES UExpr .)
    DDD             reduce using rule 257 (UExpr -> TIMES UExpr .)


state 177

    (85) NonExprType -> FuncType .
    (217) ConvType -> FuncType .
    (142) FuncLiteralDecl -> FuncType .

    RPAREN          reduce using rule 85 (NonExprType -> FuncType .)
    COLON           reduce using rule 85 (NonExprType -> FuncType .)
    EQUAL           reduce using rule 85 (NonExprType -> FuncType .)
    COLONEQ         reduce using rule 85 (NonExprType -> FuncType .)
    COMMA           reduce using rule 85 (NonExprType -> FuncType .)
    DDD             reduce using rule 85 (NonExprType -> FuncType .)
    LEFT_ANGLE      reduce using rule 217 (ConvType -> FuncType .)
    LBRACE          reduce using rule 142 (FuncLiteralDecl -> FuncType .)


state 178

    (202) PExpr -> LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 309


state 179

    (87) NonExprType -> TIMES . NonExprType
    (257) UExpr -> TIMES . UExpr
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (142) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 179
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 183
    MAP             shift and go to state 27
    LPAREN          shift and go to state 69
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 177
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    NonExprType                    shift and go to state 310
    OtherType                      shift and go to state 181
    InterfaceType                  shift and go to state 53
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    FuncLiteralDecl                shift and go to state 24
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 176
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 180

    (227) ExprOrType -> NonExprType .

    COLON           reduce using rule 227 (ExprOrType -> NonExprType .)
    EQUAL           reduce using rule 227 (ExprOrType -> NonExprType .)
    COLONEQ         reduce using rule 227 (ExprOrType -> NonExprType .)
    COMMA           reduce using rule 227 (ExprOrType -> NonExprType .)
    RPAREN          reduce using rule 227 (ExprOrType -> NonExprType .)
    DDD             reduce using rule 227 (ExprOrType -> NonExprType .)


state 181

    (86) NonExprType -> OtherType .
    (218) ConvType -> OtherType .
    (219) CompType -> OtherType .

    RPAREN          reduce using rule 86 (NonExprType -> OtherType .)
    COLON           reduce using rule 86 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 86 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 86 (NonExprType -> OtherType .)
    COMMA           reduce using rule 86 (NonExprType -> OtherType .)
    DDD             reduce using rule 86 (NonExprType -> OtherType .)
    LEFT_ANGLE      reduce using rule 218 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 219 (CompType -> OtherType .)


state 182

    (226) ExprOrType -> Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    COLON           reduce using rule 226 (ExprOrType -> Expr .)
    EQUAL           reduce using rule 226 (ExprOrType -> Expr .)
    COLONEQ         reduce using rule 226 (ExprOrType -> Expr .)
    COMMA           reduce using rule 226 (ExprOrType -> Expr .)
    RPAREN          reduce using rule 226 (ExprOrType -> Expr .)
    DDD             reduce using rule 226 (ExprOrType -> Expr .)
    OROR            shift and go to state 161


state 183

    (88) OtherType -> LBRACK . OExpr RBRACK NType
    (261) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (138) OExpr -> . empty
    (139) OExpr -> . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (265) empty -> .
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 139
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 311
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    OExpr                          shift and go to state 141
    PExpr                          shift and go to state 59

state 184

    (74) IfStmt -> IF IfHeader . LoopBody ElseIfList Else
    (63) LoopBody -> . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 267

    LoopBody                       shift and go to state 312

state 185

    (92) StructType -> STRUCT LBRACE . StructDeclList OSemi RBRACE
    (93) StructType -> STRUCT LBRACE . RBRACE
    (107) StructDeclList -> . StructDecl
    (108) StructDeclList -> . StructDeclList SEMICOL StructDecl
    (111) StructDecl -> . NewNameList NType OLiteral
    (112) StructDecl -> . Embed OLiteral
    (113) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (114) StructDecl -> . TIMES Embed OLiteral
    (115) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (116) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (166) NewNameList -> . NewName
    (167) NewNameList -> . NewNameList COMMA NewName
    (153) Embed -> . IDENTIFIER
    (122) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 321
    LPAREN          shift and go to state 316
    TIMES           shift and go to state 315
    IDENTIFIER      shift and go to state 319

    NewName                        shift and go to state 313
    StructDecl                     shift and go to state 314
    NewNameList                    shift and go to state 317
    StructDeclList                 shift and go to state 318
    Embed                          shift and go to state 320

state 186

    (9) ImportStmt -> ImportHere STRING .

    SEMICOL         reduce using rule 9 (ImportStmt -> ImportHere STRING .)
    RPAREN          reduce using rule 9 (ImportStmt -> ImportHere STRING .)


state 187

    (8) Import -> IMPORT LPAREN RPAREN .

    SEMICOL         reduce using rule 8 (Import -> IMPORT LPAREN RPAREN .)


state 188

    (7) Import -> IMPORT LPAREN ImportStmtList . OSemi RPAREN
    (11) ImportStmtList -> ImportStmtList . SEMICOL ImportStmt
    (132) OSemi -> . empty
    (133) OSemi -> . SEMICOL
    (265) empty -> .

    SEMICOL         shift and go to state 322
    RPAREN          reduce using rule 265 (empty -> .)

    OSemi                          shift and go to state 323
    empty                          shift and go to state 324

state 189

    (10) ImportStmtList -> ImportStmt .

    SEMICOL         reduce using rule 10 (ImportStmtList -> ImportStmt .)
    RPAREN          reduce using rule 10 (ImportStmtList -> ImportStmt .)


state 190

    (247) Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .
    (239) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LEQ             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GEQ             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GREAT           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LESS            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MODEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OREQ            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    CAREQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OROR            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LBRACE          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    EQUAL           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COMMA           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACE          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLON           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    CASE            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DEFAULT         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PIPE            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACK          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RPAREN          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DDD             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    XOR             shift and go to state 116
    OR              shift and go to state 117


state 191

    (246) Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .
    (239) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LEQ             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GEQ             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GREAT           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LESS            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MODEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OREQ            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    CAREQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OROR            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LBRACE          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    EQUAL           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COMMA           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACE          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLON           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    CASE            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DEFAULT         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PIPE            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACK          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RPAREN          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DDD             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    XOR             shift and go to state 116
    OR              shift and go to state 117


state 192

    (244) Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .
    (239) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LEQ             reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GEQ             reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GREAT           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LESS            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MODEQ           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OREQ            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    CAREQ           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OROR            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LBRACE          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    EQUAL           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COMMA           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACE          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLON           reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    CASE            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DEFAULT         reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PIPE            reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACK          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RPAREN          reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DDD             reduce using rule 244 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    XOR             shift and go to state 116
    OR              shift and go to state 117


state 193

    (249) Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .
    (239) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    NOTEQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LEQ             reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GEQ             reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GREAT           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LESS            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPAMP          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSEQ          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSEQ         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    TIMESEQ         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MODEQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OREQ            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPEQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    CAREQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPCAREQ        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSPLUS        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSMIN        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OROR            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SEMICOL         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LBRACE          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    EQUAL           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLONEQ         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COMMA           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACE          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLON           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    CASE            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DEFAULT         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PIPE            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACK          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RPAREN          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DDD             reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    XOR             shift and go to state 116
    OR              shift and go to state 117


state 194

    (248) Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .
    (239) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    NOTEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LEQ             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GEQ             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GREAT           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LESS            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPAMP          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSEQ          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    TIMESEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MODEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OREQ            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    CAREQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPCAREQ        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSPLUS        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSMIN        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OROR            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SEMICOL         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LBRACE          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    EQUAL           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLONEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COMMA           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACE          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLON           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    CASE            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DEFAULT         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PIPE            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACK          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RPAREN          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DDD             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    XOR             shift and go to state 116
    OR              shift and go to state 117


state 195

    (245) Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .
    (239) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (240) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (241) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LEQ             reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GEQ             reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GREAT           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LESS            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MODEQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OREQ            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    CAREQ           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OROR            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LBRACE          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    EQUAL           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COMMA           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACE          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLON           reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    CASE            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DEFAULT         reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PIPE            reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACK          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RPAREN          reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DDD             reduce using rule 245 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    XOR             shift and go to state 116
    OR              shift and go to state 117


state 196

    (212) PExprNoParen -> ConvType LEFT_ANGLE Expr . OComma RIGHT_ANGLE
    (253) Expr -> Expr . OROR Prec2Expr_
    (130) OComma -> . empty
    (131) OComma -> . COMMA
    (265) empty -> .

    OROR            shift and go to state 161
    COMMA           shift and go to state 326
    RIGHT_ANGLE     reduce using rule 265 (empty -> .)

    empty                          shift and go to state 327
    OComma                         shift and go to state 325

state 197

    (192) NonDeclStmt -> LabelName COLON Stmt .

    SEMICOL         reduce using rule 192 (NonDeclStmt -> LabelName COLON Stmt .)
    RBRACE          reduce using rule 192 (NonDeclStmt -> LabelName COLON Stmt .)
    CASE            reduce using rule 192 (NonDeclStmt -> LabelName COLON Stmt .)
    DEFAULT         reduce using rule 192 (NonDeclStmt -> LabelName COLON Stmt .)


state 198

    (186) Stmt -> CommonDecl .

    RBRACE          reduce using rule 186 (Stmt -> CommonDecl .)
    SEMICOL         reduce using rule 186 (Stmt -> CommonDecl .)
    CASE            reduce using rule 186 (Stmt -> CommonDecl .)
    DEFAULT         reduce using rule 186 (Stmt -> CommonDecl .)


state 199

    (59) CompoundStmt -> LBRACE . StmtList RBRACE
    (164) StmtList -> . Stmt
    (165) StmtList -> . StmtList SEMICOL Stmt
    (184) Stmt -> . empty
    (185) Stmt -> . CompoundStmt
    (186) Stmt -> . CommonDecl
    (187) Stmt -> . NonDeclStmt
    (265) empty -> .
    (59) CompoundStmt -> . LBRACE StmtList RBRACE
    (19) CommonDecl -> . CONSTANT ConstDecl
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (22) CommonDecl -> . CONSTANT LPAREN RPAREN
    (23) CommonDecl -> . VAR VarDecl
    (24) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (25) CommonDecl -> . VAR LPAREN RPAREN
    (26) CommonDecl -> . TYPE TypeDecl
    (27) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (28) CommonDecl -> . TYPE LPAREN RPAREN
    (188) NonDeclStmt -> . SimpleStmt
    (189) NonDeclStmt -> . ForStmt
    (190) NonDeclStmt -> . SwitchStmt
    (191) NonDeclStmt -> . IfStmt
    (192) NonDeclStmt -> . LabelName COLON Stmt
    (193) NonDeclStmt -> . FALLTHROUGH
    (194) NonDeclStmt -> . BREAK ONewName
    (195) NonDeclStmt -> . CONTINUE ONewName
    (196) NonDeclStmt -> . DEFER PseudoCall
    (197) NonDeclStmt -> . GOTO NewName
    (198) NonDeclStmt -> . RETURN OExprList
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (71) ForStmt -> . FOR ForBody
    (229) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (74) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          reduce using rule 265 (empty -> .)
    SEMICOL         reduce using rule 265 (empty -> .)
    LBRACE          shift and go to state 199
    CONSTANT        shift and go to state 28
    VAR             shift and go to state 25
    TYPE            shift and go to state 44
    FALLTHROUGH     shift and go to state 19
    BREAK           shift and go to state 57
    CONTINUE        shift and go to state 47
    DEFER           shift and go to state 18
    GOTO            shift and go to state 63
    RETURN          shift and go to state 50
    FOR             shift and go to state 38
    SWITCH          shift and go to state 51
    IF              shift and go to state 70
    IDENTIFIER      shift and go to state 54
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 61
    Prec3Expr_                     shift and go to state 14
    ForStmt                        shift and go to state 62
    StmtList                       shift and go to state 328
    CommonDecl                     shift and go to state 198
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    IfStmt                         shift and go to state 34
    FuncType                       shift and go to state 60
    FuncLiteralDecl                shift and go to state 24
    Stmt                           shift and go to state 211
    NewName                        shift and go to state 35
    InterfaceType                  shift and go to state 53
    LabelName                      shift and go to state 21
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 201
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    PExpr                          shift and go to state 59
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    SwitchStmt                     shift and go to state 45
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    CompoundStmt                   shift and go to state 200

state 200

    (185) Stmt -> CompoundStmt .

    RBRACE          reduce using rule 185 (Stmt -> CompoundStmt .)
    SEMICOL         reduce using rule 185 (Stmt -> CompoundStmt .)
    CASE            reduce using rule 185 (Stmt -> CompoundStmt .)
    DEFAULT         reduce using rule 185 (Stmt -> CompoundStmt .)


state 201

    (184) Stmt -> empty .

    RBRACE          reduce using rule 184 (Stmt -> empty .)
    SEMICOL         reduce using rule 184 (Stmt -> empty .)
    CASE            reduce using rule 184 (Stmt -> empty .)
    DEFAULT         reduce using rule 184 (Stmt -> empty .)


state 202

    (187) Stmt -> NonDeclStmt .

    RBRACE          reduce using rule 187 (Stmt -> NonDeclStmt .)
    SEMICOL         reduce using rule 187 (Stmt -> NonDeclStmt .)
    CASE            reduce using rule 187 (Stmt -> NonDeclStmt .)
    DEFAULT         reduce using rule 187 (Stmt -> NonDeclStmt .)


state 203

    (234) Prec5Expr_ -> Prec5Expr_ SHR UExpr .

    DIVIDE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MOD             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPERS          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAR          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMES           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUS            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUS           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    XOR             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OR              reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQEQ            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    NOTEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LEQ             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GEQ             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GREAT           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LESS            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPAMP          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSEQ          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMESEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DIVIDEEQ        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MODEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OREQ            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    CAREQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL_ASSIGN      reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR_ASSIGN      reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAREQ        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSPLUS        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSMIN        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OROR            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SEMICOL         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQUAL           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLONEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COMMA           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LBRACE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PIPE            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACK          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    CASE            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DEFAULT         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RPAREN          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_ANGLE     reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLON           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_RIGHT     reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DDD             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)


state 204

    (231) Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .

    DIVIDE          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MOD             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPERS          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAR          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMES           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUS            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUS           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    XOR             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OR              reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQEQ            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    NOTEQ           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LEQ             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GEQ             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GREAT           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LESS            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPAMP          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSEQ          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSEQ         reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMESEQ         reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DIVIDEEQ        reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MODEQ           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OREQ            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPEQ           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    CAREQ           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL_ASSIGN      reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR_ASSIGN      reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAREQ        reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSPLUS        reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSMIN        reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OROR            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SEMICOL         reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQUAL           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLONEQ         reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COMMA           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LBRACE          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PIPE            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACK          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACE          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    CASE            reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DEFAULT         reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RPAREN          reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_ANGLE     reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLON           reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_RIGHT     reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DDD             reduce using rule 231 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)


state 205

    (236) Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .

    DIVIDE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MOD             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPERS          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAR          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMES           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUS            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUS           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    XOR             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OR              reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQEQ            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    NOTEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LEQ             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GEQ             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GREAT           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LESS            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPAMP          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSEQ          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMESEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DIVIDEEQ        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MODEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OREQ            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    CAREQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL_ASSIGN      reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR_ASSIGN      reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAREQ        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSPLUS        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSMIN        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OROR            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SEMICOL         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQUAL           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLONEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COMMA           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LBRACE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PIPE            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACK          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    CASE            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DEFAULT         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RPAREN          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_ANGLE     reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLON           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_RIGHT     reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DDD             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)


state 206

    (235) Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .

    DIVIDE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MOD             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPERS          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAR          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMES           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUS            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUS           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    XOR             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OR              reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQEQ            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    NOTEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LEQ             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GEQ             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GREAT           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LESS            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPAMP          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSEQ          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMESEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MODEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OREQ            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    CAREQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAREQ        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSPLUS        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSMIN        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OROR            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SEMICOL         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQUAL           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLONEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COMMA           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LBRACE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PIPE            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACK          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    CASE            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DEFAULT         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RPAREN          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLON           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DDD             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)


state 207

    (237) Prec5Expr_ -> Prec5Expr_ TIMES UExpr .

    DIVIDE          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MOD             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPERS          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAR          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMES           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUS            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUS           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    XOR             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OR              reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQEQ            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    NOTEQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LEQ             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GEQ             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GREAT           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LESS            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPAMP          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSEQ          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSEQ         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMESEQ         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DIVIDEEQ        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MODEQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OREQ            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPEQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    CAREQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAREQ        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSPLUS        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSMIN        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OROR            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SEMICOL         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQUAL           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLONEQ         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COMMA           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LBRACE          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PIPE            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACK          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACE          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    CASE            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DEFAULT         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RPAREN          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLON           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DDD             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)


state 208

    (233) Prec5Expr_ -> Prec5Expr_ SHL UExpr .

    DIVIDE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MOD             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPERS          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAR          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMES           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUS            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUS           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    XOR             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OR              reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQEQ            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    NOTEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LEQ             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GEQ             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GREAT           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LESS            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPAMP          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSEQ          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMESEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DIVIDEEQ        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MODEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OREQ            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    CAREQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL_ASSIGN      reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR_ASSIGN      reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAREQ        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSPLUS        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSMIN        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OROR            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SEMICOL         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQUAL           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLONEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COMMA           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LBRACE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PIPE            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACK          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    CASE            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DEFAULT         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RPAREN          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_ANGLE     reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLON           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_RIGHT     reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DDD             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)


state 209

    (232) Prec5Expr_ -> Prec5Expr_ MOD UExpr .

    DIVIDE          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MOD             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPERS          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAR          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMES           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUS            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUS           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    XOR             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OR              reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQEQ            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    NOTEQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LEQ             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GEQ             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GREAT           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LESS            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPAMP          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSEQ          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSEQ         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMESEQ         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DIVIDEEQ        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MODEQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OREQ            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPEQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    CAREQ           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL_ASSIGN      reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR_ASSIGN      reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAREQ        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSPLUS        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSMIN        reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OROR            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SEMICOL         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQUAL           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLONEQ         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COMMA           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LBRACE          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PIPE            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACK          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACE          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    CASE            reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DEFAULT         reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RPAREN          reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_ANGLE     reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLON           reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_RIGHT     reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DDD             reduce using rule 232 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)


state 210

    (251) Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .
    (244) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (245) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (247) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (248) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (249) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PIPE            reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OROR            reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACK          reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COMMA           reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SEMICOL         reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    LBRACE          reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACE          reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    CASE            reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DEFAULT         reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLON           reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQUAL           reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLONEQ         reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RPAREN          reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSEQ          reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSEQ         reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    TIMESEQ         reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MODEQ           reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OREQ            reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPEQ           reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    CAREQ           reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPCAREQ        reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSPLUS        reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSMIN        reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DDD             reduce using rule 251 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQEQ            shift and go to state 82
    NOTEQ           shift and go to state 85
    LEQ             shift and go to state 81
    GEQ             shift and go to state 80
    GREAT           shift and go to state 84
    LESS            shift and go to state 83


state 211

    (164) StmtList -> Stmt .

    RBRACE          reduce using rule 164 (StmtList -> Stmt .)
    SEMICOL         reduce using rule 164 (StmtList -> Stmt .)
    CASE            reduce using rule 164 (StmtList -> Stmt .)
    DEFAULT         reduce using rule 164 (StmtList -> Stmt .)


state 212

    (143) FuncLiteral -> FuncLiteralDecl LBRACE StmtList . RBRACE
    (165) StmtList -> StmtList . SEMICOL Stmt

    RBRACE          shift and go to state 329
    SEMICOL         shift and go to state 330


state 213

    (25) CommonDecl -> VAR LPAREN RPAREN .

    RBRACE          reduce using rule 25 (CommonDecl -> VAR LPAREN RPAREN .)
    SEMICOL         reduce using rule 25 (CommonDecl -> VAR LPAREN RPAREN .)
    CASE            reduce using rule 25 (CommonDecl -> VAR LPAREN RPAREN .)
    DEFAULT         reduce using rule 25 (CommonDecl -> VAR LPAREN RPAREN .)


state 214

    (156) VarDeclList -> VarDecl .

    SEMICOL         reduce using rule 156 (VarDeclList -> VarDecl .)
    RPAREN          reduce using rule 156 (VarDeclList -> VarDecl .)


state 215

    (24) CommonDecl -> VAR LPAREN VarDeclList . OSemi RPAREN
    (157) VarDeclList -> VarDeclList . SEMICOL VarDecl
    (132) OSemi -> . empty
    (133) OSemi -> . SEMICOL
    (265) empty -> .

    SEMICOL         shift and go to state 331
    RPAREN          reduce using rule 265 (empty -> .)

    OSemi                          shift and go to state 332
    empty                          shift and go to state 324

state 216

    (80) NType -> FuncType .

    COMMA           reduce using rule 80 (NType -> FuncType .)
    OR_RIGHT        reduce using rule 80 (NType -> FuncType .)
    LEFT_ANGLE      reduce using rule 80 (NType -> FuncType .)
    LBRACE          reduce using rule 80 (NType -> FuncType .)
    RPAREN          reduce using rule 80 (NType -> FuncType .)
    EQUAL           reduce using rule 80 (NType -> FuncType .)
    SEMICOL         reduce using rule 80 (NType -> FuncType .)
    RBRACE          reduce using rule 80 (NType -> FuncType .)
    CASE            reduce using rule 80 (NType -> FuncType .)
    DEFAULT         reduce using rule 80 (NType -> FuncType .)
    RBRACK          reduce using rule 80 (NType -> FuncType .)
    DDD             reduce using rule 80 (NType -> FuncType .)
    COLON           reduce using rule 80 (NType -> FuncType .)
    COLONEQ         reduce using rule 80 (NType -> FuncType .)
    LEFT_LEFT       reduce using rule 80 (NType -> FuncType .)
    INTEGER         reduce using rule 80 (NType -> FuncType .)
    FLOAT           reduce using rule 80 (NType -> FuncType .)
    STRING          reduce using rule 80 (NType -> FuncType .)


state 217

    (31) VarDecl -> DeclNameList EQUAL . ExprList
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 148
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 333
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 218

    (82) NType -> PtrType .

    COMMA           reduce using rule 82 (NType -> PtrType .)
    OR_RIGHT        reduce using rule 82 (NType -> PtrType .)
    LEFT_ANGLE      reduce using rule 82 (NType -> PtrType .)
    LBRACE          reduce using rule 82 (NType -> PtrType .)
    RPAREN          reduce using rule 82 (NType -> PtrType .)
    EQUAL           reduce using rule 82 (NType -> PtrType .)
    SEMICOL         reduce using rule 82 (NType -> PtrType .)
    RBRACE          reduce using rule 82 (NType -> PtrType .)
    CASE            reduce using rule 82 (NType -> PtrType .)
    DEFAULT         reduce using rule 82 (NType -> PtrType .)
    RBRACK          reduce using rule 82 (NType -> PtrType .)
    DDD             reduce using rule 82 (NType -> PtrType .)
    COLON           reduce using rule 82 (NType -> PtrType .)
    COLONEQ         reduce using rule 82 (NType -> PtrType .)
    LEFT_LEFT       reduce using rule 82 (NType -> PtrType .)
    INTEGER         reduce using rule 82 (NType -> PtrType .)
    FLOAT           reduce using rule 82 (NType -> PtrType .)
    STRING          reduce using rule 82 (NType -> PtrType .)


state 219

    (83) NType -> DotName .

    COMMA           reduce using rule 83 (NType -> DotName .)
    OR_RIGHT        reduce using rule 83 (NType -> DotName .)
    LEFT_ANGLE      reduce using rule 83 (NType -> DotName .)
    LBRACE          reduce using rule 83 (NType -> DotName .)
    RPAREN          reduce using rule 83 (NType -> DotName .)
    EQUAL           reduce using rule 83 (NType -> DotName .)
    SEMICOL         reduce using rule 83 (NType -> DotName .)
    RBRACE          reduce using rule 83 (NType -> DotName .)
    CASE            reduce using rule 83 (NType -> DotName .)
    DEFAULT         reduce using rule 83 (NType -> DotName .)
    RBRACK          reduce using rule 83 (NType -> DotName .)
    DDD             reduce using rule 83 (NType -> DotName .)
    COLON           reduce using rule 83 (NType -> DotName .)
    COLONEQ         reduce using rule 83 (NType -> DotName .)
    LEFT_LEFT       reduce using rule 83 (NType -> DotName .)
    INTEGER         reduce using rule 83 (NType -> DotName .)
    FLOAT           reduce using rule 83 (NType -> DotName .)
    STRING          reduce using rule 83 (NType -> DotName .)


state 220

    (123) PtrType -> TIMES . NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    Name                           shift and go to state 223
    FuncType                       shift and go to state 216
    NType                          shift and go to state 334
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219

state 221

    (81) NType -> OtherType .

    COMMA           reduce using rule 81 (NType -> OtherType .)
    OR_RIGHT        reduce using rule 81 (NType -> OtherType .)
    LEFT_ANGLE      reduce using rule 81 (NType -> OtherType .)
    LBRACE          reduce using rule 81 (NType -> OtherType .)
    RPAREN          reduce using rule 81 (NType -> OtherType .)
    EQUAL           reduce using rule 81 (NType -> OtherType .)
    SEMICOL         reduce using rule 81 (NType -> OtherType .)
    RBRACE          reduce using rule 81 (NType -> OtherType .)
    CASE            reduce using rule 81 (NType -> OtherType .)
    DEFAULT         reduce using rule 81 (NType -> OtherType .)
    RBRACK          reduce using rule 81 (NType -> OtherType .)
    DDD             reduce using rule 81 (NType -> OtherType .)
    COLON           reduce using rule 81 (NType -> OtherType .)
    COLONEQ         reduce using rule 81 (NType -> OtherType .)
    LEFT_LEFT       reduce using rule 81 (NType -> OtherType .)
    INTEGER         reduce using rule 81 (NType -> OtherType .)
    FLOAT           reduce using rule 81 (NType -> OtherType .)
    STRING          reduce using rule 81 (NType -> OtherType .)


state 222

    (163) DeclNameList -> DeclNameList COMMA . DeclName
    (174) DeclName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 103

    DeclName                       shift and go to state 335

state 223

    (128) DotName -> Name .
    (129) DotName -> Name . DOT IDENTIFIER

    COMMA           reduce using rule 128 (DotName -> Name .)
    RPAREN          reduce using rule 128 (DotName -> Name .)
    OR_RIGHT        reduce using rule 128 (DotName -> Name .)
    LBRACE          reduce using rule 128 (DotName -> Name .)
    SEMICOL         reduce using rule 128 (DotName -> Name .)
    LEFT_ANGLE      reduce using rule 128 (DotName -> Name .)
    EQUAL           reduce using rule 128 (DotName -> Name .)
    RBRACE          reduce using rule 128 (DotName -> Name .)
    CASE            reduce using rule 128 (DotName -> Name .)
    DEFAULT         reduce using rule 128 (DotName -> Name .)
    RBRACK          reduce using rule 128 (DotName -> Name .)
    DDD             reduce using rule 128 (DotName -> Name .)
    COLON           reduce using rule 128 (DotName -> Name .)
    COLONEQ         reduce using rule 128 (DotName -> Name .)
    LEFT_LEFT       reduce using rule 128 (DotName -> Name .)
    INTEGER         reduce using rule 128 (DotName -> Name .)
    FLOAT           reduce using rule 128 (DotName -> Name .)
    STRING          reduce using rule 128 (DotName -> Name .)
    DOT             shift and go to state 336


state 224

    (29) VarDecl -> DeclNameList NType .
    (30) VarDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 29 (VarDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 29 (VarDecl -> DeclNameList NType .)
    RBRACE          reduce using rule 29 (VarDecl -> DeclNameList NType .)
    CASE            reduce using rule 29 (VarDecl -> DeclNameList NType .)
    DEFAULT         reduce using rule 29 (VarDecl -> DeclNameList NType .)
    EQUAL           shift and go to state 337


state 225

    (84) NType -> LPAREN . NType RPAREN
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    Name                           shift and go to state 223
    FuncType                       shift and go to state 216
    NType                          shift and go to state 338
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219

state 226

    (88) OtherType -> LBRACK . OExpr RBRACK NType
    (138) OExpr -> . empty
    (139) OExpr -> . Expr
    (265) empty -> .
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 139
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 339
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    OExpr                          shift and go to state 141
    PExpr                          shift and go to state 59

state 227

    (145) ExprList -> ExprList COMMA Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    EQUAL           reduce using rule 145 (ExprList -> ExprList COMMA Expr .)
    COLONEQ         reduce using rule 145 (ExprList -> ExprList COMMA Expr .)
    COMMA           reduce using rule 145 (ExprList -> ExprList COMMA Expr .)
    SEMICOL         reduce using rule 145 (ExprList -> ExprList COMMA Expr .)
    LBRACE          reduce using rule 145 (ExprList -> ExprList COMMA Expr .)
    RBRACE          reduce using rule 145 (ExprList -> ExprList COMMA Expr .)
    CASE            reduce using rule 145 (ExprList -> ExprList COMMA Expr .)
    DEFAULT         reduce using rule 145 (ExprList -> ExprList COMMA Expr .)
    RPAREN          reduce using rule 145 (ExprList -> ExprList COMMA Expr .)
    OROR            shift and go to state 161


state 228

    (52) SimpleStmt -> ExprList COLONEQ ExprList .
    (145) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 52 (SimpleStmt -> ExprList COLONEQ ExprList .)
    LBRACE          reduce using rule 52 (SimpleStmt -> ExprList COLONEQ ExprList .)
    RBRACE          reduce using rule 52 (SimpleStmt -> ExprList COLONEQ ExprList .)
    CASE            reduce using rule 52 (SimpleStmt -> ExprList COLONEQ ExprList .)
    DEFAULT         reduce using rule 52 (SimpleStmt -> ExprList COLONEQ ExprList .)
    COMMA           shift and go to state 108


state 229

    (51) SimpleStmt -> ExprList EQUAL ExprList .
    (145) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 51 (SimpleStmt -> ExprList EQUAL ExprList .)
    LBRACE          reduce using rule 51 (SimpleStmt -> ExprList EQUAL ExprList .)
    RBRACE          reduce using rule 51 (SimpleStmt -> ExprList EQUAL ExprList .)
    CASE            reduce using rule 51 (SimpleStmt -> ExprList EQUAL ExprList .)
    DEFAULT         reduce using rule 51 (SimpleStmt -> ExprList EQUAL ExprList .)
    COMMA           shift and go to state 108


state 230

    (89) OtherType -> MAP LBRACK NType . RBRACK NType

    RBRACK          shift and go to state 340


state 231

    (22) CommonDecl -> CONSTANT LPAREN RPAREN .

    RBRACE          reduce using rule 22 (CommonDecl -> CONSTANT LPAREN RPAREN .)
    SEMICOL         reduce using rule 22 (CommonDecl -> CONSTANT LPAREN RPAREN .)
    CASE            reduce using rule 22 (CommonDecl -> CONSTANT LPAREN RPAREN .)
    DEFAULT         reduce using rule 22 (CommonDecl -> CONSTANT LPAREN RPAREN .)


state 232

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl . OSemi RPAREN
    (21) CommonDecl -> CONSTANT LPAREN ConstDecl . SEMICOL ConstDeclList OSemi RPAREN
    (132) OSemi -> . empty
    (133) OSemi -> . SEMICOL
    (265) empty -> .

    SEMICOL         shift and go to state 342
    RPAREN          reduce using rule 265 (empty -> .)

    OSemi                          shift and go to state 341
    empty                          shift and go to state 324

state 233

    (33) ConstDecl -> DeclNameList EQUAL . ExprList
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 148
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 343
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 234

    (32) ConstDecl -> DeclNameList NType . EQUAL ExprList

    EQUAL           shift and go to state 344


state 235

    (241) Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .
    (231) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (232) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUS           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    XOR             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OR              reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQEQ            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    NOTEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LEQ             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GEQ             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GREAT           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LESS            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPAMP          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OROR            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SEMICOL         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LBRACE          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACE          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    CASE            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DEFAULT         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COMMA           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSEQ          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    TIMESEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MODEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OREQ            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    CAREQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSMIN        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQUAL           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLONEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PIPE            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACK          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RPAREN          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLON           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DDD             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDE          shift and go to state 95
    MOD             shift and go to state 100
    SHL             shift and go to state 99
    SHR             shift and go to state 94
    AMPERS          shift and go to state 97
    AMPCAR          shift and go to state 96
    TIMES           shift and go to state 98


state 236

    (242) Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .
    (231) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (232) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUS           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    XOR             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OR              reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQEQ            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    NOTEQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LEQ             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GEQ             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GREAT           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LESS            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPAMP          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OROR            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SEMICOL         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LBRACE          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACE          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    CASE            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DEFAULT         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COMMA           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSEQ          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSEQ         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    TIMESEQ         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MODEQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OREQ            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPEQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    CAREQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSMIN        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQUAL           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLONEQ         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PIPE            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACK          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RPAREN          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLON           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DDD             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDE          shift and go to state 95
    MOD             shift and go to state 100
    SHL             shift and go to state 99
    SHR             shift and go to state 94
    AMPERS          shift and go to state 97
    AMPCAR          shift and go to state 96
    TIMES           shift and go to state 98


state 237

    (239) Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .
    (231) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (232) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUS           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    XOR             reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OR              reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQEQ            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    NOTEQ           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LEQ             reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GEQ             reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GREAT           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LESS            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPAMP          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OROR            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SEMICOL         reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LBRACE          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACE          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    CASE            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DEFAULT         reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COMMA           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MODEQ           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OREQ            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPEQ           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    CAREQ           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQUAL           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLONEQ         reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PIPE            reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACK          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RPAREN          reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLON           reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DDD             reduce using rule 239 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDE          shift and go to state 95
    MOD             shift and go to state 100
    SHL             shift and go to state 99
    SHR             shift and go to state 94
    AMPERS          shift and go to state 97
    AMPCAR          shift and go to state 96
    TIMES           shift and go to state 98


state 238

    (240) Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .
    (231) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (232) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (233) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUS           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    XOR             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OR              reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQEQ            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    NOTEQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LEQ             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GEQ             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GREAT           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LESS            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPAMP          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OROR            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SEMICOL         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LBRACE          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACE          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    CASE            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DEFAULT         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COMMA           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MODEQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OREQ            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPEQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    CAREQ           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQUAL           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLONEQ         reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PIPE            reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACK          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RPAREN          reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLON           reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DDD             reduce using rule 240 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDE          shift and go to state 95
    MOD             shift and go to state 100
    SHL             shift and go to state 99
    SHR             shift and go to state 94
    AMPERS          shift and go to state 97
    AMPCAR          shift and go to state 96
    TIMES           shift and go to state 98


state 239

    (101) ArgList -> ArgList LPAREN . OArgTypeListOComma RPAREN
    (182) OArgTypeListOComma -> . empty
    (183) OArgTypeListOComma -> . ArgTypeList OComma
    (265) empty -> .
    (180) ArgTypeList -> . ArgType
    (181) ArgTypeList -> . ArgTypeList COMMA ArgType
    (176) ArgType -> . NameOrType
    (177) ArgType -> . IDENTIFIER NameOrType
    (178) ArgType -> . IDENTIFIER DotDotDot
    (179) ArgType -> . DotDotDot
    (228) NameOrType -> . NType
    (199) DotDotDot -> . DDD
    (200) DotDotDot -> . DDD NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    RPAREN          reduce using rule 265 (empty -> .)
    IDENTIFIER      shift and go to state 256
    DDD             shift and go to state 259
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    StructType                     shift and go to state 56
    DotName                        shift and go to state 219
    ArgType                        shift and go to state 252
    Name                           shift and go to state 223
    DotDotDot                      shift and go to state 254
    NType                          shift and go to state 258
    NameOrType                     shift and go to state 255
    ArgTypeList                    shift and go to state 251
    OtherType                      shift and go to state 221
    OArgTypeListOComma             shift and go to state 345
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    FuncType                       shift and go to state 216
    empty                          shift and go to state 257

state 240

    (124) FuncRetType -> FuncType .

    SEMICOL         reduce using rule 124 (FuncRetType -> FuncType .)
    RBRACE          reduce using rule 124 (FuncRetType -> FuncType .)
    LBRACE          reduce using rule 124 (FuncRetType -> FuncType .)
    LEFT_ANGLE      reduce using rule 124 (FuncRetType -> FuncType .)
    RPAREN          reduce using rule 124 (FuncRetType -> FuncType .)
    EQUAL           reduce using rule 124 (FuncRetType -> FuncType .)
    CASE            reduce using rule 124 (FuncRetType -> FuncType .)
    DEFAULT         reduce using rule 124 (FuncRetType -> FuncType .)
    RBRACK          reduce using rule 124 (FuncRetType -> FuncType .)
    COMMA           reduce using rule 124 (FuncRetType -> FuncType .)
    OR_RIGHT        reduce using rule 124 (FuncRetType -> FuncType .)
    DDD             reduce using rule 124 (FuncRetType -> FuncType .)
    COLON           reduce using rule 124 (FuncRetType -> FuncType .)
    COLONEQ         reduce using rule 124 (FuncRetType -> FuncType .)
    LEFT_LEFT       reduce using rule 124 (FuncRetType -> FuncType .)
    INTEGER         reduce using rule 124 (FuncRetType -> FuncType .)
    FLOAT           reduce using rule 124 (FuncRetType -> FuncType .)
    STRING          reduce using rule 124 (FuncRetType -> FuncType .)


state 241

    (126) FuncRetType -> PtrType .

    SEMICOL         reduce using rule 126 (FuncRetType -> PtrType .)
    RBRACE          reduce using rule 126 (FuncRetType -> PtrType .)
    LBRACE          reduce using rule 126 (FuncRetType -> PtrType .)
    LEFT_ANGLE      reduce using rule 126 (FuncRetType -> PtrType .)
    RPAREN          reduce using rule 126 (FuncRetType -> PtrType .)
    EQUAL           reduce using rule 126 (FuncRetType -> PtrType .)
    CASE            reduce using rule 126 (FuncRetType -> PtrType .)
    DEFAULT         reduce using rule 126 (FuncRetType -> PtrType .)
    RBRACK          reduce using rule 126 (FuncRetType -> PtrType .)
    COMMA           reduce using rule 126 (FuncRetType -> PtrType .)
    OR_RIGHT        reduce using rule 126 (FuncRetType -> PtrType .)
    DDD             reduce using rule 126 (FuncRetType -> PtrType .)
    COLON           reduce using rule 126 (FuncRetType -> PtrType .)
    COLONEQ         reduce using rule 126 (FuncRetType -> PtrType .)
    LEFT_LEFT       reduce using rule 126 (FuncRetType -> PtrType .)
    INTEGER         reduce using rule 126 (FuncRetType -> PtrType .)
    FLOAT           reduce using rule 126 (FuncRetType -> PtrType .)
    STRING          reduce using rule 126 (FuncRetType -> PtrType .)


state 242

    (125) FuncRetType -> OtherType .

    SEMICOL         reduce using rule 125 (FuncRetType -> OtherType .)
    RBRACE          reduce using rule 125 (FuncRetType -> OtherType .)
    LBRACE          reduce using rule 125 (FuncRetType -> OtherType .)
    LEFT_ANGLE      reduce using rule 125 (FuncRetType -> OtherType .)
    RPAREN          reduce using rule 125 (FuncRetType -> OtherType .)
    EQUAL           reduce using rule 125 (FuncRetType -> OtherType .)
    CASE            reduce using rule 125 (FuncRetType -> OtherType .)
    DEFAULT         reduce using rule 125 (FuncRetType -> OtherType .)
    RBRACK          reduce using rule 125 (FuncRetType -> OtherType .)
    COMMA           reduce using rule 125 (FuncRetType -> OtherType .)
    OR_RIGHT        reduce using rule 125 (FuncRetType -> OtherType .)
    DDD             reduce using rule 125 (FuncRetType -> OtherType .)
    COLON           reduce using rule 125 (FuncRetType -> OtherType .)
    COLONEQ         reduce using rule 125 (FuncRetType -> OtherType .)
    LEFT_LEFT       reduce using rule 125 (FuncRetType -> OtherType .)
    INTEGER         reduce using rule 125 (FuncRetType -> OtherType .)
    FLOAT           reduce using rule 125 (FuncRetType -> OtherType .)
    STRING          reduce using rule 125 (FuncRetType -> OtherType .)


state 243

    (104) FuncRes -> empty .

    SEMICOL         reduce using rule 104 (FuncRes -> empty .)
    RBRACE          reduce using rule 104 (FuncRes -> empty .)
    LBRACE          reduce using rule 104 (FuncRes -> empty .)
    LEFT_ANGLE      reduce using rule 104 (FuncRes -> empty .)
    RPAREN          reduce using rule 104 (FuncRes -> empty .)
    EQUAL           reduce using rule 104 (FuncRes -> empty .)
    CASE            reduce using rule 104 (FuncRes -> empty .)
    DEFAULT         reduce using rule 104 (FuncRes -> empty .)
    RBRACK          reduce using rule 104 (FuncRes -> empty .)
    COMMA           reduce using rule 104 (FuncRes -> empty .)
    OR_RIGHT        reduce using rule 104 (FuncRes -> empty .)
    DDD             reduce using rule 104 (FuncRes -> empty .)
    COLON           reduce using rule 104 (FuncRes -> empty .)
    COLONEQ         reduce using rule 104 (FuncRes -> empty .)
    LEFT_LEFT       reduce using rule 104 (FuncRes -> empty .)
    INTEGER         reduce using rule 104 (FuncRes -> empty .)
    FLOAT           reduce using rule 104 (FuncRes -> empty .)
    STRING          reduce using rule 104 (FuncRes -> empty .)


state 244

    (99) FuncType -> FUNCTION ArgList FuncRes .

    LEFT_ANGLE      reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    LBRACE          reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    SEMICOL         reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    COMMA           reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    OR_RIGHT        reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    RPAREN          reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    EQUAL           reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACE          reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    CASE            reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    DEFAULT         reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACK          reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    DDD             reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    COLON           reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    COLONEQ         reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    LEFT_LEFT       reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    INTEGER         reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    FLOAT           reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)
    STRING          reduce using rule 99 (FuncType -> FUNCTION ArgList FuncRes .)


state 245

    (106) FuncRes -> LEFT_OR . OArgTypeListOComma OR_RIGHT
    (182) OArgTypeListOComma -> . empty
    (183) OArgTypeListOComma -> . ArgTypeList OComma
    (265) empty -> .
    (180) ArgTypeList -> . ArgType
    (181) ArgTypeList -> . ArgTypeList COMMA ArgType
    (176) ArgType -> . NameOrType
    (177) ArgType -> . IDENTIFIER NameOrType
    (178) ArgType -> . IDENTIFIER DotDotDot
    (179) ArgType -> . DotDotDot
    (228) NameOrType -> . NType
    (199) DotDotDot -> . DDD
    (200) DotDotDot -> . DDD NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 265 (empty -> .)
    IDENTIFIER      shift and go to state 256
    DDD             shift and go to state 259
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    StructType                     shift and go to state 56
    DotName                        shift and go to state 219
    OArgTypeListOComma             shift and go to state 346
    Name                           shift and go to state 223
    DotDotDot                      shift and go to state 254
    NType                          shift and go to state 258
    NameOrType                     shift and go to state 255
    ArgTypeList                    shift and go to state 251
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    ArgType                        shift and go to state 252
    FuncType                       shift and go to state 216
    empty                          shift and go to state 257

state 246

    (127) FuncRetType -> DotName .

    SEMICOL         reduce using rule 127 (FuncRetType -> DotName .)
    RBRACE          reduce using rule 127 (FuncRetType -> DotName .)
    LBRACE          reduce using rule 127 (FuncRetType -> DotName .)
    LEFT_ANGLE      reduce using rule 127 (FuncRetType -> DotName .)
    RPAREN          reduce using rule 127 (FuncRetType -> DotName .)
    EQUAL           reduce using rule 127 (FuncRetType -> DotName .)
    CASE            reduce using rule 127 (FuncRetType -> DotName .)
    DEFAULT         reduce using rule 127 (FuncRetType -> DotName .)
    RBRACK          reduce using rule 127 (FuncRetType -> DotName .)
    COMMA           reduce using rule 127 (FuncRetType -> DotName .)
    OR_RIGHT        reduce using rule 127 (FuncRetType -> DotName .)
    DDD             reduce using rule 127 (FuncRetType -> DotName .)
    COLON           reduce using rule 127 (FuncRetType -> DotName .)
    COLONEQ         reduce using rule 127 (FuncRetType -> DotName .)
    LEFT_LEFT       reduce using rule 127 (FuncRetType -> DotName .)
    INTEGER         reduce using rule 127 (FuncRetType -> DotName .)
    FLOAT           reduce using rule 127 (FuncRetType -> DotName .)
    STRING          reduce using rule 127 (FuncRetType -> DotName .)


state 247

    (105) FuncRes -> FuncRetType .

    SEMICOL         reduce using rule 105 (FuncRes -> FuncRetType .)
    RBRACE          reduce using rule 105 (FuncRes -> FuncRetType .)
    LBRACE          reduce using rule 105 (FuncRes -> FuncRetType .)
    LEFT_ANGLE      reduce using rule 105 (FuncRes -> FuncRetType .)
    RPAREN          reduce using rule 105 (FuncRes -> FuncRetType .)
    EQUAL           reduce using rule 105 (FuncRes -> FuncRetType .)
    CASE            reduce using rule 105 (FuncRes -> FuncRetType .)
    DEFAULT         reduce using rule 105 (FuncRes -> FuncRetType .)
    RBRACK          reduce using rule 105 (FuncRes -> FuncRetType .)
    COMMA           reduce using rule 105 (FuncRes -> FuncRetType .)
    OR_RIGHT        reduce using rule 105 (FuncRes -> FuncRetType .)
    DDD             reduce using rule 105 (FuncRes -> FuncRetType .)
    COLON           reduce using rule 105 (FuncRes -> FuncRetType .)
    COLONEQ         reduce using rule 105 (FuncRes -> FuncRetType .)
    LEFT_LEFT       reduce using rule 105 (FuncRes -> FuncRetType .)
    INTEGER         reduce using rule 105 (FuncRes -> FuncRetType .)
    FLOAT           reduce using rule 105 (FuncRes -> FuncRetType .)
    STRING          reduce using rule 105 (FuncRes -> FuncRetType .)


state 248

    (103) FuncBody -> LBRACE . StmtList RBRACE
    (164) StmtList -> . Stmt
    (165) StmtList -> . StmtList SEMICOL Stmt
    (184) Stmt -> . empty
    (185) Stmt -> . CompoundStmt
    (186) Stmt -> . CommonDecl
    (187) Stmt -> . NonDeclStmt
    (265) empty -> .
    (59) CompoundStmt -> . LBRACE StmtList RBRACE
    (19) CommonDecl -> . CONSTANT ConstDecl
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (22) CommonDecl -> . CONSTANT LPAREN RPAREN
    (23) CommonDecl -> . VAR VarDecl
    (24) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (25) CommonDecl -> . VAR LPAREN RPAREN
    (26) CommonDecl -> . TYPE TypeDecl
    (27) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (28) CommonDecl -> . TYPE LPAREN RPAREN
    (188) NonDeclStmt -> . SimpleStmt
    (189) NonDeclStmt -> . ForStmt
    (190) NonDeclStmt -> . SwitchStmt
    (191) NonDeclStmt -> . IfStmt
    (192) NonDeclStmt -> . LabelName COLON Stmt
    (193) NonDeclStmt -> . FALLTHROUGH
    (194) NonDeclStmt -> . BREAK ONewName
    (195) NonDeclStmt -> . CONTINUE ONewName
    (196) NonDeclStmt -> . DEFER PseudoCall
    (197) NonDeclStmt -> . GOTO NewName
    (198) NonDeclStmt -> . RETURN OExprList
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (71) ForStmt -> . FOR ForBody
    (229) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (74) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          reduce using rule 265 (empty -> .)
    SEMICOL         reduce using rule 265 (empty -> .)
    LBRACE          shift and go to state 199
    CONSTANT        shift and go to state 28
    VAR             shift and go to state 25
    TYPE            shift and go to state 44
    FALLTHROUGH     shift and go to state 19
    BREAK           shift and go to state 57
    CONTINUE        shift and go to state 47
    DEFER           shift and go to state 18
    GOTO            shift and go to state 63
    RETURN          shift and go to state 50
    FOR             shift and go to state 38
    SWITCH          shift and go to state 51
    IF              shift and go to state 70
    IDENTIFIER      shift and go to state 54
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 61
    Prec3Expr_                     shift and go to state 14
    ForStmt                        shift and go to state 62
    StmtList                       shift and go to state 347
    CommonDecl                     shift and go to state 198
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    IfStmt                         shift and go to state 34
    FuncType                       shift and go to state 60
    FuncLiteralDecl                shift and go to state 24
    Stmt                           shift and go to state 211
    NewName                        shift and go to state 35
    InterfaceType                  shift and go to state 53
    LabelName                      shift and go to state 21
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 201
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    PExpr                          shift and go to state 59
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    SwitchStmt                     shift and go to state 45
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    CompoundStmt                   shift and go to state 200

state 249

    (96) FuncDecl -> FUNCTION FuncDecl_ FuncBody .

    SEMICOL         reduce using rule 96 (FuncDecl -> FUNCTION FuncDecl_ FuncBody .)


state 250

    (102) FuncBody -> empty .

    SEMICOL         reduce using rule 102 (FuncBody -> empty .)


state 251

    (183) OArgTypeListOComma -> ArgTypeList . OComma
    (181) ArgTypeList -> ArgTypeList . COMMA ArgType
    (130) OComma -> . empty
    (131) OComma -> . COMMA
    (265) empty -> .

    COMMA           shift and go to state 348
    RPAREN          reduce using rule 265 (empty -> .)
    OR_RIGHT        reduce using rule 265 (empty -> .)

    empty                          shift and go to state 327
    OComma                         shift and go to state 349

state 252

    (180) ArgTypeList -> ArgType .

    COMMA           reduce using rule 180 (ArgTypeList -> ArgType .)
    OR_RIGHT        reduce using rule 180 (ArgTypeList -> ArgType .)
    RPAREN          reduce using rule 180 (ArgTypeList -> ArgType .)


state 253

    (100) ArgList -> LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 350


state 254

    (179) ArgType -> DotDotDot .

    COMMA           reduce using rule 179 (ArgType -> DotDotDot .)
    OR_RIGHT        reduce using rule 179 (ArgType -> DotDotDot .)
    RPAREN          reduce using rule 179 (ArgType -> DotDotDot .)


state 255

    (176) ArgType -> NameOrType .

    COMMA           reduce using rule 176 (ArgType -> NameOrType .)
    OR_RIGHT        reduce using rule 176 (ArgType -> NameOrType .)
    RPAREN          reduce using rule 176 (ArgType -> NameOrType .)


state 256

    (177) ArgType -> IDENTIFIER . NameOrType
    (178) ArgType -> IDENTIFIER . DotDotDot
    (175) Name -> IDENTIFIER .
    (228) NameOrType -> . NType
    (199) DotDotDot -> . DDD
    (200) DotDotDot -> . DDD NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    DOT             reduce using rule 175 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 175 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 175 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 175 (Name -> IDENTIFIER .)
    DDD             shift and go to state 259
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    Name                           shift and go to state 223
    DotDotDot                      shift and go to state 351
    NType                          shift and go to state 258
    NameOrType                     shift and go to state 352
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219
    FuncType                       shift and go to state 216

state 257

    (182) OArgTypeListOComma -> empty .

    RPAREN          reduce using rule 182 (OArgTypeListOComma -> empty .)
    OR_RIGHT        reduce using rule 182 (OArgTypeListOComma -> empty .)


state 258

    (228) NameOrType -> NType .

    COMMA           reduce using rule 228 (NameOrType -> NType .)
    RPAREN          reduce using rule 228 (NameOrType -> NType .)
    OR_RIGHT        reduce using rule 228 (NameOrType -> NType .)


state 259

    (199) DotDotDot -> DDD .
    (200) DotDotDot -> DDD . NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    COMMA           reduce using rule 199 (DotDotDot -> DDD .)
    OR_RIGHT        reduce using rule 199 (DotDotDot -> DDD .)
    RPAREN          reduce using rule 199 (DotDotDot -> DDD .)
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    Name                           shift and go to state 223
    FuncType                       shift and go to state 216
    NType                          shift and go to state 353
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219

state 260

    (98) FuncDecl_ -> LEFT_OR OArgTypeListOComma . OR_RIGHT IDENTIFIER ArgList FuncRes

    OR_RIGHT        shift and go to state 354


state 261

    (97) FuncDecl_ -> IDENTIFIER ArgList . FuncRes
    (101) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (104) FuncRes -> . empty
    (105) FuncRes -> . FuncRetType
    (106) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (265) empty -> .
    (124) FuncRetType -> . FuncType
    (125) FuncRetType -> . OtherType
    (126) FuncRetType -> . PtrType
    (127) FuncRetType -> . DotName
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    LPAREN          shift and go to state 239
    LEFT_OR         shift and go to state 245
    LBRACE          reduce using rule 265 (empty -> .)
    SEMICOL         reduce using rule 265 (empty -> .)
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    DotName                        shift and go to state 246
    Name                           shift and go to state 223
    FuncType                       shift and go to state 240
    FuncRes                        shift and go to state 355
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 241
    FuncRetType                    shift and go to state 247
    OtherType                      shift and go to state 242
    empty                          shift and go to state 243

state 262

    (67) ForHeader -> OSimpleStmt SEMICOL . OSimpleStmt SEMICOL OSimpleStmt
    (134) OSimpleStmt -> . empty
    (135) OSimpleStmt -> . SimpleStmt
    (265) empty -> .
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 131
    OSimpleStmt                    shift and go to state 356
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 130
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 263

    (64) RangeStmt -> ExprList EQUAL . RANGE Expr
    (51) SimpleStmt -> ExprList EQUAL . ExprList
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RANGE           shift and go to state 357
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 148
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 229
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 264

    (65) RangeStmt -> ExprList COLONEQ . RANGE Expr
    (52) SimpleStmt -> ExprList COLONEQ . ExprList
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RANGE           shift and go to state 358
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 148
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 228
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 265

    (66) RangeStmt -> RANGE Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 66 (RangeStmt -> RANGE Expr .)
    RBRACK          reduce using rule 66 (RangeStmt -> RANGE Expr .)
    OROR            shift and go to state 161


state 266

    (70) ForBody -> ForHeader LoopBody .

    SEMICOL         reduce using rule 70 (ForBody -> ForHeader LoopBody .)
    RBRACE          reduce using rule 70 (ForBody -> ForHeader LoopBody .)
    CASE            reduce using rule 70 (ForBody -> ForHeader LoopBody .)
    DEFAULT         reduce using rule 70 (ForBody -> ForHeader LoopBody .)


state 267

    (63) LoopBody -> LBRACE . StmtList RBRACE
    (164) StmtList -> . Stmt
    (165) StmtList -> . StmtList SEMICOL Stmt
    (184) Stmt -> . empty
    (185) Stmt -> . CompoundStmt
    (186) Stmt -> . CommonDecl
    (187) Stmt -> . NonDeclStmt
    (265) empty -> .
    (59) CompoundStmt -> . LBRACE StmtList RBRACE
    (19) CommonDecl -> . CONSTANT ConstDecl
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (22) CommonDecl -> . CONSTANT LPAREN RPAREN
    (23) CommonDecl -> . VAR VarDecl
    (24) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (25) CommonDecl -> . VAR LPAREN RPAREN
    (26) CommonDecl -> . TYPE TypeDecl
    (27) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (28) CommonDecl -> . TYPE LPAREN RPAREN
    (188) NonDeclStmt -> . SimpleStmt
    (189) NonDeclStmt -> . ForStmt
    (190) NonDeclStmt -> . SwitchStmt
    (191) NonDeclStmt -> . IfStmt
    (192) NonDeclStmt -> . LabelName COLON Stmt
    (193) NonDeclStmt -> . FALLTHROUGH
    (194) NonDeclStmt -> . BREAK ONewName
    (195) NonDeclStmt -> . CONTINUE ONewName
    (196) NonDeclStmt -> . DEFER PseudoCall
    (197) NonDeclStmt -> . GOTO NewName
    (198) NonDeclStmt -> . RETURN OExprList
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (71) ForStmt -> . FOR ForBody
    (229) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (74) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          reduce using rule 265 (empty -> .)
    SEMICOL         reduce using rule 265 (empty -> .)
    LBRACE          shift and go to state 199
    CONSTANT        shift and go to state 28
    VAR             shift and go to state 25
    TYPE            shift and go to state 44
    FALLTHROUGH     shift and go to state 19
    BREAK           shift and go to state 57
    CONTINUE        shift and go to state 47
    DEFER           shift and go to state 18
    GOTO            shift and go to state 63
    RETURN          shift and go to state 50
    FOR             shift and go to state 38
    SWITCH          shift and go to state 51
    IF              shift and go to state 70
    IDENTIFIER      shift and go to state 54
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 61
    Prec3Expr_                     shift and go to state 14
    ForStmt                        shift and go to state 62
    StmtList                       shift and go to state 359
    CommonDecl                     shift and go to state 198
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    IfStmt                         shift and go to state 34
    FuncType                       shift and go to state 60
    FuncLiteralDecl                shift and go to state 24
    Stmt                           shift and go to state 211
    NewName                        shift and go to state 35
    InterfaceType                  shift and go to state 53
    LabelName                      shift and go to state 21
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 201
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    PExpr                          shift and go to state 59
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    SwitchStmt                     shift and go to state 45
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    CompoundStmt                   shift and go to state 200

state 268

    (95) InterfaceType -> INTERFACE LBRACE RBRACE .

    LEFT_ANGLE      reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LBRACE          reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    SEMICOL         reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RPAREN          reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    EQUAL           reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACE          reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    CASE            reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    DEFAULT         reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACK          reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COMMA           reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    DDD             reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLON           reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLONEQ         reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    INTEGER         reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    FLOAT           reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    STRING          reduce using rule 95 (InterfaceType -> INTERFACE LBRACE RBRACE .)


state 269

    (109) InterfaceDeclList -> InterfaceDecl .

    SEMICOL         reduce using rule 109 (InterfaceDeclList -> InterfaceDecl .)
    RBRACE          reduce using rule 109 (InterfaceDeclList -> InterfaceDecl .)


state 270

    (94) InterfaceType -> INTERFACE LBRACE InterfaceDeclList . OSemi RBRACE
    (110) InterfaceDeclList -> InterfaceDeclList . SEMICOL InterfaceDecl
    (132) OSemi -> . empty
    (133) OSemi -> . SEMICOL
    (265) empty -> .

    SEMICOL         shift and go to state 360
    RBRACE          reduce using rule 265 (empty -> .)

    OSemi                          shift and go to state 361
    empty                          shift and go to state 324

state 271

    (117) InterfaceDecl -> NewName . InDecl
    (120) InDecl -> . LPAREN OArgTypeListOComma RPAREN FuncRes

    LPAREN          shift and go to state 362

    InDecl                         shift and go to state 363

state 272

    (119) InterfaceDecl -> LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 364


state 273

    (118) InterfaceDecl -> IDENTIFIER .
    (122) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 118 (InterfaceDecl -> IDENTIFIER .)
    RBRACE          reduce using rule 118 (InterfaceDecl -> IDENTIFIER .)
    LPAREN          reduce using rule 122 (NewName -> IDENTIFIER .)


state 274

    (160) TypeDeclList -> TypeDecl .

    SEMICOL         reduce using rule 160 (TypeDeclList -> TypeDecl .)
    RPAREN          reduce using rule 160 (TypeDeclList -> TypeDecl .)


state 275

    (27) CommonDecl -> TYPE LPAREN TypeDeclList . OSemi RPAREN
    (161) TypeDeclList -> TypeDeclList . SEMICOL TypeDecl
    (132) OSemi -> . empty
    (133) OSemi -> . SEMICOL
    (265) empty -> .

    SEMICOL         shift and go to state 365
    RPAREN          reduce using rule 265 (empty -> .)

    OSemi                          shift and go to state 366
    empty                          shift and go to state 324

state 276

    (28) CommonDecl -> TYPE LPAREN RPAREN .

    RBRACE          reduce using rule 28 (CommonDecl -> TYPE LPAREN RPAREN .)
    SEMICOL         reduce using rule 28 (CommonDecl -> TYPE LPAREN RPAREN .)
    CASE            reduce using rule 28 (CommonDecl -> TYPE LPAREN RPAREN .)
    DEFAULT         reduce using rule 28 (CommonDecl -> TYPE LPAREN RPAREN .)


state 277

    (38) TypeDecl -> TypeDeclName NType .

    SEMICOL         reduce using rule 38 (TypeDecl -> TypeDeclName NType .)
    RPAREN          reduce using rule 38 (TypeDecl -> TypeDeclName NType .)
    RBRACE          reduce using rule 38 (TypeDecl -> TypeDeclName NType .)
    CASE            reduce using rule 38 (TypeDecl -> TypeDeclName NType .)
    DEFAULT         reduce using rule 38 (TypeDecl -> TypeDeclName NType .)


state 278

    (261) ForCompExpr -> LBRACK Expr PIPE . RangeStmt RBRACK
    (64) RangeStmt -> . ExprList EQUAL RANGE Expr
    (65) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (66) RangeStmt -> . RANGE Expr
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RANGE           shift and go to state 129
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 148
    PseudoCall                     shift and go to state 39
    RangeStmt                      shift and go to state 367
    ExprList                       shift and go to state 368
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 279

    (88) OtherType -> LBRACK OExpr RBRACK . NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    Name                           shift and go to state 223
    FuncType                       shift and go to state 216
    NType                          shift and go to state 369
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219

state 280

    (73) IfHeader -> OSimpleStmt SEMICOL . OSimpleStmt
    (134) OSimpleStmt -> . empty
    (135) OSimpleStmt -> . SimpleStmt
    (265) empty -> .
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    LBRACE          reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 131
    OSimpleStmt                    shift and go to state 370
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 130
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 281

    (229) SwitchStmt -> SWITCH IfHeader LBRACE . CaseBlockList RBRACE
    (61) CaseBlockList -> . empty
    (62) CaseBlockList -> . CaseBlockList CaseBlock
    (265) empty -> .

    RBRACE          reduce using rule 265 (empty -> .)
    CASE            reduce using rule 265 (empty -> .)
    DEFAULT         reduce using rule 265 (empty -> .)

    empty                          shift and go to state 372
    CaseBlockList                  shift and go to state 371

state 282

    (172) BracedKeyvalList -> empty .

    RIGHT_RIGHT     reduce using rule 172 (BracedKeyvalList -> empty .)


state 283

    (221) Keyval -> Expr . COLON CompLitExpr
    (222) BareCompLitExpr -> Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 373
    COMMA           reduce using rule 222 (BareCompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 222 (BareCompLitExpr -> Expr .)
    OROR            shift and go to state 161


state 284

    (223) BareCompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (172) BracedKeyvalList -> . empty
    (173) BracedKeyvalList -> . KeyvalList OComma
    (265) empty -> .
    (168) KeyvalList -> . Keyval
    (169) KeyvalList -> . BareCompLitExpr
    (170) KeyvalList -> . KeyvalList COMMA Keyval
    (171) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (221) Keyval -> . Expr COLON CompLitExpr
    (222) BareCompLitExpr -> . Expr
    (223) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 265 (empty -> .)
    LEFT_LEFT       shift and go to state 284
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 282
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 39
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    Keyval                         shift and go to state 286
    BareCompLitExpr                shift and go to state 288
    PExpr                          shift and go to state 59
    BracedKeyvalList               shift and go to state 374

state 285

    (173) BracedKeyvalList -> KeyvalList . OComma
    (170) KeyvalList -> KeyvalList . COMMA Keyval
    (171) KeyvalList -> KeyvalList . COMMA BareCompLitExpr
    (130) OComma -> . empty
    (131) OComma -> . COMMA
    (265) empty -> .

    COMMA           shift and go to state 376
    RIGHT_RIGHT     reduce using rule 265 (empty -> .)

    empty                          shift and go to state 327
    OComma                         shift and go to state 375

state 286

    (168) KeyvalList -> Keyval .

    COMMA           reduce using rule 168 (KeyvalList -> Keyval .)
    RIGHT_RIGHT     reduce using rule 168 (KeyvalList -> Keyval .)


state 287

    (213) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 377


state 288

    (169) KeyvalList -> BareCompLitExpr .

    COMMA           reduce using rule 169 (KeyvalList -> BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 169 (KeyvalList -> BareCompLitExpr .)


state 289

    (208) PExprNoParen -> PExpr LBRACK Expr . RBRACK
    (253) Expr -> Expr . OROR Prec2Expr_
    (139) OExpr -> Expr .

    RBRACK          shift and go to state 378
    OROR            shift and go to state 161
    COLON           reduce using rule 139 (OExpr -> Expr .)


state 290

    (209) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr RBRACK
    (210) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr COLON OExpr RBRACK

    COLON           shift and go to state 379


state 291

    (263) PseudoCall -> PExpr LPAREN ExprOrTypeList . OComma RPAREN
    (264) PseudoCall -> PExpr LPAREN ExprOrTypeList . DDD OComma RPAREN
    (147) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType
    (130) OComma -> . empty
    (131) OComma -> . COMMA
    (265) empty -> .

    DDD             shift and go to state 382
    COMMA           shift and go to state 381
    RPAREN          reduce using rule 265 (empty -> .)

    empty                          shift and go to state 327
    OComma                         shift and go to state 380

state 292

    (146) ExprOrTypeList -> ExprOrType .

    COLON           reduce using rule 146 (ExprOrTypeList -> ExprOrType .)
    EQUAL           reduce using rule 146 (ExprOrTypeList -> ExprOrType .)
    COLONEQ         reduce using rule 146 (ExprOrTypeList -> ExprOrType .)
    COMMA           reduce using rule 146 (ExprOrTypeList -> ExprOrType .)
    DDD             reduce using rule 146 (ExprOrTypeList -> ExprOrType .)
    RPAREN          reduce using rule 146 (ExprOrTypeList -> ExprOrType .)


state 293

    (262) PseudoCall -> PExpr LPAREN RPAREN .

    DOT             reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACK          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEFT_LEFT       reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    LPAREN          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDE          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    MOD             reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL             reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR             reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPERS          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAR          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMES           reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUS            reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUS           reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    XOR             reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    OR              reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQEQ            reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    NOTEQ           reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEQ             reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    GEQ             reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    GREAT           reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    LESS            reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPAMP          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    OROR            reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    SEMICOL         reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACE          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACE          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    CASE            reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    DEFAULT         reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSEQ          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSEQ         reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMESEQ         reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDEEQ        reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    MODEQ           reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    OREQ            reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPEQ           reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    CAREQ           reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAREQ        reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSMIN        reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQUAL           reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLONEQ         reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    COMMA           reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACK          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLON           reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    PIPE            reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    RPAREN          reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_ANGLE     reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_RIGHT     reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)
    DDD             reduce using rule 262 (PseudoCall -> PExpr LPAREN RPAREN .)


state 294

    (214) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 383


state 295

    (206) PExprNoParen -> PExpr DOT LPAREN . ExprOrType RPAREN
    (207) PExprNoParen -> PExpr DOT LPAREN . TYPE RPAREN
    (226) ExprOrType -> . Expr
    (227) ExprOrType -> . NonExprType
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (142) FuncLiteralDecl -> . FuncType

    TYPE            shift and go to state 385
    TIMES           shift and go to state 179
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 183
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 177
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    ExprOrType                     shift and go to state 384
    NonExprType                    shift and go to state 180
    OtherType                      shift and go to state 181
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 182
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 296

    (205) PExprNoParen -> PExpr DOT IDENTIFIER .

    DOT             reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACK          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LPAREN          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDE          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MOD             reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL             reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR             reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPERS          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAR          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMES           reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUS            reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUS           reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    XOR             reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OR              reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQEQ            reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    NOTEQ           reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEQ             reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GEQ             reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GREAT           reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LESS            reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPAMP          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OROR            reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SEMICOL         reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACE          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACE          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    CASE            reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DEFAULT         reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COMMA           reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MODEQ           reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OREQ            reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPEQ           reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    CAREQ           reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAREQ        reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQUAL           reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLONEQ         reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PIPE            reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACK          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RPAREN          reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLON           reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DDD             reduce using rule 205 (PExprNoParen -> PExpr DOT IDENTIFIER .)


state 297

    (253) Expr -> Expr OROR Prec2Expr_ .
    (251) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    COLON           reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    OROR            reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    COMMA           reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    EQUAL           reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    COLONEQ         reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    SEMICOL         reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACE          reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    CASE            reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    DEFAULT         reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    LBRACE          reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    RPAREN          reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSEQ          reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSEQ         reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    TIMESEQ         reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    MODEQ           reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    OREQ            reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    AMPEQ           reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    CAREQ           reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    AMPCAREQ        reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSPLUS        reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSMIN        reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACK          reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    PIPE            reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    DDD             reduce using rule 253 (Expr -> Expr OROR Prec2Expr_ .)
    AMPAMP          shift and go to state 101


state 298

    (47) SimpleStmt -> Expr CAREQ Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 47 (SimpleStmt -> Expr CAREQ Expr .)
    LBRACE          reduce using rule 47 (SimpleStmt -> Expr CAREQ Expr .)
    RBRACE          reduce using rule 47 (SimpleStmt -> Expr CAREQ Expr .)
    CASE            reduce using rule 47 (SimpleStmt -> Expr CAREQ Expr .)
    DEFAULT         reduce using rule 47 (SimpleStmt -> Expr CAREQ Expr .)
    OROR            shift and go to state 161


state 299

    (42) SimpleStmt -> Expr TIMESEQ Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 42 (SimpleStmt -> Expr TIMESEQ Expr .)
    LBRACE          reduce using rule 42 (SimpleStmt -> Expr TIMESEQ Expr .)
    RBRACE          reduce using rule 42 (SimpleStmt -> Expr TIMESEQ Expr .)
    CASE            reduce using rule 42 (SimpleStmt -> Expr TIMESEQ Expr .)
    DEFAULT         reduce using rule 42 (SimpleStmt -> Expr TIMESEQ Expr .)
    OROR            shift and go to state 161


state 300

    (40) SimpleStmt -> Expr PLUSEQ Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 40 (SimpleStmt -> Expr PLUSEQ Expr .)
    LBRACE          reduce using rule 40 (SimpleStmt -> Expr PLUSEQ Expr .)
    RBRACE          reduce using rule 40 (SimpleStmt -> Expr PLUSEQ Expr .)
    CASE            reduce using rule 40 (SimpleStmt -> Expr PLUSEQ Expr .)
    DEFAULT         reduce using rule 40 (SimpleStmt -> Expr PLUSEQ Expr .)
    OROR            shift and go to state 161


state 301

    (44) SimpleStmt -> Expr MODEQ Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 44 (SimpleStmt -> Expr MODEQ Expr .)
    LBRACE          reduce using rule 44 (SimpleStmt -> Expr MODEQ Expr .)
    RBRACE          reduce using rule 44 (SimpleStmt -> Expr MODEQ Expr .)
    CASE            reduce using rule 44 (SimpleStmt -> Expr MODEQ Expr .)
    DEFAULT         reduce using rule 44 (SimpleStmt -> Expr MODEQ Expr .)
    OROR            shift and go to state 161


state 302

    (49) SimpleStmt -> Expr SHR_ASSIGN Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 49 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    LBRACE          reduce using rule 49 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    RBRACE          reduce using rule 49 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    CASE            reduce using rule 49 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    DEFAULT         reduce using rule 49 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    OROR            shift and go to state 161


state 303

    (45) SimpleStmt -> Expr OREQ Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 45 (SimpleStmt -> Expr OREQ Expr .)
    LBRACE          reduce using rule 45 (SimpleStmt -> Expr OREQ Expr .)
    RBRACE          reduce using rule 45 (SimpleStmt -> Expr OREQ Expr .)
    CASE            reduce using rule 45 (SimpleStmt -> Expr OREQ Expr .)
    DEFAULT         reduce using rule 45 (SimpleStmt -> Expr OREQ Expr .)
    OROR            shift and go to state 161


state 304

    (41) SimpleStmt -> Expr MINUSEQ Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr MINUSEQ Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr MINUSEQ Expr .)
    RBRACE          reduce using rule 41 (SimpleStmt -> Expr MINUSEQ Expr .)
    CASE            reduce using rule 41 (SimpleStmt -> Expr MINUSEQ Expr .)
    DEFAULT         reduce using rule 41 (SimpleStmt -> Expr MINUSEQ Expr .)
    OROR            shift and go to state 161


state 305

    (46) SimpleStmt -> Expr AMPEQ Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 46 (SimpleStmt -> Expr AMPEQ Expr .)
    LBRACE          reduce using rule 46 (SimpleStmt -> Expr AMPEQ Expr .)
    RBRACE          reduce using rule 46 (SimpleStmt -> Expr AMPEQ Expr .)
    CASE            reduce using rule 46 (SimpleStmt -> Expr AMPEQ Expr .)
    DEFAULT         reduce using rule 46 (SimpleStmt -> Expr AMPEQ Expr .)
    OROR            shift and go to state 161


state 306

    (50) SimpleStmt -> Expr AMPCAREQ Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 50 (SimpleStmt -> Expr AMPCAREQ Expr .)
    LBRACE          reduce using rule 50 (SimpleStmt -> Expr AMPCAREQ Expr .)
    RBRACE          reduce using rule 50 (SimpleStmt -> Expr AMPCAREQ Expr .)
    CASE            reduce using rule 50 (SimpleStmt -> Expr AMPCAREQ Expr .)
    DEFAULT         reduce using rule 50 (SimpleStmt -> Expr AMPCAREQ Expr .)
    OROR            shift and go to state 161


state 307

    (48) SimpleStmt -> Expr SHL_ASSIGN Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 48 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    LBRACE          reduce using rule 48 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    RBRACE          reduce using rule 48 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    CASE            reduce using rule 48 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    DEFAULT         reduce using rule 48 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    OROR            shift and go to state 161


state 308

    (43) SimpleStmt -> Expr DIVIDEEQ Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 43 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    LBRACE          reduce using rule 43 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    RBRACE          reduce using rule 43 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    CASE            reduce using rule 43 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    DEFAULT         reduce using rule 43 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    OROR            shift and go to state 161


state 309

    (202) PExpr -> LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    CASE            reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    DEFAULT         reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 202 (PExpr -> LPAREN ExprOrType RPAREN .)


state 310

    (87) NonExprType -> TIMES NonExprType .

    RPAREN          reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    COLON           reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    EQUAL           reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    COLONEQ         reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    COMMA           reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    DDD             reduce using rule 87 (NonExprType -> TIMES NonExprType .)


state 311

    (261) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (139) OExpr -> Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    PIPE            shift and go to state 278
    RBRACK          reduce using rule 139 (OExpr -> Expr .)
    OROR            shift and go to state 161


state 312

    (74) IfStmt -> IF IfHeader LoopBody . ElseIfList Else
    (76) ElseIfList -> . empty
    (77) ElseIfList -> . ElseIfList ElseIf
    (265) empty -> .

    ELSE            reduce using rule 265 (empty -> .)
    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    CASE            reduce using rule 265 (empty -> .)
    DEFAULT         reduce using rule 265 (empty -> .)

    ElseIfList                     shift and go to state 386
    empty                          shift and go to state 387

state 313

    (166) NewNameList -> NewName .

    COMMA           reduce using rule 166 (NewNameList -> NewName .)
    LPAREN          reduce using rule 166 (NewNameList -> NewName .)
    FUNCTION        reduce using rule 166 (NewNameList -> NewName .)
    LBRACK          reduce using rule 166 (NewNameList -> NewName .)
    MAP             reduce using rule 166 (NewNameList -> NewName .)
    TIMES           reduce using rule 166 (NewNameList -> NewName .)
    STRUCT          reduce using rule 166 (NewNameList -> NewName .)
    INTERFACE       reduce using rule 166 (NewNameList -> NewName .)
    IDENTIFIER      reduce using rule 166 (NewNameList -> NewName .)


state 314

    (107) StructDeclList -> StructDecl .

    SEMICOL         reduce using rule 107 (StructDeclList -> StructDecl .)
    RBRACE          reduce using rule 107 (StructDeclList -> StructDecl .)


state 315

    (114) StructDecl -> TIMES . Embed OLiteral
    (116) StructDecl -> TIMES . LPAREN Embed RPAREN OLiteral
    (153) Embed -> . IDENTIFIER

    LPAREN          shift and go to state 388
    IDENTIFIER      shift and go to state 390

    Embed                          shift and go to state 389

state 316

    (113) StructDecl -> LPAREN . Embed RPAREN OLiteral
    (115) StructDecl -> LPAREN . TIMES Embed RPAREN OLiteral
    (153) Embed -> . IDENTIFIER

    TIMES           shift and go to state 391
    IDENTIFIER      shift and go to state 390

    Embed                          shift and go to state 392

state 317

    (111) StructDecl -> NewNameList . NType OLiteral
    (167) NewNameList -> NewNameList . COMMA NewName
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    COMMA           shift and go to state 393
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    Name                           shift and go to state 223
    FuncType                       shift and go to state 216
    NType                          shift and go to state 394
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219

state 318

    (92) StructType -> STRUCT LBRACE StructDeclList . OSemi RBRACE
    (108) StructDeclList -> StructDeclList . SEMICOL StructDecl
    (132) OSemi -> . empty
    (133) OSemi -> . SEMICOL
    (265) empty -> .

    SEMICOL         shift and go to state 395
    RBRACE          reduce using rule 265 (empty -> .)

    OSemi                          shift and go to state 396
    empty                          shift and go to state 324

state 319

    (153) Embed -> IDENTIFIER .
    (122) NewName -> IDENTIFIER .

    INTEGER         reduce using rule 153 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 153 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 153 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 153 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 153 (Embed -> IDENTIFIER .)
    COMMA           reduce using rule 122 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 122 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 122 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 122 (NewName -> IDENTIFIER .)
    MAP             reduce using rule 122 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 122 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 122 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 122 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 122 (NewName -> IDENTIFIER .)


state 320

    (112) StructDecl -> Embed . OLiteral
    (148) OLiteral -> . empty
    (149) OLiteral -> . Literal
    (265) empty -> .
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32

    OLiteral                       shift and go to state 398
    Literal                        shift and go to state 397
    empty                          shift and go to state 399

state 321

    (93) StructType -> STRUCT LBRACE RBRACE .

    LEFT_ANGLE      reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    COMMA           reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    RPAREN          reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    EQUAL           reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    SEMICOL         reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACE          reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    CASE            reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    DEFAULT         reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    DDD             reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    COLON           reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    COLONEQ         reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    LBRACE          reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACK          reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    INTEGER         reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    FLOAT           reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)
    STRING          reduce using rule 93 (StructType -> STRUCT LBRACE RBRACE .)


state 322

    (11) ImportStmtList -> ImportStmtList SEMICOL . ImportStmt
    (133) OSemi -> SEMICOL .
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> . empty
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT
    (265) empty -> .

    RPAREN          reduce using rule 133 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 74
    DOT             shift and go to state 75
    STRING          reduce using rule 265 (empty -> .)

    ImportStmt                     shift and go to state 400
    ImportHere                     shift and go to state 73
    empty                          shift and go to state 78

state 323

    (7) Import -> IMPORT LPAREN ImportStmtList OSemi . RPAREN

    RPAREN          shift and go to state 401


state 324

    (132) OSemi -> empty .

    RPAREN          reduce using rule 132 (OSemi -> empty .)
    RBRACE          reduce using rule 132 (OSemi -> empty .)


state 325

    (212) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma . RIGHT_ANGLE

    RIGHT_ANGLE     shift and go to state 402


state 326

    (131) OComma -> COMMA .

    RIGHT_ANGLE     reduce using rule 131 (OComma -> COMMA .)
    RPAREN          reduce using rule 131 (OComma -> COMMA .)


state 327

    (130) OComma -> empty .

    RIGHT_ANGLE     reduce using rule 130 (OComma -> empty .)
    RPAREN          reduce using rule 130 (OComma -> empty .)
    OR_RIGHT        reduce using rule 130 (OComma -> empty .)
    RIGHT_RIGHT     reduce using rule 130 (OComma -> empty .)


state 328

    (59) CompoundStmt -> LBRACE StmtList . RBRACE
    (165) StmtList -> StmtList . SEMICOL Stmt

    RBRACE          shift and go to state 403
    SEMICOL         shift and go to state 330


state 329

    (143) FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .

    DOT             reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LBRACK          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LEFT_LEFT       reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LPAREN          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    DIVIDE          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    MOD             reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    SHL             reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    SHR             reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    AMPERS          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    AMPCAR          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    TIMES           reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    PLUS            reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    MINUS           reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    XOR             reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    OR              reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    EQEQ            reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    NOTEQ           reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LEQ             reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    GEQ             reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    GREAT           reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LESS            reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    AMPAMP          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    OROR            reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    SEMICOL         reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    LBRACE          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    RBRACE          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    CASE            reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    DEFAULT         reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    PLUSEQ          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    MINUSEQ         reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    TIMESEQ         reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    DIVIDEEQ        reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    MODEQ           reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    OREQ            reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    AMPEQ           reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    CAREQ           reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    SHL_ASSIGN      reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    SHR_ASSIGN      reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    AMPCAREQ        reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    PLUSPLUS        reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    MINUSMIN        reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    EQUAL           reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    COLONEQ         reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    COMMA           reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    PIPE            reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    RBRACK          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    RPAREN          reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    RIGHT_ANGLE     reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    COLON           reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    RIGHT_RIGHT     reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)
    DDD             reduce using rule 143 (FuncLiteral -> FuncLiteralDecl LBRACE StmtList RBRACE .)


state 330

    (165) StmtList -> StmtList SEMICOL . Stmt
    (184) Stmt -> . empty
    (185) Stmt -> . CompoundStmt
    (186) Stmt -> . CommonDecl
    (187) Stmt -> . NonDeclStmt
    (265) empty -> .
    (59) CompoundStmt -> . LBRACE StmtList RBRACE
    (19) CommonDecl -> . CONSTANT ConstDecl
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (22) CommonDecl -> . CONSTANT LPAREN RPAREN
    (23) CommonDecl -> . VAR VarDecl
    (24) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (25) CommonDecl -> . VAR LPAREN RPAREN
    (26) CommonDecl -> . TYPE TypeDecl
    (27) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (28) CommonDecl -> . TYPE LPAREN RPAREN
    (188) NonDeclStmt -> . SimpleStmt
    (189) NonDeclStmt -> . ForStmt
    (190) NonDeclStmt -> . SwitchStmt
    (191) NonDeclStmt -> . IfStmt
    (192) NonDeclStmt -> . LabelName COLON Stmt
    (193) NonDeclStmt -> . FALLTHROUGH
    (194) NonDeclStmt -> . BREAK ONewName
    (195) NonDeclStmt -> . CONTINUE ONewName
    (196) NonDeclStmt -> . DEFER PseudoCall
    (197) NonDeclStmt -> . GOTO NewName
    (198) NonDeclStmt -> . RETURN OExprList
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (71) ForStmt -> . FOR ForBody
    (229) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (74) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACE          reduce using rule 265 (empty -> .)
    SEMICOL         reduce using rule 265 (empty -> .)
    CASE            reduce using rule 265 (empty -> .)
    DEFAULT         reduce using rule 265 (empty -> .)
    LBRACE          shift and go to state 199
    CONSTANT        shift and go to state 28
    VAR             shift and go to state 25
    TYPE            shift and go to state 44
    FALLTHROUGH     shift and go to state 19
    BREAK           shift and go to state 57
    CONTINUE        shift and go to state 47
    DEFER           shift and go to state 18
    GOTO            shift and go to state 63
    RETURN          shift and go to state 50
    FOR             shift and go to state 38
    SWITCH          shift and go to state 51
    IF              shift and go to state 70
    IDENTIFIER      shift and go to state 54
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 61
    Prec3Expr_                     shift and go to state 14
    ForStmt                        shift and go to state 62
    CommonDecl                     shift and go to state 198
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    IfStmt                         shift and go to state 34
    FuncType                       shift and go to state 60
    FuncLiteralDecl                shift and go to state 24
    Stmt                           shift and go to state 404
    NewName                        shift and go to state 35
    InterfaceType                  shift and go to state 53
    LabelName                      shift and go to state 21
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 201
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    PExpr                          shift and go to state 59
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    SwitchStmt                     shift and go to state 45
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    CompoundStmt                   shift and go to state 200

state 331

    (157) VarDeclList -> VarDeclList SEMICOL . VarDecl
    (133) OSemi -> SEMICOL .
    (29) VarDecl -> . DeclNameList NType
    (30) VarDecl -> . DeclNameList NType EQUAL ExprList
    (31) VarDecl -> . DeclNameList EQUAL ExprList
    (162) DeclNameList -> . DeclName
    (163) DeclNameList -> . DeclNameList COMMA DeclName
    (174) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 133 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 103

    DeclName                       shift and go to state 104
    VarDecl                        shift and go to state 405
    DeclNameList                   shift and go to state 107

state 332

    (24) CommonDecl -> VAR LPAREN VarDeclList OSemi . RPAREN

    RPAREN          shift and go to state 406


state 333

    (31) VarDecl -> DeclNameList EQUAL ExprList .
    (145) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 31 (VarDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 31 (VarDecl -> DeclNameList EQUAL ExprList .)
    RBRACE          reduce using rule 31 (VarDecl -> DeclNameList EQUAL ExprList .)
    CASE            reduce using rule 31 (VarDecl -> DeclNameList EQUAL ExprList .)
    DEFAULT         reduce using rule 31 (VarDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 108


state 334

    (123) PtrType -> TIMES NType .

    COMMA           reduce using rule 123 (PtrType -> TIMES NType .)
    RPAREN          reduce using rule 123 (PtrType -> TIMES NType .)
    OR_RIGHT        reduce using rule 123 (PtrType -> TIMES NType .)
    RBRACK          reduce using rule 123 (PtrType -> TIMES NType .)
    EQUAL           reduce using rule 123 (PtrType -> TIMES NType .)
    SEMICOL         reduce using rule 123 (PtrType -> TIMES NType .)
    INTEGER         reduce using rule 123 (PtrType -> TIMES NType .)
    FLOAT           reduce using rule 123 (PtrType -> TIMES NType .)
    STRING          reduce using rule 123 (PtrType -> TIMES NType .)
    RBRACE          reduce using rule 123 (PtrType -> TIMES NType .)
    LBRACE          reduce using rule 123 (PtrType -> TIMES NType .)
    CASE            reduce using rule 123 (PtrType -> TIMES NType .)
    DEFAULT         reduce using rule 123 (PtrType -> TIMES NType .)
    LEFT_ANGLE      reduce using rule 123 (PtrType -> TIMES NType .)
    DDD             reduce using rule 123 (PtrType -> TIMES NType .)
    COLON           reduce using rule 123 (PtrType -> TIMES NType .)
    COLONEQ         reduce using rule 123 (PtrType -> TIMES NType .)
    LEFT_LEFT       reduce using rule 123 (PtrType -> TIMES NType .)


state 335

    (163) DeclNameList -> DeclNameList COMMA DeclName .

    EQUAL           reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    COMMA           reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    LPAREN          reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    FUNCTION        reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    LBRACK          reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    MAP             reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    TIMES           reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    STRUCT          reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    INTERFACE       reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    IDENTIFIER      reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    SEMICOL         reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)
    RPAREN          reduce using rule 163 (DeclNameList -> DeclNameList COMMA DeclName .)


state 336

    (129) DotName -> Name DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 407


state 337

    (30) VarDecl -> DeclNameList NType EQUAL . ExprList
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 148
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 408
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 338

    (84) NType -> LPAREN NType . RPAREN

    RPAREN          shift and go to state 409


state 339

    (139) OExpr -> Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 139 (OExpr -> Expr .)
    COLON           reduce using rule 139 (OExpr -> Expr .)
    OROR            shift and go to state 161


state 340

    (89) OtherType -> MAP LBRACK NType RBRACK . NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    Name                           shift and go to state 223
    FuncType                       shift and go to state 216
    NType                          shift and go to state 410
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219

state 341

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi . RPAREN

    RPAREN          shift and go to state 411


state 342

    (21) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL . ConstDeclList OSemi RPAREN
    (133) OSemi -> SEMICOL .
    (158) ConstDeclList -> . ConstDecl1
    (159) ConstDeclList -> . ConstDeclList SEMICOL ConstDecl1
    (34) ConstDecl1 -> . ConstDecl
    (35) ConstDecl1 -> . DeclNameList NType
    (36) ConstDecl1 -> . DeclNameList
    (32) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (33) ConstDecl -> . DeclNameList EQUAL ExprList
    (162) DeclNameList -> . DeclName
    (163) DeclNameList -> . DeclNameList COMMA DeclName
    (174) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 133 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 103

    ConstDecl1                     shift and go to state 414
    DeclName                       shift and go to state 104
    ConstDecl                      shift and go to state 415
    ConstDeclList                  shift and go to state 412
    DeclNameList                   shift and go to state 413

state 343

    (33) ConstDecl -> DeclNameList EQUAL ExprList .
    (145) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 33 (ConstDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 33 (ConstDecl -> DeclNameList EQUAL ExprList .)
    RBRACE          reduce using rule 33 (ConstDecl -> DeclNameList EQUAL ExprList .)
    CASE            reduce using rule 33 (ConstDecl -> DeclNameList EQUAL ExprList .)
    DEFAULT         reduce using rule 33 (ConstDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 108


state 344

    (32) ConstDecl -> DeclNameList NType EQUAL . ExprList
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 148
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 416
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 345

    (101) ArgList -> ArgList LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 417


state 346

    (106) FuncRes -> LEFT_OR OArgTypeListOComma . OR_RIGHT

    OR_RIGHT        shift and go to state 418


state 347

    (103) FuncBody -> LBRACE StmtList . RBRACE
    (165) StmtList -> StmtList . SEMICOL Stmt

    RBRACE          shift and go to state 419
    SEMICOL         shift and go to state 330


state 348

    (181) ArgTypeList -> ArgTypeList COMMA . ArgType
    (131) OComma -> COMMA .
    (176) ArgType -> . NameOrType
    (177) ArgType -> . IDENTIFIER NameOrType
    (178) ArgType -> . IDENTIFIER DotDotDot
    (179) ArgType -> . DotDotDot
    (228) NameOrType -> . NType
    (199) DotDotDot -> . DDD
    (200) DotDotDot -> . DDD NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    RPAREN          reduce using rule 131 (OComma -> COMMA .)
    OR_RIGHT        reduce using rule 131 (OComma -> COMMA .)
    IDENTIFIER      shift and go to state 256
    DDD             shift and go to state 259
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    StructType                     shift and go to state 56
    DotName                        shift and go to state 219
    Name                           shift and go to state 223
    DotDotDot                      shift and go to state 254
    NType                          shift and go to state 258
    NameOrType                     shift and go to state 255
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    ArgType                        shift and go to state 420
    FuncType                       shift and go to state 216

state 349

    (183) OArgTypeListOComma -> ArgTypeList OComma .

    RPAREN          reduce using rule 183 (OArgTypeListOComma -> ArgTypeList OComma .)
    OR_RIGHT        reduce using rule 183 (OArgTypeListOComma -> ArgTypeList OComma .)


state 350

    (100) ArgList -> LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    MAP             reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    CASE            reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    DEFAULT         reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACK          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 100 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)


state 351

    (178) ArgType -> IDENTIFIER DotDotDot .

    COMMA           reduce using rule 178 (ArgType -> IDENTIFIER DotDotDot .)
    OR_RIGHT        reduce using rule 178 (ArgType -> IDENTIFIER DotDotDot .)
    RPAREN          reduce using rule 178 (ArgType -> IDENTIFIER DotDotDot .)


state 352

    (177) ArgType -> IDENTIFIER NameOrType .

    COMMA           reduce using rule 177 (ArgType -> IDENTIFIER NameOrType .)
    OR_RIGHT        reduce using rule 177 (ArgType -> IDENTIFIER NameOrType .)
    RPAREN          reduce using rule 177 (ArgType -> IDENTIFIER NameOrType .)


state 353

    (200) DotDotDot -> DDD NType .

    COMMA           reduce using rule 200 (DotDotDot -> DDD NType .)
    OR_RIGHT        reduce using rule 200 (DotDotDot -> DDD NType .)
    RPAREN          reduce using rule 200 (DotDotDot -> DDD NType .)


state 354

    (98) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT . IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 421


state 355

    (97) FuncDecl_ -> IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 97 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 97 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)


state 356

    (67) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt . SEMICOL OSimpleStmt

    SEMICOL         shift and go to state 422


state 357

    (64) RangeStmt -> ExprList EQUAL RANGE . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 423
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 358

    (65) RangeStmt -> ExprList COLONEQ RANGE . Expr
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 424
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 359

    (63) LoopBody -> LBRACE StmtList . RBRACE
    (165) StmtList -> StmtList . SEMICOL Stmt

    RBRACE          shift and go to state 425
    SEMICOL         shift and go to state 330


state 360

    (110) InterfaceDeclList -> InterfaceDeclList SEMICOL . InterfaceDecl
    (133) OSemi -> SEMICOL .
    (117) InterfaceDecl -> . NewName InDecl
    (118) InterfaceDecl -> . IDENTIFIER
    (119) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (122) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 133 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 273
    LPAREN          shift and go to state 272

    InterfaceDecl                  shift and go to state 426
    NewName                        shift and go to state 271

state 361

    (94) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi . RBRACE

    RBRACE          shift and go to state 427


state 362

    (120) InDecl -> LPAREN . OArgTypeListOComma RPAREN FuncRes
    (182) OArgTypeListOComma -> . empty
    (183) OArgTypeListOComma -> . ArgTypeList OComma
    (265) empty -> .
    (180) ArgTypeList -> . ArgType
    (181) ArgTypeList -> . ArgTypeList COMMA ArgType
    (176) ArgType -> . NameOrType
    (177) ArgType -> . IDENTIFIER NameOrType
    (178) ArgType -> . IDENTIFIER DotDotDot
    (179) ArgType -> . DotDotDot
    (228) NameOrType -> . NType
    (199) DotDotDot -> . DDD
    (200) DotDotDot -> . DDD NType
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    RPAREN          reduce using rule 265 (empty -> .)
    IDENTIFIER      shift and go to state 256
    DDD             shift and go to state 259
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    StructType                     shift and go to state 56
    DotName                        shift and go to state 219
    OArgTypeListOComma             shift and go to state 428
    Name                           shift and go to state 223
    DotDotDot                      shift and go to state 254
    NType                          shift and go to state 258
    NameOrType                     shift and go to state 255
    ArgTypeList                    shift and go to state 251
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    ArgType                        shift and go to state 252
    FuncType                       shift and go to state 216
    empty                          shift and go to state 257

state 363

    (117) InterfaceDecl -> NewName InDecl .

    SEMICOL         reduce using rule 117 (InterfaceDecl -> NewName InDecl .)
    RBRACE          reduce using rule 117 (InterfaceDecl -> NewName InDecl .)


state 364

    (119) InterfaceDecl -> LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 429


state 365

    (161) TypeDeclList -> TypeDeclList SEMICOL . TypeDecl
    (133) OSemi -> SEMICOL .
    (38) TypeDecl -> . TypeDeclName NType
    (37) TypeDeclName -> . IDENTIFIER

    RPAREN          reduce using rule 133 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 138

    TypeDeclName                   shift and go to state 137
    TypeDecl                       shift and go to state 430

state 366

    (27) CommonDecl -> TYPE LPAREN TypeDeclList OSemi . RPAREN

    RPAREN          shift and go to state 431


state 367

    (261) ForCompExpr -> LBRACK Expr PIPE RangeStmt . RBRACK

    RBRACK          shift and go to state 432


state 368

    (64) RangeStmt -> ExprList . EQUAL RANGE Expr
    (65) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (145) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 433
    COLONEQ         shift and go to state 434
    COMMA           shift and go to state 108


state 369

    (88) OtherType -> LBRACK OExpr RBRACK NType .

    LEFT_ANGLE      reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_LEFT       reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    LBRACE          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    SEMICOL         reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLON           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    EQUAL           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLONEQ         reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    COMMA           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    RPAREN          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    DDD             reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACE          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    CASE            reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    DEFAULT         reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACK          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    OR_RIGHT        reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    INTEGER         reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    FLOAT           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    STRING          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)


state 370

    (73) IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 73 (IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .)


state 371

    (229) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList . RBRACE
    (62) CaseBlockList -> CaseBlockList . CaseBlock
    (60) CaseBlock -> . Case StmtList
    (55) Case -> . CASE ExprOrTypeList COLON
    (56) Case -> . CASE ExprOrTypeList EQUAL Expr COLON
    (57) Case -> . CASE ExprOrTypeList COLONEQ Expr COLON
    (58) Case -> . DEFAULT COLON

    RBRACE          shift and go to state 437
    CASE            shift and go to state 436
    DEFAULT         shift and go to state 438

    Case                           shift and go to state 435
    CaseBlock                      shift and go to state 439

state 372

    (61) CaseBlockList -> empty .

    RBRACE          reduce using rule 61 (CaseBlockList -> empty .)
    CASE            reduce using rule 61 (CaseBlockList -> empty .)
    DEFAULT         reduce using rule 61 (CaseBlockList -> empty .)


state 373

    (221) Keyval -> Expr COLON . CompLitExpr
    (224) CompLitExpr -> . Expr
    (225) CompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    LEFT_LEFT       shift and go to state 442
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompLitExpr                    shift and go to state 440
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 441
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    Prec3Expr_                     shift and go to state 14
    PExpr                          shift and go to state 59

state 374

    (223) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 443


state 375

    (173) BracedKeyvalList -> KeyvalList OComma .

    RIGHT_RIGHT     reduce using rule 173 (BracedKeyvalList -> KeyvalList OComma .)


state 376

    (170) KeyvalList -> KeyvalList COMMA . Keyval
    (171) KeyvalList -> KeyvalList COMMA . BareCompLitExpr
    (131) OComma -> COMMA .
    (221) Keyval -> . Expr COLON CompLitExpr
    (222) BareCompLitExpr -> . Expr
    (223) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 131 (OComma -> COMMA .)
    LEFT_LEFT       shift and go to state 284
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    FuncLiteral                    shift and go to state 13
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    PExprNoParen                   shift and go to state 49
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    Keyval                         shift and go to state 444
    BareCompLitExpr                shift and go to state 445
    PExpr                          shift and go to state 59

state 377

    (213) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CASE            reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DEFAULT         reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 213 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 378

    (208) PExprNoParen -> PExpr LBRACK Expr RBRACK .

    DOT             reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACK          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEFT_LEFT       reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LPAREN          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDE          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MOD             reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL             reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR             reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPERS          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAR          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMES           reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUS            reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUS           reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    XOR             reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OR              reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQEQ            reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    NOTEQ           reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEQ             reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GEQ             reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GREAT           reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LESS            reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPAMP          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OROR            reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SEMICOL         reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACE          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACE          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    CASE            reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DEFAULT         reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COMMA           reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSEQ          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSEQ         reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMESEQ         reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDEEQ        reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MODEQ           reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OREQ            reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPEQ           reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    CAREQ           reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAREQ        reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSPLUS        reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSMIN        reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQUAL           reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLONEQ         reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PIPE            reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACK          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RPAREN          reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_ANGLE     reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLON           reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_RIGHT     reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DDD             reduce using rule 208 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)


state 379

    (209) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr RBRACK
    (210) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr COLON OExpr RBRACK
    (138) OExpr -> . empty
    (139) OExpr -> . Expr
    (265) empty -> .
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 265 (empty -> .)
    COLON           reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 139
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 339
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    OExpr                          shift and go to state 446
    PExpr                          shift and go to state 59

state 380

    (263) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma . RPAREN

    RPAREN          shift and go to state 447


state 381

    (147) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (131) OComma -> COMMA .
    (226) ExprOrType -> . Expr
    (227) ExprOrType -> . NonExprType
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (142) FuncLiteralDecl -> . FuncType

    RPAREN          reduce using rule 131 (OComma -> COMMA .)
    TIMES           shift and go to state 179
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 183
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 177
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    ExprOrType                     shift and go to state 448
    NonExprType                    shift and go to state 180
    OtherType                      shift and go to state 181
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 182
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 382

    (264) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD . OComma RPAREN
    (130) OComma -> . empty
    (131) OComma -> . COMMA
    (265) empty -> .

    COMMA           shift and go to state 326
    RPAREN          reduce using rule 265 (empty -> .)

    empty                          shift and go to state 327
    OComma                         shift and go to state 449

state 383

    (214) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CASE            reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DEFAULT         reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 214 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 384

    (206) PExprNoParen -> PExpr DOT LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 450


state 385

    (207) PExprNoParen -> PExpr DOT LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 451


state 386

    (74) IfStmt -> IF IfHeader LoopBody ElseIfList . Else
    (77) ElseIfList -> ElseIfList . ElseIf
    (78) Else -> . empty
    (79) Else -> . ELSE CompoundStmt
    (75) ElseIf -> . ELSE IF IfHeader LoopBody
    (265) empty -> .

    ELSE            shift and go to state 455
    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    CASE            reduce using rule 265 (empty -> .)
    DEFAULT         reduce using rule 265 (empty -> .)

    Else                           shift and go to state 452
    ElseIf                         shift and go to state 454
    empty                          shift and go to state 453

state 387

    (76) ElseIfList -> empty .

    ELSE            reduce using rule 76 (ElseIfList -> empty .)
    SEMICOL         reduce using rule 76 (ElseIfList -> empty .)
    RBRACE          reduce using rule 76 (ElseIfList -> empty .)
    CASE            reduce using rule 76 (ElseIfList -> empty .)
    DEFAULT         reduce using rule 76 (ElseIfList -> empty .)


state 388

    (116) StructDecl -> TIMES LPAREN . Embed RPAREN OLiteral
    (153) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 390

    Embed                          shift and go to state 456

state 389

    (114) StructDecl -> TIMES Embed . OLiteral
    (148) OLiteral -> . empty
    (149) OLiteral -> . Literal
    (265) empty -> .
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32

    OLiteral                       shift and go to state 457
    Literal                        shift and go to state 397
    empty                          shift and go to state 399

state 390

    (153) Embed -> IDENTIFIER .

    RPAREN          reduce using rule 153 (Embed -> IDENTIFIER .)
    INTEGER         reduce using rule 153 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 153 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 153 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 153 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 153 (Embed -> IDENTIFIER .)


state 391

    (115) StructDecl -> LPAREN TIMES . Embed RPAREN OLiteral
    (153) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 390

    Embed                          shift and go to state 458

state 392

    (113) StructDecl -> LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 459


state 393

    (167) NewNameList -> NewNameList COMMA . NewName
    (122) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 143

    NewName                        shift and go to state 460

state 394

    (111) StructDecl -> NewNameList NType . OLiteral
    (148) OLiteral -> . empty
    (149) OLiteral -> . Literal
    (265) empty -> .
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32

    Literal                        shift and go to state 397
    OLiteral                       shift and go to state 461
    empty                          shift and go to state 399

state 395

    (108) StructDeclList -> StructDeclList SEMICOL . StructDecl
    (133) OSemi -> SEMICOL .
    (111) StructDecl -> . NewNameList NType OLiteral
    (112) StructDecl -> . Embed OLiteral
    (113) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (114) StructDecl -> . TIMES Embed OLiteral
    (115) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (116) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (166) NewNameList -> . NewName
    (167) NewNameList -> . NewNameList COMMA NewName
    (153) Embed -> . IDENTIFIER
    (122) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 133 (OSemi -> SEMICOL .)
    LPAREN          shift and go to state 316
    TIMES           shift and go to state 315
    IDENTIFIER      shift and go to state 319

    NewName                        shift and go to state 313
    StructDecl                     shift and go to state 462
    NewNameList                    shift and go to state 317
    Embed                          shift and go to state 320

state 396

    (92) StructType -> STRUCT LBRACE StructDeclList OSemi . RBRACE

    RBRACE          shift and go to state 463


state 397

    (149) OLiteral -> Literal .

    SEMICOL         reduce using rule 149 (OLiteral -> Literal .)
    RBRACE          reduce using rule 149 (OLiteral -> Literal .)


state 398

    (112) StructDecl -> Embed OLiteral .

    SEMICOL         reduce using rule 112 (StructDecl -> Embed OLiteral .)
    RBRACE          reduce using rule 112 (StructDecl -> Embed OLiteral .)


state 399

    (148) OLiteral -> empty .

    SEMICOL         reduce using rule 148 (OLiteral -> empty .)
    RBRACE          reduce using rule 148 (OLiteral -> empty .)


state 400

    (11) ImportStmtList -> ImportStmtList SEMICOL ImportStmt .

    SEMICOL         reduce using rule 11 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)
    RPAREN          reduce using rule 11 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)


state 401

    (7) Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .

    SEMICOL         reduce using rule 7 (Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .)


state 402

    (212) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .

    DOT             reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACK          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEFT_LEFT       reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LPAREN          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDE          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MOD             reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL             reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR             reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPERS          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAR          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMES           reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUS            reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUS           reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    XOR             reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OR              reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQEQ            reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    NOTEQ           reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEQ             reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GEQ             reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GREAT           reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LESS            reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPAMP          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OROR            reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SEMICOL         reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACE          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACE          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    CASE            reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DEFAULT         reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COMMA           reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSEQ          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSEQ         reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMESEQ         reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDEEQ        reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MODEQ           reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OREQ            reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPEQ           reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    CAREQ           reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL_ASSIGN      reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR_ASSIGN      reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAREQ        reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSPLUS        reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSMIN        reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQUAL           reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLONEQ         reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PIPE            reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACK          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RPAREN          reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_ANGLE     reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLON           reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_RIGHT     reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DDD             reduce using rule 212 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)


state 403

    (59) CompoundStmt -> LBRACE StmtList RBRACE .

    SEMICOL         reduce using rule 59 (CompoundStmt -> LBRACE StmtList RBRACE .)
    RBRACE          reduce using rule 59 (CompoundStmt -> LBRACE StmtList RBRACE .)
    CASE            reduce using rule 59 (CompoundStmt -> LBRACE StmtList RBRACE .)
    DEFAULT         reduce using rule 59 (CompoundStmt -> LBRACE StmtList RBRACE .)


state 404

    (165) StmtList -> StmtList SEMICOL Stmt .

    RBRACE          reduce using rule 165 (StmtList -> StmtList SEMICOL Stmt .)
    SEMICOL         reduce using rule 165 (StmtList -> StmtList SEMICOL Stmt .)
    CASE            reduce using rule 165 (StmtList -> StmtList SEMICOL Stmt .)
    DEFAULT         reduce using rule 165 (StmtList -> StmtList SEMICOL Stmt .)


state 405

    (157) VarDeclList -> VarDeclList SEMICOL VarDecl .

    SEMICOL         reduce using rule 157 (VarDeclList -> VarDeclList SEMICOL VarDecl .)
    RPAREN          reduce using rule 157 (VarDeclList -> VarDeclList SEMICOL VarDecl .)


state 406

    (24) CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .

    RBRACE          reduce using rule 24 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)
    SEMICOL         reduce using rule 24 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)
    CASE            reduce using rule 24 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)
    DEFAULT         reduce using rule 24 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)


state 407

    (129) DotName -> Name DOT IDENTIFIER .

    COMMA           reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    RPAREN          reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    OR_RIGHT        reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    LBRACE          reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    SEMICOL         reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    EQUAL           reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    RBRACE          reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    CASE            reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    DEFAULT         reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    RBRACK          reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    DDD             reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    COLON           reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    COLONEQ         reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    INTEGER         reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    FLOAT           reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)
    STRING          reduce using rule 129 (DotName -> Name DOT IDENTIFIER .)


state 408

    (30) VarDecl -> DeclNameList NType EQUAL ExprList .
    (145) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 30 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 30 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    RBRACE          reduce using rule 30 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    CASE            reduce using rule 30 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    DEFAULT         reduce using rule 30 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 108


state 409

    (84) NType -> LPAREN NType RPAREN .

    COMMA           reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    OR_RIGHT        reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    LEFT_ANGLE      reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    LBRACE          reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    RPAREN          reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    EQUAL           reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    SEMICOL         reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    RBRACE          reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    CASE            reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    DEFAULT         reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    RBRACK          reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    DDD             reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    COLON           reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    COLONEQ         reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    LEFT_LEFT       reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    INTEGER         reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    FLOAT           reduce using rule 84 (NType -> LPAREN NType RPAREN .)
    STRING          reduce using rule 84 (NType -> LPAREN NType RPAREN .)


state 410

    (89) OtherType -> MAP LBRACK NType RBRACK NType .

    LEFT_ANGLE      reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    LEFT_LEFT       reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    LBRACE          reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    SEMICOL         reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    COLON           reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    EQUAL           reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    COLONEQ         reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    COMMA           reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    RPAREN          reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    DDD             reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    RBRACE          reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    CASE            reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    DEFAULT         reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    RBRACK          reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    OR_RIGHT        reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    INTEGER         reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    FLOAT           reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)
    STRING          reduce using rule 89 (OtherType -> MAP LBRACK NType RBRACK NType .)


state 411

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .

    RBRACE          reduce using rule 20 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)
    SEMICOL         reduce using rule 20 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)
    CASE            reduce using rule 20 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)
    DEFAULT         reduce using rule 20 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)


state 412

    (21) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList . OSemi RPAREN
    (159) ConstDeclList -> ConstDeclList . SEMICOL ConstDecl1
    (132) OSemi -> . empty
    (133) OSemi -> . SEMICOL
    (265) empty -> .

    SEMICOL         shift and go to state 465
    RPAREN          reduce using rule 265 (empty -> .)

    OSemi                          shift and go to state 464
    empty                          shift and go to state 324

state 413

    (35) ConstDecl1 -> DeclNameList . NType
    (36) ConstDecl1 -> DeclNameList .
    (32) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (33) ConstDecl -> DeclNameList . EQUAL ExprList
    (163) DeclNameList -> DeclNameList . COMMA DeclName
    (80) NType -> . FuncType
    (81) NType -> . OtherType
    (82) NType -> . PtrType
    (83) NType -> . DotName
    (84) NType -> . LPAREN NType RPAREN
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 36 (ConstDecl1 -> DeclNameList .)
    RPAREN          reduce using rule 36 (ConstDecl1 -> DeclNameList .)
    EQUAL           shift and go to state 233
    COMMA           shift and go to state 222
    LPAREN          shift and go to state 225
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    FuncType                       shift and go to state 216
    NType                          shift and go to state 466
    OtherType                      shift and go to state 221
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 218
    DotName                        shift and go to state 219
    Name                           shift and go to state 223

state 414

    (158) ConstDeclList -> ConstDecl1 .

    SEMICOL         reduce using rule 158 (ConstDeclList -> ConstDecl1 .)
    RPAREN          reduce using rule 158 (ConstDeclList -> ConstDecl1 .)


state 415

    (34) ConstDecl1 -> ConstDecl .

    SEMICOL         reduce using rule 34 (ConstDecl1 -> ConstDecl .)
    RPAREN          reduce using rule 34 (ConstDecl1 -> ConstDecl .)


state 416

    (32) ConstDecl -> DeclNameList NType EQUAL ExprList .
    (145) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 32 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 32 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    RBRACE          reduce using rule 32 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    CASE            reduce using rule 32 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    DEFAULT         reduce using rule 32 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 108


state 417

    (101) ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    MAP             reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    CASE            reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    DEFAULT         reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACK          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 101 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)


state 418

    (106) FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .

    SEMICOL         reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACE          reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LBRACE          reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_ANGLE      reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RPAREN          reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    EQUAL           reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    CASE            reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    DEFAULT         reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACK          reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COMMA           reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    OR_RIGHT        reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    DDD             reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLON           reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLONEQ         reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_LEFT       reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    INTEGER         reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    FLOAT           reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    STRING          reduce using rule 106 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)


state 419

    (103) FuncBody -> LBRACE StmtList RBRACE .

    SEMICOL         reduce using rule 103 (FuncBody -> LBRACE StmtList RBRACE .)


state 420

    (181) ArgTypeList -> ArgTypeList COMMA ArgType .

    COMMA           reduce using rule 181 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    OR_RIGHT        reduce using rule 181 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    RPAREN          reduce using rule 181 (ArgTypeList -> ArgTypeList COMMA ArgType .)


state 421

    (98) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER . ArgList FuncRes
    (100) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (101) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 122

    ArgList                        shift and go to state 467

state 422

    (67) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL . OSimpleStmt
    (134) OSimpleStmt -> . empty
    (135) OSimpleStmt -> . SimpleStmt
    (265) empty -> .
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    LBRACE          reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 131
    OSimpleStmt                    shift and go to state 468
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 130
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 423

    (64) RangeStmt -> ExprList EQUAL RANGE Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 64 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    RBRACK          reduce using rule 64 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    OROR            shift and go to state 161


state 424

    (65) RangeStmt -> ExprList COLONEQ RANGE Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 65 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    RBRACK          reduce using rule 65 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    OROR            shift and go to state 161


state 425

    (63) LoopBody -> LBRACE StmtList RBRACE .

    SEMICOL         reduce using rule 63 (LoopBody -> LBRACE StmtList RBRACE .)
    RBRACE          reduce using rule 63 (LoopBody -> LBRACE StmtList RBRACE .)
    CASE            reduce using rule 63 (LoopBody -> LBRACE StmtList RBRACE .)
    DEFAULT         reduce using rule 63 (LoopBody -> LBRACE StmtList RBRACE .)
    ELSE            reduce using rule 63 (LoopBody -> LBRACE StmtList RBRACE .)


state 426

    (110) InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .

    SEMICOL         reduce using rule 110 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)
    RBRACE          reduce using rule 110 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)


state 427

    (94) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .

    LEFT_ANGLE      reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LBRACE          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    CASE            reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    DEFAULT         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACK          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COMMA           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    DDD             reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLON           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    STRING          reduce using rule 94 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)


state 428

    (120) InDecl -> LPAREN OArgTypeListOComma . RPAREN FuncRes

    RPAREN          shift and go to state 469


state 429

    (119) InterfaceDecl -> LPAREN IDENTIFIER RPAREN .

    SEMICOL         reduce using rule 119 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)
    RBRACE          reduce using rule 119 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)


state 430

    (161) TypeDeclList -> TypeDeclList SEMICOL TypeDecl .

    SEMICOL         reduce using rule 161 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)
    RPAREN          reduce using rule 161 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)


state 431

    (27) CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .

    RBRACE          reduce using rule 27 (CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .)
    SEMICOL         reduce using rule 27 (CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .)
    CASE            reduce using rule 27 (CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .)
    DEFAULT         reduce using rule 27 (CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .)


state 432

    (261) ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .

    DOT             reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACK          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEFT_LEFT       reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LPAREN          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDE          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MOD             reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL             reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR             reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPERS          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAR          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMES           reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUS            reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUS           reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    XOR             reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OR              reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQEQ            reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    NOTEQ           reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEQ             reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GEQ             reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GREAT           reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LESS            reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPAMP          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSEQ          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSEQ         reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMESEQ         reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDEEQ        reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MODEQ           reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OREQ            reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPEQ           reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    CAREQ           reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL_ASSIGN      reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR_ASSIGN      reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAREQ        reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSPLUS        reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSMIN        reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OROR            reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACE          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQUAL           reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLONEQ         reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COMMA           reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SEMICOL         reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PIPE            reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACK          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACE          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    CASE            reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DEFAULT         reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RPAREN          reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_ANGLE     reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLON           reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_RIGHT     reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DDD             reduce using rule 261 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)


state 433

    (64) RangeStmt -> ExprList EQUAL . RANGE Expr

    RANGE           shift and go to state 357


state 434

    (65) RangeStmt -> ExprList COLONEQ . RANGE Expr

    RANGE           shift and go to state 358


state 435

    (60) CaseBlock -> Case . StmtList
    (164) StmtList -> . Stmt
    (165) StmtList -> . StmtList SEMICOL Stmt
    (184) Stmt -> . empty
    (185) Stmt -> . CompoundStmt
    (186) Stmt -> . CommonDecl
    (187) Stmt -> . NonDeclStmt
    (265) empty -> .
    (59) CompoundStmt -> . LBRACE StmtList RBRACE
    (19) CommonDecl -> . CONSTANT ConstDecl
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (22) CommonDecl -> . CONSTANT LPAREN RPAREN
    (23) CommonDecl -> . VAR VarDecl
    (24) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (25) CommonDecl -> . VAR LPAREN RPAREN
    (26) CommonDecl -> . TYPE TypeDecl
    (27) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (28) CommonDecl -> . TYPE LPAREN RPAREN
    (188) NonDeclStmt -> . SimpleStmt
    (189) NonDeclStmt -> . ForStmt
    (190) NonDeclStmt -> . SwitchStmt
    (191) NonDeclStmt -> . IfStmt
    (192) NonDeclStmt -> . LabelName COLON Stmt
    (193) NonDeclStmt -> . FALLTHROUGH
    (194) NonDeclStmt -> . BREAK ONewName
    (195) NonDeclStmt -> . CONTINUE ONewName
    (196) NonDeclStmt -> . DEFER PseudoCall
    (197) NonDeclStmt -> . GOTO NewName
    (198) NonDeclStmt -> . RETURN OExprList
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (71) ForStmt -> . FOR ForBody
    (229) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (74) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (121) LabelName -> . NewName
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (122) NewName -> . IDENTIFIER
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    CASE            reduce using rule 265 (empty -> .)
    DEFAULT         reduce using rule 265 (empty -> .)
    LBRACE          shift and go to state 199
    CONSTANT        shift and go to state 28
    VAR             shift and go to state 25
    TYPE            shift and go to state 44
    FALLTHROUGH     shift and go to state 19
    BREAK           shift and go to state 57
    CONTINUE        shift and go to state 47
    DEFER           shift and go to state 18
    GOTO            shift and go to state 63
    RETURN          shift and go to state 50
    FOR             shift and go to state 38
    SWITCH          shift and go to state 51
    IF              shift and go to state 70
    IDENTIFIER      shift and go to state 54
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 61
    Prec3Expr_                     shift and go to state 14
    ForStmt                        shift and go to state 62
    StmtList                       shift and go to state 470
    CommonDecl                     shift and go to state 198
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    IfStmt                         shift and go to state 34
    FuncType                       shift and go to state 60
    FuncLiteralDecl                shift and go to state 24
    Stmt                           shift and go to state 211
    NewName                        shift and go to state 35
    InterfaceType                  shift and go to state 53
    LabelName                      shift and go to state 21
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 201
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    NonDeclStmt                    shift and go to state 202
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    PExpr                          shift and go to state 59
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    SwitchStmt                     shift and go to state 45
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    CompoundStmt                   shift and go to state 200

state 436

    (55) Case -> CASE . ExprOrTypeList COLON
    (56) Case -> CASE . ExprOrTypeList EQUAL Expr COLON
    (57) Case -> CASE . ExprOrTypeList COLONEQ Expr COLON
    (146) ExprOrTypeList -> . ExprOrType
    (147) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (226) ExprOrType -> . Expr
    (227) ExprOrType -> . NonExprType
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (142) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 179
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 183
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 177
    Prec4Expr_                     shift and go to state 30
    ExprOrTypeList                 shift and go to state 471
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    ExprOrType                     shift and go to state 292
    NonExprType                    shift and go to state 180
    OtherType                      shift and go to state 181
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 182
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 437

    (229) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .

    SEMICOL         reduce using rule 229 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)
    RBRACE          reduce using rule 229 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)
    CASE            reduce using rule 229 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)
    DEFAULT         reduce using rule 229 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)


state 438

    (58) Case -> DEFAULT . COLON

    COLON           shift and go to state 472


state 439

    (62) CaseBlockList -> CaseBlockList CaseBlock .

    RBRACE          reduce using rule 62 (CaseBlockList -> CaseBlockList CaseBlock .)
    CASE            reduce using rule 62 (CaseBlockList -> CaseBlockList CaseBlock .)
    DEFAULT         reduce using rule 62 (CaseBlockList -> CaseBlockList CaseBlock .)


state 440

    (221) Keyval -> Expr COLON CompLitExpr .

    COMMA           reduce using rule 221 (Keyval -> Expr COLON CompLitExpr .)
    RIGHT_RIGHT     reduce using rule 221 (Keyval -> Expr COLON CompLitExpr .)


state 441

    (224) CompLitExpr -> Expr .
    (253) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 224 (CompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 224 (CompLitExpr -> Expr .)
    OROR            shift and go to state 161


state 442

    (225) CompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (172) BracedKeyvalList -> . empty
    (173) BracedKeyvalList -> . KeyvalList OComma
    (265) empty -> .
    (168) KeyvalList -> . Keyval
    (169) KeyvalList -> . BareCompLitExpr
    (170) KeyvalList -> . KeyvalList COMMA Keyval
    (171) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (221) Keyval -> . Expr COLON CompLitExpr
    (222) BareCompLitExpr -> . Expr
    (223) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RIGHT_RIGHT     reduce using rule 265 (empty -> .)
    LEFT_LEFT       shift and go to state 284
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 282
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 283
    PseudoCall                     shift and go to state 39
    KeyvalList                     shift and go to state 285
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    Keyval                         shift and go to state 286
    BareCompLitExpr                shift and go to state 288
    PExpr                          shift and go to state 59
    BracedKeyvalList               shift and go to state 473

state 443

    (223) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 223 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 223 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 444

    (170) KeyvalList -> KeyvalList COMMA Keyval .

    COMMA           reduce using rule 170 (KeyvalList -> KeyvalList COMMA Keyval .)
    RIGHT_RIGHT     reduce using rule 170 (KeyvalList -> KeyvalList COMMA Keyval .)


state 445

    (171) KeyvalList -> KeyvalList COMMA BareCompLitExpr .

    COMMA           reduce using rule 171 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 171 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)


state 446

    (209) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . RBRACK
    (210) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . COLON OExpr RBRACK

    RBRACK          shift and go to state 474
    COLON           shift and go to state 475


state 447

    (263) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .

    DOT             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACK          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEFT_LEFT       reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LPAREN          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDE          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MOD             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPERS          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAR          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMES           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUS            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUS           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    XOR             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OR              reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQEQ            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    NOTEQ           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEQ             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GEQ             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GREAT           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LESS            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPAMP          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OROR            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SEMICOL         reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACE          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACE          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    CASE            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DEFAULT         reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSEQ          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSEQ         reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMESEQ         reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDEEQ        reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MODEQ           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OREQ            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPEQ           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    CAREQ           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAREQ        reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSPLUS        reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSMIN        reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQUAL           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLONEQ         reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COMMA           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACK          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLON           reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PIPE            reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RPAREN          reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DDD             reduce using rule 263 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)


state 448

    (147) ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .

    COLON           reduce using rule 147 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    EQUAL           reduce using rule 147 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLONEQ         reduce using rule 147 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COMMA           reduce using rule 147 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    DDD             reduce using rule 147 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    RPAREN          reduce using rule 147 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)


state 449

    (264) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma . RPAREN

    RPAREN          shift and go to state 476


state 450

    (206) PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    CASE            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DEFAULT         reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 206 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)


state 451

    (207) PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .

    DOT             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LBRACK          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LEFT_LEFT       reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LPAREN          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DIVIDE          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MOD             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHL             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHR             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPERS          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPCAR          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    TIMES           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUS            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUS           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    XOR             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OR              reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    EQEQ            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    NOTEQ           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LEQ             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    GEQ             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    GREAT           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LESS            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPAMP          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OROR            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SEMICOL         reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LBRACE          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RBRACE          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    CASE            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DEFAULT         reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COMMA           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUSEQ          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUSEQ         reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    TIMESEQ         reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DIVIDEEQ        reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MODEQ           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OREQ            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPEQ           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    CAREQ           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHL_ASSIGN      reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHR_ASSIGN      reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPCAREQ        reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUSPLUS        reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUSMIN        reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    EQUAL           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COLONEQ         reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PIPE            reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RBRACK          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RPAREN          reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RIGHT_ANGLE     reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COLON           reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RIGHT_RIGHT     reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DDD             reduce using rule 207 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)


state 452

    (74) IfStmt -> IF IfHeader LoopBody ElseIfList Else .

    RBRACE          reduce using rule 74 (IfStmt -> IF IfHeader LoopBody ElseIfList Else .)
    SEMICOL         reduce using rule 74 (IfStmt -> IF IfHeader LoopBody ElseIfList Else .)
    CASE            reduce using rule 74 (IfStmt -> IF IfHeader LoopBody ElseIfList Else .)
    DEFAULT         reduce using rule 74 (IfStmt -> IF IfHeader LoopBody ElseIfList Else .)


state 453

    (78) Else -> empty .

    SEMICOL         reduce using rule 78 (Else -> empty .)
    RBRACE          reduce using rule 78 (Else -> empty .)
    CASE            reduce using rule 78 (Else -> empty .)
    DEFAULT         reduce using rule 78 (Else -> empty .)


state 454

    (77) ElseIfList -> ElseIfList ElseIf .

    ELSE            reduce using rule 77 (ElseIfList -> ElseIfList ElseIf .)
    SEMICOL         reduce using rule 77 (ElseIfList -> ElseIfList ElseIf .)
    RBRACE          reduce using rule 77 (ElseIfList -> ElseIfList ElseIf .)
    CASE            reduce using rule 77 (ElseIfList -> ElseIfList ElseIf .)
    DEFAULT         reduce using rule 77 (ElseIfList -> ElseIfList ElseIf .)


state 455

    (79) Else -> ELSE . CompoundStmt
    (75) ElseIf -> ELSE . IF IfHeader LoopBody
    (59) CompoundStmt -> . LBRACE StmtList RBRACE

    IF              shift and go to state 478
    LBRACE          shift and go to state 199

    CompoundStmt                   shift and go to state 477

state 456

    (116) StructDecl -> TIMES LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 479


state 457

    (114) StructDecl -> TIMES Embed OLiteral .

    SEMICOL         reduce using rule 114 (StructDecl -> TIMES Embed OLiteral .)
    RBRACE          reduce using rule 114 (StructDecl -> TIMES Embed OLiteral .)


state 458

    (115) StructDecl -> LPAREN TIMES Embed . RPAREN OLiteral

    RPAREN          shift and go to state 480


state 459

    (113) StructDecl -> LPAREN Embed RPAREN . OLiteral
    (148) OLiteral -> . empty
    (149) OLiteral -> . Literal
    (265) empty -> .
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32

    OLiteral                       shift and go to state 481
    Literal                        shift and go to state 397
    empty                          shift and go to state 399

state 460

    (167) NewNameList -> NewNameList COMMA NewName .

    COMMA           reduce using rule 167 (NewNameList -> NewNameList COMMA NewName .)
    LPAREN          reduce using rule 167 (NewNameList -> NewNameList COMMA NewName .)
    FUNCTION        reduce using rule 167 (NewNameList -> NewNameList COMMA NewName .)
    LBRACK          reduce using rule 167 (NewNameList -> NewNameList COMMA NewName .)
    MAP             reduce using rule 167 (NewNameList -> NewNameList COMMA NewName .)
    TIMES           reduce using rule 167 (NewNameList -> NewNameList COMMA NewName .)
    STRUCT          reduce using rule 167 (NewNameList -> NewNameList COMMA NewName .)
    INTERFACE       reduce using rule 167 (NewNameList -> NewNameList COMMA NewName .)
    IDENTIFIER      reduce using rule 167 (NewNameList -> NewNameList COMMA NewName .)


state 461

    (111) StructDecl -> NewNameList NType OLiteral .

    SEMICOL         reduce using rule 111 (StructDecl -> NewNameList NType OLiteral .)
    RBRACE          reduce using rule 111 (StructDecl -> NewNameList NType OLiteral .)


state 462

    (108) StructDeclList -> StructDeclList SEMICOL StructDecl .

    SEMICOL         reduce using rule 108 (StructDeclList -> StructDeclList SEMICOL StructDecl .)
    RBRACE          reduce using rule 108 (StructDeclList -> StructDeclList SEMICOL StructDecl .)


state 463

    (92) StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .

    LEFT_ANGLE      reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COMMA           reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    CASE            reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    DEFAULT         reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    DDD             reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLON           reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LBRACE          reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACK          reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    STRING          reduce using rule 92 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)


state 464

    (21) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi . RPAREN

    RPAREN          shift and go to state 482


state 465

    (159) ConstDeclList -> ConstDeclList SEMICOL . ConstDecl1
    (133) OSemi -> SEMICOL .
    (34) ConstDecl1 -> . ConstDecl
    (35) ConstDecl1 -> . DeclNameList NType
    (36) ConstDecl1 -> . DeclNameList
    (32) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (33) ConstDecl -> . DeclNameList EQUAL ExprList
    (162) DeclNameList -> . DeclName
    (163) DeclNameList -> . DeclNameList COMMA DeclName
    (174) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 133 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 103

    ConstDecl1                     shift and go to state 483
    DeclName                       shift and go to state 104
    DeclNameList                   shift and go to state 413
    ConstDecl                      shift and go to state 415

state 466

    (35) ConstDecl1 -> DeclNameList NType .
    (32) ConstDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 35 (ConstDecl1 -> DeclNameList NType .)
    RPAREN          reduce using rule 35 (ConstDecl1 -> DeclNameList NType .)
    EQUAL           shift and go to state 344


state 467

    (98) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList . FuncRes
    (101) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (104) FuncRes -> . empty
    (105) FuncRes -> . FuncRetType
    (106) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (265) empty -> .
    (124) FuncRetType -> . FuncType
    (125) FuncRetType -> . OtherType
    (126) FuncRetType -> . PtrType
    (127) FuncRetType -> . DotName
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    LPAREN          shift and go to state 239
    LEFT_OR         shift and go to state 245
    LBRACE          reduce using rule 265 (empty -> .)
    SEMICOL         reduce using rule 265 (empty -> .)
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    DotName                        shift and go to state 246
    Name                           shift and go to state 223
    FuncType                       shift and go to state 240
    FuncRes                        shift and go to state 484
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 241
    FuncRetType                    shift and go to state 247
    OtherType                      shift and go to state 242
    empty                          shift and go to state 243

state 468

    (67) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 67 (ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .)


state 469

    (120) InDecl -> LPAREN OArgTypeListOComma RPAREN . FuncRes
    (104) FuncRes -> . empty
    (105) FuncRes -> . FuncRetType
    (106) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (265) empty -> .
    (124) FuncRetType -> . FuncType
    (125) FuncRetType -> . OtherType
    (126) FuncRetType -> . PtrType
    (127) FuncRetType -> . DotName
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (123) PtrType -> . TIMES NType
    (128) DotName -> . Name
    (129) DotName -> . Name DOT IDENTIFIER
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (175) Name -> . IDENTIFIER

    LEFT_OR         shift and go to state 245
    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 226
    MAP             shift and go to state 27
    TIMES           shift and go to state 220
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    IDENTIFIER      shift and go to state 87

    StructType                     shift and go to state 56
    DotName                        shift and go to state 246
    Name                           shift and go to state 223
    FuncType                       shift and go to state 240
    OtherType                      shift and go to state 242
    InterfaceType                  shift and go to state 53
    PtrType                        shift and go to state 241
    FuncRes                        shift and go to state 485
    FuncRetType                    shift and go to state 247
    empty                          shift and go to state 243

state 470

    (60) CaseBlock -> Case StmtList .
    (165) StmtList -> StmtList . SEMICOL Stmt

    RBRACE          reduce using rule 60 (CaseBlock -> Case StmtList .)
    CASE            reduce using rule 60 (CaseBlock -> Case StmtList .)
    DEFAULT         reduce using rule 60 (CaseBlock -> Case StmtList .)
    SEMICOL         shift and go to state 330


state 471

    (55) Case -> CASE ExprOrTypeList . COLON
    (56) Case -> CASE ExprOrTypeList . EQUAL Expr COLON
    (57) Case -> CASE ExprOrTypeList . COLONEQ Expr COLON
    (147) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType

    COLON           shift and go to state 488
    EQUAL           shift and go to state 486
    COLONEQ         shift and go to state 487
    COMMA           shift and go to state 489


state 472

    (58) Case -> DEFAULT COLON .

    LBRACE          reduce using rule 58 (Case -> DEFAULT COLON .)
    CONSTANT        reduce using rule 58 (Case -> DEFAULT COLON .)
    VAR             reduce using rule 58 (Case -> DEFAULT COLON .)
    TYPE            reduce using rule 58 (Case -> DEFAULT COLON .)
    FALLTHROUGH     reduce using rule 58 (Case -> DEFAULT COLON .)
    BREAK           reduce using rule 58 (Case -> DEFAULT COLON .)
    CONTINUE        reduce using rule 58 (Case -> DEFAULT COLON .)
    DEFER           reduce using rule 58 (Case -> DEFAULT COLON .)
    GOTO            reduce using rule 58 (Case -> DEFAULT COLON .)
    RETURN          reduce using rule 58 (Case -> DEFAULT COLON .)
    FOR             reduce using rule 58 (Case -> DEFAULT COLON .)
    SWITCH          reduce using rule 58 (Case -> DEFAULT COLON .)
    IF              reduce using rule 58 (Case -> DEFAULT COLON .)
    IDENTIFIER      reduce using rule 58 (Case -> DEFAULT COLON .)
    AMPERS          reduce using rule 58 (Case -> DEFAULT COLON .)
    NOT             reduce using rule 58 (Case -> DEFAULT COLON .)
    TIMES           reduce using rule 58 (Case -> DEFAULT COLON .)
    PLUS            reduce using rule 58 (Case -> DEFAULT COLON .)
    MINUS           reduce using rule 58 (Case -> DEFAULT COLON .)
    XOR             reduce using rule 58 (Case -> DEFAULT COLON .)
    LPAREN          reduce using rule 58 (Case -> DEFAULT COLON .)
    INTEGER         reduce using rule 58 (Case -> DEFAULT COLON .)
    FLOAT           reduce using rule 58 (Case -> DEFAULT COLON .)
    STRING          reduce using rule 58 (Case -> DEFAULT COLON .)
    LBRACK          reduce using rule 58 (Case -> DEFAULT COLON .)
    FUNCTION        reduce using rule 58 (Case -> DEFAULT COLON .)
    MAP             reduce using rule 58 (Case -> DEFAULT COLON .)
    STRUCT          reduce using rule 58 (Case -> DEFAULT COLON .)
    INTERFACE       reduce using rule 58 (Case -> DEFAULT COLON .)
    SEMICOL         reduce using rule 58 (Case -> DEFAULT COLON .)
    RBRACE          reduce using rule 58 (Case -> DEFAULT COLON .)
    CASE            reduce using rule 58 (Case -> DEFAULT COLON .)
    DEFAULT         reduce using rule 58 (Case -> DEFAULT COLON .)


state 473

    (225) CompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 490


state 474

    (209) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    CASE            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DEFAULT         reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 209 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)


state 475

    (210) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON . OExpr RBRACK
    (138) OExpr -> . empty
    (139) OExpr -> . Expr
    (265) empty -> .
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    RBRACK          reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    empty                          shift and go to state 139
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 339
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    OExpr                          shift and go to state 491
    PExpr                          shift and go to state 59

state 476

    (264) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .

    DOT             reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACK          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEFT_LEFT       reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LPAREN          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDE          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MOD             reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL             reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR             reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPERS          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAR          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMES           reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUS            reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUS           reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    XOR             reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OR              reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQEQ            reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    NOTEQ           reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEQ             reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GEQ             reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GREAT           reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LESS            reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPAMP          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OROR            reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SEMICOL         reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACE          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACE          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    CASE            reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DEFAULT         reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSEQ          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSEQ         reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMESEQ         reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDEEQ        reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MODEQ           reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OREQ            reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPEQ           reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    CAREQ           reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAREQ        reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSPLUS        reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSMIN        reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQUAL           reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLONEQ         reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COMMA           reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACK          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLON           reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PIPE            reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RPAREN          reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DDD             reduce using rule 264 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)


state 477

    (79) Else -> ELSE CompoundStmt .

    SEMICOL         reduce using rule 79 (Else -> ELSE CompoundStmt .)
    RBRACE          reduce using rule 79 (Else -> ELSE CompoundStmt .)
    CASE            reduce using rule 79 (Else -> ELSE CompoundStmt .)
    DEFAULT         reduce using rule 79 (Else -> ELSE CompoundStmt .)


state 478

    (75) ElseIf -> ELSE IF . IfHeader LoopBody
    (72) IfHeader -> . OSimpleStmt
    (73) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (134) OSimpleStmt -> . empty
    (135) OSimpleStmt -> . SimpleStmt
    (265) empty -> .
    (39) SimpleStmt -> . Expr
    (40) SimpleStmt -> . Expr PLUSEQ Expr
    (41) SimpleStmt -> . Expr MINUSEQ Expr
    (42) SimpleStmt -> . Expr TIMESEQ Expr
    (43) SimpleStmt -> . Expr DIVIDEEQ Expr
    (44) SimpleStmt -> . Expr MODEQ Expr
    (45) SimpleStmt -> . Expr OREQ Expr
    (46) SimpleStmt -> . Expr AMPEQ Expr
    (47) SimpleStmt -> . Expr CAREQ Expr
    (48) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (49) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (50) SimpleStmt -> . Expr AMPCAREQ Expr
    (51) SimpleStmt -> . ExprList EQUAL ExprList
    (52) SimpleStmt -> . ExprList COLONEQ ExprList
    (53) SimpleStmt -> . Expr PLUSPLUS
    (54) SimpleStmt -> . Expr MINUSMIN
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (144) ExprList -> . Expr
    (145) ExprList -> . ExprList COMMA Expr
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    SEMICOL         reduce using rule 265 (empty -> .)
    LBRACE          reduce using rule 265 (empty -> .)
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    SimpleStmt                     shift and go to state 131
    OSimpleStmt                    shift and go to state 151
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 66
    PseudoCall                     shift and go to state 39
    ExprList                       shift and go to state 26
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    IfHeader                       shift and go to state 492
    empty                          shift and go to state 130
    PExpr                          shift and go to state 59

state 479

    (116) StructDecl -> TIMES LPAREN Embed RPAREN . OLiteral
    (148) OLiteral -> . empty
    (149) OLiteral -> . Literal
    (265) empty -> .
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32

    OLiteral                       shift and go to state 493
    Literal                        shift and go to state 397
    empty                          shift and go to state 399

state 480

    (115) StructDecl -> LPAREN TIMES Embed RPAREN . OLiteral
    (148) OLiteral -> . empty
    (149) OLiteral -> . Literal
    (265) empty -> .
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING

    SEMICOL         reduce using rule 265 (empty -> .)
    RBRACE          reduce using rule 265 (empty -> .)
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32

    OLiteral                       shift and go to state 494
    Literal                        shift and go to state 397
    empty                          shift and go to state 399

state 481

    (113) StructDecl -> LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 113 (StructDecl -> LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 113 (StructDecl -> LPAREN Embed RPAREN OLiteral .)


state 482

    (21) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .

    RBRACE          reduce using rule 21 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)
    SEMICOL         reduce using rule 21 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)
    CASE            reduce using rule 21 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)
    DEFAULT         reduce using rule 21 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)


state 483

    (159) ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .

    SEMICOL         reduce using rule 159 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)
    RPAREN          reduce using rule 159 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)


state 484

    (98) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 98 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 98 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)


state 485

    (120) InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .

    SEMICOL         reduce using rule 120 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)
    RBRACE          reduce using rule 120 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)


state 486

    (56) Case -> CASE ExprOrTypeList EQUAL . Expr COLON
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 495
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 487

    (57) Case -> CASE ExprOrTypeList COLONEQ . Expr COLON
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (142) FuncLiteralDecl -> . FuncType
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE

    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    TIMES           shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87
    LBRACK          shift and go to state 46
    FUNCTION        shift and go to state 88
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 60
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    OtherType                      shift and go to state 16
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 496
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 488

    (55) Case -> CASE ExprOrTypeList COLON .

    LBRACE          reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANT        reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    VAR             reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    TYPE            reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    FALLTHROUGH     reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    BREAK           reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    CONTINUE        reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    DEFER           reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    GOTO            reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    RETURN          reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    FOR             reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    SWITCH          reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    IF              reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    IDENTIFIER      reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    AMPERS          reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    NOT             reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    TIMES           reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    PLUS            reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    MINUS           reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    XOR             reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    LPAREN          reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    INTEGER         reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    FLOAT           reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    STRING          reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    LBRACK          reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    FUNCTION        reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    MAP             reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    STRUCT          reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    INTERFACE       reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    SEMICOL         reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    RBRACE          reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    CASE            reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)
    DEFAULT         reduce using rule 55 (Case -> CASE ExprOrTypeList COLON .)


state 489

    (147) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (226) ExprOrType -> . Expr
    (227) ExprOrType -> . NonExprType
    (252) Expr -> . Prec2Expr_
    (253) Expr -> . Expr OROR Prec2Expr_
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (250) Prec2Expr_ -> . Prec3Expr_
    (251) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (99) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . MAP LBRACK NType RBRACK NType
    (90) OtherType -> . StructType
    (91) OtherType -> . InterfaceType
    (243) Prec3Expr_ -> . Prec4Expr_
    (244) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (245) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (92) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (93) StructType -> . STRUCT LBRACE RBRACE
    (94) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (95) InterfaceType -> . INTERFACE LBRACE RBRACE
    (238) Prec4Expr_ -> . Prec5Expr_
    (239) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (240) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (230) Prec5Expr_ -> . UExpr
    (231) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (232) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (254) UExpr -> . PExpr
    (255) UExpr -> . AMPERS UExpr
    (256) UExpr -> . NOT UExpr
    (257) UExpr -> . TIMES UExpr
    (258) UExpr -> . PLUS UExpr
    (259) UExpr -> . MINUS UExpr
    (260) UExpr -> . XOR UExpr
    (201) PExpr -> . PExprNoParen
    (202) PExpr -> . LPAREN ExprOrType RPAREN
    (203) PExprNoParen -> . Literal
    (204) PExprNoParen -> . Name
    (205) PExprNoParen -> . PExpr DOT IDENTIFIER
    (206) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (207) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (208) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (209) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (210) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (211) PExprNoParen -> . PseudoCall
    (212) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (213) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (214) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (215) PExprNoParen -> . FuncLiteral
    (216) PExprNoParen -> . ForCompExpr
    (150) Literal -> . INTEGER
    (151) Literal -> . FLOAT
    (152) Literal -> . STRING
    (175) Name -> . IDENTIFIER
    (262) PseudoCall -> . PExpr LPAREN RPAREN
    (263) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (264) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (217) ConvType -> . FuncType
    (218) ConvType -> . OtherType
    (219) CompType -> . OtherType
    (143) FuncLiteral -> . FuncLiteralDecl LBRACE StmtList RBRACE
    (261) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (142) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 179
    FUNCTION        shift and go to state 88
    LBRACK          shift and go to state 183
    MAP             shift and go to state 27
    STRUCT          shift and go to state 71
    INTERFACE       shift and go to state 40
    AMPERS          shift and go to state 29
    NOT             shift and go to state 48
    PLUS            shift and go to state 20
    MINUS           shift and go to state 17
    XOR             shift and go to state 67
    LPAREN          shift and go to state 69
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 72
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 87

    PExprNoParen                   shift and go to state 49
    FuncType                       shift and go to state 177
    Prec4Expr_                     shift and go to state 30
    Prec3Expr_                     shift and go to state 14
    Literal                        shift and go to state 41
    FuncLiteral                    shift and go to state 13
    ConvType                       shift and go to state 15
    ExprOrType                     shift and go to state 448
    NonExprType                    shift and go to state 180
    OtherType                      shift and go to state 181
    InterfaceType                  shift and go to state 53
    Prec5Expr_                     shift and go to state 22
    CompType                       shift and go to state 55
    StructType                     shift and go to state 56
    Name                           shift and go to state 64
    Prec2Expr_                     shift and go to state 23
    FuncLiteralDecl                shift and go to state 24
    Expr                           shift and go to state 182
    PseudoCall                     shift and go to state 39
    UExpr                          shift and go to state 42
    ForCompExpr                    shift and go to state 43
    PExpr                          shift and go to state 59

state 490

    (225) CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 225 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 225 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 491

    (210) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr . RBRACK

    RBRACK          shift and go to state 497


state 492

    (75) ElseIf -> ELSE IF IfHeader . LoopBody
    (63) LoopBody -> . LBRACE StmtList RBRACE

    LBRACE          shift and go to state 267

    LoopBody                       shift and go to state 498

state 493

    (116) StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 116 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 116 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)


state 494

    (115) StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 115 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 115 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)


state 495

    (56) Case -> CASE ExprOrTypeList EQUAL Expr . COLON
    (253) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 499
    OROR            shift and go to state 161


state 496

    (57) Case -> CASE ExprOrTypeList COLONEQ Expr . COLON
    (253) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 500
    OROR            shift and go to state 161


state 497

    (210) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    CASE            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DEFAULT         reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 210 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)


state 498

    (75) ElseIf -> ELSE IF IfHeader LoopBody .

    ELSE            reduce using rule 75 (ElseIf -> ELSE IF IfHeader LoopBody .)
    SEMICOL         reduce using rule 75 (ElseIf -> ELSE IF IfHeader LoopBody .)
    RBRACE          reduce using rule 75 (ElseIf -> ELSE IF IfHeader LoopBody .)
    CASE            reduce using rule 75 (ElseIf -> ELSE IF IfHeader LoopBody .)
    DEFAULT         reduce using rule 75 (ElseIf -> ELSE IF IfHeader LoopBody .)


state 499

    (56) Case -> CASE ExprOrTypeList EQUAL Expr COLON .

    LBRACE          reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANT        reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    VAR             reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TYPE            reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FALLTHROUGH     reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    BREAK           reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONTINUE        reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    DEFER           reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    GOTO            reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    RETURN          reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FOR             reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SWITCH          reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IF              reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IDENTIFIER      reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    AMPERS          reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    NOT             reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TIMES           reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    PLUS            reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MINUS           reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    XOR             reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LPAREN          reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTEGER         reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FLOAT           reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRING          reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LBRACK          reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FUNCTION        reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MAP             reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRUCT          reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTERFACE       reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SEMICOL         reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    RBRACE          reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CASE            reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    DEFAULT         reduce using rule 56 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)


state 500

    (57) Case -> CASE ExprOrTypeList COLONEQ Expr COLON .

    LBRACE          reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANT        reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    VAR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TYPE            reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FALLTHROUGH     reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    BREAK           reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONTINUE        reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    DEFER           reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    GOTO            reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    RETURN          reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FOR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SWITCH          reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IF              reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IDENTIFIER      reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    AMPERS          reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    NOT             reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TIMES           reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    PLUS            reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MINUS           reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    XOR             reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LPAREN          reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTEGER         reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FLOAT           reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRING          reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LBRACK          reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FUNCTION        reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MAP             reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRUCT          reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTERFACE       reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SEMICOL         reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    RBRACE          reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CASE            reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    DEFAULT         reduce using rule 57 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)

