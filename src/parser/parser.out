Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GO

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
Rule 3     PackageClause -> PACKAGE IDENTIFIER SEMICOL
Rule 4     Imports -> <empty>
Rule 5     Imports -> Imports cmtlist Import SEMICOL
Rule 6     Import -> IMPORT ImportStmt
Rule 7     Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN
Rule 8     Import -> IMPORT LPAREN RPAREN
Rule 9     ImportStmt -> ImportHere STRING
Rule 10    ImportStmtList -> ImportStmt
Rule 11    ImportStmtList -> ImportStmtList SEMICOL ImportStmt
Rule 12    ImportHere -> <empty>
Rule 13    ImportHere -> IDENTIFIER
Rule 14    ImportHere -> DOT
Rule 15    Declaration -> CommonDecl
Rule 16    Declaration -> FuncDecl
Rule 17    Declaration -> NonDeclStmt
Rule 18    CommonDecl -> CONSTANT ConstDecl
Rule 19    CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN
Rule 20    CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
Rule 21    CommonDecl -> CONSTANT LPAREN RPAREN
Rule 22    CommonDecl -> VAR VarDecl
Rule 23    CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN
Rule 24    CommonDecl -> VAR LPAREN RPAREN
Rule 25    CommonDecl -> TYPE TypeDecl
Rule 26    CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN
Rule 27    CommonDecl -> TYPE LPAREN RPAREN
Rule 28    VarDecl -> DeclNameList NType
Rule 29    VarDecl -> DeclNameList NType EQUAL ExprList
Rule 30    VarDecl -> DeclNameList EQUAL ExprList
Rule 31    ConstDecl -> DeclNameList NType EQUAL ExprList
Rule 32    ConstDecl -> DeclNameList EQUAL ExprList
Rule 33    ConstDecl1 -> ConstDecl
Rule 34    ConstDecl1 -> DeclNameList NType
Rule 35    ConstDecl1 -> DeclNameList
Rule 36    TypeDeclName -> IDENTIFIER
Rule 37    TypeDecl -> TypeDeclName NType
Rule 38    SimpleStmt -> Expr
Rule 39    SimpleStmt -> Expr PLUSEQ Expr
Rule 40    SimpleStmt -> Expr MINUSEQ Expr
Rule 41    SimpleStmt -> Expr TIMESEQ Expr
Rule 42    SimpleStmt -> Expr DIVIDEEQ Expr
Rule 43    SimpleStmt -> Expr MODEQ Expr
Rule 44    SimpleStmt -> Expr OREQ Expr
Rule 45    SimpleStmt -> Expr AMPEQ Expr
Rule 46    SimpleStmt -> Expr CAREQ Expr
Rule 47    SimpleStmt -> Expr SHL_ASSIGN Expr
Rule 48    SimpleStmt -> Expr SHR_ASSIGN Expr
Rule 49    SimpleStmt -> Expr AMPCAREQ Expr
Rule 50    SimpleStmt -> ExprList EQUAL ExprList
Rule 51    SimpleStmt -> ExprList COLONEQ ExprList
Rule 52    SimpleStmt -> Expr PLUSPLUS
Rule 53    SimpleStmt -> Expr MINUSMIN
Rule 54    Case -> CASE ExprOrTypeList COLON
Rule 55    Case -> CASE ExprOrTypeList EQUAL Expr COLON
Rule 56    Case -> CASE ExprOrTypeList COLONEQ Expr COLON
Rule 57    Case -> DEFAULT COLON
Rule 58    CompoundStmt -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 59    CaseBlock -> Case StmtList
Rule 60    CaseBlockList -> <empty>
Rule 61    CaseBlockList -> CaseBlockList CaseBlock
Rule 62    LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 63    RangeStmt -> ExprList EQUAL RANGE Expr
Rule 64    RangeStmt -> ExprList COLONEQ RANGE Expr
Rule 65    RangeStmt -> RANGE Expr
Rule 66    ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
Rule 67    ForHeader -> OSimpleStmt
Rule 68    ForHeader -> RangeStmt
Rule 69    ForBody -> ForHeader LoopBody
Rule 70    ForStmt -> FOR ForBody
Rule 71    IfHeader -> OSimpleStmt
Rule 72    IfHeader -> OSimpleStmt SEMICOL OSimpleStmt
Rule 73    IfStmt -> IF IfHeader LoopBody ElseIfList Else
Rule 74    ElseIf -> ELSE IF IfHeader LoopBody
Rule 75    ElseIfList -> <empty>
Rule 76    ElseIfList -> ElseIfList ElseIf
Rule 77    Else -> <empty>
Rule 78    Else -> ELSE CompoundStmt
Rule 79    NType -> FuncType
Rule 80    NType -> OtherType
Rule 81    NType -> PtrType
Rule 82    NType -> DotName
Rule 83    NType -> LPAREN NType RPAREN
Rule 84    NType -> TYPE
Rule 85    NonExprType -> FuncType
Rule 86    NonExprType -> OtherType
Rule 87    NonExprType -> TIMES NonExprType
Rule 88    OtherType -> LBRACK OExpr RBRACK NType
Rule 89    OtherType -> StructType
Rule 90    OtherType -> InterfaceType
Rule 91    OtherType -> ChannelType
Rule 92    ChannelType -> CHAN TYPE
Rule 93    ChannelType -> CHAN LMINUS TYPE
Rule 94    ChannelType -> LMINUS CHAN TYPE
Rule 95    StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE
Rule 96    StructType -> STRUCT LBRACE RBRACE
Rule 97    InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
Rule 98    InterfaceType -> INTERFACE LBRACE RBRACE
Rule 99    FuncDecl -> FUNCTION FuncDecl_ FuncBody
Rule 100   FuncDecl_ -> IDENTIFIER ArgList FuncRes
Rule 101   FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
Rule 102   FuncType -> FUNCTION ArgList FuncRes
Rule 103   ArgList -> LPAREN OArgTypeListOComma RPAREN
Rule 104   ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN
Rule 105   FuncBody -> <empty>
Rule 106   FuncBody -> LBRACE cmtlist StmtList cmtlist RBRACE
Rule 107   FuncRes -> <empty>
Rule 108   FuncRes -> FuncRetType
Rule 109   FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT
Rule 110   StructDeclList -> StructDecl
Rule 111   StructDeclList -> StructDeclList SEMICOL StructDecl
Rule 112   InterfaceDeclList -> InterfaceDecl
Rule 113   InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl
Rule 114   StructDecl -> NewNameList NType OLiteral
Rule 115   StructDecl -> Embed OLiteral
Rule 116   StructDecl -> LPAREN Embed RPAREN OLiteral
Rule 117   StructDecl -> TIMES Embed OLiteral
Rule 118   StructDecl -> LPAREN TIMES Embed RPAREN OLiteral
Rule 119   StructDecl -> TIMES LPAREN Embed RPAREN OLiteral
Rule 120   InterfaceDecl -> NewName InDecl
Rule 121   InterfaceDecl -> IDENTIFIER
Rule 122   InterfaceDecl -> LPAREN IDENTIFIER RPAREN
Rule 123   InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes
Rule 124   LabelName -> NewName
Rule 125   NewName -> IDENTIFIER
Rule 126   PtrType -> TIMES NType
Rule 127   FuncRetType -> FuncType
Rule 128   FuncRetType -> OtherType
Rule 129   FuncRetType -> PtrType
Rule 130   FuncRetType -> DotName
Rule 131   FuncRetType -> TYPE
Rule 132   DotName -> Name
Rule 133   DotName -> Name DOT IDENTIFIER
Rule 134   OComma -> <empty>
Rule 135   OComma -> COMMA
Rule 136   OSemi -> <empty>
Rule 137   OSemi -> SEMICOL
Rule 138   OSimpleStmt -> <empty>
Rule 139   OSimpleStmt -> SimpleStmt
Rule 140   ONewName -> <empty>
Rule 141   ONewName -> NewName
Rule 142   OExpr -> <empty>
Rule 143   OExpr -> Expr
Rule 144   OExprList -> <empty>
Rule 145   OExprList -> ExprList
Rule 146   FuncLiteralDecl -> FuncType
Rule 147   FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
Rule 148   ExprList -> Expr
Rule 149   ExprList -> ExprList COMMA Expr
Rule 150   ExprOrTypeList -> ExprOrType
Rule 151   ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType
Rule 152   OLiteral -> <empty>
Rule 153   OLiteral -> Literal
Rule 154   Literal -> INTEGER
Rule 155   Literal -> FLOAT
Rule 156   Literal -> STRING
Rule 157   Embed -> IDENTIFIER
Rule 158   DeclList -> <empty>
Rule 159   DeclList -> DeclList cmtlist Declaration SEMICOL
Rule 160   VarDeclList -> VarDecl
Rule 161   VarDeclList -> VarDeclList SEMICOL VarDecl
Rule 162   ConstDeclList -> ConstDecl1
Rule 163   ConstDeclList -> ConstDeclList SEMICOL ConstDecl1
Rule 164   TypeDeclList -> TypeDecl
Rule 165   TypeDeclList -> TypeDeclList SEMICOL TypeDecl
Rule 166   DeclNameList -> DeclName
Rule 167   DeclNameList -> DeclNameList COMMA DeclName
Rule 168   StmtList -> Stmt SEMICOL
Rule 169   StmtList -> StmtList cmtlist Stmt SEMICOL
Rule 170   NewNameList -> NewName
Rule 171   NewNameList -> NewNameList COMMA NewName
Rule 172   KeyvalList -> Keyval
Rule 173   KeyvalList -> BareCompLitExpr
Rule 174   KeyvalList -> KeyvalList COMMA Keyval
Rule 175   KeyvalList -> KeyvalList COMMA BareCompLitExpr
Rule 176   BracedKeyvalList -> <empty>
Rule 177   BracedKeyvalList -> KeyvalList OComma
Rule 178   DeclName -> IDENTIFIER
Rule 179   Name -> IDENTIFIER
Rule 180   ArgType -> NameOrType
Rule 181   ArgType -> IDENTIFIER NameOrType
Rule 182   ArgType -> IDENTIFIER DotDotDot
Rule 183   ArgType -> DotDotDot
Rule 184   ArgTypeList -> ArgType
Rule 185   ArgTypeList -> ArgTypeList COMMA ArgType
Rule 186   OArgTypeListOComma -> <empty>
Rule 187   OArgTypeListOComma -> ArgTypeList OComma
Rule 188   Stmt -> <empty>
Rule 189   Stmt -> CompoundStmt
Rule 190   Stmt -> CommonDecl
Rule 191   Stmt -> NonDeclStmt
Rule 192   NonDeclStmt -> SimpleStmt
Rule 193   NonDeclStmt -> ForStmt
Rule 194   NonDeclStmt -> SwitchStmt
Rule 195   NonDeclStmt -> IfStmt
Rule 196   NonDeclStmt -> LabelName COLON Stmt
Rule 197   NonDeclStmt -> FALLTHROUGH
Rule 198   NonDeclStmt -> BREAK ONewName
Rule 199   NonDeclStmt -> CONTINUE ONewName
Rule 200   NonDeclStmt -> GOTO NewName
Rule 201   NonDeclStmt -> RETURN OExprList
Rule 202   DotDotDot -> DDD
Rule 203   DotDotDot -> DDD NType
Rule 204   PExpr -> PExprNoParen
Rule 205   PExpr -> LPAREN ExprOrType RPAREN
Rule 206   PExprNoParen -> Literal
Rule 207   PExprNoParen -> Name
Rule 208   PExprNoParen -> PExpr DOT IDENTIFIER
Rule 209   PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN
Rule 210   PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN
Rule 211   PExprNoParen -> PExpr LBRACK Expr RBRACK
Rule 212   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK
Rule 213   PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
Rule 214   PExprNoParen -> PseudoCall
Rule 215   PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
Rule 216   PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 217   PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 218   PExprNoParen -> FuncLiteral
Rule 219   PExprNoParen -> ForCompExpr
Rule 220   ConvType -> FuncType
Rule 221   ConvType -> OtherType
Rule 222   CompType -> OtherType
Rule 223   Keyval -> Expr COLON CompLitExpr
Rule 224   BareCompLitExpr -> Expr
Rule 225   BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 226   CompLitExpr -> Expr
Rule 227   CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
Rule 228   ExprOrType -> Expr
Rule 229   ExprOrType -> NonExprType
Rule 230   NameOrType -> NType
Rule 231   SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE
Rule 232   Prec5Expr_ -> UExpr
Rule 233   Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr
Rule 234   Prec5Expr_ -> Prec5Expr_ MOD UExpr
Rule 235   Prec5Expr_ -> Prec5Expr_ SHL UExpr
Rule 236   Prec5Expr_ -> Prec5Expr_ SHR UExpr
Rule 237   Prec5Expr_ -> Prec5Expr_ AMPERS UExpr
Rule 238   Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr
Rule 239   Prec5Expr_ -> Prec5Expr_ TIMES UExpr
Rule 240   Prec4Expr_ -> Prec5Expr_
Rule 241   Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_
Rule 242   Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_
Rule 243   Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_
Rule 244   Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_
Rule 245   Prec3Expr_ -> Prec4Expr_
Rule 246   Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_
Rule 247   Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_
Rule 248   Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_
Rule 249   Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_
Rule 250   Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_
Rule 251   Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_
Rule 252   Prec2Expr_ -> Prec3Expr_
Rule 253   Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_
Rule 254   Expr -> Prec2Expr_
Rule 255   Expr -> Expr OROR Prec2Expr_
Rule 256   Expr -> CONSTANTS
Rule 257   Expr -> Chexpr
Rule 258   Expr -> Arrayexp
Rule 259   Chexpr -> LMINUS IDENTIFIER
Rule 260   Arrayexp -> OtherType LBRACE ExprList RBRACE
Rule 261   UExpr -> PExpr
Rule 262   UExpr -> AMPERS UExpr
Rule 263   UExpr -> NOT UExpr
Rule 264   UExpr -> TIMES UExpr
Rule 265   UExpr -> PLUS UExpr
Rule 266   UExpr -> MINUS UExpr
Rule 267   UExpr -> XOR UExpr
Rule 268   ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK
Rule 269   PseudoCall -> PExpr LPAREN RPAREN
Rule 270   PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN
Rule 271   PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
Rule 272   cmtlist -> <empty>
Rule 273   cmtlist -> cmtlist COMMENT

Terminals, with rules where they appear

AMPAMP               : 253
AMPCAR               : 238
AMPCAREQ             : 49
AMPEQ                : 45
AMPERS               : 237 262
BREAK                : 198
CAREQ                : 46
CASE                 : 54 55 56
CHAN                 : 92 93 94
COLON                : 54 55 56 57 196 212 213 213 223
COLONEQ              : 51 56 64
COMMA                : 135 149 151 167 171 174 175 185
COMMENT              : 273
CONSTANT             : 18 19 20 21
CONSTANTS            : 256
CONTINUE             : 199
DDD                  : 202 203 271
DEFAULT              : 57
DIVIDE               : 233
DIVIDEEQ             : 42
DOT                  : 14 133 208 209 210
ELSE                 : 74 78
EQEQ                 : 246
EQUAL                : 29 30 31 32 50 55 63
FALLTHROUGH          : 197
FLOAT                : 155
FOR                  : 70
FUNCTION             : 99 102
GEQ                  : 249
GO                   : 
GOTO                 : 200
GREAT                : 250
IDENTIFIER           : 3 13 36 100 101 121 122 125 133 157 178 179 181 182 208 259
IF                   : 73 74
IMPORT               : 6 7 8
INTEGER              : 154
INTERFACE            : 97 98
LBRACE               : 58 62 95 96 97 98 106 147 231 260
LBRACK               : 88 211 212 213 268
LEFT_ANGLE           : 215
LEFT_LEFT            : 216 217 225 227
LEFT_OR              : 101 109
LEQ                  : 248
LESS                 : 251
LMINUS               : 93 94 259
LPAREN               : 7 8 19 20 21 23 24 26 27 83 103 104 116 118 119 122 123 205 209 210 269 270 271
MINUS                : 242 266
MINUSEQ              : 40
MINUSMIN             : 53
MOD                  : 234
MODEQ                : 43
NOT                  : 263
NOTEQ                : 247
OR                   : 244
OREQ                 : 44
OROR                 : 255
OR_RIGHT             : 101 109
PACKAGE              : 3
PIPE                 : 268
PLUS                 : 241 265
PLUSEQ               : 39
PLUSPLUS             : 52
RANGE                : 63 64 65
RBRACE               : 58 62 95 96 97 98 106 147 231 260
RBRACK               : 88 211 212 213 268
RETURN               : 201
RIGHT_ANGLE          : 215
RIGHT_RIGHT          : 216 217 225 227
RPAREN               : 7 8 19 20 21 23 24 26 27 83 103 104 116 118 119 122 123 205 209 210 269 270 271
SEMICOL              : 3 5 11 20 66 66 72 111 113 137 159 161 163 165 168 169
SHL                  : 235
SHL_ASSIGN           : 47
SHR                  : 236
SHR_ASSIGN           : 48
STRING               : 9 156
STRUCT               : 95 96
SWITCH               : 231
TIMES                : 87 117 118 119 126 239 264
TIMESEQ              : 41
TYPE                 : 25 26 27 84 92 93 94 131 210
VAR                  : 22 23 24
XOR                  : 243 267
error                : 

Nonterminals, with rules where they appear

ArgList              : 100 101 102 104
ArgType              : 184 185
ArgTypeList          : 185 187
Arrayexp             : 258
BareCompLitExpr      : 173 175
BracedKeyvalList     : 216 217 225 227
Case                 : 59
CaseBlock            : 61
CaseBlockList        : 61 231
ChannelType          : 91
Chexpr               : 257
CommonDecl           : 15 190
CompLitExpr          : 223
CompType             : 216
CompoundStmt         : 78 189
ConstDecl            : 18 19 20 33
ConstDecl1           : 162 163
ConstDeclList        : 20 163
ConvType             : 215
DeclList             : 2 159
DeclName             : 166 167
DeclNameList         : 28 29 30 31 32 34 35 167
Declaration          : 159
DotDotDot            : 182 183
DotName              : 82 130
Else                 : 73
ElseIf               : 76
ElseIfList           : 73 76
Embed                : 115 116 117 118 119
Expr                 : 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 52 53 55 56 63 64 65 143 148 149 211 215 223 224 226 228 255 268
ExprList             : 29 30 31 32 50 50 51 51 63 64 145 149 260
ExprOrType           : 150 151 205 209
ExprOrTypeList       : 54 55 56 151 270 271
ForBody              : 70
ForCompExpr          : 219
ForHeader            : 69
ForStmt              : 193
FuncBody             : 99
FuncDecl             : 16
FuncDecl_            : 99
FuncLiteral          : 218
FuncLiteralDecl      : 147
FuncRes              : 100 101 102 123
FuncRetType          : 108
FuncType             : 79 85 127 146 220
IfHeader             : 73 74 231
IfStmt               : 195
Import               : 5
ImportHere           : 9
ImportStmt           : 6 10 11
ImportStmtList       : 7 11
Imports              : 2 5
InDecl               : 120
InterfaceDecl        : 112 113
InterfaceDeclList    : 97 113
InterfaceType        : 90
Keyval               : 172 174
KeyvalList           : 174 175 177
LabelName            : 196
Literal              : 153 206
LoopBody             : 69 73 74
NType                : 28 29 31 34 37 83 88 114 126 203 230
Name                 : 132 133 207
NameOrType           : 180 181
NewName              : 120 124 141 170 171 200
NewNameList          : 114 171
NonDeclStmt          : 17 191
NonExprType          : 87 229
OArgTypeListOComma   : 101 103 104 109 123
OComma               : 177 187 215 270 271
OExpr                : 88 212 212 213 213 213
OExprList            : 201
OLiteral             : 114 115 116 117 118 119
ONewName             : 198 199
OSemi                : 7 19 20 23 26 95 97
OSimpleStmt          : 66 66 66 67 71 72 72
OtherType            : 80 86 128 221 222 260
PExpr                : 208 209 210 211 212 213 217 261 269 270 271
PExprNoParen         : 204
PackageClause        : 2
Prec2Expr_           : 253 254 255
Prec3Expr_           : 246 247 248 249 250 251 252 253
Prec4Expr_           : 241 242 243 244 245 246 247 248 249 250 251
Prec5Expr_           : 233 234 235 236 237 238 239 240 241 242 243 244
PseudoCall           : 214
PtrType              : 81 129
RangeStmt            : 68 268
SimpleStmt           : 139 192
SourceFile           : 1
Stmt                 : 168 169 196
StmtList             : 58 59 62 106 147 169
StructDecl           : 110 111
StructDeclList       : 95 111
StructType           : 89
SwitchStmt           : 194
TypeDecl             : 25 164 165
TypeDeclList         : 26 165
TypeDeclName         : 37
UExpr                : 232 233 234 235 236 237 238 239 262 263 264 265 266 267
VarDecl              : 22 160 161
VarDeclList          : 23 161
cmtlist              : 2 2 2 2 5 58 58 62 62 106 106 147 147 159 169 273
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (2) SourceFile -> . cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 272 (cmtlist -> .)
    PACKAGE         reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 1
    SourceFile                     shift and go to state 2
    start                          shift and go to state 3

state 1

    (2) SourceFile -> cmtlist . PackageClause cmtlist Imports cmtlist DeclList cmtlist
    (273) cmtlist -> cmtlist . COMMENT
    (3) PackageClause -> . PACKAGE IDENTIFIER SEMICOL

    COMMENT         shift and go to state 4
    PACKAGE         shift and go to state 6

    PackageClause                  shift and go to state 5

state 2

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 3

    (0) S' -> start .



state 4

    (273) cmtlist -> cmtlist COMMENT .

    COMMENT         reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    LBRACE          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    CONSTANT        reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    VAR             reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    TYPE            reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    FALLTHROUGH     reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    BREAK           reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    CONTINUE        reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    GOTO            reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    RETURN          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    FOR             reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    SWITCH          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    IF              reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    CONSTANTS       reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    IDENTIFIER      reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    LMINUS          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    LBRACK          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    STRUCT          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    INTERFACE       reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    CHAN            reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    AMPERS          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    NOT             reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    TIMES           reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    PLUS            reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    MINUS           reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    XOR             reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    LPAREN          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    INTEGER         reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    FLOAT           reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    STRING          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    FUNCTION        reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    SEMICOL         reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    $end            reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    PACKAGE         reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    RBRACE          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)
    IMPORT          reduce using rule 273 (cmtlist -> cmtlist COMMENT .)


state 5

    (2) SourceFile -> cmtlist PackageClause . cmtlist Imports cmtlist DeclList cmtlist
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 272 (cmtlist -> .)
    IMPORT          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    $end            reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 7

state 6

    (3) PackageClause -> PACKAGE . IDENTIFIER SEMICOL

    IDENTIFIER      shift and go to state 8


state 7

    (2) SourceFile -> cmtlist PackageClause cmtlist . Imports cmtlist DeclList cmtlist
    (273) cmtlist -> cmtlist . COMMENT
    (4) Imports -> .
    (5) Imports -> . Imports cmtlist Import SEMICOL

  ! shift/reduce conflict for COMMENT resolved as shift
    COMMENT         shift and go to state 4
    IMPORT          reduce using rule 4 (Imports -> .)
    CONSTANT        reduce using rule 4 (Imports -> .)
    VAR             reduce using rule 4 (Imports -> .)
    TYPE            reduce using rule 4 (Imports -> .)
    FUNCTION        reduce using rule 4 (Imports -> .)
    FALLTHROUGH     reduce using rule 4 (Imports -> .)
    BREAK           reduce using rule 4 (Imports -> .)
    CONTINUE        reduce using rule 4 (Imports -> .)
    GOTO            reduce using rule 4 (Imports -> .)
    RETURN          reduce using rule 4 (Imports -> .)
    FOR             reduce using rule 4 (Imports -> .)
    SWITCH          reduce using rule 4 (Imports -> .)
    IF              reduce using rule 4 (Imports -> .)
    CONSTANTS       reduce using rule 4 (Imports -> .)
    IDENTIFIER      reduce using rule 4 (Imports -> .)
    LMINUS          reduce using rule 4 (Imports -> .)
    LBRACK          reduce using rule 4 (Imports -> .)
    STRUCT          reduce using rule 4 (Imports -> .)
    INTERFACE       reduce using rule 4 (Imports -> .)
    CHAN            reduce using rule 4 (Imports -> .)
    AMPERS          reduce using rule 4 (Imports -> .)
    NOT             reduce using rule 4 (Imports -> .)
    TIMES           reduce using rule 4 (Imports -> .)
    PLUS            reduce using rule 4 (Imports -> .)
    MINUS           reduce using rule 4 (Imports -> .)
    XOR             reduce using rule 4 (Imports -> .)
    LPAREN          reduce using rule 4 (Imports -> .)
    INTEGER         reduce using rule 4 (Imports -> .)
    FLOAT           reduce using rule 4 (Imports -> .)
    STRING          reduce using rule 4 (Imports -> .)
    $end            reduce using rule 4 (Imports -> .)

  ! COMMENT         [ reduce using rule 4 (Imports -> .) ]

    Imports                        shift and go to state 9

state 8

    (3) PackageClause -> PACKAGE IDENTIFIER . SEMICOL

    SEMICOL         shift and go to state 10


state 9

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports . cmtlist DeclList cmtlist
    (5) Imports -> Imports . cmtlist Import SEMICOL
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 272 (cmtlist -> .)
    IMPORT          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    $end            reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 11

state 10

    (3) PackageClause -> PACKAGE IDENTIFIER SEMICOL .

    COMMENT         reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IMPORT          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANT        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    VAR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TYPE            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FUNCTION        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FALLTHROUGH     reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    BREAK           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONTINUE        reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    GOTO            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    RETURN          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FOR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    SWITCH          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IF              reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CONSTANTS       reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    IDENTIFIER      reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LMINUS          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LBRACK          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRUCT          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTERFACE       reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    CHAN            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    AMPERS          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    NOT             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    TIMES           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    PLUS            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    MINUS           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    XOR             reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    LPAREN          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    INTEGER         reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    FLOAT           reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    STRING          reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)
    $end            reduce using rule 3 (PackageClause -> PACKAGE IDENTIFIER SEMICOL .)


state 11

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist . DeclList cmtlist
    (5) Imports -> Imports cmtlist . Import SEMICOL
    (273) cmtlist -> cmtlist . COMMENT
    (158) DeclList -> .
    (159) DeclList -> . DeclList cmtlist Declaration SEMICOL
    (6) Import -> . IMPORT ImportStmt
    (7) Import -> . IMPORT LPAREN ImportStmtList OSemi RPAREN
    (8) Import -> . IMPORT LPAREN RPAREN

  ! shift/reduce conflict for COMMENT resolved as shift
    COMMENT         shift and go to state 4
    CONSTANT        reduce using rule 158 (DeclList -> .)
    VAR             reduce using rule 158 (DeclList -> .)
    TYPE            reduce using rule 158 (DeclList -> .)
    FUNCTION        reduce using rule 158 (DeclList -> .)
    FALLTHROUGH     reduce using rule 158 (DeclList -> .)
    BREAK           reduce using rule 158 (DeclList -> .)
    CONTINUE        reduce using rule 158 (DeclList -> .)
    GOTO            reduce using rule 158 (DeclList -> .)
    RETURN          reduce using rule 158 (DeclList -> .)
    FOR             reduce using rule 158 (DeclList -> .)
    SWITCH          reduce using rule 158 (DeclList -> .)
    IF              reduce using rule 158 (DeclList -> .)
    CONSTANTS       reduce using rule 158 (DeclList -> .)
    IDENTIFIER      reduce using rule 158 (DeclList -> .)
    LMINUS          reduce using rule 158 (DeclList -> .)
    LBRACK          reduce using rule 158 (DeclList -> .)
    STRUCT          reduce using rule 158 (DeclList -> .)
    INTERFACE       reduce using rule 158 (DeclList -> .)
    CHAN            reduce using rule 158 (DeclList -> .)
    AMPERS          reduce using rule 158 (DeclList -> .)
    NOT             reduce using rule 158 (DeclList -> .)
    TIMES           reduce using rule 158 (DeclList -> .)
    PLUS            reduce using rule 158 (DeclList -> .)
    MINUS           reduce using rule 158 (DeclList -> .)
    XOR             reduce using rule 158 (DeclList -> .)
    LPAREN          reduce using rule 158 (DeclList -> .)
    INTEGER         reduce using rule 158 (DeclList -> .)
    FLOAT           reduce using rule 158 (DeclList -> .)
    STRING          reduce using rule 158 (DeclList -> .)
    $end            reduce using rule 158 (DeclList -> .)
    IMPORT          shift and go to state 13

  ! COMMENT         [ reduce using rule 158 (DeclList -> .) ]

    DeclList                       shift and go to state 12
    Import                         shift and go to state 14

state 12

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList . cmtlist
    (159) DeclList -> DeclList . cmtlist Declaration SEMICOL
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    $end            reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 15

state 13

    (6) Import -> IMPORT . ImportStmt
    (7) Import -> IMPORT . LPAREN ImportStmtList OSemi RPAREN
    (8) Import -> IMPORT . LPAREN RPAREN
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> .
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT

    LPAREN          shift and go to state 18
    STRING          reduce using rule 12 (ImportHere -> .)
    IDENTIFIER      shift and go to state 17
    DOT             shift and go to state 20

    ImportHere                     shift and go to state 16
    ImportStmt                     shift and go to state 19

state 14

    (5) Imports -> Imports cmtlist Import . SEMICOL

    SEMICOL         shift and go to state 21


state 15

    (2) SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .
    (159) DeclList -> DeclList cmtlist . Declaration SEMICOL
    (273) cmtlist -> cmtlist . COMMENT
    (15) Declaration -> . CommonDecl
    (16) Declaration -> . FuncDecl
    (17) Declaration -> . NonDeclStmt
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (99) FuncDecl -> . FUNCTION FuncDecl_ FuncBody
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    $end            reduce using rule 2 (SourceFile -> cmtlist PackageClause cmtlist Imports cmtlist DeclList cmtlist .)
    COMMENT         shift and go to state 4
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FUNCTION        shift and go to state 47
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    CommonDecl                     shift and go to state 40
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    FuncDecl                       shift and go to state 43
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Declaration                    shift and go to state 64
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NonDeclStmt                    shift and go to state 77
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    FuncLiteralDecl                shift and go to state 33
    Prec5Expr_                     shift and go to state 30
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22

state 16

    (9) ImportStmt -> ImportHere . STRING

    STRING          shift and go to state 85


state 17

    (13) ImportHere -> IDENTIFIER .

    STRING          reduce using rule 13 (ImportHere -> IDENTIFIER .)


state 18

    (7) Import -> IMPORT LPAREN . ImportStmtList OSemi RPAREN
    (8) Import -> IMPORT LPAREN . RPAREN
    (10) ImportStmtList -> . ImportStmt
    (11) ImportStmtList -> . ImportStmtList SEMICOL ImportStmt
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> .
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT

    RPAREN          shift and go to state 86
    STRING          reduce using rule 12 (ImportHere -> .)
    IDENTIFIER      shift and go to state 17
    DOT             shift and go to state 20

    ImportHere                     shift and go to state 16
    ImportStmt                     shift and go to state 88
    ImportStmtList                 shift and go to state 87

state 19

    (6) Import -> IMPORT ImportStmt .

    SEMICOL         reduce using rule 6 (Import -> IMPORT ImportStmt .)


state 20

    (14) ImportHere -> DOT .

    STRING          reduce using rule 14 (ImportHere -> DOT .)


state 21

    (5) Imports -> Imports cmtlist Import SEMICOL .

    COMMENT         reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    IMPORT          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANT        reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    VAR             reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    TYPE            reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    FUNCTION        reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    FALLTHROUGH     reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    BREAK           reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    CONTINUE        reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    GOTO            reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    RETURN          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    FOR             reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    SWITCH          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    IF              reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    CONSTANTS       reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    IDENTIFIER      reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    LMINUS          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    LBRACK          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    STRUCT          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    INTERFACE       reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    CHAN            reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    AMPERS          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    NOT             reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    TIMES           reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    PLUS            reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    MINUS           reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    XOR             reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    LPAREN          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    INTEGER         reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    FLOAT           reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    STRING          reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)
    $end            reduce using rule 5 (Imports -> Imports cmtlist Import SEMICOL .)


state 22

    (218) PExprNoParen -> FuncLiteral .

    DOT             reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    LBRACK          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    LEFT_LEFT       reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    LPAREN          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    DIVIDE          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    MOD             reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    SHL             reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    SHR             reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    AMPERS          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    AMPCAR          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    TIMES           reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    PLUS            reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    MINUS           reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    XOR             reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    OR              reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    EQEQ            reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    NOTEQ           reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    LEQ             reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    GEQ             reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    GREAT           reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    LESS            reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    AMPAMP          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    PLUSEQ          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    MINUSEQ         reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    TIMESEQ         reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    DIVIDEEQ        reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    MODEQ           reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    OREQ            reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    AMPEQ           reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    CAREQ           reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    SHL_ASSIGN      reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    SHR_ASSIGN      reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    AMPCAREQ        reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    PLUSPLUS        reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    MINUSMIN        reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    OROR            reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    SEMICOL         reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    EQUAL           reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    COLONEQ         reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    COMMA           reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    LBRACE          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    PIPE            reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    RBRACK          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    RPAREN          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    RIGHT_ANGLE     reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    RBRACE          reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    COLON           reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    RIGHT_RIGHT     reduce using rule 218 (PExprNoParen -> FuncLiteral .)
    DDD             reduce using rule 218 (PExprNoParen -> FuncLiteral .)


state 23

    (252) Prec2Expr_ -> Prec3Expr_ .
    (246) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (247) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (249) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (250) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (251) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    COLON           reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    OROR            reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    COMMA           reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    LBRACE          reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACK          reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSEQ          reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSEQ         reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    TIMESEQ         reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    MODEQ           reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    OREQ            reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    AMPEQ           reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    CAREQ           reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    AMPCAREQ        reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    PLUSPLUS        reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    MINUSMIN        reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    SEMICOL         reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    EQUAL           reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    COLONEQ         reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    PIPE            reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    RPAREN          reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    RBRACE          reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    DDD             reduce using rule 252 (Prec2Expr_ -> Prec3Expr_ .)
    EQEQ            shift and go to state 91
    NOTEQ           shift and go to state 94
    LEQ             shift and go to state 90
    GEQ             shift and go to state 89
    GREAT           shift and go to state 93
    LESS            shift and go to state 92


state 24

    (215) PExprNoParen -> ConvType . LEFT_ANGLE Expr OComma RIGHT_ANGLE

    LEFT_ANGLE      shift and go to state 95


state 25

    (195) NonDeclStmt -> IfStmt .

    SEMICOL         reduce using rule 195 (NonDeclStmt -> IfStmt .)


state 26

    (257) Expr -> Chexpr .

    PLUSEQ          reduce using rule 257 (Expr -> Chexpr .)
    MINUSEQ         reduce using rule 257 (Expr -> Chexpr .)
    TIMESEQ         reduce using rule 257 (Expr -> Chexpr .)
    DIVIDEEQ        reduce using rule 257 (Expr -> Chexpr .)
    MODEQ           reduce using rule 257 (Expr -> Chexpr .)
    OREQ            reduce using rule 257 (Expr -> Chexpr .)
    AMPEQ           reduce using rule 257 (Expr -> Chexpr .)
    CAREQ           reduce using rule 257 (Expr -> Chexpr .)
    SHL_ASSIGN      reduce using rule 257 (Expr -> Chexpr .)
    SHR_ASSIGN      reduce using rule 257 (Expr -> Chexpr .)
    AMPCAREQ        reduce using rule 257 (Expr -> Chexpr .)
    PLUSPLUS        reduce using rule 257 (Expr -> Chexpr .)
    MINUSMIN        reduce using rule 257 (Expr -> Chexpr .)
    OROR            reduce using rule 257 (Expr -> Chexpr .)
    SEMICOL         reduce using rule 257 (Expr -> Chexpr .)
    EQUAL           reduce using rule 257 (Expr -> Chexpr .)
    COLONEQ         reduce using rule 257 (Expr -> Chexpr .)
    COMMA           reduce using rule 257 (Expr -> Chexpr .)
    RIGHT_ANGLE     reduce using rule 257 (Expr -> Chexpr .)
    DDD             reduce using rule 257 (Expr -> Chexpr .)
    RPAREN          reduce using rule 257 (Expr -> Chexpr .)
    RBRACK          reduce using rule 257 (Expr -> Chexpr .)
    COLON           reduce using rule 257 (Expr -> Chexpr .)
    LBRACE          reduce using rule 257 (Expr -> Chexpr .)
    PIPE            reduce using rule 257 (Expr -> Chexpr .)
    RIGHT_RIGHT     reduce using rule 257 (Expr -> Chexpr .)
    RBRACE          reduce using rule 257 (Expr -> Chexpr .)


state 27

    (197) NonDeclStmt -> FALLTHROUGH .

    SEMICOL         reduce using rule 197 (NonDeclStmt -> FALLTHROUGH .)


state 28

    (90) OtherType -> InterfaceType .

    LBRACE          reduce using rule 90 (OtherType -> InterfaceType .)
    LEFT_ANGLE      reduce using rule 90 (OtherType -> InterfaceType .)
    LEFT_LEFT       reduce using rule 90 (OtherType -> InterfaceType .)
    RPAREN          reduce using rule 90 (OtherType -> InterfaceType .)
    EQUAL           reduce using rule 90 (OtherType -> InterfaceType .)
    SEMICOL         reduce using rule 90 (OtherType -> InterfaceType .)
    COMMA           reduce using rule 90 (OtherType -> InterfaceType .)
    OR_RIGHT        reduce using rule 90 (OtherType -> InterfaceType .)
    DDD             reduce using rule 90 (OtherType -> InterfaceType .)
    COLON           reduce using rule 90 (OtherType -> InterfaceType .)
    COLONEQ         reduce using rule 90 (OtherType -> InterfaceType .)
    INTEGER         reduce using rule 90 (OtherType -> InterfaceType .)
    FLOAT           reduce using rule 90 (OtherType -> InterfaceType .)
    STRING          reduce using rule 90 (OtherType -> InterfaceType .)
    RBRACE          reduce using rule 90 (OtherType -> InterfaceType .)


state 29

    (196) NonDeclStmt -> LabelName . COLON Stmt

    COLON           shift and go to state 96


state 30

    (240) Prec4Expr_ -> Prec5Expr_ .
    (233) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (238) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (239) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    MINUS           reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    XOR             reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    OR              reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    EQEQ            reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    NOTEQ           reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    LEQ             reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    GEQ             reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    GREAT           reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    LESS            reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    AMPAMP          reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    OROR            reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    SEMICOL         reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    LBRACE          reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSEQ          reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSEQ         reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    TIMESEQ         reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    MODEQ           reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    OREQ            reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    AMPEQ           reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    CAREQ           reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    AMPCAREQ        reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    PLUSPLUS        reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    MINUSMIN        reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    EQUAL           reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    COLONEQ         reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    COMMA           reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    PIPE            reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACK          reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    RPAREN          reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    RBRACE          reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    COLON           reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    DDD             reduce using rule 240 (Prec4Expr_ -> Prec5Expr_ .)
    DIVIDE          shift and go to state 98
    MOD             shift and go to state 103
    SHL             shift and go to state 102
    SHR             shift and go to state 97
    AMPERS          shift and go to state 100
    AMPCAR          shift and go to state 99
    TIMES           shift and go to state 101


state 31

    (259) Chexpr -> LMINUS . IDENTIFIER
    (94) ChannelType -> LMINUS . CHAN TYPE

    IDENTIFIER      shift and go to state 104
    CHAN            shift and go to state 105


state 32

    (254) Expr -> Prec2Expr_ .
    (253) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    PLUSEQ          reduce using rule 254 (Expr -> Prec2Expr_ .)
    MINUSEQ         reduce using rule 254 (Expr -> Prec2Expr_ .)
    TIMESEQ         reduce using rule 254 (Expr -> Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 254 (Expr -> Prec2Expr_ .)
    MODEQ           reduce using rule 254 (Expr -> Prec2Expr_ .)
    OREQ            reduce using rule 254 (Expr -> Prec2Expr_ .)
    AMPEQ           reduce using rule 254 (Expr -> Prec2Expr_ .)
    CAREQ           reduce using rule 254 (Expr -> Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 254 (Expr -> Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 254 (Expr -> Prec2Expr_ .)
    AMPCAREQ        reduce using rule 254 (Expr -> Prec2Expr_ .)
    PLUSPLUS        reduce using rule 254 (Expr -> Prec2Expr_ .)
    MINUSMIN        reduce using rule 254 (Expr -> Prec2Expr_ .)
    OROR            reduce using rule 254 (Expr -> Prec2Expr_ .)
    SEMICOL         reduce using rule 254 (Expr -> Prec2Expr_ .)
    EQUAL           reduce using rule 254 (Expr -> Prec2Expr_ .)
    COLONEQ         reduce using rule 254 (Expr -> Prec2Expr_ .)
    COMMA           reduce using rule 254 (Expr -> Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 254 (Expr -> Prec2Expr_ .)
    DDD             reduce using rule 254 (Expr -> Prec2Expr_ .)
    RPAREN          reduce using rule 254 (Expr -> Prec2Expr_ .)
    RBRACK          reduce using rule 254 (Expr -> Prec2Expr_ .)
    COLON           reduce using rule 254 (Expr -> Prec2Expr_ .)
    LBRACE          reduce using rule 254 (Expr -> Prec2Expr_ .)
    PIPE            reduce using rule 254 (Expr -> Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 254 (Expr -> Prec2Expr_ .)
    RBRACE          reduce using rule 254 (Expr -> Prec2Expr_ .)
    AMPAMP          shift and go to state 106


state 33

    (147) FuncLiteral -> FuncLiteralDecl . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 107


state 34

    (154) Literal -> INTEGER .

    DOT             reduce using rule 154 (Literal -> INTEGER .)
    LBRACK          reduce using rule 154 (Literal -> INTEGER .)
    LEFT_LEFT       reduce using rule 154 (Literal -> INTEGER .)
    LPAREN          reduce using rule 154 (Literal -> INTEGER .)
    DIVIDE          reduce using rule 154 (Literal -> INTEGER .)
    MOD             reduce using rule 154 (Literal -> INTEGER .)
    SHL             reduce using rule 154 (Literal -> INTEGER .)
    SHR             reduce using rule 154 (Literal -> INTEGER .)
    AMPERS          reduce using rule 154 (Literal -> INTEGER .)
    AMPCAR          reduce using rule 154 (Literal -> INTEGER .)
    TIMES           reduce using rule 154 (Literal -> INTEGER .)
    PLUS            reduce using rule 154 (Literal -> INTEGER .)
    MINUS           reduce using rule 154 (Literal -> INTEGER .)
    XOR             reduce using rule 154 (Literal -> INTEGER .)
    OR              reduce using rule 154 (Literal -> INTEGER .)
    EQEQ            reduce using rule 154 (Literal -> INTEGER .)
    NOTEQ           reduce using rule 154 (Literal -> INTEGER .)
    LEQ             reduce using rule 154 (Literal -> INTEGER .)
    GEQ             reduce using rule 154 (Literal -> INTEGER .)
    GREAT           reduce using rule 154 (Literal -> INTEGER .)
    LESS            reduce using rule 154 (Literal -> INTEGER .)
    AMPAMP          reduce using rule 154 (Literal -> INTEGER .)
    PLUSEQ          reduce using rule 154 (Literal -> INTEGER .)
    MINUSEQ         reduce using rule 154 (Literal -> INTEGER .)
    TIMESEQ         reduce using rule 154 (Literal -> INTEGER .)
    DIVIDEEQ        reduce using rule 154 (Literal -> INTEGER .)
    MODEQ           reduce using rule 154 (Literal -> INTEGER .)
    OREQ            reduce using rule 154 (Literal -> INTEGER .)
    AMPEQ           reduce using rule 154 (Literal -> INTEGER .)
    CAREQ           reduce using rule 154 (Literal -> INTEGER .)
    SHL_ASSIGN      reduce using rule 154 (Literal -> INTEGER .)
    SHR_ASSIGN      reduce using rule 154 (Literal -> INTEGER .)
    AMPCAREQ        reduce using rule 154 (Literal -> INTEGER .)
    PLUSPLUS        reduce using rule 154 (Literal -> INTEGER .)
    MINUSMIN        reduce using rule 154 (Literal -> INTEGER .)
    OROR            reduce using rule 154 (Literal -> INTEGER .)
    SEMICOL         reduce using rule 154 (Literal -> INTEGER .)
    EQUAL           reduce using rule 154 (Literal -> INTEGER .)
    COLONEQ         reduce using rule 154 (Literal -> INTEGER .)
    COMMA           reduce using rule 154 (Literal -> INTEGER .)
    LBRACE          reduce using rule 154 (Literal -> INTEGER .)
    PIPE            reduce using rule 154 (Literal -> INTEGER .)
    RBRACK          reduce using rule 154 (Literal -> INTEGER .)
    RPAREN          reduce using rule 154 (Literal -> INTEGER .)
    RIGHT_ANGLE     reduce using rule 154 (Literal -> INTEGER .)
    RBRACE          reduce using rule 154 (Literal -> INTEGER .)
    COLON           reduce using rule 154 (Literal -> INTEGER .)
    RIGHT_RIGHT     reduce using rule 154 (Literal -> INTEGER .)
    DDD             reduce using rule 154 (Literal -> INTEGER .)


state 35

    (22) CommonDecl -> VAR . VarDecl
    (23) CommonDecl -> VAR . LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> VAR . LPAREN RPAREN
    (28) VarDecl -> . DeclNameList NType
    (29) VarDecl -> . DeclNameList NType EQUAL ExprList
    (30) VarDecl -> . DeclNameList EQUAL ExprList
    (166) DeclNameList -> . DeclName
    (167) DeclNameList -> . DeclNameList COMMA DeclName
    (178) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 111
    IDENTIFIER      shift and go to state 108

    DeclName                       shift and go to state 109
    VarDecl                        shift and go to state 110
    DeclNameList                   shift and go to state 112

state 36

    (50) SimpleStmt -> ExprList . EQUAL ExprList
    (51) SimpleStmt -> ExprList . COLONEQ ExprList
    (149) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 115
    COLONEQ         shift and go to state 114
    COMMA           shift and go to state 113


state 37

    (18) CommonDecl -> CONSTANT . ConstDecl
    (19) CommonDecl -> CONSTANT . LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> CONSTANT . LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> CONSTANT . LPAREN RPAREN
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (166) DeclNameList -> . DeclName
    (167) DeclNameList -> . DeclNameList COMMA DeclName
    (178) DeclName -> . IDENTIFIER

    LPAREN          shift and go to state 116
    IDENTIFIER      shift and go to state 108

    DeclName                       shift and go to state 109
    ConstDecl                      shift and go to state 118
    DeclNameList                   shift and go to state 117

state 38

    (262) UExpr -> AMPERS . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 123
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 39

    (245) Prec3Expr_ -> Prec4Expr_ .
    (241) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (244) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    NOTEQ           reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    LEQ             reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    GEQ             reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    GREAT           reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    LESS            reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    AMPAMP          reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSEQ          reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSEQ         reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    TIMESEQ         reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    MODEQ           reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    OREQ            reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    AMPEQ           reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    CAREQ           reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    AMPCAREQ        reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    PLUSPLUS        reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    MINUSMIN        reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    OROR            reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    SEMICOL         reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    EQUAL           reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    COLONEQ         reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    COMMA           reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    DDD             reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    RPAREN          reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    LBRACE          reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACK          reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    COLON           reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    RBRACE          reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    PIPE            reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 245 (Prec3Expr_ -> Prec4Expr_ .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    XOR             shift and go to state 125
    OR              shift and go to state 126


state 40

    (15) Declaration -> CommonDecl .

    SEMICOL         reduce using rule 15 (Declaration -> CommonDecl .)


state 41

    (266) UExpr -> MINUS . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 129
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 42

    (156) Literal -> STRING .

    DOT             reduce using rule 156 (Literal -> STRING .)
    LBRACK          reduce using rule 156 (Literal -> STRING .)
    LEFT_LEFT       reduce using rule 156 (Literal -> STRING .)
    LPAREN          reduce using rule 156 (Literal -> STRING .)
    DIVIDE          reduce using rule 156 (Literal -> STRING .)
    MOD             reduce using rule 156 (Literal -> STRING .)
    SHL             reduce using rule 156 (Literal -> STRING .)
    SHR             reduce using rule 156 (Literal -> STRING .)
    AMPERS          reduce using rule 156 (Literal -> STRING .)
    AMPCAR          reduce using rule 156 (Literal -> STRING .)
    TIMES           reduce using rule 156 (Literal -> STRING .)
    PLUS            reduce using rule 156 (Literal -> STRING .)
    MINUS           reduce using rule 156 (Literal -> STRING .)
    XOR             reduce using rule 156 (Literal -> STRING .)
    OR              reduce using rule 156 (Literal -> STRING .)
    EQEQ            reduce using rule 156 (Literal -> STRING .)
    NOTEQ           reduce using rule 156 (Literal -> STRING .)
    LEQ             reduce using rule 156 (Literal -> STRING .)
    GEQ             reduce using rule 156 (Literal -> STRING .)
    GREAT           reduce using rule 156 (Literal -> STRING .)
    LESS            reduce using rule 156 (Literal -> STRING .)
    AMPAMP          reduce using rule 156 (Literal -> STRING .)
    PLUSEQ          reduce using rule 156 (Literal -> STRING .)
    MINUSEQ         reduce using rule 156 (Literal -> STRING .)
    TIMESEQ         reduce using rule 156 (Literal -> STRING .)
    DIVIDEEQ        reduce using rule 156 (Literal -> STRING .)
    MODEQ           reduce using rule 156 (Literal -> STRING .)
    OREQ            reduce using rule 156 (Literal -> STRING .)
    AMPEQ           reduce using rule 156 (Literal -> STRING .)
    CAREQ           reduce using rule 156 (Literal -> STRING .)
    SHL_ASSIGN      reduce using rule 156 (Literal -> STRING .)
    SHR_ASSIGN      reduce using rule 156 (Literal -> STRING .)
    AMPCAREQ        reduce using rule 156 (Literal -> STRING .)
    PLUSPLUS        reduce using rule 156 (Literal -> STRING .)
    MINUSMIN        reduce using rule 156 (Literal -> STRING .)
    OROR            reduce using rule 156 (Literal -> STRING .)
    SEMICOL         reduce using rule 156 (Literal -> STRING .)
    EQUAL           reduce using rule 156 (Literal -> STRING .)
    COLONEQ         reduce using rule 156 (Literal -> STRING .)
    COMMA           reduce using rule 156 (Literal -> STRING .)
    LBRACE          reduce using rule 156 (Literal -> STRING .)
    PIPE            reduce using rule 156 (Literal -> STRING .)
    RBRACK          reduce using rule 156 (Literal -> STRING .)
    RPAREN          reduce using rule 156 (Literal -> STRING .)
    RIGHT_ANGLE     reduce using rule 156 (Literal -> STRING .)
    RBRACE          reduce using rule 156 (Literal -> STRING .)
    COLON           reduce using rule 156 (Literal -> STRING .)
    RIGHT_RIGHT     reduce using rule 156 (Literal -> STRING .)
    DDD             reduce using rule 156 (Literal -> STRING .)


state 43

    (16) Declaration -> FuncDecl .

    SEMICOL         reduce using rule 16 (Declaration -> FuncDecl .)


state 44

    (260) Arrayexp -> OtherType . LBRACE ExprList RBRACE
    (221) ConvType -> OtherType .
    (222) CompType -> OtherType .

    LBRACE          shift and go to state 130
    LEFT_ANGLE      reduce using rule 221 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 222 (CompType -> OtherType .)


state 45

    (124) LabelName -> NewName .

    COLON           reduce using rule 124 (LabelName -> NewName .)


state 46

    (91) OtherType -> ChannelType .

    LBRACE          reduce using rule 91 (OtherType -> ChannelType .)
    LEFT_ANGLE      reduce using rule 91 (OtherType -> ChannelType .)
    LEFT_LEFT       reduce using rule 91 (OtherType -> ChannelType .)
    RPAREN          reduce using rule 91 (OtherType -> ChannelType .)
    EQUAL           reduce using rule 91 (OtherType -> ChannelType .)
    SEMICOL         reduce using rule 91 (OtherType -> ChannelType .)
    COMMA           reduce using rule 91 (OtherType -> ChannelType .)
    OR_RIGHT        reduce using rule 91 (OtherType -> ChannelType .)
    DDD             reduce using rule 91 (OtherType -> ChannelType .)
    COLON           reduce using rule 91 (OtherType -> ChannelType .)
    COLONEQ         reduce using rule 91 (OtherType -> ChannelType .)
    INTEGER         reduce using rule 91 (OtherType -> ChannelType .)
    FLOAT           reduce using rule 91 (OtherType -> ChannelType .)
    STRING          reduce using rule 91 (OtherType -> ChannelType .)
    RBRACE          reduce using rule 91 (OtherType -> ChannelType .)


state 47

    (99) FuncDecl -> FUNCTION . FuncDecl_ FuncBody
    (102) FuncType -> FUNCTION . ArgList FuncRes
    (100) FuncDecl_ -> . IDENTIFIER ArgList FuncRes
    (101) FuncDecl_ -> . LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (103) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (104) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    IDENTIFIER      shift and go to state 135
    LEFT_OR         shift and go to state 134
    LPAREN          shift and go to state 133

    FuncDecl_                      shift and go to state 132
    ArgList                        shift and go to state 131

state 48

    (70) ForStmt -> FOR . ForBody
    (69) ForBody -> . ForHeader LoopBody
    (66) ForHeader -> . OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (67) ForHeader -> . OSimpleStmt
    (68) ForHeader -> . RangeStmt
    (138) OSimpleStmt -> .
    (139) OSimpleStmt -> . SimpleStmt
    (63) RangeStmt -> . ExprList EQUAL RANGE Expr
    (64) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (65) RangeStmt -> . RANGE Expr
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 138 (OSimpleStmt -> .)
    LBRACE          reduce using rule 138 (OSimpleStmt -> .)
    RANGE           shift and go to state 140
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    ForBody                        shift and go to state 139
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 141
    OSimpleStmt                    shift and go to state 136
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    ForHeader                      shift and go to state 142
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 143
    PseudoCall                     shift and go to state 49
    RangeStmt                      shift and go to state 137
    ExprList                       shift and go to state 138
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 49

    (214) PExprNoParen -> PseudoCall .

    DOT             reduce using rule 214 (PExprNoParen -> PseudoCall .)
    LBRACK          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    LEFT_LEFT       reduce using rule 214 (PExprNoParen -> PseudoCall .)
    LPAREN          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    DIVIDE          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    MOD             reduce using rule 214 (PExprNoParen -> PseudoCall .)
    SHL             reduce using rule 214 (PExprNoParen -> PseudoCall .)
    SHR             reduce using rule 214 (PExprNoParen -> PseudoCall .)
    AMPERS          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    AMPCAR          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    TIMES           reduce using rule 214 (PExprNoParen -> PseudoCall .)
    PLUS            reduce using rule 214 (PExprNoParen -> PseudoCall .)
    MINUS           reduce using rule 214 (PExprNoParen -> PseudoCall .)
    XOR             reduce using rule 214 (PExprNoParen -> PseudoCall .)
    OR              reduce using rule 214 (PExprNoParen -> PseudoCall .)
    EQEQ            reduce using rule 214 (PExprNoParen -> PseudoCall .)
    NOTEQ           reduce using rule 214 (PExprNoParen -> PseudoCall .)
    LEQ             reduce using rule 214 (PExprNoParen -> PseudoCall .)
    GEQ             reduce using rule 214 (PExprNoParen -> PseudoCall .)
    GREAT           reduce using rule 214 (PExprNoParen -> PseudoCall .)
    LESS            reduce using rule 214 (PExprNoParen -> PseudoCall .)
    AMPAMP          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    PLUSEQ          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    MINUSEQ         reduce using rule 214 (PExprNoParen -> PseudoCall .)
    TIMESEQ         reduce using rule 214 (PExprNoParen -> PseudoCall .)
    DIVIDEEQ        reduce using rule 214 (PExprNoParen -> PseudoCall .)
    MODEQ           reduce using rule 214 (PExprNoParen -> PseudoCall .)
    OREQ            reduce using rule 214 (PExprNoParen -> PseudoCall .)
    AMPEQ           reduce using rule 214 (PExprNoParen -> PseudoCall .)
    CAREQ           reduce using rule 214 (PExprNoParen -> PseudoCall .)
    SHL_ASSIGN      reduce using rule 214 (PExprNoParen -> PseudoCall .)
    SHR_ASSIGN      reduce using rule 214 (PExprNoParen -> PseudoCall .)
    AMPCAREQ        reduce using rule 214 (PExprNoParen -> PseudoCall .)
    PLUSPLUS        reduce using rule 214 (PExprNoParen -> PseudoCall .)
    MINUSMIN        reduce using rule 214 (PExprNoParen -> PseudoCall .)
    OROR            reduce using rule 214 (PExprNoParen -> PseudoCall .)
    SEMICOL         reduce using rule 214 (PExprNoParen -> PseudoCall .)
    EQUAL           reduce using rule 214 (PExprNoParen -> PseudoCall .)
    COLONEQ         reduce using rule 214 (PExprNoParen -> PseudoCall .)
    COMMA           reduce using rule 214 (PExprNoParen -> PseudoCall .)
    LBRACE          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    PIPE            reduce using rule 214 (PExprNoParen -> PseudoCall .)
    RBRACK          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    RPAREN          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    RIGHT_ANGLE     reduce using rule 214 (PExprNoParen -> PseudoCall .)
    RBRACE          reduce using rule 214 (PExprNoParen -> PseudoCall .)
    COLON           reduce using rule 214 (PExprNoParen -> PseudoCall .)
    RIGHT_RIGHT     reduce using rule 214 (PExprNoParen -> PseudoCall .)
    DDD             reduce using rule 214 (PExprNoParen -> PseudoCall .)


state 50

    (97) InterfaceType -> INTERFACE . LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> INTERFACE . LBRACE RBRACE

    LBRACE          shift and go to state 144


state 51

    (206) PExprNoParen -> Literal .

    DOT             reduce using rule 206 (PExprNoParen -> Literal .)
    LBRACK          reduce using rule 206 (PExprNoParen -> Literal .)
    LEFT_LEFT       reduce using rule 206 (PExprNoParen -> Literal .)
    LPAREN          reduce using rule 206 (PExprNoParen -> Literal .)
    DIVIDE          reduce using rule 206 (PExprNoParen -> Literal .)
    MOD             reduce using rule 206 (PExprNoParen -> Literal .)
    SHL             reduce using rule 206 (PExprNoParen -> Literal .)
    SHR             reduce using rule 206 (PExprNoParen -> Literal .)
    AMPERS          reduce using rule 206 (PExprNoParen -> Literal .)
    AMPCAR          reduce using rule 206 (PExprNoParen -> Literal .)
    TIMES           reduce using rule 206 (PExprNoParen -> Literal .)
    PLUS            reduce using rule 206 (PExprNoParen -> Literal .)
    MINUS           reduce using rule 206 (PExprNoParen -> Literal .)
    XOR             reduce using rule 206 (PExprNoParen -> Literal .)
    OR              reduce using rule 206 (PExprNoParen -> Literal .)
    EQEQ            reduce using rule 206 (PExprNoParen -> Literal .)
    NOTEQ           reduce using rule 206 (PExprNoParen -> Literal .)
    LEQ             reduce using rule 206 (PExprNoParen -> Literal .)
    GEQ             reduce using rule 206 (PExprNoParen -> Literal .)
    GREAT           reduce using rule 206 (PExprNoParen -> Literal .)
    LESS            reduce using rule 206 (PExprNoParen -> Literal .)
    AMPAMP          reduce using rule 206 (PExprNoParen -> Literal .)
    PLUSEQ          reduce using rule 206 (PExprNoParen -> Literal .)
    MINUSEQ         reduce using rule 206 (PExprNoParen -> Literal .)
    TIMESEQ         reduce using rule 206 (PExprNoParen -> Literal .)
    DIVIDEEQ        reduce using rule 206 (PExprNoParen -> Literal .)
    MODEQ           reduce using rule 206 (PExprNoParen -> Literal .)
    OREQ            reduce using rule 206 (PExprNoParen -> Literal .)
    AMPEQ           reduce using rule 206 (PExprNoParen -> Literal .)
    CAREQ           reduce using rule 206 (PExprNoParen -> Literal .)
    SHL_ASSIGN      reduce using rule 206 (PExprNoParen -> Literal .)
    SHR_ASSIGN      reduce using rule 206 (PExprNoParen -> Literal .)
    AMPCAREQ        reduce using rule 206 (PExprNoParen -> Literal .)
    PLUSPLUS        reduce using rule 206 (PExprNoParen -> Literal .)
    MINUSMIN        reduce using rule 206 (PExprNoParen -> Literal .)
    OROR            reduce using rule 206 (PExprNoParen -> Literal .)
    SEMICOL         reduce using rule 206 (PExprNoParen -> Literal .)
    EQUAL           reduce using rule 206 (PExprNoParen -> Literal .)
    COLONEQ         reduce using rule 206 (PExprNoParen -> Literal .)
    COMMA           reduce using rule 206 (PExprNoParen -> Literal .)
    LBRACE          reduce using rule 206 (PExprNoParen -> Literal .)
    PIPE            reduce using rule 206 (PExprNoParen -> Literal .)
    RBRACK          reduce using rule 206 (PExprNoParen -> Literal .)
    RPAREN          reduce using rule 206 (PExprNoParen -> Literal .)
    RIGHT_ANGLE     reduce using rule 206 (PExprNoParen -> Literal .)
    RBRACE          reduce using rule 206 (PExprNoParen -> Literal .)
    COLON           reduce using rule 206 (PExprNoParen -> Literal .)
    RIGHT_RIGHT     reduce using rule 206 (PExprNoParen -> Literal .)
    DDD             reduce using rule 206 (PExprNoParen -> Literal .)


state 52

    (232) Prec5Expr_ -> UExpr .

    DIVIDE          reduce using rule 232 (Prec5Expr_ -> UExpr .)
    MOD             reduce using rule 232 (Prec5Expr_ -> UExpr .)
    SHL             reduce using rule 232 (Prec5Expr_ -> UExpr .)
    SHR             reduce using rule 232 (Prec5Expr_ -> UExpr .)
    AMPERS          reduce using rule 232 (Prec5Expr_ -> UExpr .)
    AMPCAR          reduce using rule 232 (Prec5Expr_ -> UExpr .)
    TIMES           reduce using rule 232 (Prec5Expr_ -> UExpr .)
    PLUS            reduce using rule 232 (Prec5Expr_ -> UExpr .)
    MINUS           reduce using rule 232 (Prec5Expr_ -> UExpr .)
    XOR             reduce using rule 232 (Prec5Expr_ -> UExpr .)
    OR              reduce using rule 232 (Prec5Expr_ -> UExpr .)
    EQEQ            reduce using rule 232 (Prec5Expr_ -> UExpr .)
    NOTEQ           reduce using rule 232 (Prec5Expr_ -> UExpr .)
    LEQ             reduce using rule 232 (Prec5Expr_ -> UExpr .)
    GEQ             reduce using rule 232 (Prec5Expr_ -> UExpr .)
    GREAT           reduce using rule 232 (Prec5Expr_ -> UExpr .)
    LESS            reduce using rule 232 (Prec5Expr_ -> UExpr .)
    AMPAMP          reduce using rule 232 (Prec5Expr_ -> UExpr .)
    COLON           reduce using rule 232 (Prec5Expr_ -> UExpr .)
    OROR            reduce using rule 232 (Prec5Expr_ -> UExpr .)
    PLUSEQ          reduce using rule 232 (Prec5Expr_ -> UExpr .)
    MINUSEQ         reduce using rule 232 (Prec5Expr_ -> UExpr .)
    TIMESEQ         reduce using rule 232 (Prec5Expr_ -> UExpr .)
    DIVIDEEQ        reduce using rule 232 (Prec5Expr_ -> UExpr .)
    MODEQ           reduce using rule 232 (Prec5Expr_ -> UExpr .)
    OREQ            reduce using rule 232 (Prec5Expr_ -> UExpr .)
    AMPEQ           reduce using rule 232 (Prec5Expr_ -> UExpr .)
    CAREQ           reduce using rule 232 (Prec5Expr_ -> UExpr .)
    SHL_ASSIGN      reduce using rule 232 (Prec5Expr_ -> UExpr .)
    SHR_ASSIGN      reduce using rule 232 (Prec5Expr_ -> UExpr .)
    AMPCAREQ        reduce using rule 232 (Prec5Expr_ -> UExpr .)
    PLUSPLUS        reduce using rule 232 (Prec5Expr_ -> UExpr .)
    MINUSMIN        reduce using rule 232 (Prec5Expr_ -> UExpr .)
    SEMICOL         reduce using rule 232 (Prec5Expr_ -> UExpr .)
    EQUAL           reduce using rule 232 (Prec5Expr_ -> UExpr .)
    COLONEQ         reduce using rule 232 (Prec5Expr_ -> UExpr .)
    COMMA           reduce using rule 232 (Prec5Expr_ -> UExpr .)
    LBRACE          reduce using rule 232 (Prec5Expr_ -> UExpr .)
    PIPE            reduce using rule 232 (Prec5Expr_ -> UExpr .)
    RBRACK          reduce using rule 232 (Prec5Expr_ -> UExpr .)
    RPAREN          reduce using rule 232 (Prec5Expr_ -> UExpr .)
    RIGHT_ANGLE     reduce using rule 232 (Prec5Expr_ -> UExpr .)
    RBRACE          reduce using rule 232 (Prec5Expr_ -> UExpr .)
    RIGHT_RIGHT     reduce using rule 232 (Prec5Expr_ -> UExpr .)
    DDD             reduce using rule 232 (Prec5Expr_ -> UExpr .)


state 53

    (219) PExprNoParen -> ForCompExpr .

    DOT             reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    LBRACK          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    LEFT_LEFT       reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    LPAREN          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    DIVIDE          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    MOD             reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    SHL             reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    SHR             reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    AMPERS          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    AMPCAR          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    TIMES           reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    PLUS            reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    MINUS           reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    XOR             reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    OR              reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    EQEQ            reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    NOTEQ           reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    LEQ             reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    GEQ             reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    GREAT           reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    LESS            reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    AMPAMP          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    PLUSEQ          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    MINUSEQ         reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    TIMESEQ         reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    DIVIDEEQ        reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    MODEQ           reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    OREQ            reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    AMPEQ           reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    CAREQ           reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    SHL_ASSIGN      reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    SHR_ASSIGN      reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    AMPCAREQ        reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    PLUSPLUS        reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    MINUSMIN        reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    OROR            reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    SEMICOL         reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    EQUAL           reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    COLONEQ         reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    COMMA           reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    LBRACE          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    PIPE            reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    RBRACK          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    RPAREN          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    RIGHT_ANGLE     reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    RBRACE          reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    COLON           reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    RIGHT_RIGHT     reduce using rule 219 (PExprNoParen -> ForCompExpr .)
    DDD             reduce using rule 219 (PExprNoParen -> ForCompExpr .)


state 54

    (25) CommonDecl -> TYPE . TypeDecl
    (26) CommonDecl -> TYPE . LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> TYPE . LPAREN RPAREN
    (37) TypeDecl -> . TypeDeclName NType
    (36) TypeDeclName -> . IDENTIFIER

    LPAREN          shift and go to state 146
    IDENTIFIER      shift and go to state 148

    TypeDecl                       shift and go to state 145
    TypeDeclName                   shift and go to state 147

state 55

    (194) NonDeclStmt -> SwitchStmt .

    SEMICOL         reduce using rule 194 (NonDeclStmt -> SwitchStmt .)


state 56

    (88) OtherType -> LBRACK . OExpr RBRACK NType
    (268) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (142) OExpr -> .
    (143) OExpr -> . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 142 (OExpr -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 149
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 150
    PExpr                          shift and go to state 70

state 57

    (199) NonDeclStmt -> CONTINUE . ONewName
    (140) ONewName -> .
    (141) ONewName -> . NewName
    (125) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 140 (ONewName -> .)
    IDENTIFIER      shift and go to state 152

    NewName                        shift and go to state 151
    ONewName                       shift and go to state 153

state 58

    (263) UExpr -> NOT . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 154
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 59

    (256) Expr -> CONSTANTS .

    PLUSEQ          reduce using rule 256 (Expr -> CONSTANTS .)
    MINUSEQ         reduce using rule 256 (Expr -> CONSTANTS .)
    TIMESEQ         reduce using rule 256 (Expr -> CONSTANTS .)
    DIVIDEEQ        reduce using rule 256 (Expr -> CONSTANTS .)
    MODEQ           reduce using rule 256 (Expr -> CONSTANTS .)
    OREQ            reduce using rule 256 (Expr -> CONSTANTS .)
    AMPEQ           reduce using rule 256 (Expr -> CONSTANTS .)
    CAREQ           reduce using rule 256 (Expr -> CONSTANTS .)
    SHL_ASSIGN      reduce using rule 256 (Expr -> CONSTANTS .)
    SHR_ASSIGN      reduce using rule 256 (Expr -> CONSTANTS .)
    AMPCAREQ        reduce using rule 256 (Expr -> CONSTANTS .)
    PLUSPLUS        reduce using rule 256 (Expr -> CONSTANTS .)
    MINUSMIN        reduce using rule 256 (Expr -> CONSTANTS .)
    OROR            reduce using rule 256 (Expr -> CONSTANTS .)
    SEMICOL         reduce using rule 256 (Expr -> CONSTANTS .)
    EQUAL           reduce using rule 256 (Expr -> CONSTANTS .)
    COLONEQ         reduce using rule 256 (Expr -> CONSTANTS .)
    COMMA           reduce using rule 256 (Expr -> CONSTANTS .)
    RIGHT_ANGLE     reduce using rule 256 (Expr -> CONSTANTS .)
    DDD             reduce using rule 256 (Expr -> CONSTANTS .)
    RPAREN          reduce using rule 256 (Expr -> CONSTANTS .)
    RBRACK          reduce using rule 256 (Expr -> CONSTANTS .)
    COLON           reduce using rule 256 (Expr -> CONSTANTS .)
    LBRACE          reduce using rule 256 (Expr -> CONSTANTS .)
    PIPE            reduce using rule 256 (Expr -> CONSTANTS .)
    RIGHT_RIGHT     reduce using rule 256 (Expr -> CONSTANTS .)
    RBRACE          reduce using rule 256 (Expr -> CONSTANTS .)


state 60

    (204) PExpr -> PExprNoParen .

    DOT             reduce using rule 204 (PExpr -> PExprNoParen .)
    LBRACK          reduce using rule 204 (PExpr -> PExprNoParen .)
    LEFT_LEFT       reduce using rule 204 (PExpr -> PExprNoParen .)
    LPAREN          reduce using rule 204 (PExpr -> PExprNoParen .)
    DIVIDE          reduce using rule 204 (PExpr -> PExprNoParen .)
    MOD             reduce using rule 204 (PExpr -> PExprNoParen .)
    SHL             reduce using rule 204 (PExpr -> PExprNoParen .)
    SHR             reduce using rule 204 (PExpr -> PExprNoParen .)
    AMPERS          reduce using rule 204 (PExpr -> PExprNoParen .)
    AMPCAR          reduce using rule 204 (PExpr -> PExprNoParen .)
    TIMES           reduce using rule 204 (PExpr -> PExprNoParen .)
    PLUS            reduce using rule 204 (PExpr -> PExprNoParen .)
    MINUS           reduce using rule 204 (PExpr -> PExprNoParen .)
    XOR             reduce using rule 204 (PExpr -> PExprNoParen .)
    OR              reduce using rule 204 (PExpr -> PExprNoParen .)
    EQEQ            reduce using rule 204 (PExpr -> PExprNoParen .)
    NOTEQ           reduce using rule 204 (PExpr -> PExprNoParen .)
    LEQ             reduce using rule 204 (PExpr -> PExprNoParen .)
    GEQ             reduce using rule 204 (PExpr -> PExprNoParen .)
    GREAT           reduce using rule 204 (PExpr -> PExprNoParen .)
    LESS            reduce using rule 204 (PExpr -> PExprNoParen .)
    AMPAMP          reduce using rule 204 (PExpr -> PExprNoParen .)
    PLUSEQ          reduce using rule 204 (PExpr -> PExprNoParen .)
    MINUSEQ         reduce using rule 204 (PExpr -> PExprNoParen .)
    TIMESEQ         reduce using rule 204 (PExpr -> PExprNoParen .)
    DIVIDEEQ        reduce using rule 204 (PExpr -> PExprNoParen .)
    MODEQ           reduce using rule 204 (PExpr -> PExprNoParen .)
    OREQ            reduce using rule 204 (PExpr -> PExprNoParen .)
    AMPEQ           reduce using rule 204 (PExpr -> PExprNoParen .)
    CAREQ           reduce using rule 204 (PExpr -> PExprNoParen .)
    SHL_ASSIGN      reduce using rule 204 (PExpr -> PExprNoParen .)
    SHR_ASSIGN      reduce using rule 204 (PExpr -> PExprNoParen .)
    AMPCAREQ        reduce using rule 204 (PExpr -> PExprNoParen .)
    PLUSPLUS        reduce using rule 204 (PExpr -> PExprNoParen .)
    MINUSMIN        reduce using rule 204 (PExpr -> PExprNoParen .)
    OROR            reduce using rule 204 (PExpr -> PExprNoParen .)
    SEMICOL         reduce using rule 204 (PExpr -> PExprNoParen .)
    EQUAL           reduce using rule 204 (PExpr -> PExprNoParen .)
    COLONEQ         reduce using rule 204 (PExpr -> PExprNoParen .)
    COMMA           reduce using rule 204 (PExpr -> PExprNoParen .)
    LBRACE          reduce using rule 204 (PExpr -> PExprNoParen .)
    RBRACK          reduce using rule 204 (PExpr -> PExprNoParen .)
    RPAREN          reduce using rule 204 (PExpr -> PExprNoParen .)
    PIPE            reduce using rule 204 (PExpr -> PExprNoParen .)
    RIGHT_ANGLE     reduce using rule 204 (PExpr -> PExprNoParen .)
    RBRACE          reduce using rule 204 (PExpr -> PExprNoParen .)
    COLON           reduce using rule 204 (PExpr -> PExprNoParen .)
    RIGHT_RIGHT     reduce using rule 204 (PExpr -> PExprNoParen .)
    DDD             reduce using rule 204 (PExpr -> PExprNoParen .)


state 61

    (92) ChannelType -> CHAN . TYPE
    (93) ChannelType -> CHAN . LMINUS TYPE

    TYPE            shift and go to state 155
    LMINUS          shift and go to state 156


state 62

    (201) NonDeclStmt -> RETURN . OExprList
    (144) OExprList -> .
    (145) OExprList -> . ExprList
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 144 (OExprList -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 157
    OExprList                      shift and go to state 158
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 63

    (231) SwitchStmt -> SWITCH . IfHeader LBRACE CaseBlockList RBRACE
    (71) IfHeader -> . OSimpleStmt
    (72) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (138) OSimpleStmt -> .
    (139) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 138 (OSimpleStmt -> .)
    LBRACE          reduce using rule 138 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 141
    OSimpleStmt                    shift and go to state 160
    Prec3Expr_                     shift and go to state 23
    IfHeader                       shift and go to state 161
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Literal                        shift and go to state 51
    PExpr                          shift and go to state 70

state 64

    (159) DeclList -> DeclList cmtlist Declaration . SEMICOL

    SEMICOL         shift and go to state 162


state 65

    (265) UExpr -> PLUS . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 163
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 66

    (125) NewName -> IDENTIFIER .
    (179) Name -> IDENTIFIER .

    COLON           reduce using rule 125 (NewName -> IDENTIFIER .)
    DOT             reduce using rule 179 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 179 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 179 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 179 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 179 (Name -> IDENTIFIER .)
    MOD             reduce using rule 179 (Name -> IDENTIFIER .)
    SHL             reduce using rule 179 (Name -> IDENTIFIER .)
    SHR             reduce using rule 179 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 179 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 179 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 179 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 179 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 179 (Name -> IDENTIFIER .)
    XOR             reduce using rule 179 (Name -> IDENTIFIER .)
    OR              reduce using rule 179 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 179 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 179 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 179 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 179 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 179 (Name -> IDENTIFIER .)
    LESS            reduce using rule 179 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 179 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 179 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 179 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 179 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 179 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 179 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 179 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 179 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 179 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 179 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 179 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 179 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 179 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 179 (Name -> IDENTIFIER .)
    OROR            reduce using rule 179 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 179 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 179 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 179 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 179 (Name -> IDENTIFIER .)


state 67

    (216) PExprNoParen -> CompType . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT

    LEFT_LEFT       shift and go to state 164


state 68

    (89) OtherType -> StructType .

    LBRACE          reduce using rule 89 (OtherType -> StructType .)
    LEFT_ANGLE      reduce using rule 89 (OtherType -> StructType .)
    LEFT_LEFT       reduce using rule 89 (OtherType -> StructType .)
    RPAREN          reduce using rule 89 (OtherType -> StructType .)
    EQUAL           reduce using rule 89 (OtherType -> StructType .)
    SEMICOL         reduce using rule 89 (OtherType -> StructType .)
    COMMA           reduce using rule 89 (OtherType -> StructType .)
    OR_RIGHT        reduce using rule 89 (OtherType -> StructType .)
    DDD             reduce using rule 89 (OtherType -> StructType .)
    COLON           reduce using rule 89 (OtherType -> StructType .)
    COLONEQ         reduce using rule 89 (OtherType -> StructType .)
    INTEGER         reduce using rule 89 (OtherType -> StructType .)
    FLOAT           reduce using rule 89 (OtherType -> StructType .)
    STRING          reduce using rule 89 (OtherType -> StructType .)
    RBRACE          reduce using rule 89 (OtherType -> StructType .)


state 69

    (198) NonDeclStmt -> BREAK . ONewName
    (140) ONewName -> .
    (141) ONewName -> . NewName
    (125) NewName -> . IDENTIFIER

    SEMICOL         reduce using rule 140 (ONewName -> .)
    IDENTIFIER      shift and go to state 152

    NewName                        shift and go to state 151
    ONewName                       shift and go to state 165

state 70

    (261) UExpr -> PExpr .
    (208) PExprNoParen -> PExpr . DOT IDENTIFIER
    (209) PExprNoParen -> PExpr . DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> PExpr . DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> PExpr . LBRACK Expr RBRACK
    (212) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> PExpr . LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (217) PExprNoParen -> PExpr . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (269) PseudoCall -> PExpr . LPAREN RPAREN
    (270) PseudoCall -> PExpr . LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> PExpr . LPAREN ExprOrTypeList DDD OComma RPAREN

    DIVIDE          reduce using rule 261 (UExpr -> PExpr .)
    MOD             reduce using rule 261 (UExpr -> PExpr .)
    SHL             reduce using rule 261 (UExpr -> PExpr .)
    SHR             reduce using rule 261 (UExpr -> PExpr .)
    AMPERS          reduce using rule 261 (UExpr -> PExpr .)
    AMPCAR          reduce using rule 261 (UExpr -> PExpr .)
    TIMES           reduce using rule 261 (UExpr -> PExpr .)
    PLUS            reduce using rule 261 (UExpr -> PExpr .)
    MINUS           reduce using rule 261 (UExpr -> PExpr .)
    XOR             reduce using rule 261 (UExpr -> PExpr .)
    OR              reduce using rule 261 (UExpr -> PExpr .)
    EQEQ            reduce using rule 261 (UExpr -> PExpr .)
    NOTEQ           reduce using rule 261 (UExpr -> PExpr .)
    LEQ             reduce using rule 261 (UExpr -> PExpr .)
    GEQ             reduce using rule 261 (UExpr -> PExpr .)
    GREAT           reduce using rule 261 (UExpr -> PExpr .)
    LESS            reduce using rule 261 (UExpr -> PExpr .)
    AMPAMP          reduce using rule 261 (UExpr -> PExpr .)
    PLUSEQ          reduce using rule 261 (UExpr -> PExpr .)
    MINUSEQ         reduce using rule 261 (UExpr -> PExpr .)
    TIMESEQ         reduce using rule 261 (UExpr -> PExpr .)
    DIVIDEEQ        reduce using rule 261 (UExpr -> PExpr .)
    MODEQ           reduce using rule 261 (UExpr -> PExpr .)
    OREQ            reduce using rule 261 (UExpr -> PExpr .)
    AMPEQ           reduce using rule 261 (UExpr -> PExpr .)
    CAREQ           reduce using rule 261 (UExpr -> PExpr .)
    SHL_ASSIGN      reduce using rule 261 (UExpr -> PExpr .)
    SHR_ASSIGN      reduce using rule 261 (UExpr -> PExpr .)
    AMPCAREQ        reduce using rule 261 (UExpr -> PExpr .)
    PLUSPLUS        reduce using rule 261 (UExpr -> PExpr .)
    MINUSMIN        reduce using rule 261 (UExpr -> PExpr .)
    OROR            reduce using rule 261 (UExpr -> PExpr .)
    SEMICOL         reduce using rule 261 (UExpr -> PExpr .)
    EQUAL           reduce using rule 261 (UExpr -> PExpr .)
    COLONEQ         reduce using rule 261 (UExpr -> PExpr .)
    COMMA           reduce using rule 261 (UExpr -> PExpr .)
    LBRACE          reduce using rule 261 (UExpr -> PExpr .)
    PIPE            reduce using rule 261 (UExpr -> PExpr .)
    RBRACK          reduce using rule 261 (UExpr -> PExpr .)
    RPAREN          reduce using rule 261 (UExpr -> PExpr .)
    RIGHT_ANGLE     reduce using rule 261 (UExpr -> PExpr .)
    RBRACE          reduce using rule 261 (UExpr -> PExpr .)
    COLON           reduce using rule 261 (UExpr -> PExpr .)
    RIGHT_RIGHT     reduce using rule 261 (UExpr -> PExpr .)
    DDD             reduce using rule 261 (UExpr -> PExpr .)
    DOT             shift and go to state 169
    LBRACK          shift and go to state 166
    LEFT_LEFT       shift and go to state 168
    LPAREN          shift and go to state 167


state 71

    (220) ConvType -> FuncType .
    (146) FuncLiteralDecl -> FuncType .

    LEFT_ANGLE      reduce using rule 220 (ConvType -> FuncType .)
    LBRACE          reduce using rule 146 (FuncLiteralDecl -> FuncType .)


state 72

    (192) NonDeclStmt -> SimpleStmt .

    SEMICOL         reduce using rule 192 (NonDeclStmt -> SimpleStmt .)


state 73

    (193) NonDeclStmt -> ForStmt .

    SEMICOL         reduce using rule 193 (NonDeclStmt -> ForStmt .)


state 74

    (200) NonDeclStmt -> GOTO . NewName
    (125) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 152

    NewName                        shift and go to state 170

state 75

    (258) Expr -> Arrayexp .

    PLUSEQ          reduce using rule 258 (Expr -> Arrayexp .)
    MINUSEQ         reduce using rule 258 (Expr -> Arrayexp .)
    TIMESEQ         reduce using rule 258 (Expr -> Arrayexp .)
    DIVIDEEQ        reduce using rule 258 (Expr -> Arrayexp .)
    MODEQ           reduce using rule 258 (Expr -> Arrayexp .)
    OREQ            reduce using rule 258 (Expr -> Arrayexp .)
    AMPEQ           reduce using rule 258 (Expr -> Arrayexp .)
    CAREQ           reduce using rule 258 (Expr -> Arrayexp .)
    SHL_ASSIGN      reduce using rule 258 (Expr -> Arrayexp .)
    SHR_ASSIGN      reduce using rule 258 (Expr -> Arrayexp .)
    AMPCAREQ        reduce using rule 258 (Expr -> Arrayexp .)
    PLUSPLUS        reduce using rule 258 (Expr -> Arrayexp .)
    MINUSMIN        reduce using rule 258 (Expr -> Arrayexp .)
    OROR            reduce using rule 258 (Expr -> Arrayexp .)
    SEMICOL         reduce using rule 258 (Expr -> Arrayexp .)
    EQUAL           reduce using rule 258 (Expr -> Arrayexp .)
    COLONEQ         reduce using rule 258 (Expr -> Arrayexp .)
    COMMA           reduce using rule 258 (Expr -> Arrayexp .)
    RIGHT_ANGLE     reduce using rule 258 (Expr -> Arrayexp .)
    DDD             reduce using rule 258 (Expr -> Arrayexp .)
    RPAREN          reduce using rule 258 (Expr -> Arrayexp .)
    RBRACK          reduce using rule 258 (Expr -> Arrayexp .)
    COLON           reduce using rule 258 (Expr -> Arrayexp .)
    LBRACE          reduce using rule 258 (Expr -> Arrayexp .)
    PIPE            reduce using rule 258 (Expr -> Arrayexp .)
    RIGHT_RIGHT     reduce using rule 258 (Expr -> Arrayexp .)
    RBRACE          reduce using rule 258 (Expr -> Arrayexp .)


state 76

    (207) PExprNoParen -> Name .

    DOT             reduce using rule 207 (PExprNoParen -> Name .)
    LBRACK          reduce using rule 207 (PExprNoParen -> Name .)
    LEFT_LEFT       reduce using rule 207 (PExprNoParen -> Name .)
    LPAREN          reduce using rule 207 (PExprNoParen -> Name .)
    DIVIDE          reduce using rule 207 (PExprNoParen -> Name .)
    MOD             reduce using rule 207 (PExprNoParen -> Name .)
    SHL             reduce using rule 207 (PExprNoParen -> Name .)
    SHR             reduce using rule 207 (PExprNoParen -> Name .)
    AMPERS          reduce using rule 207 (PExprNoParen -> Name .)
    AMPCAR          reduce using rule 207 (PExprNoParen -> Name .)
    TIMES           reduce using rule 207 (PExprNoParen -> Name .)
    PLUS            reduce using rule 207 (PExprNoParen -> Name .)
    MINUS           reduce using rule 207 (PExprNoParen -> Name .)
    XOR             reduce using rule 207 (PExprNoParen -> Name .)
    OR              reduce using rule 207 (PExprNoParen -> Name .)
    EQEQ            reduce using rule 207 (PExprNoParen -> Name .)
    NOTEQ           reduce using rule 207 (PExprNoParen -> Name .)
    LEQ             reduce using rule 207 (PExprNoParen -> Name .)
    GEQ             reduce using rule 207 (PExprNoParen -> Name .)
    GREAT           reduce using rule 207 (PExprNoParen -> Name .)
    LESS            reduce using rule 207 (PExprNoParen -> Name .)
    AMPAMP          reduce using rule 207 (PExprNoParen -> Name .)
    PLUSEQ          reduce using rule 207 (PExprNoParen -> Name .)
    MINUSEQ         reduce using rule 207 (PExprNoParen -> Name .)
    TIMESEQ         reduce using rule 207 (PExprNoParen -> Name .)
    DIVIDEEQ        reduce using rule 207 (PExprNoParen -> Name .)
    MODEQ           reduce using rule 207 (PExprNoParen -> Name .)
    OREQ            reduce using rule 207 (PExprNoParen -> Name .)
    AMPEQ           reduce using rule 207 (PExprNoParen -> Name .)
    CAREQ           reduce using rule 207 (PExprNoParen -> Name .)
    SHL_ASSIGN      reduce using rule 207 (PExprNoParen -> Name .)
    SHR_ASSIGN      reduce using rule 207 (PExprNoParen -> Name .)
    AMPCAREQ        reduce using rule 207 (PExprNoParen -> Name .)
    PLUSPLUS        reduce using rule 207 (PExprNoParen -> Name .)
    MINUSMIN        reduce using rule 207 (PExprNoParen -> Name .)
    OROR            reduce using rule 207 (PExprNoParen -> Name .)
    SEMICOL         reduce using rule 207 (PExprNoParen -> Name .)
    EQUAL           reduce using rule 207 (PExprNoParen -> Name .)
    COLONEQ         reduce using rule 207 (PExprNoParen -> Name .)
    COMMA           reduce using rule 207 (PExprNoParen -> Name .)
    LBRACE          reduce using rule 207 (PExprNoParen -> Name .)
    PIPE            reduce using rule 207 (PExprNoParen -> Name .)
    RBRACK          reduce using rule 207 (PExprNoParen -> Name .)
    RPAREN          reduce using rule 207 (PExprNoParen -> Name .)
    RIGHT_ANGLE     reduce using rule 207 (PExprNoParen -> Name .)
    RBRACE          reduce using rule 207 (PExprNoParen -> Name .)
    COLON           reduce using rule 207 (PExprNoParen -> Name .)
    RIGHT_RIGHT     reduce using rule 207 (PExprNoParen -> Name .)
    DDD             reduce using rule 207 (PExprNoParen -> Name .)


state 77

    (17) Declaration -> NonDeclStmt .

    SEMICOL         reduce using rule 17 (Declaration -> NonDeclStmt .)


state 78

    (38) SimpleStmt -> Expr .
    (39) SimpleStmt -> Expr . PLUSEQ Expr
    (40) SimpleStmt -> Expr . MINUSEQ Expr
    (41) SimpleStmt -> Expr . TIMESEQ Expr
    (42) SimpleStmt -> Expr . DIVIDEEQ Expr
    (43) SimpleStmt -> Expr . MODEQ Expr
    (44) SimpleStmt -> Expr . OREQ Expr
    (45) SimpleStmt -> Expr . AMPEQ Expr
    (46) SimpleStmt -> Expr . CAREQ Expr
    (47) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (48) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (49) SimpleStmt -> Expr . AMPCAREQ Expr
    (52) SimpleStmt -> Expr . PLUSPLUS
    (53) SimpleStmt -> Expr . MINUSMIN
    (255) Expr -> Expr . OROR Prec2Expr_
    (148) ExprList -> Expr .

    SEMICOL         reduce using rule 38 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 38 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 174
    MINUSEQ         shift and go to state 178
    TIMESEQ         shift and go to state 173
    DIVIDEEQ        shift and go to state 184
    MODEQ           shift and go to state 175
    OREQ            shift and go to state 177
    AMPEQ           shift and go to state 180
    CAREQ           shift and go to state 172
    SHL_ASSIGN      shift and go to state 182
    SHR_ASSIGN      shift and go to state 176
    AMPCAREQ        shift and go to state 181
    PLUSPLUS        shift and go to state 183
    MINUSMIN        shift and go to state 179
    OROR            shift and go to state 171
    EQUAL           reduce using rule 148 (ExprList -> Expr .)
    COLONEQ         reduce using rule 148 (ExprList -> Expr .)
    COMMA           reduce using rule 148 (ExprList -> Expr .)


state 79

    (267) UExpr -> XOR . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 185
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 80

    (264) UExpr -> TIMES . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 186
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 81

    (205) PExpr -> LPAREN . ExprOrType RPAREN
    (228) ExprOrType -> . Expr
    (229) ExprOrType -> . NonExprType
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 192
    LMINUS          shift and go to state 31
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 187
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    ExprOrType                     shift and go to state 188
    Arrayexp                       shift and go to state 75
    NonExprType                    shift and go to state 189
    OtherType                      shift and go to state 190
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 191
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 82

    (73) IfStmt -> IF . IfHeader LoopBody ElseIfList Else
    (71) IfHeader -> . OSimpleStmt
    (72) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (138) OSimpleStmt -> .
    (139) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 138 (OSimpleStmt -> .)
    LBRACE          reduce using rule 138 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 141
    OSimpleStmt                    shift and go to state 160
    Prec3Expr_                     shift and go to state 23
    IfHeader                       shift and go to state 193
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Literal                        shift and go to state 51
    PExpr                          shift and go to state 70

state 83

    (95) StructType -> STRUCT . LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> STRUCT . LBRACE RBRACE

    LBRACE          shift and go to state 194


state 84

    (155) Literal -> FLOAT .

    DOT             reduce using rule 155 (Literal -> FLOAT .)
    LBRACK          reduce using rule 155 (Literal -> FLOAT .)
    LEFT_LEFT       reduce using rule 155 (Literal -> FLOAT .)
    LPAREN          reduce using rule 155 (Literal -> FLOAT .)
    DIVIDE          reduce using rule 155 (Literal -> FLOAT .)
    MOD             reduce using rule 155 (Literal -> FLOAT .)
    SHL             reduce using rule 155 (Literal -> FLOAT .)
    SHR             reduce using rule 155 (Literal -> FLOAT .)
    AMPERS          reduce using rule 155 (Literal -> FLOAT .)
    AMPCAR          reduce using rule 155 (Literal -> FLOAT .)
    TIMES           reduce using rule 155 (Literal -> FLOAT .)
    PLUS            reduce using rule 155 (Literal -> FLOAT .)
    MINUS           reduce using rule 155 (Literal -> FLOAT .)
    XOR             reduce using rule 155 (Literal -> FLOAT .)
    OR              reduce using rule 155 (Literal -> FLOAT .)
    EQEQ            reduce using rule 155 (Literal -> FLOAT .)
    NOTEQ           reduce using rule 155 (Literal -> FLOAT .)
    LEQ             reduce using rule 155 (Literal -> FLOAT .)
    GEQ             reduce using rule 155 (Literal -> FLOAT .)
    GREAT           reduce using rule 155 (Literal -> FLOAT .)
    LESS            reduce using rule 155 (Literal -> FLOAT .)
    AMPAMP          reduce using rule 155 (Literal -> FLOAT .)
    PLUSEQ          reduce using rule 155 (Literal -> FLOAT .)
    MINUSEQ         reduce using rule 155 (Literal -> FLOAT .)
    TIMESEQ         reduce using rule 155 (Literal -> FLOAT .)
    DIVIDEEQ        reduce using rule 155 (Literal -> FLOAT .)
    MODEQ           reduce using rule 155 (Literal -> FLOAT .)
    OREQ            reduce using rule 155 (Literal -> FLOAT .)
    AMPEQ           reduce using rule 155 (Literal -> FLOAT .)
    CAREQ           reduce using rule 155 (Literal -> FLOAT .)
    SHL_ASSIGN      reduce using rule 155 (Literal -> FLOAT .)
    SHR_ASSIGN      reduce using rule 155 (Literal -> FLOAT .)
    AMPCAREQ        reduce using rule 155 (Literal -> FLOAT .)
    PLUSPLUS        reduce using rule 155 (Literal -> FLOAT .)
    MINUSMIN        reduce using rule 155 (Literal -> FLOAT .)
    OROR            reduce using rule 155 (Literal -> FLOAT .)
    SEMICOL         reduce using rule 155 (Literal -> FLOAT .)
    EQUAL           reduce using rule 155 (Literal -> FLOAT .)
    COLONEQ         reduce using rule 155 (Literal -> FLOAT .)
    COMMA           reduce using rule 155 (Literal -> FLOAT .)
    LBRACE          reduce using rule 155 (Literal -> FLOAT .)
    PIPE            reduce using rule 155 (Literal -> FLOAT .)
    RBRACK          reduce using rule 155 (Literal -> FLOAT .)
    RPAREN          reduce using rule 155 (Literal -> FLOAT .)
    RIGHT_ANGLE     reduce using rule 155 (Literal -> FLOAT .)
    RBRACE          reduce using rule 155 (Literal -> FLOAT .)
    COLON           reduce using rule 155 (Literal -> FLOAT .)
    RIGHT_RIGHT     reduce using rule 155 (Literal -> FLOAT .)
    DDD             reduce using rule 155 (Literal -> FLOAT .)


state 85

    (9) ImportStmt -> ImportHere STRING .

    SEMICOL         reduce using rule 9 (ImportStmt -> ImportHere STRING .)
    RPAREN          reduce using rule 9 (ImportStmt -> ImportHere STRING .)


state 86

    (8) Import -> IMPORT LPAREN RPAREN .

    SEMICOL         reduce using rule 8 (Import -> IMPORT LPAREN RPAREN .)


state 87

    (7) Import -> IMPORT LPAREN ImportStmtList . OSemi RPAREN
    (11) ImportStmtList -> ImportStmtList . SEMICOL ImportStmt
    (136) OSemi -> .
    (137) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 195
    RPAREN          reduce using rule 136 (OSemi -> .)

    OSemi                          shift and go to state 196

state 88

    (10) ImportStmtList -> ImportStmt .

    SEMICOL         reduce using rule 10 (ImportStmtList -> ImportStmt .)
    RPAREN          reduce using rule 10 (ImportStmtList -> ImportStmt .)


state 89

    (249) Prec3Expr_ -> Prec3Expr_ GEQ . Prec4Expr_
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 197
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 90

    (248) Prec3Expr_ -> Prec3Expr_ LEQ . Prec4Expr_
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 198
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 91

    (246) Prec3Expr_ -> Prec3Expr_ EQEQ . Prec4Expr_
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 199
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 92

    (251) Prec3Expr_ -> Prec3Expr_ LESS . Prec4Expr_
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 200
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 93

    (250) Prec3Expr_ -> Prec3Expr_ GREAT . Prec4Expr_
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 201
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 94

    (247) Prec3Expr_ -> Prec3Expr_ NOTEQ . Prec4Expr_
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 202
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 95

    (215) PExprNoParen -> ConvType LEFT_ANGLE . Expr OComma RIGHT_ANGLE
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 203
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 96

    (196) NonDeclStmt -> LabelName COLON . Stmt
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 204
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NonDeclStmt                    shift and go to state 208
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    FuncLiteralDecl                shift and go to state 33
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 97

    (236) Prec5Expr_ -> Prec5Expr_ SHR . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 209
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 98

    (233) Prec5Expr_ -> Prec5Expr_ DIVIDE . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 210
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 99

    (238) Prec5Expr_ -> Prec5Expr_ AMPCAR . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 211
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 100

    (237) Prec5Expr_ -> Prec5Expr_ AMPERS . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 212
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 101

    (239) Prec5Expr_ -> Prec5Expr_ TIMES . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 213
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 102

    (235) Prec5Expr_ -> Prec5Expr_ SHL . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 214
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 103

    (234) Prec5Expr_ -> Prec5Expr_ MOD . UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 215
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 104

    (259) Chexpr -> LMINUS IDENTIFIER .

    OROR            reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    EQUAL           reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    COLONEQ         reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    COMMA           reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    PLUSEQ          reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    MINUSEQ         reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    TIMESEQ         reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    DIVIDEEQ        reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    MODEQ           reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    OREQ            reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    AMPEQ           reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    CAREQ           reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    AMPCAREQ        reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    PLUSPLUS        reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    MINUSMIN        reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    SEMICOL         reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    PIPE            reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    RBRACK          reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    LBRACE          reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    RPAREN          reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    COLON           reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    RBRACE          reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)
    DDD             reduce using rule 259 (Chexpr -> LMINUS IDENTIFIER .)


state 105

    (94) ChannelType -> LMINUS CHAN . TYPE

    TYPE            shift and go to state 216


state 106

    (253) Prec2Expr_ -> Prec2Expr_ AMPAMP . Prec3Expr_
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 217
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 107

    (147) FuncLiteral -> FuncLiteralDecl LBRACE . cmtlist StmtList cmtlist RBRACE
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 272 (cmtlist -> .)
    LBRACE          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    SEMICOL         reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 218

state 108

    (178) DeclName -> IDENTIFIER .

    EQUAL           reduce using rule 178 (DeclName -> IDENTIFIER .)
    COMMA           reduce using rule 178 (DeclName -> IDENTIFIER .)
    LPAREN          reduce using rule 178 (DeclName -> IDENTIFIER .)
    TYPE            reduce using rule 178 (DeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 178 (DeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 178 (DeclName -> IDENTIFIER .)
    TIMES           reduce using rule 178 (DeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 178 (DeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 178 (DeclName -> IDENTIFIER .)
    CHAN            reduce using rule 178 (DeclName -> IDENTIFIER .)
    LMINUS          reduce using rule 178 (DeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 178 (DeclName -> IDENTIFIER .)
    SEMICOL         reduce using rule 178 (DeclName -> IDENTIFIER .)
    RPAREN          reduce using rule 178 (DeclName -> IDENTIFIER .)


state 109

    (166) DeclNameList -> DeclName .

    EQUAL           reduce using rule 166 (DeclNameList -> DeclName .)
    COMMA           reduce using rule 166 (DeclNameList -> DeclName .)
    LPAREN          reduce using rule 166 (DeclNameList -> DeclName .)
    TYPE            reduce using rule 166 (DeclNameList -> DeclName .)
    FUNCTION        reduce using rule 166 (DeclNameList -> DeclName .)
    LBRACK          reduce using rule 166 (DeclNameList -> DeclName .)
    TIMES           reduce using rule 166 (DeclNameList -> DeclName .)
    STRUCT          reduce using rule 166 (DeclNameList -> DeclName .)
    INTERFACE       reduce using rule 166 (DeclNameList -> DeclName .)
    CHAN            reduce using rule 166 (DeclNameList -> DeclName .)
    LMINUS          reduce using rule 166 (DeclNameList -> DeclName .)
    IDENTIFIER      reduce using rule 166 (DeclNameList -> DeclName .)
    SEMICOL         reduce using rule 166 (DeclNameList -> DeclName .)
    RPAREN          reduce using rule 166 (DeclNameList -> DeclName .)


state 110

    (22) CommonDecl -> VAR VarDecl .

    SEMICOL         reduce using rule 22 (CommonDecl -> VAR VarDecl .)


state 111

    (23) CommonDecl -> VAR LPAREN . VarDeclList OSemi RPAREN
    (24) CommonDecl -> VAR LPAREN . RPAREN
    (160) VarDeclList -> . VarDecl
    (161) VarDeclList -> . VarDeclList SEMICOL VarDecl
    (28) VarDecl -> . DeclNameList NType
    (29) VarDecl -> . DeclNameList NType EQUAL ExprList
    (30) VarDecl -> . DeclNameList EQUAL ExprList
    (166) DeclNameList -> . DeclName
    (167) DeclNameList -> . DeclNameList COMMA DeclName
    (178) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 219
    IDENTIFIER      shift and go to state 108

    DeclName                       shift and go to state 109
    VarDecl                        shift and go to state 220
    VarDeclList                    shift and go to state 221
    DeclNameList                   shift and go to state 112

state 112

    (28) VarDecl -> DeclNameList . NType
    (29) VarDecl -> DeclNameList . NType EQUAL ExprList
    (30) VarDecl -> DeclNameList . EQUAL ExprList
    (167) DeclNameList -> DeclNameList . COMMA DeclName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    EQUAL           shift and go to state 223
    COMMA           shift and go to state 228
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    FuncType                       shift and go to state 222
    NType                          shift and go to state 230
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    DotName                        shift and go to state 225
    Name                           shift and go to state 229

state 113

    (149) ExprList -> ExprList COMMA . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 234
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 114

    (51) SimpleStmt -> ExprList COLONEQ . ExprList
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 235
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 115

    (50) SimpleStmt -> ExprList EQUAL . ExprList
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 236
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 116

    (19) CommonDecl -> CONSTANT LPAREN . ConstDecl OSemi RPAREN
    (20) CommonDecl -> CONSTANT LPAREN . ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> CONSTANT LPAREN . RPAREN
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (166) DeclNameList -> . DeclName
    (167) DeclNameList -> . DeclNameList COMMA DeclName
    (178) DeclName -> . IDENTIFIER

    RPAREN          shift and go to state 237
    IDENTIFIER      shift and go to state 108

    DeclName                       shift and go to state 109
    ConstDecl                      shift and go to state 238
    DeclNameList                   shift and go to state 117

state 117

    (31) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (32) ConstDecl -> DeclNameList . EQUAL ExprList
    (167) DeclNameList -> DeclNameList . COMMA DeclName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    EQUAL           shift and go to state 239
    COMMA           shift and go to state 228
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    FuncType                       shift and go to state 222
    NType                          shift and go to state 240
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    DotName                        shift and go to state 225
    Name                           shift and go to state 229

state 118

    (18) CommonDecl -> CONSTANT ConstDecl .

    SEMICOL         reduce using rule 18 (CommonDecl -> CONSTANT ConstDecl .)


state 119

    (221) ConvType -> OtherType .
    (222) CompType -> OtherType .

    LEFT_ANGLE      reduce using rule 221 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 222 (CompType -> OtherType .)


state 120

    (179) Name -> IDENTIFIER .

    DOT             reduce using rule 179 (Name -> IDENTIFIER .)
    LBRACK          reduce using rule 179 (Name -> IDENTIFIER .)
    LEFT_LEFT       reduce using rule 179 (Name -> IDENTIFIER .)
    LPAREN          reduce using rule 179 (Name -> IDENTIFIER .)
    DIVIDE          reduce using rule 179 (Name -> IDENTIFIER .)
    MOD             reduce using rule 179 (Name -> IDENTIFIER .)
    SHL             reduce using rule 179 (Name -> IDENTIFIER .)
    SHR             reduce using rule 179 (Name -> IDENTIFIER .)
    AMPERS          reduce using rule 179 (Name -> IDENTIFIER .)
    AMPCAR          reduce using rule 179 (Name -> IDENTIFIER .)
    TIMES           reduce using rule 179 (Name -> IDENTIFIER .)
    PLUS            reduce using rule 179 (Name -> IDENTIFIER .)
    MINUS           reduce using rule 179 (Name -> IDENTIFIER .)
    XOR             reduce using rule 179 (Name -> IDENTIFIER .)
    OR              reduce using rule 179 (Name -> IDENTIFIER .)
    EQEQ            reduce using rule 179 (Name -> IDENTIFIER .)
    NOTEQ           reduce using rule 179 (Name -> IDENTIFIER .)
    LEQ             reduce using rule 179 (Name -> IDENTIFIER .)
    GEQ             reduce using rule 179 (Name -> IDENTIFIER .)
    GREAT           reduce using rule 179 (Name -> IDENTIFIER .)
    LESS            reduce using rule 179 (Name -> IDENTIFIER .)
    AMPAMP          reduce using rule 179 (Name -> IDENTIFIER .)
    PLUSEQ          reduce using rule 179 (Name -> IDENTIFIER .)
    MINUSEQ         reduce using rule 179 (Name -> IDENTIFIER .)
    TIMESEQ         reduce using rule 179 (Name -> IDENTIFIER .)
    DIVIDEEQ        reduce using rule 179 (Name -> IDENTIFIER .)
    MODEQ           reduce using rule 179 (Name -> IDENTIFIER .)
    OREQ            reduce using rule 179 (Name -> IDENTIFIER .)
    AMPEQ           reduce using rule 179 (Name -> IDENTIFIER .)
    CAREQ           reduce using rule 179 (Name -> IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 179 (Name -> IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 179 (Name -> IDENTIFIER .)
    AMPCAREQ        reduce using rule 179 (Name -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 179 (Name -> IDENTIFIER .)
    MINUSMIN        reduce using rule 179 (Name -> IDENTIFIER .)
    OROR            reduce using rule 179 (Name -> IDENTIFIER .)
    SEMICOL         reduce using rule 179 (Name -> IDENTIFIER .)
    EQUAL           reduce using rule 179 (Name -> IDENTIFIER .)
    COLONEQ         reduce using rule 179 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 179 (Name -> IDENTIFIER .)
    LBRACE          reduce using rule 179 (Name -> IDENTIFIER .)
    PIPE            reduce using rule 179 (Name -> IDENTIFIER .)
    RBRACK          reduce using rule 179 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 179 (Name -> IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 179 (Name -> IDENTIFIER .)
    RBRACE          reduce using rule 179 (Name -> IDENTIFIER .)
    COLON           reduce using rule 179 (Name -> IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 179 (Name -> IDENTIFIER .)
    DDD             reduce using rule 179 (Name -> IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 179 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 179 (Name -> IDENTIFIER .)
    INTEGER         reduce using rule 179 (Name -> IDENTIFIER .)
    FLOAT           reduce using rule 179 (Name -> IDENTIFIER .)
    STRING          reduce using rule 179 (Name -> IDENTIFIER .)


state 121

    (102) FuncType -> FUNCTION . ArgList FuncRes
    (103) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (104) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 133

    ArgList                        shift and go to state 131

state 122

    (94) ChannelType -> LMINUS . CHAN TYPE

    CHAN            shift and go to state 105


state 123

    (262) UExpr -> AMPERS UExpr .

    DIVIDE          reduce using rule 262 (UExpr -> AMPERS UExpr .)
    MOD             reduce using rule 262 (UExpr -> AMPERS UExpr .)
    SHL             reduce using rule 262 (UExpr -> AMPERS UExpr .)
    SHR             reduce using rule 262 (UExpr -> AMPERS UExpr .)
    AMPERS          reduce using rule 262 (UExpr -> AMPERS UExpr .)
    AMPCAR          reduce using rule 262 (UExpr -> AMPERS UExpr .)
    TIMES           reduce using rule 262 (UExpr -> AMPERS UExpr .)
    PLUS            reduce using rule 262 (UExpr -> AMPERS UExpr .)
    MINUS           reduce using rule 262 (UExpr -> AMPERS UExpr .)
    XOR             reduce using rule 262 (UExpr -> AMPERS UExpr .)
    OR              reduce using rule 262 (UExpr -> AMPERS UExpr .)
    EQEQ            reduce using rule 262 (UExpr -> AMPERS UExpr .)
    NOTEQ           reduce using rule 262 (UExpr -> AMPERS UExpr .)
    LEQ             reduce using rule 262 (UExpr -> AMPERS UExpr .)
    GEQ             reduce using rule 262 (UExpr -> AMPERS UExpr .)
    GREAT           reduce using rule 262 (UExpr -> AMPERS UExpr .)
    LESS            reduce using rule 262 (UExpr -> AMPERS UExpr .)
    AMPAMP          reduce using rule 262 (UExpr -> AMPERS UExpr .)
    PLUSEQ          reduce using rule 262 (UExpr -> AMPERS UExpr .)
    MINUSEQ         reduce using rule 262 (UExpr -> AMPERS UExpr .)
    TIMESEQ         reduce using rule 262 (UExpr -> AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 262 (UExpr -> AMPERS UExpr .)
    MODEQ           reduce using rule 262 (UExpr -> AMPERS UExpr .)
    OREQ            reduce using rule 262 (UExpr -> AMPERS UExpr .)
    AMPEQ           reduce using rule 262 (UExpr -> AMPERS UExpr .)
    CAREQ           reduce using rule 262 (UExpr -> AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 262 (UExpr -> AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 262 (UExpr -> AMPERS UExpr .)
    AMPCAREQ        reduce using rule 262 (UExpr -> AMPERS UExpr .)
    PLUSPLUS        reduce using rule 262 (UExpr -> AMPERS UExpr .)
    MINUSMIN        reduce using rule 262 (UExpr -> AMPERS UExpr .)
    OROR            reduce using rule 262 (UExpr -> AMPERS UExpr .)
    SEMICOL         reduce using rule 262 (UExpr -> AMPERS UExpr .)
    EQUAL           reduce using rule 262 (UExpr -> AMPERS UExpr .)
    COLONEQ         reduce using rule 262 (UExpr -> AMPERS UExpr .)
    COMMA           reduce using rule 262 (UExpr -> AMPERS UExpr .)
    LBRACE          reduce using rule 262 (UExpr -> AMPERS UExpr .)
    PIPE            reduce using rule 262 (UExpr -> AMPERS UExpr .)
    RBRACK          reduce using rule 262 (UExpr -> AMPERS UExpr .)
    RPAREN          reduce using rule 262 (UExpr -> AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 262 (UExpr -> AMPERS UExpr .)
    RBRACE          reduce using rule 262 (UExpr -> AMPERS UExpr .)
    COLON           reduce using rule 262 (UExpr -> AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 262 (UExpr -> AMPERS UExpr .)
    DDD             reduce using rule 262 (UExpr -> AMPERS UExpr .)


state 124

    (268) ForCompExpr -> LBRACK . Expr PIPE RangeStmt RBRACK
    (88) OtherType -> LBRACK . OExpr RBRACK NType
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (142) OExpr -> .
    (143) OExpr -> . Expr
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    RBRACK          reduce using rule 142 (OExpr -> .)
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 241
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 150
    PExpr                          shift and go to state 70

state 125

    (243) Prec4Expr_ -> Prec4Expr_ XOR . Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 242
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 126

    (244) Prec4Expr_ -> Prec4Expr_ OR . Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 243
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 127

    (241) Prec4Expr_ -> Prec4Expr_ PLUS . Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 244
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 128

    (242) Prec4Expr_ -> Prec4Expr_ MINUS . Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 245
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 129

    (266) UExpr -> MINUS UExpr .

    DIVIDE          reduce using rule 266 (UExpr -> MINUS UExpr .)
    MOD             reduce using rule 266 (UExpr -> MINUS UExpr .)
    SHL             reduce using rule 266 (UExpr -> MINUS UExpr .)
    SHR             reduce using rule 266 (UExpr -> MINUS UExpr .)
    AMPERS          reduce using rule 266 (UExpr -> MINUS UExpr .)
    AMPCAR          reduce using rule 266 (UExpr -> MINUS UExpr .)
    TIMES           reduce using rule 266 (UExpr -> MINUS UExpr .)
    PLUS            reduce using rule 266 (UExpr -> MINUS UExpr .)
    MINUS           reduce using rule 266 (UExpr -> MINUS UExpr .)
    XOR             reduce using rule 266 (UExpr -> MINUS UExpr .)
    OR              reduce using rule 266 (UExpr -> MINUS UExpr .)
    EQEQ            reduce using rule 266 (UExpr -> MINUS UExpr .)
    NOTEQ           reduce using rule 266 (UExpr -> MINUS UExpr .)
    LEQ             reduce using rule 266 (UExpr -> MINUS UExpr .)
    GEQ             reduce using rule 266 (UExpr -> MINUS UExpr .)
    GREAT           reduce using rule 266 (UExpr -> MINUS UExpr .)
    LESS            reduce using rule 266 (UExpr -> MINUS UExpr .)
    AMPAMP          reduce using rule 266 (UExpr -> MINUS UExpr .)
    PLUSEQ          reduce using rule 266 (UExpr -> MINUS UExpr .)
    MINUSEQ         reduce using rule 266 (UExpr -> MINUS UExpr .)
    TIMESEQ         reduce using rule 266 (UExpr -> MINUS UExpr .)
    DIVIDEEQ        reduce using rule 266 (UExpr -> MINUS UExpr .)
    MODEQ           reduce using rule 266 (UExpr -> MINUS UExpr .)
    OREQ            reduce using rule 266 (UExpr -> MINUS UExpr .)
    AMPEQ           reduce using rule 266 (UExpr -> MINUS UExpr .)
    CAREQ           reduce using rule 266 (UExpr -> MINUS UExpr .)
    SHL_ASSIGN      reduce using rule 266 (UExpr -> MINUS UExpr .)
    SHR_ASSIGN      reduce using rule 266 (UExpr -> MINUS UExpr .)
    AMPCAREQ        reduce using rule 266 (UExpr -> MINUS UExpr .)
    PLUSPLUS        reduce using rule 266 (UExpr -> MINUS UExpr .)
    MINUSMIN        reduce using rule 266 (UExpr -> MINUS UExpr .)
    OROR            reduce using rule 266 (UExpr -> MINUS UExpr .)
    SEMICOL         reduce using rule 266 (UExpr -> MINUS UExpr .)
    EQUAL           reduce using rule 266 (UExpr -> MINUS UExpr .)
    COLONEQ         reduce using rule 266 (UExpr -> MINUS UExpr .)
    COMMA           reduce using rule 266 (UExpr -> MINUS UExpr .)
    LBRACE          reduce using rule 266 (UExpr -> MINUS UExpr .)
    PIPE            reduce using rule 266 (UExpr -> MINUS UExpr .)
    RBRACK          reduce using rule 266 (UExpr -> MINUS UExpr .)
    RPAREN          reduce using rule 266 (UExpr -> MINUS UExpr .)
    RIGHT_ANGLE     reduce using rule 266 (UExpr -> MINUS UExpr .)
    RBRACE          reduce using rule 266 (UExpr -> MINUS UExpr .)
    COLON           reduce using rule 266 (UExpr -> MINUS UExpr .)
    RIGHT_RIGHT     reduce using rule 266 (UExpr -> MINUS UExpr .)
    DDD             reduce using rule 266 (UExpr -> MINUS UExpr .)


state 130

    (260) Arrayexp -> OtherType LBRACE . ExprList RBRACE
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 246
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 131

    (102) FuncType -> FUNCTION ArgList . FuncRes
    (104) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (107) FuncRes -> .
    (108) FuncRes -> . FuncRetType
    (109) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (127) FuncRetType -> . FuncType
    (128) FuncRetType -> . OtherType
    (129) FuncRetType -> . PtrType
    (130) FuncRetType -> . DotName
    (131) FuncRetType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    LPAREN          shift and go to state 247
    LEFT_ANGLE      reduce using rule 107 (FuncRes -> .)
    LBRACE          reduce using rule 107 (FuncRes -> .)
    RPAREN          reduce using rule 107 (FuncRes -> .)
    EQUAL           reduce using rule 107 (FuncRes -> .)
    SEMICOL         reduce using rule 107 (FuncRes -> .)
    COMMA           reduce using rule 107 (FuncRes -> .)
    OR_RIGHT        reduce using rule 107 (FuncRes -> .)
    DDD             reduce using rule 107 (FuncRes -> .)
    COLON           reduce using rule 107 (FuncRes -> .)
    COLONEQ         reduce using rule 107 (FuncRes -> .)
    LEFT_LEFT       reduce using rule 107 (FuncRes -> .)
    INTEGER         reduce using rule 107 (FuncRes -> .)
    FLOAT           reduce using rule 107 (FuncRes -> .)
    STRING          reduce using rule 107 (FuncRes -> .)
    RBRACE          reduce using rule 107 (FuncRes -> .)
    LEFT_OR         shift and go to state 253
    TYPE            shift and go to state 255
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    DotName                        shift and go to state 254
    Name                           shift and go to state 229
    FuncType                       shift and go to state 248
    OtherType                      shift and go to state 251
    InterfaceType                  shift and go to state 28
    FuncRes                        shift and go to state 252
    PtrType                        shift and go to state 249
    ChannelType                    shift and go to state 46
    FuncRetType                    shift and go to state 250

state 132

    (99) FuncDecl -> FUNCTION FuncDecl_ . FuncBody
    (105) FuncBody -> .
    (106) FuncBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    SEMICOL         reduce using rule 105 (FuncBody -> .)
    LBRACE          shift and go to state 256

    FuncBody                       shift and go to state 257

state 133

    (103) ArgList -> LPAREN . OArgTypeListOComma RPAREN
    (186) OArgTypeListOComma -> .
    (187) OArgTypeListOComma -> . ArgTypeList OComma
    (184) ArgTypeList -> . ArgType
    (185) ArgTypeList -> . ArgTypeList COMMA ArgType
    (180) ArgType -> . NameOrType
    (181) ArgType -> . IDENTIFIER NameOrType
    (182) ArgType -> . IDENTIFIER DotDotDot
    (183) ArgType -> . DotDotDot
    (230) NameOrType -> . NType
    (202) DotDotDot -> . DDD
    (203) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    RPAREN          reduce using rule 186 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 263
    DDD             shift and go to state 265
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    StructType                     shift and go to state 68
    DotName                        shift and go to state 225
    OArgTypeListOComma             shift and go to state 260
    Name                           shift and go to state 229
    DotDotDot                      shift and go to state 261
    NType                          shift and go to state 264
    NameOrType                     shift and go to state 262
    ArgTypeList                    shift and go to state 258
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    ArgType                        shift and go to state 259
    FuncType                       shift and go to state 222

state 134

    (101) FuncDecl_ -> LEFT_OR . OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes
    (186) OArgTypeListOComma -> .
    (187) OArgTypeListOComma -> . ArgTypeList OComma
    (184) ArgTypeList -> . ArgType
    (185) ArgTypeList -> . ArgTypeList COMMA ArgType
    (180) ArgType -> . NameOrType
    (181) ArgType -> . IDENTIFIER NameOrType
    (182) ArgType -> . IDENTIFIER DotDotDot
    (183) ArgType -> . DotDotDot
    (230) NameOrType -> . NType
    (202) DotDotDot -> . DDD
    (203) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 186 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 263
    DDD             shift and go to state 265
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    StructType                     shift and go to state 68
    DotName                        shift and go to state 225
    OArgTypeListOComma             shift and go to state 266
    Name                           shift and go to state 229
    DotDotDot                      shift and go to state 261
    NType                          shift and go to state 264
    NameOrType                     shift and go to state 262
    ArgTypeList                    shift and go to state 258
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    ArgType                        shift and go to state 259
    FuncType                       shift and go to state 222

state 135

    (100) FuncDecl_ -> IDENTIFIER . ArgList FuncRes
    (103) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (104) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 133

    ArgList                        shift and go to state 267

state 136

    (66) ForHeader -> OSimpleStmt . SEMICOL OSimpleStmt SEMICOL OSimpleStmt
    (67) ForHeader -> OSimpleStmt .

    SEMICOL         shift and go to state 268
    LBRACE          reduce using rule 67 (ForHeader -> OSimpleStmt .)


state 137

    (68) ForHeader -> RangeStmt .

    LBRACE          reduce using rule 68 (ForHeader -> RangeStmt .)


state 138

    (63) RangeStmt -> ExprList . EQUAL RANGE Expr
    (64) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (50) SimpleStmt -> ExprList . EQUAL ExprList
    (51) SimpleStmt -> ExprList . COLONEQ ExprList
    (149) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 269
    COLONEQ         shift and go to state 270
    COMMA           shift and go to state 113


state 139

    (70) ForStmt -> FOR ForBody .

    SEMICOL         reduce using rule 70 (ForStmt -> FOR ForBody .)


state 140

    (65) RangeStmt -> RANGE . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 271
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 141

    (139) OSimpleStmt -> SimpleStmt .

    SEMICOL         reduce using rule 139 (OSimpleStmt -> SimpleStmt .)
    LBRACE          reduce using rule 139 (OSimpleStmt -> SimpleStmt .)


state 142

    (69) ForBody -> ForHeader . LoopBody
    (62) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 272

    LoopBody                       shift and go to state 273

state 143

    (38) SimpleStmt -> Expr .
    (39) SimpleStmt -> Expr . PLUSEQ Expr
    (40) SimpleStmt -> Expr . MINUSEQ Expr
    (41) SimpleStmt -> Expr . TIMESEQ Expr
    (42) SimpleStmt -> Expr . DIVIDEEQ Expr
    (43) SimpleStmt -> Expr . MODEQ Expr
    (44) SimpleStmt -> Expr . OREQ Expr
    (45) SimpleStmt -> Expr . AMPEQ Expr
    (46) SimpleStmt -> Expr . CAREQ Expr
    (47) SimpleStmt -> Expr . SHL_ASSIGN Expr
    (48) SimpleStmt -> Expr . SHR_ASSIGN Expr
    (49) SimpleStmt -> Expr . AMPCAREQ Expr
    (52) SimpleStmt -> Expr . PLUSPLUS
    (53) SimpleStmt -> Expr . MINUSMIN
    (148) ExprList -> Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 38 (SimpleStmt -> Expr .)
    LBRACE          reduce using rule 38 (SimpleStmt -> Expr .)
    PLUSEQ          shift and go to state 174
    MINUSEQ         shift and go to state 178
    TIMESEQ         shift and go to state 173
    DIVIDEEQ        shift and go to state 184
    MODEQ           shift and go to state 175
    OREQ            shift and go to state 177
    AMPEQ           shift and go to state 180
    CAREQ           shift and go to state 172
    SHL_ASSIGN      shift and go to state 182
    SHR_ASSIGN      shift and go to state 176
    AMPCAREQ        shift and go to state 181
    PLUSPLUS        shift and go to state 183
    MINUSMIN        shift and go to state 179
    EQUAL           reduce using rule 148 (ExprList -> Expr .)
    COLONEQ         reduce using rule 148 (ExprList -> Expr .)
    COMMA           reduce using rule 148 (ExprList -> Expr .)
    OROR            shift and go to state 171


state 144

    (97) InterfaceType -> INTERFACE LBRACE . InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> INTERFACE LBRACE . RBRACE
    (112) InterfaceDeclList -> . InterfaceDecl
    (113) InterfaceDeclList -> . InterfaceDeclList SEMICOL InterfaceDecl
    (120) InterfaceDecl -> . NewName InDecl
    (121) InterfaceDecl -> . IDENTIFIER
    (122) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (125) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 274
    IDENTIFIER      shift and go to state 279
    LPAREN          shift and go to state 278

    InterfaceDecl                  shift and go to state 275
    NewName                        shift and go to state 277
    InterfaceDeclList              shift and go to state 276

state 145

    (25) CommonDecl -> TYPE TypeDecl .

    SEMICOL         reduce using rule 25 (CommonDecl -> TYPE TypeDecl .)


state 146

    (26) CommonDecl -> TYPE LPAREN . TypeDeclList OSemi RPAREN
    (27) CommonDecl -> TYPE LPAREN . RPAREN
    (164) TypeDeclList -> . TypeDecl
    (165) TypeDeclList -> . TypeDeclList SEMICOL TypeDecl
    (37) TypeDecl -> . TypeDeclName NType
    (36) TypeDeclName -> . IDENTIFIER

    RPAREN          shift and go to state 282
    IDENTIFIER      shift and go to state 148

    TypeDeclList                   shift and go to state 281
    TypeDecl                       shift and go to state 280
    TypeDeclName                   shift and go to state 147

state 147

    (37) TypeDecl -> TypeDeclName . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    Name                           shift and go to state 229
    FuncType                       shift and go to state 222
    NType                          shift and go to state 283
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    DotName                        shift and go to state 225

state 148

    (36) TypeDeclName -> IDENTIFIER .

    LPAREN          reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    TYPE            reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    FUNCTION        reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    LBRACK          reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    TIMES           reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    STRUCT          reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    INTERFACE       reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    CHAN            reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    LMINUS          reduce using rule 36 (TypeDeclName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 36 (TypeDeclName -> IDENTIFIER .)


state 149

    (268) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (143) OExpr -> Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    PIPE            shift and go to state 284
    RBRACK          reduce using rule 143 (OExpr -> Expr .)
    OROR            shift and go to state 171


state 150

    (88) OtherType -> LBRACK OExpr . RBRACK NType

    RBRACK          shift and go to state 285


state 151

    (141) ONewName -> NewName .

    SEMICOL         reduce using rule 141 (ONewName -> NewName .)


state 152

    (125) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 125 (NewName -> IDENTIFIER .)
    COMMA           reduce using rule 125 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 125 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 125 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 125 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 125 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 125 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 125 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 125 (NewName -> IDENTIFIER .)
    CHAN            reduce using rule 125 (NewName -> IDENTIFIER .)
    LMINUS          reduce using rule 125 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 125 (NewName -> IDENTIFIER .)


state 153

    (199) NonDeclStmt -> CONTINUE ONewName .

    SEMICOL         reduce using rule 199 (NonDeclStmt -> CONTINUE ONewName .)


state 154

    (263) UExpr -> NOT UExpr .

    DIVIDE          reduce using rule 263 (UExpr -> NOT UExpr .)
    MOD             reduce using rule 263 (UExpr -> NOT UExpr .)
    SHL             reduce using rule 263 (UExpr -> NOT UExpr .)
    SHR             reduce using rule 263 (UExpr -> NOT UExpr .)
    AMPERS          reduce using rule 263 (UExpr -> NOT UExpr .)
    AMPCAR          reduce using rule 263 (UExpr -> NOT UExpr .)
    TIMES           reduce using rule 263 (UExpr -> NOT UExpr .)
    PLUS            reduce using rule 263 (UExpr -> NOT UExpr .)
    MINUS           reduce using rule 263 (UExpr -> NOT UExpr .)
    XOR             reduce using rule 263 (UExpr -> NOT UExpr .)
    OR              reduce using rule 263 (UExpr -> NOT UExpr .)
    EQEQ            reduce using rule 263 (UExpr -> NOT UExpr .)
    NOTEQ           reduce using rule 263 (UExpr -> NOT UExpr .)
    LEQ             reduce using rule 263 (UExpr -> NOT UExpr .)
    GEQ             reduce using rule 263 (UExpr -> NOT UExpr .)
    GREAT           reduce using rule 263 (UExpr -> NOT UExpr .)
    LESS            reduce using rule 263 (UExpr -> NOT UExpr .)
    AMPAMP          reduce using rule 263 (UExpr -> NOT UExpr .)
    PLUSEQ          reduce using rule 263 (UExpr -> NOT UExpr .)
    MINUSEQ         reduce using rule 263 (UExpr -> NOT UExpr .)
    TIMESEQ         reduce using rule 263 (UExpr -> NOT UExpr .)
    DIVIDEEQ        reduce using rule 263 (UExpr -> NOT UExpr .)
    MODEQ           reduce using rule 263 (UExpr -> NOT UExpr .)
    OREQ            reduce using rule 263 (UExpr -> NOT UExpr .)
    AMPEQ           reduce using rule 263 (UExpr -> NOT UExpr .)
    CAREQ           reduce using rule 263 (UExpr -> NOT UExpr .)
    SHL_ASSIGN      reduce using rule 263 (UExpr -> NOT UExpr .)
    SHR_ASSIGN      reduce using rule 263 (UExpr -> NOT UExpr .)
    AMPCAREQ        reduce using rule 263 (UExpr -> NOT UExpr .)
    PLUSPLUS        reduce using rule 263 (UExpr -> NOT UExpr .)
    MINUSMIN        reduce using rule 263 (UExpr -> NOT UExpr .)
    OROR            reduce using rule 263 (UExpr -> NOT UExpr .)
    SEMICOL         reduce using rule 263 (UExpr -> NOT UExpr .)
    EQUAL           reduce using rule 263 (UExpr -> NOT UExpr .)
    COLONEQ         reduce using rule 263 (UExpr -> NOT UExpr .)
    COMMA           reduce using rule 263 (UExpr -> NOT UExpr .)
    LBRACE          reduce using rule 263 (UExpr -> NOT UExpr .)
    PIPE            reduce using rule 263 (UExpr -> NOT UExpr .)
    RBRACK          reduce using rule 263 (UExpr -> NOT UExpr .)
    RPAREN          reduce using rule 263 (UExpr -> NOT UExpr .)
    RIGHT_ANGLE     reduce using rule 263 (UExpr -> NOT UExpr .)
    RBRACE          reduce using rule 263 (UExpr -> NOT UExpr .)
    COLON           reduce using rule 263 (UExpr -> NOT UExpr .)
    RIGHT_RIGHT     reduce using rule 263 (UExpr -> NOT UExpr .)
    DDD             reduce using rule 263 (UExpr -> NOT UExpr .)


state 155

    (92) ChannelType -> CHAN TYPE .

    LBRACE          reduce using rule 92 (ChannelType -> CHAN TYPE .)
    LEFT_ANGLE      reduce using rule 92 (ChannelType -> CHAN TYPE .)
    LEFT_LEFT       reduce using rule 92 (ChannelType -> CHAN TYPE .)
    COMMA           reduce using rule 92 (ChannelType -> CHAN TYPE .)
    OR_RIGHT        reduce using rule 92 (ChannelType -> CHAN TYPE .)
    RPAREN          reduce using rule 92 (ChannelType -> CHAN TYPE .)
    EQUAL           reduce using rule 92 (ChannelType -> CHAN TYPE .)
    DDD             reduce using rule 92 (ChannelType -> CHAN TYPE .)
    COLON           reduce using rule 92 (ChannelType -> CHAN TYPE .)
    COLONEQ         reduce using rule 92 (ChannelType -> CHAN TYPE .)
    SEMICOL         reduce using rule 92 (ChannelType -> CHAN TYPE .)
    INTEGER         reduce using rule 92 (ChannelType -> CHAN TYPE .)
    FLOAT           reduce using rule 92 (ChannelType -> CHAN TYPE .)
    STRING          reduce using rule 92 (ChannelType -> CHAN TYPE .)
    RBRACE          reduce using rule 92 (ChannelType -> CHAN TYPE .)


state 156

    (93) ChannelType -> CHAN LMINUS . TYPE

    TYPE            shift and go to state 286


state 157

    (145) OExprList -> ExprList .
    (149) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 145 (OExprList -> ExprList .)
    COMMA           shift and go to state 113


state 158

    (201) NonDeclStmt -> RETURN OExprList .

    SEMICOL         reduce using rule 201 (NonDeclStmt -> RETURN OExprList .)


state 159

    (148) ExprList -> Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 148 (ExprList -> Expr .)
    SEMICOL         reduce using rule 148 (ExprList -> Expr .)
    LBRACE          reduce using rule 148 (ExprList -> Expr .)
    EQUAL           reduce using rule 148 (ExprList -> Expr .)
    COLONEQ         reduce using rule 148 (ExprList -> Expr .)
    RPAREN          reduce using rule 148 (ExprList -> Expr .)
    RBRACE          reduce using rule 148 (ExprList -> Expr .)
    OROR            shift and go to state 171


state 160

    (71) IfHeader -> OSimpleStmt .
    (72) IfHeader -> OSimpleStmt . SEMICOL OSimpleStmt

    LBRACE          reduce using rule 71 (IfHeader -> OSimpleStmt .)
    SEMICOL         shift and go to state 287


state 161

    (231) SwitchStmt -> SWITCH IfHeader . LBRACE CaseBlockList RBRACE

    LBRACE          shift and go to state 288


state 162

    (159) DeclList -> DeclList cmtlist Declaration SEMICOL .

    COMMENT         reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANT        reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    VAR             reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TYPE            reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FUNCTION        reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FALLTHROUGH     reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    BREAK           reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONTINUE        reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    GOTO            reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    RETURN          reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FOR             reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    SWITCH          reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IF              reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CONSTANTS       reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    IDENTIFIER      reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LMINUS          reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LBRACK          reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRUCT          reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTERFACE       reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    CHAN            reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    AMPERS          reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    NOT             reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    TIMES           reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    PLUS            reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    MINUS           reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    XOR             reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    LPAREN          reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    INTEGER         reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    FLOAT           reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    STRING          reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)
    $end            reduce using rule 159 (DeclList -> DeclList cmtlist Declaration SEMICOL .)


state 163

    (265) UExpr -> PLUS UExpr .

    DIVIDE          reduce using rule 265 (UExpr -> PLUS UExpr .)
    MOD             reduce using rule 265 (UExpr -> PLUS UExpr .)
    SHL             reduce using rule 265 (UExpr -> PLUS UExpr .)
    SHR             reduce using rule 265 (UExpr -> PLUS UExpr .)
    AMPERS          reduce using rule 265 (UExpr -> PLUS UExpr .)
    AMPCAR          reduce using rule 265 (UExpr -> PLUS UExpr .)
    TIMES           reduce using rule 265 (UExpr -> PLUS UExpr .)
    PLUS            reduce using rule 265 (UExpr -> PLUS UExpr .)
    MINUS           reduce using rule 265 (UExpr -> PLUS UExpr .)
    XOR             reduce using rule 265 (UExpr -> PLUS UExpr .)
    OR              reduce using rule 265 (UExpr -> PLUS UExpr .)
    EQEQ            reduce using rule 265 (UExpr -> PLUS UExpr .)
    NOTEQ           reduce using rule 265 (UExpr -> PLUS UExpr .)
    LEQ             reduce using rule 265 (UExpr -> PLUS UExpr .)
    GEQ             reduce using rule 265 (UExpr -> PLUS UExpr .)
    GREAT           reduce using rule 265 (UExpr -> PLUS UExpr .)
    LESS            reduce using rule 265 (UExpr -> PLUS UExpr .)
    AMPAMP          reduce using rule 265 (UExpr -> PLUS UExpr .)
    PLUSEQ          reduce using rule 265 (UExpr -> PLUS UExpr .)
    MINUSEQ         reduce using rule 265 (UExpr -> PLUS UExpr .)
    TIMESEQ         reduce using rule 265 (UExpr -> PLUS UExpr .)
    DIVIDEEQ        reduce using rule 265 (UExpr -> PLUS UExpr .)
    MODEQ           reduce using rule 265 (UExpr -> PLUS UExpr .)
    OREQ            reduce using rule 265 (UExpr -> PLUS UExpr .)
    AMPEQ           reduce using rule 265 (UExpr -> PLUS UExpr .)
    CAREQ           reduce using rule 265 (UExpr -> PLUS UExpr .)
    SHL_ASSIGN      reduce using rule 265 (UExpr -> PLUS UExpr .)
    SHR_ASSIGN      reduce using rule 265 (UExpr -> PLUS UExpr .)
    AMPCAREQ        reduce using rule 265 (UExpr -> PLUS UExpr .)
    PLUSPLUS        reduce using rule 265 (UExpr -> PLUS UExpr .)
    MINUSMIN        reduce using rule 265 (UExpr -> PLUS UExpr .)
    OROR            reduce using rule 265 (UExpr -> PLUS UExpr .)
    SEMICOL         reduce using rule 265 (UExpr -> PLUS UExpr .)
    EQUAL           reduce using rule 265 (UExpr -> PLUS UExpr .)
    COLONEQ         reduce using rule 265 (UExpr -> PLUS UExpr .)
    COMMA           reduce using rule 265 (UExpr -> PLUS UExpr .)
    LBRACE          reduce using rule 265 (UExpr -> PLUS UExpr .)
    PIPE            reduce using rule 265 (UExpr -> PLUS UExpr .)
    RBRACK          reduce using rule 265 (UExpr -> PLUS UExpr .)
    RPAREN          reduce using rule 265 (UExpr -> PLUS UExpr .)
    RIGHT_ANGLE     reduce using rule 265 (UExpr -> PLUS UExpr .)
    RBRACE          reduce using rule 265 (UExpr -> PLUS UExpr .)
    COLON           reduce using rule 265 (UExpr -> PLUS UExpr .)
    RIGHT_RIGHT     reduce using rule 265 (UExpr -> PLUS UExpr .)
    DDD             reduce using rule 265 (UExpr -> PLUS UExpr .)


state 164

    (216) PExprNoParen -> CompType LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (176) BracedKeyvalList -> .
    (177) BracedKeyvalList -> . KeyvalList OComma
    (172) KeyvalList -> . Keyval
    (173) KeyvalList -> . BareCompLitExpr
    (174) KeyvalList -> . KeyvalList COMMA Keyval
    (175) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (223) Keyval -> . Expr COLON CompLitExpr
    (224) BareCompLitExpr -> . Expr
    (225) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 176 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 292
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 291
    PseudoCall                     shift and go to state 49
    KeyvalList                     shift and go to state 293
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Keyval                         shift and go to state 289
    BareCompLitExpr                shift and go to state 294
    PExpr                          shift and go to state 70
    BracedKeyvalList               shift and go to state 290

state 165

    (198) NonDeclStmt -> BREAK ONewName .

    SEMICOL         reduce using rule 198 (NonDeclStmt -> BREAK ONewName .)


state 166

    (211) PExprNoParen -> PExpr LBRACK . Expr RBRACK
    (212) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> PExpr LBRACK . OExpr COLON OExpr COLON OExpr RBRACK
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (142) OExpr -> .
    (143) OExpr -> . Expr
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    COLON           reduce using rule 142 (OExpr -> .)
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 295
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 296
    PExpr                          shift and go to state 70

state 167

    (269) PseudoCall -> PExpr LPAREN . RPAREN
    (270) PseudoCall -> PExpr LPAREN . ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> PExpr LPAREN . ExprOrTypeList DDD OComma RPAREN
    (150) ExprOrTypeList -> . ExprOrType
    (151) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (228) ExprOrType -> . Expr
    (229) ExprOrType -> . NonExprType
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (146) FuncLiteralDecl -> . FuncType

    RPAREN          shift and go to state 299
    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 192
    LMINUS          shift and go to state 31
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 187
    Prec4Expr_                     shift and go to state 39
    ExprOrTypeList                 shift and go to state 297
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    ExprOrType                     shift and go to state 298
    Arrayexp                       shift and go to state 75
    NonExprType                    shift and go to state 189
    OtherType                      shift and go to state 190
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 191
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 168

    (217) PExprNoParen -> PExpr LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (176) BracedKeyvalList -> .
    (177) BracedKeyvalList -> . KeyvalList OComma
    (172) KeyvalList -> . Keyval
    (173) KeyvalList -> . BareCompLitExpr
    (174) KeyvalList -> . KeyvalList COMMA Keyval
    (175) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (223) Keyval -> . Expr COLON CompLitExpr
    (224) BareCompLitExpr -> . Expr
    (225) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 176 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 292
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 291
    PseudoCall                     shift and go to state 49
    KeyvalList                     shift and go to state 293
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Keyval                         shift and go to state 289
    BareCompLitExpr                shift and go to state 294
    PExpr                          shift and go to state 70
    BracedKeyvalList               shift and go to state 300

state 169

    (208) PExprNoParen -> PExpr DOT . IDENTIFIER
    (209) PExprNoParen -> PExpr DOT . LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> PExpr DOT . LPAREN TYPE RPAREN

    IDENTIFIER      shift and go to state 302
    LPAREN          shift and go to state 301


state 170

    (200) NonDeclStmt -> GOTO NewName .

    SEMICOL         reduce using rule 200 (NonDeclStmt -> GOTO NewName .)


state 171

    (255) Expr -> Expr OROR . Prec2Expr_
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (146) FuncLiteralDecl -> . FuncType
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE

    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    LBRACK          shift and go to state 124
    FUNCTION        shift and go to state 121
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 119
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 303
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 172

    (46) SimpleStmt -> Expr CAREQ . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 304
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 173

    (41) SimpleStmt -> Expr TIMESEQ . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 305
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 174

    (39) SimpleStmt -> Expr PLUSEQ . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 306
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 175

    (43) SimpleStmt -> Expr MODEQ . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 307
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 176

    (48) SimpleStmt -> Expr SHR_ASSIGN . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 308
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 177

    (44) SimpleStmt -> Expr OREQ . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 309
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 178

    (40) SimpleStmt -> Expr MINUSEQ . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 310
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 179

    (53) SimpleStmt -> Expr MINUSMIN .

    SEMICOL         reduce using rule 53 (SimpleStmt -> Expr MINUSMIN .)
    LBRACE          reduce using rule 53 (SimpleStmt -> Expr MINUSMIN .)


state 180

    (45) SimpleStmt -> Expr AMPEQ . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 311
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 181

    (49) SimpleStmt -> Expr AMPCAREQ . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 312
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 182

    (47) SimpleStmt -> Expr SHL_ASSIGN . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 313
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 183

    (52) SimpleStmt -> Expr PLUSPLUS .

    SEMICOL         reduce using rule 52 (SimpleStmt -> Expr PLUSPLUS .)
    LBRACE          reduce using rule 52 (SimpleStmt -> Expr PLUSPLUS .)


state 184

    (42) SimpleStmt -> Expr DIVIDEEQ . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 314
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 185

    (267) UExpr -> XOR UExpr .

    DIVIDE          reduce using rule 267 (UExpr -> XOR UExpr .)
    MOD             reduce using rule 267 (UExpr -> XOR UExpr .)
    SHL             reduce using rule 267 (UExpr -> XOR UExpr .)
    SHR             reduce using rule 267 (UExpr -> XOR UExpr .)
    AMPERS          reduce using rule 267 (UExpr -> XOR UExpr .)
    AMPCAR          reduce using rule 267 (UExpr -> XOR UExpr .)
    TIMES           reduce using rule 267 (UExpr -> XOR UExpr .)
    PLUS            reduce using rule 267 (UExpr -> XOR UExpr .)
    MINUS           reduce using rule 267 (UExpr -> XOR UExpr .)
    XOR             reduce using rule 267 (UExpr -> XOR UExpr .)
    OR              reduce using rule 267 (UExpr -> XOR UExpr .)
    EQEQ            reduce using rule 267 (UExpr -> XOR UExpr .)
    NOTEQ           reduce using rule 267 (UExpr -> XOR UExpr .)
    LEQ             reduce using rule 267 (UExpr -> XOR UExpr .)
    GEQ             reduce using rule 267 (UExpr -> XOR UExpr .)
    GREAT           reduce using rule 267 (UExpr -> XOR UExpr .)
    LESS            reduce using rule 267 (UExpr -> XOR UExpr .)
    AMPAMP          reduce using rule 267 (UExpr -> XOR UExpr .)
    PLUSEQ          reduce using rule 267 (UExpr -> XOR UExpr .)
    MINUSEQ         reduce using rule 267 (UExpr -> XOR UExpr .)
    TIMESEQ         reduce using rule 267 (UExpr -> XOR UExpr .)
    DIVIDEEQ        reduce using rule 267 (UExpr -> XOR UExpr .)
    MODEQ           reduce using rule 267 (UExpr -> XOR UExpr .)
    OREQ            reduce using rule 267 (UExpr -> XOR UExpr .)
    AMPEQ           reduce using rule 267 (UExpr -> XOR UExpr .)
    CAREQ           reduce using rule 267 (UExpr -> XOR UExpr .)
    SHL_ASSIGN      reduce using rule 267 (UExpr -> XOR UExpr .)
    SHR_ASSIGN      reduce using rule 267 (UExpr -> XOR UExpr .)
    AMPCAREQ        reduce using rule 267 (UExpr -> XOR UExpr .)
    PLUSPLUS        reduce using rule 267 (UExpr -> XOR UExpr .)
    MINUSMIN        reduce using rule 267 (UExpr -> XOR UExpr .)
    OROR            reduce using rule 267 (UExpr -> XOR UExpr .)
    SEMICOL         reduce using rule 267 (UExpr -> XOR UExpr .)
    EQUAL           reduce using rule 267 (UExpr -> XOR UExpr .)
    COLONEQ         reduce using rule 267 (UExpr -> XOR UExpr .)
    COMMA           reduce using rule 267 (UExpr -> XOR UExpr .)
    LBRACE          reduce using rule 267 (UExpr -> XOR UExpr .)
    PIPE            reduce using rule 267 (UExpr -> XOR UExpr .)
    RBRACK          reduce using rule 267 (UExpr -> XOR UExpr .)
    RPAREN          reduce using rule 267 (UExpr -> XOR UExpr .)
    RIGHT_ANGLE     reduce using rule 267 (UExpr -> XOR UExpr .)
    RBRACE          reduce using rule 267 (UExpr -> XOR UExpr .)
    COLON           reduce using rule 267 (UExpr -> XOR UExpr .)
    RIGHT_RIGHT     reduce using rule 267 (UExpr -> XOR UExpr .)
    DDD             reduce using rule 267 (UExpr -> XOR UExpr .)


state 186

    (264) UExpr -> TIMES UExpr .

    DIVIDE          reduce using rule 264 (UExpr -> TIMES UExpr .)
    MOD             reduce using rule 264 (UExpr -> TIMES UExpr .)
    SHL             reduce using rule 264 (UExpr -> TIMES UExpr .)
    SHR             reduce using rule 264 (UExpr -> TIMES UExpr .)
    AMPERS          reduce using rule 264 (UExpr -> TIMES UExpr .)
    AMPCAR          reduce using rule 264 (UExpr -> TIMES UExpr .)
    TIMES           reduce using rule 264 (UExpr -> TIMES UExpr .)
    PLUS            reduce using rule 264 (UExpr -> TIMES UExpr .)
    MINUS           reduce using rule 264 (UExpr -> TIMES UExpr .)
    XOR             reduce using rule 264 (UExpr -> TIMES UExpr .)
    OR              reduce using rule 264 (UExpr -> TIMES UExpr .)
    EQEQ            reduce using rule 264 (UExpr -> TIMES UExpr .)
    NOTEQ           reduce using rule 264 (UExpr -> TIMES UExpr .)
    LEQ             reduce using rule 264 (UExpr -> TIMES UExpr .)
    GEQ             reduce using rule 264 (UExpr -> TIMES UExpr .)
    GREAT           reduce using rule 264 (UExpr -> TIMES UExpr .)
    LESS            reduce using rule 264 (UExpr -> TIMES UExpr .)
    AMPAMP          reduce using rule 264 (UExpr -> TIMES UExpr .)
    PLUSEQ          reduce using rule 264 (UExpr -> TIMES UExpr .)
    MINUSEQ         reduce using rule 264 (UExpr -> TIMES UExpr .)
    TIMESEQ         reduce using rule 264 (UExpr -> TIMES UExpr .)
    DIVIDEEQ        reduce using rule 264 (UExpr -> TIMES UExpr .)
    MODEQ           reduce using rule 264 (UExpr -> TIMES UExpr .)
    OREQ            reduce using rule 264 (UExpr -> TIMES UExpr .)
    AMPEQ           reduce using rule 264 (UExpr -> TIMES UExpr .)
    CAREQ           reduce using rule 264 (UExpr -> TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 264 (UExpr -> TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 264 (UExpr -> TIMES UExpr .)
    AMPCAREQ        reduce using rule 264 (UExpr -> TIMES UExpr .)
    PLUSPLUS        reduce using rule 264 (UExpr -> TIMES UExpr .)
    MINUSMIN        reduce using rule 264 (UExpr -> TIMES UExpr .)
    OROR            reduce using rule 264 (UExpr -> TIMES UExpr .)
    SEMICOL         reduce using rule 264 (UExpr -> TIMES UExpr .)
    EQUAL           reduce using rule 264 (UExpr -> TIMES UExpr .)
    COLONEQ         reduce using rule 264 (UExpr -> TIMES UExpr .)
    COMMA           reduce using rule 264 (UExpr -> TIMES UExpr .)
    LBRACE          reduce using rule 264 (UExpr -> TIMES UExpr .)
    PIPE            reduce using rule 264 (UExpr -> TIMES UExpr .)
    RBRACK          reduce using rule 264 (UExpr -> TIMES UExpr .)
    RPAREN          reduce using rule 264 (UExpr -> TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 264 (UExpr -> TIMES UExpr .)
    RBRACE          reduce using rule 264 (UExpr -> TIMES UExpr .)
    COLON           reduce using rule 264 (UExpr -> TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 264 (UExpr -> TIMES UExpr .)
    DDD             reduce using rule 264 (UExpr -> TIMES UExpr .)


state 187

    (85) NonExprType -> FuncType .
    (220) ConvType -> FuncType .
    (146) FuncLiteralDecl -> FuncType .

    DDD             reduce using rule 85 (NonExprType -> FuncType .)
    COMMA           reduce using rule 85 (NonExprType -> FuncType .)
    RPAREN          reduce using rule 85 (NonExprType -> FuncType .)
    COLON           reduce using rule 85 (NonExprType -> FuncType .)
    EQUAL           reduce using rule 85 (NonExprType -> FuncType .)
    COLONEQ         reduce using rule 85 (NonExprType -> FuncType .)
    LEFT_ANGLE      reduce using rule 220 (ConvType -> FuncType .)
    LBRACE          reduce using rule 146 (FuncLiteralDecl -> FuncType .)


state 188

    (205) PExpr -> LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 315


state 189

    (229) ExprOrType -> NonExprType .

    DDD             reduce using rule 229 (ExprOrType -> NonExprType .)
    COMMA           reduce using rule 229 (ExprOrType -> NonExprType .)
    RPAREN          reduce using rule 229 (ExprOrType -> NonExprType .)
    COLON           reduce using rule 229 (ExprOrType -> NonExprType .)
    EQUAL           reduce using rule 229 (ExprOrType -> NonExprType .)
    COLONEQ         reduce using rule 229 (ExprOrType -> NonExprType .)


state 190

    (86) NonExprType -> OtherType .
    (260) Arrayexp -> OtherType . LBRACE ExprList RBRACE
    (221) ConvType -> OtherType .
    (222) CompType -> OtherType .

    DDD             reduce using rule 86 (NonExprType -> OtherType .)
    COMMA           reduce using rule 86 (NonExprType -> OtherType .)
    RPAREN          reduce using rule 86 (NonExprType -> OtherType .)
    COLON           reduce using rule 86 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 86 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 86 (NonExprType -> OtherType .)
    LBRACE          shift and go to state 130
    LEFT_ANGLE      reduce using rule 221 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 222 (CompType -> OtherType .)


state 191

    (228) ExprOrType -> Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    DDD             reduce using rule 228 (ExprOrType -> Expr .)
    COMMA           reduce using rule 228 (ExprOrType -> Expr .)
    RPAREN          reduce using rule 228 (ExprOrType -> Expr .)
    COLON           reduce using rule 228 (ExprOrType -> Expr .)
    EQUAL           reduce using rule 228 (ExprOrType -> Expr .)
    COLONEQ         reduce using rule 228 (ExprOrType -> Expr .)
    OROR            shift and go to state 171


state 192

    (87) NonExprType -> TIMES . NonExprType
    (264) UExpr -> TIMES . UExpr
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (146) FuncLiteralDecl -> . FuncType

    TIMES           shift and go to state 192
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 56
    LPAREN          shift and go to state 81
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 187
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    NonExprType                    shift and go to state 316
    OtherType                      shift and go to state 317
    InterfaceType                  shift and go to state 28
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    FuncLiteralDecl                shift and go to state 33
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 186
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 193

    (73) IfStmt -> IF IfHeader . LoopBody ElseIfList Else
    (62) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 272

    LoopBody                       shift and go to state 318

state 194

    (95) StructType -> STRUCT LBRACE . StructDeclList OSemi RBRACE
    (96) StructType -> STRUCT LBRACE . RBRACE
    (110) StructDeclList -> . StructDecl
    (111) StructDeclList -> . StructDeclList SEMICOL StructDecl
    (114) StructDecl -> . NewNameList NType OLiteral
    (115) StructDecl -> . Embed OLiteral
    (116) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (117) StructDecl -> . TIMES Embed OLiteral
    (118) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (119) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (170) NewNameList -> . NewName
    (171) NewNameList -> . NewNameList COMMA NewName
    (157) Embed -> . IDENTIFIER
    (125) NewName -> . IDENTIFIER

    RBRACE          shift and go to state 327
    LPAREN          shift and go to state 322
    TIMES           shift and go to state 321
    IDENTIFIER      shift and go to state 325

    NewName                        shift and go to state 319
    StructDecl                     shift and go to state 320
    NewNameList                    shift and go to state 323
    StructDeclList                 shift and go to state 324
    Embed                          shift and go to state 326

state 195

    (11) ImportStmtList -> ImportStmtList SEMICOL . ImportStmt
    (137) OSemi -> SEMICOL .
    (9) ImportStmt -> . ImportHere STRING
    (12) ImportHere -> .
    (13) ImportHere -> . IDENTIFIER
    (14) ImportHere -> . DOT

    RPAREN          reduce using rule 137 (OSemi -> SEMICOL .)
    STRING          reduce using rule 12 (ImportHere -> .)
    IDENTIFIER      shift and go to state 17
    DOT             shift and go to state 20

    ImportStmt                     shift and go to state 328
    ImportHere                     shift and go to state 16

state 196

    (7) Import -> IMPORT LPAREN ImportStmtList OSemi . RPAREN

    RPAREN          shift and go to state 329


state 197

    (249) Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .
    (241) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (244) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LEQ             reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GEQ             reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    GREAT           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LESS            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MODEQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OREQ            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    CAREQ           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    OROR            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    EQUAL           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COMMA           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    DDD             reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RPAREN          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    LBRACE          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACK          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    COLON           reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RBRACE          reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PIPE            reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 249 (Prec3Expr_ -> Prec3Expr_ GEQ Prec4Expr_ .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    XOR             shift and go to state 125
    OR              shift and go to state 126


state 198

    (248) Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .
    (241) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (244) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LEQ             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GEQ             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    GREAT           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LESS            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MODEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OREQ            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    CAREQ           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    OROR            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    EQUAL           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COMMA           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    DDD             reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RPAREN          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    LBRACE          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACK          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    COLON           reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RBRACE          reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PIPE            reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 248 (Prec3Expr_ -> Prec3Expr_ LEQ Prec4Expr_ .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    XOR             shift and go to state 125
    OR              shift and go to state 126


state 199

    (246) Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .
    (241) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (244) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LEQ             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GEQ             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    GREAT           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LESS            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MODEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OREQ            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    CAREQ           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    OROR            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    EQUAL           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COMMA           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    DDD             reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RPAREN          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    LBRACE          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACK          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    COLON           reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RBRACE          reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PIPE            reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 246 (Prec3Expr_ -> Prec3Expr_ EQEQ Prec4Expr_ .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    XOR             shift and go to state 125
    OR              shift and go to state 126


state 200

    (251) Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .
    (241) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (244) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    NOTEQ           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LEQ             reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GEQ             reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    GREAT           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LESS            reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPAMP          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSEQ          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSEQ         reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    TIMESEQ         reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MODEQ           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OREQ            reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPEQ           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    CAREQ           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    AMPCAREQ        reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUSPLUS        reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    MINUSMIN        reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    OROR            reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    SEMICOL         reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    EQUAL           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLONEQ         reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COMMA           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    DDD             reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RPAREN          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    LBRACE          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACK          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    COLON           reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RBRACE          reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PIPE            reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 251 (Prec3Expr_ -> Prec3Expr_ LESS Prec4Expr_ .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    XOR             shift and go to state 125
    OR              shift and go to state 126


state 201

    (250) Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .
    (241) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (244) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    NOTEQ           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LEQ             reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GEQ             reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    GREAT           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LESS            reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPAMP          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSEQ          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSEQ         reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    TIMESEQ         reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MODEQ           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OREQ            reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPEQ           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    CAREQ           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    AMPCAREQ        reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUSPLUS        reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    MINUSMIN        reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    OROR            reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    SEMICOL         reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    EQUAL           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLONEQ         reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COMMA           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    DDD             reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RPAREN          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    LBRACE          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACK          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    COLON           reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RBRACE          reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PIPE            reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 250 (Prec3Expr_ -> Prec3Expr_ GREAT Prec4Expr_ .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    XOR             shift and go to state 125
    OR              shift and go to state 126


state 202

    (247) Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .
    (241) Prec4Expr_ -> Prec4Expr_ . PLUS Prec5Expr_
    (242) Prec4Expr_ -> Prec4Expr_ . MINUS Prec5Expr_
    (243) Prec4Expr_ -> Prec4Expr_ . XOR Prec5Expr_
    (244) Prec4Expr_ -> Prec4Expr_ . OR Prec5Expr_

    EQEQ            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    NOTEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LEQ             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GEQ             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    GREAT           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LESS            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPAMP          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSEQ          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    TIMESEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DIVIDEEQ        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MODEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OREQ            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPEQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    CAREQ           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHL_ASSIGN      reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SHR_ASSIGN      reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    AMPCAREQ        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUSPLUS        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    MINUSMIN        reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    OROR            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    SEMICOL         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    EQUAL           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLONEQ         reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COMMA           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    DDD             reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RPAREN          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    LBRACE          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACK          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    COLON           reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_RIGHT     reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RBRACE          reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PIPE            reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    RIGHT_ANGLE     reduce using rule 247 (Prec3Expr_ -> Prec3Expr_ NOTEQ Prec4Expr_ .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    XOR             shift and go to state 125
    OR              shift and go to state 126


state 203

    (215) PExprNoParen -> ConvType LEFT_ANGLE Expr . OComma RIGHT_ANGLE
    (255) Expr -> Expr . OROR Prec2Expr_
    (134) OComma -> .
    (135) OComma -> . COMMA

    OROR            shift and go to state 171
    RIGHT_ANGLE     reduce using rule 134 (OComma -> .)
    COMMA           shift and go to state 331

    OComma                         shift and go to state 330

state 204

    (196) NonDeclStmt -> LabelName COLON Stmt .

    SEMICOL         reduce using rule 196 (NonDeclStmt -> LabelName COLON Stmt .)


state 205

    (189) Stmt -> CompoundStmt .

    SEMICOL         reduce using rule 189 (Stmt -> CompoundStmt .)


state 206

    (190) Stmt -> CommonDecl .

    SEMICOL         reduce using rule 190 (Stmt -> CommonDecl .)


state 207

    (58) CompoundStmt -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 272 (cmtlist -> .)
    LBRACE          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    SEMICOL         reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 332

state 208

    (191) Stmt -> NonDeclStmt .

    SEMICOL         reduce using rule 191 (Stmt -> NonDeclStmt .)


state 209

    (236) Prec5Expr_ -> Prec5Expr_ SHR UExpr .

    DIVIDE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MOD             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPERS          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAR          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMES           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUS            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUS           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    XOR             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OR              reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQEQ            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    NOTEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LEQ             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GEQ             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    GREAT           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LESS            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPAMP          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLON           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OROR            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSEQ          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    TIMESEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DIVIDEEQ        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MODEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    OREQ            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPEQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    CAREQ           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHL_ASSIGN      reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SHR_ASSIGN      reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    AMPCAREQ        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PLUSPLUS        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    MINUSMIN        reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    SEMICOL         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    EQUAL           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COLONEQ         reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    COMMA           reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    LBRACE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    PIPE            reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACK          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RPAREN          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_ANGLE     reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RBRACE          reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    RIGHT_RIGHT     reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)
    DDD             reduce using rule 236 (Prec5Expr_ -> Prec5Expr_ SHR UExpr .)


state 210

    (233) Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .

    DIVIDE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MOD             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPERS          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAR          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMES           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUS            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUS           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    XOR             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OR              reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQEQ            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    NOTEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LEQ             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GEQ             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    GREAT           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LESS            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPAMP          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLON           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OROR            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSEQ          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    TIMESEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DIVIDEEQ        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MODEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    OREQ            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPEQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    CAREQ           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHL_ASSIGN      reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SHR_ASSIGN      reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    AMPCAREQ        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PLUSPLUS        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    MINUSMIN        reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    SEMICOL         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    EQUAL           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COLONEQ         reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    COMMA           reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    LBRACE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    PIPE            reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACK          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RPAREN          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_ANGLE     reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RBRACE          reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    RIGHT_RIGHT     reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)
    DDD             reduce using rule 233 (Prec5Expr_ -> Prec5Expr_ DIVIDE UExpr .)


state 211

    (238) Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .

    DIVIDE          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MOD             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPERS          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAR          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMES           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUS            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUS           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    XOR             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OR              reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQEQ            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    NOTEQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LEQ             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GEQ             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    GREAT           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LESS            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPAMP          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLON           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OROR            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSEQ          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSEQ         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    TIMESEQ         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DIVIDEEQ        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MODEQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    OREQ            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPEQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    CAREQ           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHL_ASSIGN      reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SHR_ASSIGN      reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    AMPCAREQ        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PLUSPLUS        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    MINUSMIN        reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    SEMICOL         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    EQUAL           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COLONEQ         reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    COMMA           reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    LBRACE          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    PIPE            reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACK          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RPAREN          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_ANGLE     reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RBRACE          reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    RIGHT_RIGHT     reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)
    DDD             reduce using rule 238 (Prec5Expr_ -> Prec5Expr_ AMPCAR UExpr .)


state 212

    (237) Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .

    DIVIDE          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MOD             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPERS          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAR          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMES           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUS            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUS           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    XOR             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OR              reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQEQ            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    NOTEQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LEQ             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GEQ             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    GREAT           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LESS            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPAMP          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLON           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OROR            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSEQ          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSEQ         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    TIMESEQ         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DIVIDEEQ        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MODEQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    OREQ            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPEQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    CAREQ           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHL_ASSIGN      reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SHR_ASSIGN      reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    AMPCAREQ        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PLUSPLUS        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    MINUSMIN        reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    SEMICOL         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    EQUAL           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COLONEQ         reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    COMMA           reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    LBRACE          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    PIPE            reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACK          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RPAREN          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_ANGLE     reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RBRACE          reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    RIGHT_RIGHT     reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)
    DDD             reduce using rule 237 (Prec5Expr_ -> Prec5Expr_ AMPERS UExpr .)


state 213

    (239) Prec5Expr_ -> Prec5Expr_ TIMES UExpr .

    DIVIDE          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MOD             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPERS          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAR          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMES           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUS            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUS           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    XOR             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OR              reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQEQ            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    NOTEQ           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LEQ             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GEQ             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    GREAT           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LESS            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPAMP          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLON           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OROR            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSEQ          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSEQ         reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    TIMESEQ         reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DIVIDEEQ        reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MODEQ           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    OREQ            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPEQ           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    CAREQ           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHL_ASSIGN      reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SHR_ASSIGN      reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    AMPCAREQ        reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PLUSPLUS        reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    MINUSMIN        reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    SEMICOL         reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    EQUAL           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COLONEQ         reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    COMMA           reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    LBRACE          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    PIPE            reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACK          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RPAREN          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_ANGLE     reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RBRACE          reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    RIGHT_RIGHT     reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)
    DDD             reduce using rule 239 (Prec5Expr_ -> Prec5Expr_ TIMES UExpr .)


state 214

    (235) Prec5Expr_ -> Prec5Expr_ SHL UExpr .

    DIVIDE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MOD             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPERS          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAR          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMES           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUS            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUS           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    XOR             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OR              reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQEQ            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    NOTEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LEQ             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GEQ             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    GREAT           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LESS            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPAMP          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLON           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OROR            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSEQ          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    TIMESEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DIVIDEEQ        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MODEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    OREQ            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPEQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    CAREQ           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHL_ASSIGN      reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SHR_ASSIGN      reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    AMPCAREQ        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PLUSPLUS        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    MINUSMIN        reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    SEMICOL         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    EQUAL           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COLONEQ         reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    COMMA           reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    LBRACE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    PIPE            reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACK          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RPAREN          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_ANGLE     reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RBRACE          reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    RIGHT_RIGHT     reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)
    DDD             reduce using rule 235 (Prec5Expr_ -> Prec5Expr_ SHL UExpr .)


state 215

    (234) Prec5Expr_ -> Prec5Expr_ MOD UExpr .

    DIVIDE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MOD             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPERS          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAR          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMES           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUS            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUS           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    XOR             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OR              reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQEQ            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    NOTEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LEQ             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GEQ             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    GREAT           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LESS            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPAMP          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLON           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OROR            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSEQ          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    TIMESEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DIVIDEEQ        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MODEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    OREQ            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPEQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    CAREQ           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHL_ASSIGN      reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SHR_ASSIGN      reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    AMPCAREQ        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PLUSPLUS        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    MINUSMIN        reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    SEMICOL         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    EQUAL           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COLONEQ         reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    COMMA           reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    LBRACE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    PIPE            reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACK          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RPAREN          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_ANGLE     reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RBRACE          reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    RIGHT_RIGHT     reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)
    DDD             reduce using rule 234 (Prec5Expr_ -> Prec5Expr_ MOD UExpr .)


state 216

    (94) ChannelType -> LMINUS CHAN TYPE .

    LBRACE          reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    LEFT_ANGLE      reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    LEFT_LEFT       reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    COMMA           reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    OR_RIGHT        reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    RPAREN          reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    EQUAL           reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    DDD             reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    COLON           reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    COLONEQ         reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    SEMICOL         reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    INTEGER         reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    FLOAT           reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    STRING          reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)
    RBRACE          reduce using rule 94 (ChannelType -> LMINUS CHAN TYPE .)


state 217

    (253) Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .
    (246) Prec3Expr_ -> Prec3Expr_ . EQEQ Prec4Expr_
    (247) Prec3Expr_ -> Prec3Expr_ . NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> Prec3Expr_ . LEQ Prec4Expr_
    (249) Prec3Expr_ -> Prec3Expr_ . GEQ Prec4Expr_
    (250) Prec3Expr_ -> Prec3Expr_ . GREAT Prec4Expr_
    (251) Prec3Expr_ -> Prec3Expr_ . LESS Prec4Expr_

    AMPAMP          reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLON           reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OROR            reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COMMA           reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_RIGHT     reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    LBRACE          reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACK          reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSEQ          reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSEQ         reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    TIMESEQ         reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DIVIDEEQ        reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MODEQ           reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    OREQ            reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPEQ           reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    CAREQ           reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHL_ASSIGN      reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SHR_ASSIGN      reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    AMPCAREQ        reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PLUSPLUS        reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    MINUSMIN        reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    SEMICOL         reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQUAL           reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    COLONEQ         reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    PIPE            reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RPAREN          reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RIGHT_ANGLE     reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    RBRACE          reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    DDD             reduce using rule 253 (Prec2Expr_ -> Prec2Expr_ AMPAMP Prec3Expr_ .)
    EQEQ            shift and go to state 91
    NOTEQ           shift and go to state 94
    LEQ             shift and go to state 90
    GEQ             shift and go to state 89
    GREAT           shift and go to state 93
    LESS            shift and go to state 92


state 218

    (147) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist . StmtList cmtlist RBRACE
    (273) cmtlist -> cmtlist . COMMENT
    (168) StmtList -> . Stmt SEMICOL
    (169) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    StmtList                       shift and go to state 334
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    NonDeclStmt                    shift and go to state 208
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 333
    FuncLiteralDecl                shift and go to state 33
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NewName                        shift and go to state 45
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 219

    (24) CommonDecl -> VAR LPAREN RPAREN .

    SEMICOL         reduce using rule 24 (CommonDecl -> VAR LPAREN RPAREN .)


state 220

    (160) VarDeclList -> VarDecl .

    SEMICOL         reduce using rule 160 (VarDeclList -> VarDecl .)
    RPAREN          reduce using rule 160 (VarDeclList -> VarDecl .)


state 221

    (23) CommonDecl -> VAR LPAREN VarDeclList . OSemi RPAREN
    (161) VarDeclList -> VarDeclList . SEMICOL VarDecl
    (136) OSemi -> .
    (137) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 335
    RPAREN          reduce using rule 136 (OSemi -> .)

    OSemi                          shift and go to state 336

state 222

    (79) NType -> FuncType .

    COMMA           reduce using rule 79 (NType -> FuncType .)
    RPAREN          reduce using rule 79 (NType -> FuncType .)
    OR_RIGHT        reduce using rule 79 (NType -> FuncType .)
    INTEGER         reduce using rule 79 (NType -> FuncType .)
    FLOAT           reduce using rule 79 (NType -> FuncType .)
    STRING          reduce using rule 79 (NType -> FuncType .)
    SEMICOL         reduce using rule 79 (NType -> FuncType .)
    RBRACE          reduce using rule 79 (NType -> FuncType .)
    LEFT_ANGLE      reduce using rule 79 (NType -> FuncType .)
    LBRACE          reduce using rule 79 (NType -> FuncType .)
    EQUAL           reduce using rule 79 (NType -> FuncType .)
    DDD             reduce using rule 79 (NType -> FuncType .)
    COLON           reduce using rule 79 (NType -> FuncType .)
    COLONEQ         reduce using rule 79 (NType -> FuncType .)
    LEFT_LEFT       reduce using rule 79 (NType -> FuncType .)


state 223

    (30) VarDecl -> DeclNameList EQUAL . ExprList
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 337
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    FuncLiteral                    shift and go to state 22
    PExpr                          shift and go to state 70

state 224

    (81) NType -> PtrType .

    COMMA           reduce using rule 81 (NType -> PtrType .)
    RPAREN          reduce using rule 81 (NType -> PtrType .)
    OR_RIGHT        reduce using rule 81 (NType -> PtrType .)
    INTEGER         reduce using rule 81 (NType -> PtrType .)
    FLOAT           reduce using rule 81 (NType -> PtrType .)
    STRING          reduce using rule 81 (NType -> PtrType .)
    SEMICOL         reduce using rule 81 (NType -> PtrType .)
    RBRACE          reduce using rule 81 (NType -> PtrType .)
    LEFT_ANGLE      reduce using rule 81 (NType -> PtrType .)
    LBRACE          reduce using rule 81 (NType -> PtrType .)
    EQUAL           reduce using rule 81 (NType -> PtrType .)
    DDD             reduce using rule 81 (NType -> PtrType .)
    COLON           reduce using rule 81 (NType -> PtrType .)
    COLONEQ         reduce using rule 81 (NType -> PtrType .)
    LEFT_LEFT       reduce using rule 81 (NType -> PtrType .)


state 225

    (82) NType -> DotName .

    COMMA           reduce using rule 82 (NType -> DotName .)
    RPAREN          reduce using rule 82 (NType -> DotName .)
    OR_RIGHT        reduce using rule 82 (NType -> DotName .)
    INTEGER         reduce using rule 82 (NType -> DotName .)
    FLOAT           reduce using rule 82 (NType -> DotName .)
    STRING          reduce using rule 82 (NType -> DotName .)
    SEMICOL         reduce using rule 82 (NType -> DotName .)
    RBRACE          reduce using rule 82 (NType -> DotName .)
    LEFT_ANGLE      reduce using rule 82 (NType -> DotName .)
    LBRACE          reduce using rule 82 (NType -> DotName .)
    EQUAL           reduce using rule 82 (NType -> DotName .)
    DDD             reduce using rule 82 (NType -> DotName .)
    COLON           reduce using rule 82 (NType -> DotName .)
    COLONEQ         reduce using rule 82 (NType -> DotName .)
    LEFT_LEFT       reduce using rule 82 (NType -> DotName .)


state 226

    (126) PtrType -> TIMES . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    Name                           shift and go to state 229
    FuncType                       shift and go to state 222
    NType                          shift and go to state 338
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    DotName                        shift and go to state 225

state 227

    (80) NType -> OtherType .

    COMMA           reduce using rule 80 (NType -> OtherType .)
    RPAREN          reduce using rule 80 (NType -> OtherType .)
    OR_RIGHT        reduce using rule 80 (NType -> OtherType .)
    INTEGER         reduce using rule 80 (NType -> OtherType .)
    FLOAT           reduce using rule 80 (NType -> OtherType .)
    STRING          reduce using rule 80 (NType -> OtherType .)
    SEMICOL         reduce using rule 80 (NType -> OtherType .)
    RBRACE          reduce using rule 80 (NType -> OtherType .)
    LEFT_ANGLE      reduce using rule 80 (NType -> OtherType .)
    LBRACE          reduce using rule 80 (NType -> OtherType .)
    EQUAL           reduce using rule 80 (NType -> OtherType .)
    DDD             reduce using rule 80 (NType -> OtherType .)
    COLON           reduce using rule 80 (NType -> OtherType .)
    COLONEQ         reduce using rule 80 (NType -> OtherType .)
    LEFT_LEFT       reduce using rule 80 (NType -> OtherType .)


state 228

    (167) DeclNameList -> DeclNameList COMMA . DeclName
    (178) DeclName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 108

    DeclName                       shift and go to state 339

state 229

    (132) DotName -> Name .
    (133) DotName -> Name . DOT IDENTIFIER

    SEMICOL         reduce using rule 132 (DotName -> Name .)
    RPAREN          reduce using rule 132 (DotName -> Name .)
    COMMA           reduce using rule 132 (DotName -> Name .)
    OR_RIGHT        reduce using rule 132 (DotName -> Name .)
    LEFT_ANGLE      reduce using rule 132 (DotName -> Name .)
    LBRACE          reduce using rule 132 (DotName -> Name .)
    EQUAL           reduce using rule 132 (DotName -> Name .)
    DDD             reduce using rule 132 (DotName -> Name .)
    COLON           reduce using rule 132 (DotName -> Name .)
    COLONEQ         reduce using rule 132 (DotName -> Name .)
    LEFT_LEFT       reduce using rule 132 (DotName -> Name .)
    INTEGER         reduce using rule 132 (DotName -> Name .)
    FLOAT           reduce using rule 132 (DotName -> Name .)
    STRING          reduce using rule 132 (DotName -> Name .)
    RBRACE          reduce using rule 132 (DotName -> Name .)
    DOT             shift and go to state 340


state 230

    (28) VarDecl -> DeclNameList NType .
    (29) VarDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 28 (VarDecl -> DeclNameList NType .)
    RPAREN          reduce using rule 28 (VarDecl -> DeclNameList NType .)
    EQUAL           shift and go to state 341


state 231

    (83) NType -> LPAREN . NType RPAREN
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    Name                           shift and go to state 229
    FuncType                       shift and go to state 222
    NType                          shift and go to state 342
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    DotName                        shift and go to state 225

state 232

    (88) OtherType -> LBRACK . OExpr RBRACK NType
    (142) OExpr -> .
    (143) OExpr -> . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 142 (OExpr -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 343
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 150
    PExpr                          shift and go to state 70

state 233

    (84) NType -> TYPE .

    COMMA           reduce using rule 84 (NType -> TYPE .)
    RPAREN          reduce using rule 84 (NType -> TYPE .)
    OR_RIGHT        reduce using rule 84 (NType -> TYPE .)
    INTEGER         reduce using rule 84 (NType -> TYPE .)
    FLOAT           reduce using rule 84 (NType -> TYPE .)
    STRING          reduce using rule 84 (NType -> TYPE .)
    SEMICOL         reduce using rule 84 (NType -> TYPE .)
    RBRACE          reduce using rule 84 (NType -> TYPE .)
    LEFT_ANGLE      reduce using rule 84 (NType -> TYPE .)
    LBRACE          reduce using rule 84 (NType -> TYPE .)
    EQUAL           reduce using rule 84 (NType -> TYPE .)
    DDD             reduce using rule 84 (NType -> TYPE .)
    COLON           reduce using rule 84 (NType -> TYPE .)
    COLONEQ         reduce using rule 84 (NType -> TYPE .)
    LEFT_LEFT       reduce using rule 84 (NType -> TYPE .)


state 234

    (149) ExprList -> ExprList COMMA Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    EQUAL           reduce using rule 149 (ExprList -> ExprList COMMA Expr .)
    COLONEQ         reduce using rule 149 (ExprList -> ExprList COMMA Expr .)
    COMMA           reduce using rule 149 (ExprList -> ExprList COMMA Expr .)
    SEMICOL         reduce using rule 149 (ExprList -> ExprList COMMA Expr .)
    LBRACE          reduce using rule 149 (ExprList -> ExprList COMMA Expr .)
    RPAREN          reduce using rule 149 (ExprList -> ExprList COMMA Expr .)
    RBRACE          reduce using rule 149 (ExprList -> ExprList COMMA Expr .)
    OROR            shift and go to state 171


state 235

    (51) SimpleStmt -> ExprList COLONEQ ExprList .
    (149) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 51 (SimpleStmt -> ExprList COLONEQ ExprList .)
    LBRACE          reduce using rule 51 (SimpleStmt -> ExprList COLONEQ ExprList .)
    COMMA           shift and go to state 113


state 236

    (50) SimpleStmt -> ExprList EQUAL ExprList .
    (149) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 50 (SimpleStmt -> ExprList EQUAL ExprList .)
    LBRACE          reduce using rule 50 (SimpleStmt -> ExprList EQUAL ExprList .)
    COMMA           shift and go to state 113


state 237

    (21) CommonDecl -> CONSTANT LPAREN RPAREN .

    SEMICOL         reduce using rule 21 (CommonDecl -> CONSTANT LPAREN RPAREN .)


state 238

    (19) CommonDecl -> CONSTANT LPAREN ConstDecl . OSemi RPAREN
    (20) CommonDecl -> CONSTANT LPAREN ConstDecl . SEMICOL ConstDeclList OSemi RPAREN
    (136) OSemi -> .
    (137) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 345
    RPAREN          reduce using rule 136 (OSemi -> .)

    OSemi                          shift and go to state 344

state 239

    (32) ConstDecl -> DeclNameList EQUAL . ExprList
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 346
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    FuncLiteral                    shift and go to state 22
    PExpr                          shift and go to state 70

state 240

    (31) ConstDecl -> DeclNameList NType . EQUAL ExprList

    EQUAL           shift and go to state 347


state 241

    (268) ForCompExpr -> LBRACK Expr . PIPE RangeStmt RBRACK
    (255) Expr -> Expr . OROR Prec2Expr_
    (143) OExpr -> Expr .

    PIPE            shift and go to state 284
    OROR            shift and go to state 171
    RBRACK          reduce using rule 143 (OExpr -> Expr .)


state 242

    (243) Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .
    (233) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (238) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (239) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUS           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    XOR             reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OR              reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQEQ            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    NOTEQ           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LEQ             reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GEQ             reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    GREAT           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LESS            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPAMP          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OROR            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SEMICOL         reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    LBRACE          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSEQ          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSEQ         reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    TIMESEQ         reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MODEQ           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    OREQ            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPEQ           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    CAREQ           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    MINUSMIN        reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    EQUAL           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLONEQ         reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COMMA           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    PIPE            reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACK          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RPAREN          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RBRACE          reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    COLON           reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DDD             reduce using rule 243 (Prec4Expr_ -> Prec4Expr_ XOR Prec5Expr_ .)
    DIVIDE          shift and go to state 98
    MOD             shift and go to state 103
    SHL             shift and go to state 102
    SHR             shift and go to state 97
    AMPERS          shift and go to state 100
    AMPCAR          shift and go to state 99
    TIMES           shift and go to state 101


state 243

    (244) Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .
    (233) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (238) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (239) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUS           reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    XOR             reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OR              reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQEQ            reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    NOTEQ           reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LEQ             reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GEQ             reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    GREAT           reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LESS            reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPAMP          reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OROR            reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SEMICOL         reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    LBRACE          reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSEQ          reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSEQ         reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    TIMESEQ         reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MODEQ           reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    OREQ            reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPEQ           reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    CAREQ           reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    AMPCAREQ        reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PLUSPLUS        reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    MINUSMIN        reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    EQUAL           reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLONEQ         reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COMMA           reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    PIPE            reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACK          reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RPAREN          reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RBRACE          reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    COLON           reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DDD             reduce using rule 244 (Prec4Expr_ -> Prec4Expr_ OR Prec5Expr_ .)
    DIVIDE          shift and go to state 98
    MOD             shift and go to state 103
    SHL             shift and go to state 102
    SHR             shift and go to state 97
    AMPERS          shift and go to state 100
    AMPCAR          shift and go to state 99
    TIMES           shift and go to state 101


state 244

    (241) Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .
    (233) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (238) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (239) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUS           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    XOR             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OR              reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQEQ            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    NOTEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LEQ             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GEQ             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    GREAT           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LESS            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPAMP          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OROR            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SEMICOL         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    LBRACE          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MODEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    OREQ            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPEQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    CAREQ           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    EQUAL           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLONEQ         reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COMMA           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    PIPE            reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACK          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RPAREN          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RBRACE          reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    COLON           reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DDD             reduce using rule 241 (Prec4Expr_ -> Prec4Expr_ PLUS Prec5Expr_ .)
    DIVIDE          shift and go to state 98
    MOD             shift and go to state 103
    SHL             shift and go to state 102
    SHR             shift and go to state 97
    AMPERS          shift and go to state 100
    AMPCAR          shift and go to state 99
    TIMES           shift and go to state 101


state 245

    (242) Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .
    (233) Prec5Expr_ -> Prec5Expr_ . DIVIDE UExpr
    (234) Prec5Expr_ -> Prec5Expr_ . MOD UExpr
    (235) Prec5Expr_ -> Prec5Expr_ . SHL UExpr
    (236) Prec5Expr_ -> Prec5Expr_ . SHR UExpr
    (237) Prec5Expr_ -> Prec5Expr_ . AMPERS UExpr
    (238) Prec5Expr_ -> Prec5Expr_ . AMPCAR UExpr
    (239) Prec5Expr_ -> Prec5Expr_ . TIMES UExpr

    PLUS            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUS           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    XOR             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OR              reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQEQ            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    NOTEQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LEQ             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GEQ             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    GREAT           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LESS            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPAMP          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OROR            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SEMICOL         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    LBRACE          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSEQ          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSEQ         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    TIMESEQ         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDEEQ        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MODEQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    OREQ            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPEQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    CAREQ           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHL_ASSIGN      reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    SHR_ASSIGN      reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    AMPCAREQ        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PLUSPLUS        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    MINUSMIN        reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    EQUAL           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLONEQ         reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COMMA           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    PIPE            reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACK          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RPAREN          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_ANGLE     reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RBRACE          reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    COLON           reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    RIGHT_RIGHT     reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DDD             reduce using rule 242 (Prec4Expr_ -> Prec4Expr_ MINUS Prec5Expr_ .)
    DIVIDE          shift and go to state 98
    MOD             shift and go to state 103
    SHL             shift and go to state 102
    SHR             shift and go to state 97
    AMPERS          shift and go to state 100
    AMPCAR          shift and go to state 99
    TIMES           shift and go to state 101


state 246

    (260) Arrayexp -> OtherType LBRACE ExprList . RBRACE
    (149) ExprList -> ExprList . COMMA Expr

    RBRACE          shift and go to state 348
    COMMA           shift and go to state 113


state 247

    (104) ArgList -> ArgList LPAREN . OArgTypeListOComma RPAREN
    (186) OArgTypeListOComma -> .
    (187) OArgTypeListOComma -> . ArgTypeList OComma
    (184) ArgTypeList -> . ArgType
    (185) ArgTypeList -> . ArgTypeList COMMA ArgType
    (180) ArgType -> . NameOrType
    (181) ArgType -> . IDENTIFIER NameOrType
    (182) ArgType -> . IDENTIFIER DotDotDot
    (183) ArgType -> . DotDotDot
    (230) NameOrType -> . NType
    (202) DotDotDot -> . DDD
    (203) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    RPAREN          reduce using rule 186 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 263
    DDD             shift and go to state 265
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    StructType                     shift and go to state 68
    DotName                        shift and go to state 225
    ArgType                        shift and go to state 259
    Name                           shift and go to state 229
    DotDotDot                      shift and go to state 261
    NType                          shift and go to state 264
    NameOrType                     shift and go to state 262
    ArgTypeList                    shift and go to state 258
    OtherType                      shift and go to state 227
    OArgTypeListOComma             shift and go to state 349
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    FuncType                       shift and go to state 222

state 248

    (127) FuncRetType -> FuncType .

    LBRACE          reduce using rule 127 (FuncRetType -> FuncType .)
    SEMICOL         reduce using rule 127 (FuncRetType -> FuncType .)
    LEFT_ANGLE      reduce using rule 127 (FuncRetType -> FuncType .)
    RPAREN          reduce using rule 127 (FuncRetType -> FuncType .)
    EQUAL           reduce using rule 127 (FuncRetType -> FuncType .)
    COMMA           reduce using rule 127 (FuncRetType -> FuncType .)
    OR_RIGHT        reduce using rule 127 (FuncRetType -> FuncType .)
    DDD             reduce using rule 127 (FuncRetType -> FuncType .)
    COLON           reduce using rule 127 (FuncRetType -> FuncType .)
    COLONEQ         reduce using rule 127 (FuncRetType -> FuncType .)
    LEFT_LEFT       reduce using rule 127 (FuncRetType -> FuncType .)
    INTEGER         reduce using rule 127 (FuncRetType -> FuncType .)
    FLOAT           reduce using rule 127 (FuncRetType -> FuncType .)
    STRING          reduce using rule 127 (FuncRetType -> FuncType .)
    RBRACE          reduce using rule 127 (FuncRetType -> FuncType .)


state 249

    (129) FuncRetType -> PtrType .

    LBRACE          reduce using rule 129 (FuncRetType -> PtrType .)
    SEMICOL         reduce using rule 129 (FuncRetType -> PtrType .)
    LEFT_ANGLE      reduce using rule 129 (FuncRetType -> PtrType .)
    RPAREN          reduce using rule 129 (FuncRetType -> PtrType .)
    EQUAL           reduce using rule 129 (FuncRetType -> PtrType .)
    COMMA           reduce using rule 129 (FuncRetType -> PtrType .)
    OR_RIGHT        reduce using rule 129 (FuncRetType -> PtrType .)
    DDD             reduce using rule 129 (FuncRetType -> PtrType .)
    COLON           reduce using rule 129 (FuncRetType -> PtrType .)
    COLONEQ         reduce using rule 129 (FuncRetType -> PtrType .)
    LEFT_LEFT       reduce using rule 129 (FuncRetType -> PtrType .)
    INTEGER         reduce using rule 129 (FuncRetType -> PtrType .)
    FLOAT           reduce using rule 129 (FuncRetType -> PtrType .)
    STRING          reduce using rule 129 (FuncRetType -> PtrType .)
    RBRACE          reduce using rule 129 (FuncRetType -> PtrType .)


state 250

    (108) FuncRes -> FuncRetType .

    LBRACE          reduce using rule 108 (FuncRes -> FuncRetType .)
    SEMICOL         reduce using rule 108 (FuncRes -> FuncRetType .)
    RBRACE          reduce using rule 108 (FuncRes -> FuncRetType .)
    LEFT_ANGLE      reduce using rule 108 (FuncRes -> FuncRetType .)
    RPAREN          reduce using rule 108 (FuncRes -> FuncRetType .)
    EQUAL           reduce using rule 108 (FuncRes -> FuncRetType .)
    COMMA           reduce using rule 108 (FuncRes -> FuncRetType .)
    OR_RIGHT        reduce using rule 108 (FuncRes -> FuncRetType .)
    DDD             reduce using rule 108 (FuncRes -> FuncRetType .)
    COLON           reduce using rule 108 (FuncRes -> FuncRetType .)
    COLONEQ         reduce using rule 108 (FuncRes -> FuncRetType .)
    LEFT_LEFT       reduce using rule 108 (FuncRes -> FuncRetType .)
    INTEGER         reduce using rule 108 (FuncRes -> FuncRetType .)
    FLOAT           reduce using rule 108 (FuncRes -> FuncRetType .)
    STRING          reduce using rule 108 (FuncRes -> FuncRetType .)


state 251

    (128) FuncRetType -> OtherType .

    LBRACE          reduce using rule 128 (FuncRetType -> OtherType .)
    SEMICOL         reduce using rule 128 (FuncRetType -> OtherType .)
    LEFT_ANGLE      reduce using rule 128 (FuncRetType -> OtherType .)
    RPAREN          reduce using rule 128 (FuncRetType -> OtherType .)
    EQUAL           reduce using rule 128 (FuncRetType -> OtherType .)
    COMMA           reduce using rule 128 (FuncRetType -> OtherType .)
    OR_RIGHT        reduce using rule 128 (FuncRetType -> OtherType .)
    DDD             reduce using rule 128 (FuncRetType -> OtherType .)
    COLON           reduce using rule 128 (FuncRetType -> OtherType .)
    COLONEQ         reduce using rule 128 (FuncRetType -> OtherType .)
    LEFT_LEFT       reduce using rule 128 (FuncRetType -> OtherType .)
    INTEGER         reduce using rule 128 (FuncRetType -> OtherType .)
    FLOAT           reduce using rule 128 (FuncRetType -> OtherType .)
    STRING          reduce using rule 128 (FuncRetType -> OtherType .)
    RBRACE          reduce using rule 128 (FuncRetType -> OtherType .)


state 252

    (102) FuncType -> FUNCTION ArgList FuncRes .

    LEFT_ANGLE      reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    LBRACE          reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    RPAREN          reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    DDD             reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    COMMA           reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    COLON           reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    EQUAL           reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    COLONEQ         reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    SEMICOL         reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    OR_RIGHT        reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    LEFT_LEFT       reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    INTEGER         reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    FLOAT           reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    STRING          reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)
    RBRACE          reduce using rule 102 (FuncType -> FUNCTION ArgList FuncRes .)


state 253

    (109) FuncRes -> LEFT_OR . OArgTypeListOComma OR_RIGHT
    (186) OArgTypeListOComma -> .
    (187) OArgTypeListOComma -> . ArgTypeList OComma
    (184) ArgTypeList -> . ArgType
    (185) ArgTypeList -> . ArgTypeList COMMA ArgType
    (180) ArgType -> . NameOrType
    (181) ArgType -> . IDENTIFIER NameOrType
    (182) ArgType -> . IDENTIFIER DotDotDot
    (183) ArgType -> . DotDotDot
    (230) NameOrType -> . NType
    (202) DotDotDot -> . DDD
    (203) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    OR_RIGHT        reduce using rule 186 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 263
    DDD             shift and go to state 265
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    StructType                     shift and go to state 68
    DotName                        shift and go to state 225
    OArgTypeListOComma             shift and go to state 350
    Name                           shift and go to state 229
    DotDotDot                      shift and go to state 261
    NType                          shift and go to state 264
    NameOrType                     shift and go to state 262
    ArgTypeList                    shift and go to state 258
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    ArgType                        shift and go to state 259
    FuncType                       shift and go to state 222

state 254

    (130) FuncRetType -> DotName .

    LBRACE          reduce using rule 130 (FuncRetType -> DotName .)
    SEMICOL         reduce using rule 130 (FuncRetType -> DotName .)
    LEFT_ANGLE      reduce using rule 130 (FuncRetType -> DotName .)
    RPAREN          reduce using rule 130 (FuncRetType -> DotName .)
    EQUAL           reduce using rule 130 (FuncRetType -> DotName .)
    COMMA           reduce using rule 130 (FuncRetType -> DotName .)
    OR_RIGHT        reduce using rule 130 (FuncRetType -> DotName .)
    DDD             reduce using rule 130 (FuncRetType -> DotName .)
    COLON           reduce using rule 130 (FuncRetType -> DotName .)
    COLONEQ         reduce using rule 130 (FuncRetType -> DotName .)
    LEFT_LEFT       reduce using rule 130 (FuncRetType -> DotName .)
    INTEGER         reduce using rule 130 (FuncRetType -> DotName .)
    FLOAT           reduce using rule 130 (FuncRetType -> DotName .)
    STRING          reduce using rule 130 (FuncRetType -> DotName .)
    RBRACE          reduce using rule 130 (FuncRetType -> DotName .)


state 255

    (131) FuncRetType -> TYPE .

    LBRACE          reduce using rule 131 (FuncRetType -> TYPE .)
    SEMICOL         reduce using rule 131 (FuncRetType -> TYPE .)
    LEFT_ANGLE      reduce using rule 131 (FuncRetType -> TYPE .)
    RPAREN          reduce using rule 131 (FuncRetType -> TYPE .)
    EQUAL           reduce using rule 131 (FuncRetType -> TYPE .)
    COMMA           reduce using rule 131 (FuncRetType -> TYPE .)
    OR_RIGHT        reduce using rule 131 (FuncRetType -> TYPE .)
    DDD             reduce using rule 131 (FuncRetType -> TYPE .)
    COLON           reduce using rule 131 (FuncRetType -> TYPE .)
    COLONEQ         reduce using rule 131 (FuncRetType -> TYPE .)
    LEFT_LEFT       reduce using rule 131 (FuncRetType -> TYPE .)
    INTEGER         reduce using rule 131 (FuncRetType -> TYPE .)
    FLOAT           reduce using rule 131 (FuncRetType -> TYPE .)
    STRING          reduce using rule 131 (FuncRetType -> TYPE .)
    RBRACE          reduce using rule 131 (FuncRetType -> TYPE .)


state 256

    (106) FuncBody -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 272 (cmtlist -> .)
    LBRACE          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    SEMICOL         reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 351

state 257

    (99) FuncDecl -> FUNCTION FuncDecl_ FuncBody .

    SEMICOL         reduce using rule 99 (FuncDecl -> FUNCTION FuncDecl_ FuncBody .)


state 258

    (187) OArgTypeListOComma -> ArgTypeList . OComma
    (185) ArgTypeList -> ArgTypeList . COMMA ArgType
    (134) OComma -> .
    (135) OComma -> . COMMA

    COMMA           shift and go to state 352
    RPAREN          reduce using rule 134 (OComma -> .)
    OR_RIGHT        reduce using rule 134 (OComma -> .)

    OComma                         shift and go to state 353

state 259

    (184) ArgTypeList -> ArgType .

    COMMA           reduce using rule 184 (ArgTypeList -> ArgType .)
    RPAREN          reduce using rule 184 (ArgTypeList -> ArgType .)
    OR_RIGHT        reduce using rule 184 (ArgTypeList -> ArgType .)


state 260

    (103) ArgList -> LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 354


state 261

    (183) ArgType -> DotDotDot .

    COMMA           reduce using rule 183 (ArgType -> DotDotDot .)
    RPAREN          reduce using rule 183 (ArgType -> DotDotDot .)
    OR_RIGHT        reduce using rule 183 (ArgType -> DotDotDot .)


state 262

    (180) ArgType -> NameOrType .

    COMMA           reduce using rule 180 (ArgType -> NameOrType .)
    RPAREN          reduce using rule 180 (ArgType -> NameOrType .)
    OR_RIGHT        reduce using rule 180 (ArgType -> NameOrType .)


state 263

    (181) ArgType -> IDENTIFIER . NameOrType
    (182) ArgType -> IDENTIFIER . DotDotDot
    (179) Name -> IDENTIFIER .
    (230) NameOrType -> . NType
    (202) DotDotDot -> . DDD
    (203) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    DOT             reduce using rule 179 (Name -> IDENTIFIER .)
    COMMA           reduce using rule 179 (Name -> IDENTIFIER .)
    RPAREN          reduce using rule 179 (Name -> IDENTIFIER .)
    OR_RIGHT        reduce using rule 179 (Name -> IDENTIFIER .)
    DDD             shift and go to state 265
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    Name                           shift and go to state 229
    DotDotDot                      shift and go to state 355
    NType                          shift and go to state 264
    NameOrType                     shift and go to state 356
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    DotName                        shift and go to state 225
    FuncType                       shift and go to state 222

state 264

    (230) NameOrType -> NType .

    COMMA           reduce using rule 230 (NameOrType -> NType .)
    RPAREN          reduce using rule 230 (NameOrType -> NType .)
    OR_RIGHT        reduce using rule 230 (NameOrType -> NType .)


state 265

    (202) DotDotDot -> DDD .
    (203) DotDotDot -> DDD . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    COMMA           reduce using rule 202 (DotDotDot -> DDD .)
    RPAREN          reduce using rule 202 (DotDotDot -> DDD .)
    OR_RIGHT        reduce using rule 202 (DotDotDot -> DDD .)
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    Name                           shift and go to state 229
    FuncType                       shift and go to state 222
    NType                          shift and go to state 357
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    DotName                        shift and go to state 225

state 266

    (101) FuncDecl_ -> LEFT_OR OArgTypeListOComma . OR_RIGHT IDENTIFIER ArgList FuncRes

    OR_RIGHT        shift and go to state 358


state 267

    (100) FuncDecl_ -> IDENTIFIER ArgList . FuncRes
    (104) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (107) FuncRes -> .
    (108) FuncRes -> . FuncRetType
    (109) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (127) FuncRetType -> . FuncType
    (128) FuncRetType -> . OtherType
    (129) FuncRetType -> . PtrType
    (130) FuncRetType -> . DotName
    (131) FuncRetType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    LPAREN          shift and go to state 247
    LBRACE          reduce using rule 107 (FuncRes -> .)
    SEMICOL         reduce using rule 107 (FuncRes -> .)
    LEFT_OR         shift and go to state 253
    TYPE            shift and go to state 255
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    DotName                        shift and go to state 254
    Name                           shift and go to state 229
    FuncType                       shift and go to state 248
    OtherType                      shift and go to state 251
    InterfaceType                  shift and go to state 28
    FuncRes                        shift and go to state 359
    PtrType                        shift and go to state 249
    ChannelType                    shift and go to state 46
    FuncRetType                    shift and go to state 250

state 268

    (66) ForHeader -> OSimpleStmt SEMICOL . OSimpleStmt SEMICOL OSimpleStmt
    (138) OSimpleStmt -> .
    (139) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 138 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 141
    OSimpleStmt                    shift and go to state 360
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 269

    (63) RangeStmt -> ExprList EQUAL . RANGE Expr
    (50) SimpleStmt -> ExprList EQUAL . ExprList
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 361
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 236
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 270

    (64) RangeStmt -> ExprList COLONEQ . RANGE Expr
    (51) SimpleStmt -> ExprList COLONEQ . ExprList
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 362
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 235
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 271

    (65) RangeStmt -> RANGE Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 65 (RangeStmt -> RANGE Expr .)
    RBRACK          reduce using rule 65 (RangeStmt -> RANGE Expr .)
    OROR            shift and go to state 171


state 272

    (62) LoopBody -> LBRACE . cmtlist StmtList cmtlist RBRACE
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    COMMENT         reduce using rule 272 (cmtlist -> .)
    LBRACE          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    SEMICOL         reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 363

state 273

    (69) ForBody -> ForHeader LoopBody .

    SEMICOL         reduce using rule 69 (ForBody -> ForHeader LoopBody .)


state 274

    (98) InterfaceType -> INTERFACE LBRACE RBRACE .

    LBRACE          reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COMMA           reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RPAREN          reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    DDD             reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    EQUAL           reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    SEMICOL         reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLON           reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    COLONEQ         reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    INTEGER         reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    FLOAT           reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    STRING          reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)
    RBRACE          reduce using rule 98 (InterfaceType -> INTERFACE LBRACE RBRACE .)


state 275

    (112) InterfaceDeclList -> InterfaceDecl .

    SEMICOL         reduce using rule 112 (InterfaceDeclList -> InterfaceDecl .)
    RBRACE          reduce using rule 112 (InterfaceDeclList -> InterfaceDecl .)


state 276

    (97) InterfaceType -> INTERFACE LBRACE InterfaceDeclList . OSemi RBRACE
    (113) InterfaceDeclList -> InterfaceDeclList . SEMICOL InterfaceDecl
    (136) OSemi -> .
    (137) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 364
    RBRACE          reduce using rule 136 (OSemi -> .)

    OSemi                          shift and go to state 365

state 277

    (120) InterfaceDecl -> NewName . InDecl
    (123) InDecl -> . LPAREN OArgTypeListOComma RPAREN FuncRes

    LPAREN          shift and go to state 366

    InDecl                         shift and go to state 367

state 278

    (122) InterfaceDecl -> LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 368


state 279

    (121) InterfaceDecl -> IDENTIFIER .
    (125) NewName -> IDENTIFIER .

    SEMICOL         reduce using rule 121 (InterfaceDecl -> IDENTIFIER .)
    RBRACE          reduce using rule 121 (InterfaceDecl -> IDENTIFIER .)
    LPAREN          reduce using rule 125 (NewName -> IDENTIFIER .)


state 280

    (164) TypeDeclList -> TypeDecl .

    SEMICOL         reduce using rule 164 (TypeDeclList -> TypeDecl .)
    RPAREN          reduce using rule 164 (TypeDeclList -> TypeDecl .)


state 281

    (26) CommonDecl -> TYPE LPAREN TypeDeclList . OSemi RPAREN
    (165) TypeDeclList -> TypeDeclList . SEMICOL TypeDecl
    (136) OSemi -> .
    (137) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 369
    RPAREN          reduce using rule 136 (OSemi -> .)

    OSemi                          shift and go to state 370

state 282

    (27) CommonDecl -> TYPE LPAREN RPAREN .

    SEMICOL         reduce using rule 27 (CommonDecl -> TYPE LPAREN RPAREN .)


state 283

    (37) TypeDecl -> TypeDeclName NType .

    SEMICOL         reduce using rule 37 (TypeDecl -> TypeDeclName NType .)
    RPAREN          reduce using rule 37 (TypeDecl -> TypeDeclName NType .)


state 284

    (268) ForCompExpr -> LBRACK Expr PIPE . RangeStmt RBRACK
    (63) RangeStmt -> . ExprList EQUAL RANGE Expr
    (64) RangeStmt -> . ExprList COLONEQ RANGE Expr
    (65) RangeStmt -> . RANGE Expr
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RANGE           shift and go to state 140
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    RangeStmt                      shift and go to state 371
    ExprList                       shift and go to state 372
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 285

    (88) OtherType -> LBRACK OExpr RBRACK . NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    Name                           shift and go to state 229
    FuncType                       shift and go to state 222
    NType                          shift and go to state 373
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    DotName                        shift and go to state 225

state 286

    (93) ChannelType -> CHAN LMINUS TYPE .

    LBRACE          reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    LEFT_ANGLE      reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    LEFT_LEFT       reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    COMMA           reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    OR_RIGHT        reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    RPAREN          reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    EQUAL           reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    DDD             reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    COLON           reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    COLONEQ         reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    SEMICOL         reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    INTEGER         reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    FLOAT           reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    STRING          reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)
    RBRACE          reduce using rule 93 (ChannelType -> CHAN LMINUS TYPE .)


state 287

    (72) IfHeader -> OSimpleStmt SEMICOL . OSimpleStmt
    (138) OSimpleStmt -> .
    (139) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    LBRACE          reduce using rule 138 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 141
    OSimpleStmt                    shift and go to state 374
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 288

    (231) SwitchStmt -> SWITCH IfHeader LBRACE . CaseBlockList RBRACE
    (60) CaseBlockList -> .
    (61) CaseBlockList -> . CaseBlockList CaseBlock

    RBRACE          reduce using rule 60 (CaseBlockList -> .)
    CASE            reduce using rule 60 (CaseBlockList -> .)
    DEFAULT         reduce using rule 60 (CaseBlockList -> .)

    CaseBlockList                  shift and go to state 375

state 289

    (172) KeyvalList -> Keyval .

    COMMA           reduce using rule 172 (KeyvalList -> Keyval .)
    RIGHT_RIGHT     reduce using rule 172 (KeyvalList -> Keyval .)


state 290

    (216) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 376


state 291

    (223) Keyval -> Expr . COLON CompLitExpr
    (224) BareCompLitExpr -> Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 377
    COMMA           reduce using rule 224 (BareCompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 224 (BareCompLitExpr -> Expr .)
    OROR            shift and go to state 171


state 292

    (225) BareCompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (176) BracedKeyvalList -> .
    (177) BracedKeyvalList -> . KeyvalList OComma
    (172) KeyvalList -> . Keyval
    (173) KeyvalList -> . BareCompLitExpr
    (174) KeyvalList -> . KeyvalList COMMA Keyval
    (175) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (223) Keyval -> . Expr COLON CompLitExpr
    (224) BareCompLitExpr -> . Expr
    (225) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 176 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 292
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 291
    PseudoCall                     shift and go to state 49
    KeyvalList                     shift and go to state 293
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Keyval                         shift and go to state 289
    BareCompLitExpr                shift and go to state 294
    PExpr                          shift and go to state 70
    BracedKeyvalList               shift and go to state 378

state 293

    (177) BracedKeyvalList -> KeyvalList . OComma
    (174) KeyvalList -> KeyvalList . COMMA Keyval
    (175) KeyvalList -> KeyvalList . COMMA BareCompLitExpr
    (134) OComma -> .
    (135) OComma -> . COMMA

    COMMA           shift and go to state 379
    RIGHT_RIGHT     reduce using rule 134 (OComma -> .)

    OComma                         shift and go to state 380

state 294

    (173) KeyvalList -> BareCompLitExpr .

    COMMA           reduce using rule 173 (KeyvalList -> BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 173 (KeyvalList -> BareCompLitExpr .)


state 295

    (211) PExprNoParen -> PExpr LBRACK Expr . RBRACK
    (255) Expr -> Expr . OROR Prec2Expr_
    (143) OExpr -> Expr .

    RBRACK          shift and go to state 381
    OROR            shift and go to state 171
    COLON           reduce using rule 143 (OExpr -> Expr .)


state 296

    (212) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr RBRACK
    (213) PExprNoParen -> PExpr LBRACK OExpr . COLON OExpr COLON OExpr RBRACK

    COLON           shift and go to state 382


state 297

    (270) PseudoCall -> PExpr LPAREN ExprOrTypeList . OComma RPAREN
    (271) PseudoCall -> PExpr LPAREN ExprOrTypeList . DDD OComma RPAREN
    (151) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType
    (134) OComma -> .
    (135) OComma -> . COMMA

    DDD             shift and go to state 385
    COMMA           shift and go to state 384
    RPAREN          reduce using rule 134 (OComma -> .)

    OComma                         shift and go to state 383

state 298

    (150) ExprOrTypeList -> ExprOrType .

    DDD             reduce using rule 150 (ExprOrTypeList -> ExprOrType .)
    COMMA           reduce using rule 150 (ExprOrTypeList -> ExprOrType .)
    RPAREN          reduce using rule 150 (ExprOrTypeList -> ExprOrType .)
    COLON           reduce using rule 150 (ExprOrTypeList -> ExprOrType .)
    EQUAL           reduce using rule 150 (ExprOrTypeList -> ExprOrType .)
    COLONEQ         reduce using rule 150 (ExprOrTypeList -> ExprOrType .)


state 299

    (269) PseudoCall -> PExpr LPAREN RPAREN .

    DOT             reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACK          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEFT_LEFT       reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    LPAREN          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDE          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    MOD             reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL             reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR             reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPERS          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAR          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMES           reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUS            reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUS           reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    XOR             reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    OR              reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQEQ            reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    NOTEQ           reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    LEQ             reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    GEQ             reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    GREAT           reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    LESS            reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPAMP          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLON           reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    OROR            reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    COMMA           reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_RIGHT     reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    SEMICOL         reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    RPAREN          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSEQ          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSEQ         reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    TIMESEQ         reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    DIVIDEEQ        reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    MODEQ           reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    OREQ            reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPEQ           reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    CAREQ           reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    AMPCAREQ        reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    MINUSMIN        reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    EQUAL           reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    COLONEQ         reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    LBRACE          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    PIPE            reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACK          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    RIGHT_ANGLE     reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    RBRACE          reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)
    DDD             reduce using rule 269 (PseudoCall -> PExpr LPAREN RPAREN .)


state 300

    (217) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 386


state 301

    (209) PExprNoParen -> PExpr DOT LPAREN . ExprOrType RPAREN
    (210) PExprNoParen -> PExpr DOT LPAREN . TYPE RPAREN
    (228) ExprOrType -> . Expr
    (229) ExprOrType -> . NonExprType
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (146) FuncLiteralDecl -> . FuncType

    TYPE            shift and go to state 388
    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 192
    LMINUS          shift and go to state 31
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 187
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    ExprOrType                     shift and go to state 387
    Arrayexp                       shift and go to state 75
    NonExprType                    shift and go to state 189
    OtherType                      shift and go to state 190
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 191
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 302

    (208) PExprNoParen -> PExpr DOT IDENTIFIER .

    DOT             reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACK          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LPAREN          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDE          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MOD             reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL             reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR             reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPERS          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAR          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMES           reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUS            reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUS           reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    XOR             reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OR              reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQEQ            reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    NOTEQ           reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LEQ             reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GEQ             reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    GREAT           reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LESS            reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPAMP          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSEQ          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSEQ         reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    TIMESEQ         reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DIVIDEEQ        reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MODEQ           reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OREQ            reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPEQ           reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    CAREQ           reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHL_ASSIGN      reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SHR_ASSIGN      reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    AMPCAREQ        reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PLUSPLUS        reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    MINUSMIN        reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    OROR            reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    SEMICOL         reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    EQUAL           reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLONEQ         reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COMMA           reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    LBRACE          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    PIPE            reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACK          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RPAREN          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_ANGLE     reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RBRACE          reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    COLON           reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    RIGHT_RIGHT     reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)
    DDD             reduce using rule 208 (PExprNoParen -> PExpr DOT IDENTIFIER .)


state 303

    (255) Expr -> Expr OROR Prec2Expr_ .
    (253) Prec2Expr_ -> Prec2Expr_ . AMPAMP Prec3Expr_

    PLUSEQ          reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSEQ         reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    TIMESEQ         reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    DIVIDEEQ        reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    MODEQ           reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    OREQ            reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    AMPEQ           reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    CAREQ           reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    SHL_ASSIGN      reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    SHR_ASSIGN      reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    AMPCAREQ        reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    PLUSPLUS        reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    MINUSMIN        reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    OROR            reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    SEMICOL         reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    EQUAL           reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    COLONEQ         reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    COMMA           reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_ANGLE     reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    DDD             reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    RPAREN          reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACK          reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    COLON           reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    LBRACE          reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    PIPE            reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    RIGHT_RIGHT     reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    RBRACE          reduce using rule 255 (Expr -> Expr OROR Prec2Expr_ .)
    AMPAMP          shift and go to state 106


state 304

    (46) SimpleStmt -> Expr CAREQ Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 46 (SimpleStmt -> Expr CAREQ Expr .)
    LBRACE          reduce using rule 46 (SimpleStmt -> Expr CAREQ Expr .)
    OROR            shift and go to state 171


state 305

    (41) SimpleStmt -> Expr TIMESEQ Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 41 (SimpleStmt -> Expr TIMESEQ Expr .)
    LBRACE          reduce using rule 41 (SimpleStmt -> Expr TIMESEQ Expr .)
    OROR            shift and go to state 171


state 306

    (39) SimpleStmt -> Expr PLUSEQ Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 39 (SimpleStmt -> Expr PLUSEQ Expr .)
    LBRACE          reduce using rule 39 (SimpleStmt -> Expr PLUSEQ Expr .)
    OROR            shift and go to state 171


state 307

    (43) SimpleStmt -> Expr MODEQ Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 43 (SimpleStmt -> Expr MODEQ Expr .)
    LBRACE          reduce using rule 43 (SimpleStmt -> Expr MODEQ Expr .)
    OROR            shift and go to state 171


state 308

    (48) SimpleStmt -> Expr SHR_ASSIGN Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 48 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    LBRACE          reduce using rule 48 (SimpleStmt -> Expr SHR_ASSIGN Expr .)
    OROR            shift and go to state 171


state 309

    (44) SimpleStmt -> Expr OREQ Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 44 (SimpleStmt -> Expr OREQ Expr .)
    LBRACE          reduce using rule 44 (SimpleStmt -> Expr OREQ Expr .)
    OROR            shift and go to state 171


state 310

    (40) SimpleStmt -> Expr MINUSEQ Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 40 (SimpleStmt -> Expr MINUSEQ Expr .)
    LBRACE          reduce using rule 40 (SimpleStmt -> Expr MINUSEQ Expr .)
    OROR            shift and go to state 171


state 311

    (45) SimpleStmt -> Expr AMPEQ Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 45 (SimpleStmt -> Expr AMPEQ Expr .)
    LBRACE          reduce using rule 45 (SimpleStmt -> Expr AMPEQ Expr .)
    OROR            shift and go to state 171


state 312

    (49) SimpleStmt -> Expr AMPCAREQ Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 49 (SimpleStmt -> Expr AMPCAREQ Expr .)
    LBRACE          reduce using rule 49 (SimpleStmt -> Expr AMPCAREQ Expr .)
    OROR            shift and go to state 171


state 313

    (47) SimpleStmt -> Expr SHL_ASSIGN Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 47 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    LBRACE          reduce using rule 47 (SimpleStmt -> Expr SHL_ASSIGN Expr .)
    OROR            shift and go to state 171


state 314

    (42) SimpleStmt -> Expr DIVIDEEQ Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    SEMICOL         reduce using rule 42 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    LBRACE          reduce using rule 42 (SimpleStmt -> Expr DIVIDEEQ Expr .)
    OROR            shift and go to state 171


state 315

    (205) PExpr -> LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 205 (PExpr -> LPAREN ExprOrType RPAREN .)


state 316

    (87) NonExprType -> TIMES NonExprType .

    DDD             reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    COMMA           reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    RPAREN          reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    COLON           reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    EQUAL           reduce using rule 87 (NonExprType -> TIMES NonExprType .)
    COLONEQ         reduce using rule 87 (NonExprType -> TIMES NonExprType .)


state 317

    (86) NonExprType -> OtherType .
    (221) ConvType -> OtherType .
    (222) CompType -> OtherType .

    RPAREN          reduce using rule 86 (NonExprType -> OtherType .)
    DDD             reduce using rule 86 (NonExprType -> OtherType .)
    COMMA           reduce using rule 86 (NonExprType -> OtherType .)
    COLON           reduce using rule 86 (NonExprType -> OtherType .)
    EQUAL           reduce using rule 86 (NonExprType -> OtherType .)
    COLONEQ         reduce using rule 86 (NonExprType -> OtherType .)
    LEFT_ANGLE      reduce using rule 221 (ConvType -> OtherType .)
    LEFT_LEFT       reduce using rule 222 (CompType -> OtherType .)


state 318

    (73) IfStmt -> IF IfHeader LoopBody . ElseIfList Else
    (75) ElseIfList -> .
    (76) ElseIfList -> . ElseIfList ElseIf

    ELSE            reduce using rule 75 (ElseIfList -> .)
    SEMICOL         reduce using rule 75 (ElseIfList -> .)

    ElseIfList                     shift and go to state 389

state 319

    (170) NewNameList -> NewName .

    COMMA           reduce using rule 170 (NewNameList -> NewName .)
    LPAREN          reduce using rule 170 (NewNameList -> NewName .)
    TYPE            reduce using rule 170 (NewNameList -> NewName .)
    FUNCTION        reduce using rule 170 (NewNameList -> NewName .)
    LBRACK          reduce using rule 170 (NewNameList -> NewName .)
    TIMES           reduce using rule 170 (NewNameList -> NewName .)
    STRUCT          reduce using rule 170 (NewNameList -> NewName .)
    INTERFACE       reduce using rule 170 (NewNameList -> NewName .)
    CHAN            reduce using rule 170 (NewNameList -> NewName .)
    LMINUS          reduce using rule 170 (NewNameList -> NewName .)
    IDENTIFIER      reduce using rule 170 (NewNameList -> NewName .)


state 320

    (110) StructDeclList -> StructDecl .

    SEMICOL         reduce using rule 110 (StructDeclList -> StructDecl .)
    RBRACE          reduce using rule 110 (StructDeclList -> StructDecl .)


state 321

    (117) StructDecl -> TIMES . Embed OLiteral
    (119) StructDecl -> TIMES . LPAREN Embed RPAREN OLiteral
    (157) Embed -> . IDENTIFIER

    LPAREN          shift and go to state 390
    IDENTIFIER      shift and go to state 392

    Embed                          shift and go to state 391

state 322

    (116) StructDecl -> LPAREN . Embed RPAREN OLiteral
    (118) StructDecl -> LPAREN . TIMES Embed RPAREN OLiteral
    (157) Embed -> . IDENTIFIER

    TIMES           shift and go to state 393
    IDENTIFIER      shift and go to state 392

    Embed                          shift and go to state 394

state 323

    (114) StructDecl -> NewNameList . NType OLiteral
    (171) NewNameList -> NewNameList . COMMA NewName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    COMMA           shift and go to state 395
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    Name                           shift and go to state 229
    FuncType                       shift and go to state 222
    NType                          shift and go to state 396
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    DotName                        shift and go to state 225

state 324

    (95) StructType -> STRUCT LBRACE StructDeclList . OSemi RBRACE
    (111) StructDeclList -> StructDeclList . SEMICOL StructDecl
    (136) OSemi -> .
    (137) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 397
    RBRACE          reduce using rule 136 (OSemi -> .)

    OSemi                          shift and go to state 398

state 325

    (157) Embed -> IDENTIFIER .
    (125) NewName -> IDENTIFIER .

    INTEGER         reduce using rule 157 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 157 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 157 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 157 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 157 (Embed -> IDENTIFIER .)
    COMMA           reduce using rule 125 (NewName -> IDENTIFIER .)
    LPAREN          reduce using rule 125 (NewName -> IDENTIFIER .)
    TYPE            reduce using rule 125 (NewName -> IDENTIFIER .)
    FUNCTION        reduce using rule 125 (NewName -> IDENTIFIER .)
    LBRACK          reduce using rule 125 (NewName -> IDENTIFIER .)
    TIMES           reduce using rule 125 (NewName -> IDENTIFIER .)
    STRUCT          reduce using rule 125 (NewName -> IDENTIFIER .)
    INTERFACE       reduce using rule 125 (NewName -> IDENTIFIER .)
    CHAN            reduce using rule 125 (NewName -> IDENTIFIER .)
    LMINUS          reduce using rule 125 (NewName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 125 (NewName -> IDENTIFIER .)


state 326

    (115) StructDecl -> Embed . OLiteral
    (152) OLiteral -> .
    (153) OLiteral -> . Literal
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING

    SEMICOL         reduce using rule 152 (OLiteral -> .)
    RBRACE          reduce using rule 152 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42

    OLiteral                       shift and go to state 400
    Literal                        shift and go to state 399

state 327

    (96) StructType -> STRUCT LBRACE RBRACE .

    EQUAL           reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    LBRACE          reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_ANGLE      reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    LEFT_LEFT       reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    SEMICOL         reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    RBRACE          reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    COMMA           reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    RPAREN          reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    OR_RIGHT        reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    INTEGER         reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    FLOAT           reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    STRING          reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    COLON           reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    COLONEQ         reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)
    DDD             reduce using rule 96 (StructType -> STRUCT LBRACE RBRACE .)


state 328

    (11) ImportStmtList -> ImportStmtList SEMICOL ImportStmt .

    SEMICOL         reduce using rule 11 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)
    RPAREN          reduce using rule 11 (ImportStmtList -> ImportStmtList SEMICOL ImportStmt .)


state 329

    (7) Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .

    SEMICOL         reduce using rule 7 (Import -> IMPORT LPAREN ImportStmtList OSemi RPAREN .)


state 330

    (215) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma . RIGHT_ANGLE

    RIGHT_ANGLE     shift and go to state 401


state 331

    (135) OComma -> COMMA .

    RIGHT_ANGLE     reduce using rule 135 (OComma -> COMMA .)
    RPAREN          reduce using rule 135 (OComma -> COMMA .)


state 332

    (58) CompoundStmt -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (273) cmtlist -> cmtlist . COMMENT
    (168) StmtList -> . Stmt SEMICOL
    (169) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    StmtList                       shift and go to state 402
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 333
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NonDeclStmt                    shift and go to state 208
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    FuncLiteralDecl                shift and go to state 33
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 333

    (168) StmtList -> Stmt . SEMICOL

    SEMICOL         shift and go to state 403


state 334

    (147) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList . cmtlist RBRACE
    (169) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 272 (cmtlist -> .)
    COMMENT         reduce using rule 272 (cmtlist -> .)
    LBRACE          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    SEMICOL         reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 404

state 335

    (161) VarDeclList -> VarDeclList SEMICOL . VarDecl
    (137) OSemi -> SEMICOL .
    (28) VarDecl -> . DeclNameList NType
    (29) VarDecl -> . DeclNameList NType EQUAL ExprList
    (30) VarDecl -> . DeclNameList EQUAL ExprList
    (166) DeclNameList -> . DeclName
    (167) DeclNameList -> . DeclNameList COMMA DeclName
    (178) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 137 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 108

    DeclName                       shift and go to state 109
    VarDecl                        shift and go to state 405
    DeclNameList                   shift and go to state 112

state 336

    (23) CommonDecl -> VAR LPAREN VarDeclList OSemi . RPAREN

    RPAREN          shift and go to state 406


state 337

    (30) VarDecl -> DeclNameList EQUAL ExprList .
    (149) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 30 (VarDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 30 (VarDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 113


state 338

    (126) PtrType -> TIMES NType .

    EQUAL           reduce using rule 126 (PtrType -> TIMES NType .)
    COMMA           reduce using rule 126 (PtrType -> TIMES NType .)
    RPAREN          reduce using rule 126 (PtrType -> TIMES NType .)
    OR_RIGHT        reduce using rule 126 (PtrType -> TIMES NType .)
    SEMICOL         reduce using rule 126 (PtrType -> TIMES NType .)
    RBRACE          reduce using rule 126 (PtrType -> TIMES NType .)
    LEFT_ANGLE      reduce using rule 126 (PtrType -> TIMES NType .)
    LBRACE          reduce using rule 126 (PtrType -> TIMES NType .)
    DDD             reduce using rule 126 (PtrType -> TIMES NType .)
    COLON           reduce using rule 126 (PtrType -> TIMES NType .)
    COLONEQ         reduce using rule 126 (PtrType -> TIMES NType .)
    LEFT_LEFT       reduce using rule 126 (PtrType -> TIMES NType .)
    INTEGER         reduce using rule 126 (PtrType -> TIMES NType .)
    FLOAT           reduce using rule 126 (PtrType -> TIMES NType .)
    STRING          reduce using rule 126 (PtrType -> TIMES NType .)


state 339

    (167) DeclNameList -> DeclNameList COMMA DeclName .

    EQUAL           reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    COMMA           reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    LPAREN          reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    TYPE            reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    FUNCTION        reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    LBRACK          reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    TIMES           reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    STRUCT          reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    INTERFACE       reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    CHAN            reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    LMINUS          reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    IDENTIFIER      reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    SEMICOL         reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)
    RPAREN          reduce using rule 167 (DeclNameList -> DeclNameList COMMA DeclName .)


state 340

    (133) DotName -> Name DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 407


state 341

    (29) VarDecl -> DeclNameList NType EQUAL . ExprList
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 408
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    FuncLiteral                    shift and go to state 22
    PExpr                          shift and go to state 70

state 342

    (83) NType -> LPAREN NType . RPAREN

    RPAREN          shift and go to state 409


state 343

    (143) OExpr -> Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    RBRACK          reduce using rule 143 (OExpr -> Expr .)
    COLON           reduce using rule 143 (OExpr -> Expr .)
    OROR            shift and go to state 171


state 344

    (19) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi . RPAREN

    RPAREN          shift and go to state 410


state 345

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL . ConstDeclList OSemi RPAREN
    (137) OSemi -> SEMICOL .
    (162) ConstDeclList -> . ConstDecl1
    (163) ConstDeclList -> . ConstDeclList SEMICOL ConstDecl1
    (33) ConstDecl1 -> . ConstDecl
    (34) ConstDecl1 -> . DeclNameList NType
    (35) ConstDecl1 -> . DeclNameList
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (166) DeclNameList -> . DeclName
    (167) DeclNameList -> . DeclNameList COMMA DeclName
    (178) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 137 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 108

    ConstDecl1                     shift and go to state 413
    DeclName                       shift and go to state 109
    ConstDecl                      shift and go to state 414
    ConstDeclList                  shift and go to state 411
    DeclNameList                   shift and go to state 412

state 346

    (32) ConstDecl -> DeclNameList EQUAL ExprList .
    (149) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 32 (ConstDecl -> DeclNameList EQUAL ExprList .)
    RPAREN          reduce using rule 32 (ConstDecl -> DeclNameList EQUAL ExprList .)
    COMMA           shift and go to state 113


state 347

    (31) ConstDecl -> DeclNameList NType EQUAL . ExprList
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 159
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 415
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    FuncLiteral                    shift and go to state 22
    PExpr                          shift and go to state 70

state 348

    (260) Arrayexp -> OtherType LBRACE ExprList RBRACE .

    PLUSEQ          reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MINUSEQ         reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    TIMESEQ         reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    DIVIDEEQ        reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MODEQ           reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    OREQ            reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    AMPEQ           reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    CAREQ           reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SHL_ASSIGN      reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SHR_ASSIGN      reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    AMPCAREQ        reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PLUSPLUS        reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    MINUSMIN        reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    OROR            reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    SEMICOL         reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    EQUAL           reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COLONEQ         reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COMMA           reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    COLON           reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RIGHT_RIGHT     reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    LBRACE          reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RBRACK          reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RIGHT_ANGLE     reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RBRACE          reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    RPAREN          reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    DDD             reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)
    PIPE            reduce using rule 260 (Arrayexp -> OtherType LBRACE ExprList RBRACE .)


state 349

    (104) ArgList -> ArgList LPAREN OArgTypeListOComma . RPAREN

    RPAREN          shift and go to state 416


state 350

    (109) FuncRes -> LEFT_OR OArgTypeListOComma . OR_RIGHT

    OR_RIGHT        shift and go to state 417


state 351

    (106) FuncBody -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (273) cmtlist -> cmtlist . COMMENT
    (168) StmtList -> . Stmt SEMICOL
    (169) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    StmtList                       shift and go to state 418
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 333
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NonDeclStmt                    shift and go to state 208
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    FuncLiteralDecl                shift and go to state 33
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 352

    (185) ArgTypeList -> ArgTypeList COMMA . ArgType
    (135) OComma -> COMMA .
    (180) ArgType -> . NameOrType
    (181) ArgType -> . IDENTIFIER NameOrType
    (182) ArgType -> . IDENTIFIER DotDotDot
    (183) ArgType -> . DotDotDot
    (230) NameOrType -> . NType
    (202) DotDotDot -> . DDD
    (203) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    RPAREN          reduce using rule 135 (OComma -> COMMA .)
    OR_RIGHT        reduce using rule 135 (OComma -> COMMA .)
    IDENTIFIER      shift and go to state 263
    DDD             shift and go to state 265
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    StructType                     shift and go to state 68
    DotName                        shift and go to state 225
    Name                           shift and go to state 229
    DotDotDot                      shift and go to state 261
    NType                          shift and go to state 264
    NameOrType                     shift and go to state 262
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    ArgType                        shift and go to state 419
    FuncType                       shift and go to state 222

state 353

    (187) OArgTypeListOComma -> ArgTypeList OComma .

    OR_RIGHT        reduce using rule 187 (OArgTypeListOComma -> ArgTypeList OComma .)
    RPAREN          reduce using rule 187 (OArgTypeListOComma -> ArgTypeList OComma .)


state 354

    (103) ArgList -> LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    CHAN            reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LMINUS          reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 103 (ArgList -> LPAREN OArgTypeListOComma RPAREN .)


state 355

    (182) ArgType -> IDENTIFIER DotDotDot .

    COMMA           reduce using rule 182 (ArgType -> IDENTIFIER DotDotDot .)
    RPAREN          reduce using rule 182 (ArgType -> IDENTIFIER DotDotDot .)
    OR_RIGHT        reduce using rule 182 (ArgType -> IDENTIFIER DotDotDot .)


state 356

    (181) ArgType -> IDENTIFIER NameOrType .

    COMMA           reduce using rule 181 (ArgType -> IDENTIFIER NameOrType .)
    RPAREN          reduce using rule 181 (ArgType -> IDENTIFIER NameOrType .)
    OR_RIGHT        reduce using rule 181 (ArgType -> IDENTIFIER NameOrType .)


state 357

    (203) DotDotDot -> DDD NType .

    COMMA           reduce using rule 203 (DotDotDot -> DDD NType .)
    RPAREN          reduce using rule 203 (DotDotDot -> DDD NType .)
    OR_RIGHT        reduce using rule 203 (DotDotDot -> DDD NType .)


state 358

    (101) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT . IDENTIFIER ArgList FuncRes

    IDENTIFIER      shift and go to state 420


state 359

    (100) FuncDecl_ -> IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 100 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 100 (FuncDecl_ -> IDENTIFIER ArgList FuncRes .)


state 360

    (66) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt . SEMICOL OSimpleStmt

    SEMICOL         shift and go to state 421


state 361

    (63) RangeStmt -> ExprList EQUAL RANGE . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 422
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 362

    (64) RangeStmt -> ExprList COLONEQ RANGE . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 423
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 363

    (62) LoopBody -> LBRACE cmtlist . StmtList cmtlist RBRACE
    (273) cmtlist -> cmtlist . COMMENT
    (168) StmtList -> . Stmt SEMICOL
    (169) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    StmtList                       shift and go to state 424
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 333
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NonDeclStmt                    shift and go to state 208
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    FuncLiteralDecl                shift and go to state 33
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 364

    (113) InterfaceDeclList -> InterfaceDeclList SEMICOL . InterfaceDecl
    (137) OSemi -> SEMICOL .
    (120) InterfaceDecl -> . NewName InDecl
    (121) InterfaceDecl -> . IDENTIFIER
    (122) InterfaceDecl -> . LPAREN IDENTIFIER RPAREN
    (125) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 137 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 279
    LPAREN          shift and go to state 278

    InterfaceDecl                  shift and go to state 425
    NewName                        shift and go to state 277

state 365

    (97) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi . RBRACE

    RBRACE          shift and go to state 426


state 366

    (123) InDecl -> LPAREN . OArgTypeListOComma RPAREN FuncRes
    (186) OArgTypeListOComma -> .
    (187) OArgTypeListOComma -> . ArgTypeList OComma
    (184) ArgTypeList -> . ArgType
    (185) ArgTypeList -> . ArgTypeList COMMA ArgType
    (180) ArgType -> . NameOrType
    (181) ArgType -> . IDENTIFIER NameOrType
    (182) ArgType -> . IDENTIFIER DotDotDot
    (183) ArgType -> . DotDotDot
    (230) NameOrType -> . NType
    (202) DotDotDot -> . DDD
    (203) DotDotDot -> . DDD NType
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    RPAREN          reduce using rule 186 (OArgTypeListOComma -> .)
    IDENTIFIER      shift and go to state 263
    DDD             shift and go to state 265
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122

    StructType                     shift and go to state 68
    DotName                        shift and go to state 225
    OArgTypeListOComma             shift and go to state 427
    Name                           shift and go to state 229
    DotDotDot                      shift and go to state 261
    NType                          shift and go to state 264
    NameOrType                     shift and go to state 262
    ArgTypeList                    shift and go to state 258
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    ArgType                        shift and go to state 259
    FuncType                       shift and go to state 222

state 367

    (120) InterfaceDecl -> NewName InDecl .

    SEMICOL         reduce using rule 120 (InterfaceDecl -> NewName InDecl .)
    RBRACE          reduce using rule 120 (InterfaceDecl -> NewName InDecl .)


state 368

    (122) InterfaceDecl -> LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 428


state 369

    (165) TypeDeclList -> TypeDeclList SEMICOL . TypeDecl
    (137) OSemi -> SEMICOL .
    (37) TypeDecl -> . TypeDeclName NType
    (36) TypeDeclName -> . IDENTIFIER

    RPAREN          reduce using rule 137 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 148

    TypeDeclName                   shift and go to state 147
    TypeDecl                       shift and go to state 429

state 370

    (26) CommonDecl -> TYPE LPAREN TypeDeclList OSemi . RPAREN

    RPAREN          shift and go to state 430


state 371

    (268) ForCompExpr -> LBRACK Expr PIPE RangeStmt . RBRACK

    RBRACK          shift and go to state 431


state 372

    (63) RangeStmt -> ExprList . EQUAL RANGE Expr
    (64) RangeStmt -> ExprList . COLONEQ RANGE Expr
    (149) ExprList -> ExprList . COMMA Expr

    EQUAL           shift and go to state 432
    COLONEQ         shift and go to state 433
    COMMA           shift and go to state 113


state 373

    (88) OtherType -> LBRACK OExpr RBRACK NType .

    LBRACE          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_ANGLE      reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    LEFT_LEFT       reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    RPAREN          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    EQUAL           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    SEMICOL         reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    COMMA           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    OR_RIGHT        reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    DDD             reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLON           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    COLONEQ         reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    INTEGER         reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    FLOAT           reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    STRING          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)
    RBRACE          reduce using rule 88 (OtherType -> LBRACK OExpr RBRACK NType .)


state 374

    (72) IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 72 (IfHeader -> OSimpleStmt SEMICOL OSimpleStmt .)


state 375

    (231) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList . RBRACE
    (61) CaseBlockList -> CaseBlockList . CaseBlock
    (59) CaseBlock -> . Case StmtList
    (54) Case -> . CASE ExprOrTypeList COLON
    (55) Case -> . CASE ExprOrTypeList EQUAL Expr COLON
    (56) Case -> . CASE ExprOrTypeList COLONEQ Expr COLON
    (57) Case -> . DEFAULT COLON

    RBRACE          shift and go to state 436
    CASE            shift and go to state 435
    DEFAULT         shift and go to state 437

    Case                           shift and go to state 434
    CaseBlock                      shift and go to state 438

state 376

    (216) PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 216 (PExprNoParen -> CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 377

    (223) Keyval -> Expr COLON . CompLitExpr
    (226) CompLitExpr -> . Expr
    (227) CompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    LEFT_LEFT       shift and go to state 441
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 440
    PseudoCall                     shift and go to state 49
    CompLitExpr                    shift and go to state 439
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 378

    (225) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 442


state 379

    (174) KeyvalList -> KeyvalList COMMA . Keyval
    (175) KeyvalList -> KeyvalList COMMA . BareCompLitExpr
    (135) OComma -> COMMA .
    (223) Keyval -> . Expr COLON CompLitExpr
    (224) BareCompLitExpr -> . Expr
    (225) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 135 (OComma -> COMMA .)
    LEFT_LEFT       shift and go to state 292
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 291
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Keyval                         shift and go to state 443
    BareCompLitExpr                shift and go to state 444
    PExpr                          shift and go to state 70

state 380

    (177) BracedKeyvalList -> KeyvalList OComma .

    RIGHT_RIGHT     reduce using rule 177 (BracedKeyvalList -> KeyvalList OComma .)


state 381

    (211) PExprNoParen -> PExpr LBRACK Expr RBRACK .

    DOT             reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACK          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEFT_LEFT       reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LPAREN          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDE          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MOD             reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL             reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR             reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPERS          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAR          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMES           reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUS            reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUS           reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    XOR             reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OR              reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQEQ            reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    NOTEQ           reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LEQ             reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GEQ             reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    GREAT           reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LESS            reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPAMP          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSEQ          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSEQ         reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    TIMESEQ         reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DIVIDEEQ        reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MODEQ           reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OREQ            reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPEQ           reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    CAREQ           reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    AMPCAREQ        reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PLUSPLUS        reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    MINUSMIN        reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    OROR            reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    SEMICOL         reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    EQUAL           reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLONEQ         reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COMMA           reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    LBRACE          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    PIPE            reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACK          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RPAREN          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_ANGLE     reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RBRACE          reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    COLON           reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    RIGHT_RIGHT     reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)
    DDD             reduce using rule 211 (PExprNoParen -> PExpr LBRACK Expr RBRACK .)


state 382

    (212) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr RBRACK
    (213) PExprNoParen -> PExpr LBRACK OExpr COLON . OExpr COLON OExpr RBRACK
    (142) OExpr -> .
    (143) OExpr -> . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 142 (OExpr -> .)
    COLON           reduce using rule 142 (OExpr -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 343
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 445
    PExpr                          shift and go to state 70

state 383

    (270) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma . RPAREN

    RPAREN          shift and go to state 446


state 384

    (151) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (135) OComma -> COMMA .
    (228) ExprOrType -> . Expr
    (229) ExprOrType -> . NonExprType
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (146) FuncLiteralDecl -> . FuncType

    RPAREN          reduce using rule 135 (OComma -> COMMA .)
    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 192
    LMINUS          shift and go to state 31
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 187
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    ExprOrType                     shift and go to state 447
    Arrayexp                       shift and go to state 75
    NonExprType                    shift and go to state 189
    OtherType                      shift and go to state 190
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 191
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 385

    (271) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD . OComma RPAREN
    (134) OComma -> .
    (135) OComma -> . COMMA

    RPAREN          reduce using rule 134 (OComma -> .)
    COMMA           shift and go to state 331

    OComma                         shift and go to state 448

state 386

    (217) PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    DOT             reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACK          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEFT_LEFT       reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LPAREN          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDE          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MOD             reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL             reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR             reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPERS          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAR          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMES           reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUS            reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUS           reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    XOR             reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OR              reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQEQ            reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    NOTEQ           reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LEQ             reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GEQ             reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    GREAT           reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LESS            reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPAMP          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSEQ          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSEQ         reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    TIMESEQ         reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DIVIDEEQ        reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MODEQ           reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OREQ            reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPEQ           reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    CAREQ           reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHL_ASSIGN      reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SHR_ASSIGN      reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    AMPCAREQ        reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PLUSPLUS        reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    MINUSMIN        reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    OROR            reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    SEMICOL         reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    EQUAL           reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLONEQ         reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COMMA           reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    LBRACE          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    PIPE            reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACK          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RPAREN          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_ANGLE     reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RBRACE          reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    COLON           reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    DDD             reduce using rule 217 (PExprNoParen -> PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 387

    (209) PExprNoParen -> PExpr DOT LPAREN ExprOrType . RPAREN

    RPAREN          shift and go to state 449


state 388

    (210) PExprNoParen -> PExpr DOT LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 450


state 389

    (73) IfStmt -> IF IfHeader LoopBody ElseIfList . Else
    (76) ElseIfList -> ElseIfList . ElseIf
    (77) Else -> .
    (78) Else -> . ELSE CompoundStmt
    (74) ElseIf -> . ELSE IF IfHeader LoopBody

    SEMICOL         reduce using rule 77 (Else -> .)
    ELSE            shift and go to state 453

    Else                           shift and go to state 451
    ElseIf                         shift and go to state 452

state 390

    (119) StructDecl -> TIMES LPAREN . Embed RPAREN OLiteral
    (157) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 392

    Embed                          shift and go to state 454

state 391

    (117) StructDecl -> TIMES Embed . OLiteral
    (152) OLiteral -> .
    (153) OLiteral -> . Literal
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING

    SEMICOL         reduce using rule 152 (OLiteral -> .)
    RBRACE          reduce using rule 152 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42

    OLiteral                       shift and go to state 455
    Literal                        shift and go to state 399

state 392

    (157) Embed -> IDENTIFIER .

    RPAREN          reduce using rule 157 (Embed -> IDENTIFIER .)
    INTEGER         reduce using rule 157 (Embed -> IDENTIFIER .)
    FLOAT           reduce using rule 157 (Embed -> IDENTIFIER .)
    STRING          reduce using rule 157 (Embed -> IDENTIFIER .)
    SEMICOL         reduce using rule 157 (Embed -> IDENTIFIER .)
    RBRACE          reduce using rule 157 (Embed -> IDENTIFIER .)


state 393

    (118) StructDecl -> LPAREN TIMES . Embed RPAREN OLiteral
    (157) Embed -> . IDENTIFIER

    IDENTIFIER      shift and go to state 392

    Embed                          shift and go to state 456

state 394

    (116) StructDecl -> LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 457


state 395

    (171) NewNameList -> NewNameList COMMA . NewName
    (125) NewName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 152

    NewName                        shift and go to state 458

state 396

    (114) StructDecl -> NewNameList NType . OLiteral
    (152) OLiteral -> .
    (153) OLiteral -> . Literal
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING

    SEMICOL         reduce using rule 152 (OLiteral -> .)
    RBRACE          reduce using rule 152 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42

    Literal                        shift and go to state 399
    OLiteral                       shift and go to state 459

state 397

    (111) StructDeclList -> StructDeclList SEMICOL . StructDecl
    (137) OSemi -> SEMICOL .
    (114) StructDecl -> . NewNameList NType OLiteral
    (115) StructDecl -> . Embed OLiteral
    (116) StructDecl -> . LPAREN Embed RPAREN OLiteral
    (117) StructDecl -> . TIMES Embed OLiteral
    (118) StructDecl -> . LPAREN TIMES Embed RPAREN OLiteral
    (119) StructDecl -> . TIMES LPAREN Embed RPAREN OLiteral
    (170) NewNameList -> . NewName
    (171) NewNameList -> . NewNameList COMMA NewName
    (157) Embed -> . IDENTIFIER
    (125) NewName -> . IDENTIFIER

    RBRACE          reduce using rule 137 (OSemi -> SEMICOL .)
    LPAREN          shift and go to state 322
    TIMES           shift and go to state 321
    IDENTIFIER      shift and go to state 325

    NewName                        shift and go to state 319
    StructDecl                     shift and go to state 460
    NewNameList                    shift and go to state 323
    Embed                          shift and go to state 326

state 398

    (95) StructType -> STRUCT LBRACE StructDeclList OSemi . RBRACE

    RBRACE          shift and go to state 461


state 399

    (153) OLiteral -> Literal .

    SEMICOL         reduce using rule 153 (OLiteral -> Literal .)
    RBRACE          reduce using rule 153 (OLiteral -> Literal .)


state 400

    (115) StructDecl -> Embed OLiteral .

    SEMICOL         reduce using rule 115 (StructDecl -> Embed OLiteral .)
    RBRACE          reduce using rule 115 (StructDecl -> Embed OLiteral .)


state 401

    (215) PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .

    DOT             reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACK          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEFT_LEFT       reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LPAREN          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDE          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MOD             reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL             reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR             reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPERS          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAR          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMES           reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUS            reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUS           reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    XOR             reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OR              reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQEQ            reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    NOTEQ           reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LEQ             reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GEQ             reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    GREAT           reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LESS            reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPAMP          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSEQ          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSEQ         reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    TIMESEQ         reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DIVIDEEQ        reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MODEQ           reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OREQ            reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPEQ           reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    CAREQ           reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHL_ASSIGN      reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SHR_ASSIGN      reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    AMPCAREQ        reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PLUSPLUS        reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    MINUSMIN        reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    OROR            reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    SEMICOL         reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    EQUAL           reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLONEQ         reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COMMA           reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    LBRACE          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    PIPE            reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACK          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RPAREN          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_ANGLE     reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RBRACE          reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    COLON           reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    RIGHT_RIGHT     reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)
    DDD             reduce using rule 215 (PExprNoParen -> ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE .)


state 402

    (58) CompoundStmt -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (169) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 272 (cmtlist -> .)
    COMMENT         reduce using rule 272 (cmtlist -> .)
    LBRACE          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    SEMICOL         reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 462

state 403

    (168) StmtList -> Stmt SEMICOL .

    COMMENT         reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    LBRACE          reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    CONSTANT        reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    VAR             reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    TYPE            reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    BREAK           reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    CONTINUE        reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    GOTO            reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    RETURN          reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    FOR             reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    SWITCH          reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    IF              reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    CONSTANTS       reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    LMINUS          reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    LBRACK          reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    STRUCT          reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    INTERFACE       reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    CHAN            reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    AMPERS          reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    NOT             reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    TIMES           reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    PLUS            reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    MINUS           reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    XOR             reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    LPAREN          reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    INTEGER         reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    FLOAT           reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    STRING          reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    FUNCTION        reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    SEMICOL         reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    RBRACE          reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    CASE            reduce using rule 168 (StmtList -> Stmt SEMICOL .)
    DEFAULT         reduce using rule 168 (StmtList -> Stmt SEMICOL .)


state 404

    (147) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist . RBRACE
    (169) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (273) cmtlist -> cmtlist . COMMENT
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 464
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    NonDeclStmt                    shift and go to state 208
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 463
    FuncLiteralDecl                shift and go to state 33
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NewName                        shift and go to state 45
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 405

    (161) VarDeclList -> VarDeclList SEMICOL VarDecl .

    SEMICOL         reduce using rule 161 (VarDeclList -> VarDeclList SEMICOL VarDecl .)
    RPAREN          reduce using rule 161 (VarDeclList -> VarDeclList SEMICOL VarDecl .)


state 406

    (23) CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 23 (CommonDecl -> VAR LPAREN VarDeclList OSemi RPAREN .)


state 407

    (133) DotName -> Name DOT IDENTIFIER .

    SEMICOL         reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    RPAREN          reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    COMMA           reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    OR_RIGHT        reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    LEFT_ANGLE      reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    LBRACE          reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    EQUAL           reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    DDD             reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    COLON           reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    COLONEQ         reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    LEFT_LEFT       reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    INTEGER         reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    FLOAT           reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    STRING          reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)
    RBRACE          reduce using rule 133 (DotName -> Name DOT IDENTIFIER .)


state 408

    (29) VarDecl -> DeclNameList NType EQUAL ExprList .
    (149) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 29 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 29 (VarDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 113


state 409

    (83) NType -> LPAREN NType RPAREN .

    COMMA           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    RPAREN          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    OR_RIGHT        reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    INTEGER         reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    FLOAT           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    STRING          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    SEMICOL         reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    RBRACE          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    LEFT_ANGLE      reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    LBRACE          reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    EQUAL           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    DDD             reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    COLON           reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    COLONEQ         reduce using rule 83 (NType -> LPAREN NType RPAREN .)
    LEFT_LEFT       reduce using rule 83 (NType -> LPAREN NType RPAREN .)


state 410

    (19) CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .

    SEMICOL         reduce using rule 19 (CommonDecl -> CONSTANT LPAREN ConstDecl OSemi RPAREN .)


state 411

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList . OSemi RPAREN
    (163) ConstDeclList -> ConstDeclList . SEMICOL ConstDecl1
    (136) OSemi -> .
    (137) OSemi -> . SEMICOL

    SEMICOL         shift and go to state 466
    RPAREN          reduce using rule 136 (OSemi -> .)

    OSemi                          shift and go to state 465

state 412

    (34) ConstDecl1 -> DeclNameList . NType
    (35) ConstDecl1 -> DeclNameList .
    (31) ConstDecl -> DeclNameList . NType EQUAL ExprList
    (32) ConstDecl -> DeclNameList . EQUAL ExprList
    (167) DeclNameList -> DeclNameList . COMMA DeclName
    (79) NType -> . FuncType
    (80) NType -> . OtherType
    (81) NType -> . PtrType
    (82) NType -> . DotName
    (83) NType -> . LPAREN NType RPAREN
    (84) NType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 35 (ConstDecl1 -> DeclNameList .)
    RPAREN          reduce using rule 35 (ConstDecl1 -> DeclNameList .)
    EQUAL           shift and go to state 239
    COMMA           shift and go to state 228
    LPAREN          shift and go to state 231
    TYPE            shift and go to state 233
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    FuncType                       shift and go to state 222
    NType                          shift and go to state 467
    OtherType                      shift and go to state 227
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 224
    ChannelType                    shift and go to state 46
    DotName                        shift and go to state 225
    Name                           shift and go to state 229

state 413

    (162) ConstDeclList -> ConstDecl1 .

    SEMICOL         reduce using rule 162 (ConstDeclList -> ConstDecl1 .)
    RPAREN          reduce using rule 162 (ConstDeclList -> ConstDecl1 .)


state 414

    (33) ConstDecl1 -> ConstDecl .

    SEMICOL         reduce using rule 33 (ConstDecl1 -> ConstDecl .)
    RPAREN          reduce using rule 33 (ConstDecl1 -> ConstDecl .)


state 415

    (31) ConstDecl -> DeclNameList NType EQUAL ExprList .
    (149) ExprList -> ExprList . COMMA Expr

    SEMICOL         reduce using rule 31 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    RPAREN          reduce using rule 31 (ConstDecl -> DeclNameList NType EQUAL ExprList .)
    COMMA           shift and go to state 113


state 416

    (104) ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .

    LPAREN          reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_OR         reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TYPE            reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FUNCTION        reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACK          reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    TIMES           reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRUCT          reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTERFACE       reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    CHAN            reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LMINUS          reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    IDENTIFIER      reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LBRACE          reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    SEMICOL         reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_ANGLE      reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RPAREN          reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    EQUAL           reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COMMA           reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    OR_RIGHT        reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    DDD             reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLON           reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    COLONEQ         reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    LEFT_LEFT       reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    INTEGER         reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    FLOAT           reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    STRING          reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)
    RBRACE          reduce using rule 104 (ArgList -> ArgList LPAREN OArgTypeListOComma RPAREN .)


state 417

    (109) FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .

    LBRACE          reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    SEMICOL         reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RBRACE          reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_ANGLE      reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    RPAREN          reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    EQUAL           reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COMMA           reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    OR_RIGHT        reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    DDD             reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLON           reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    COLONEQ         reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    LEFT_LEFT       reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    INTEGER         reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    FLOAT           reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)
    STRING          reduce using rule 109 (FuncRes -> LEFT_OR OArgTypeListOComma OR_RIGHT .)


state 418

    (106) FuncBody -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (169) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 272 (cmtlist -> .)
    COMMENT         reduce using rule 272 (cmtlist -> .)
    LBRACE          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    SEMICOL         reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 468

state 419

    (185) ArgTypeList -> ArgTypeList COMMA ArgType .

    COMMA           reduce using rule 185 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    RPAREN          reduce using rule 185 (ArgTypeList -> ArgTypeList COMMA ArgType .)
    OR_RIGHT        reduce using rule 185 (ArgTypeList -> ArgTypeList COMMA ArgType .)


state 420

    (101) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER . ArgList FuncRes
    (103) ArgList -> . LPAREN OArgTypeListOComma RPAREN
    (104) ArgList -> . ArgList LPAREN OArgTypeListOComma RPAREN

    LPAREN          shift and go to state 133

    ArgList                        shift and go to state 469

state 421

    (66) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL . OSimpleStmt
    (138) OSimpleStmt -> .
    (139) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    LBRACE          reduce using rule 138 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 141
    OSimpleStmt                    shift and go to state 470
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 422

    (63) RangeStmt -> ExprList EQUAL RANGE Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 63 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    RBRACK          reduce using rule 63 (RangeStmt -> ExprList EQUAL RANGE Expr .)
    OROR            shift and go to state 171


state 423

    (64) RangeStmt -> ExprList COLONEQ RANGE Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    LBRACE          reduce using rule 64 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    RBRACK          reduce using rule 64 (RangeStmt -> ExprList COLONEQ RANGE Expr .)
    OROR            shift and go to state 171


state 424

    (62) LoopBody -> LBRACE cmtlist StmtList . cmtlist RBRACE
    (169) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 272 (cmtlist -> .)
    COMMENT         reduce using rule 272 (cmtlist -> .)
    LBRACE          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    SEMICOL         reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 471

state 425

    (113) InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .

    SEMICOL         reduce using rule 113 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)
    RBRACE          reduce using rule 113 (InterfaceDeclList -> InterfaceDeclList SEMICOL InterfaceDecl .)


state 426

    (97) InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .

    LBRACE          reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COMMA           reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    DDD             reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    EQUAL           reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLON           reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    STRING          reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 97 (InterfaceType -> INTERFACE LBRACE InterfaceDeclList OSemi RBRACE .)


state 427

    (123) InDecl -> LPAREN OArgTypeListOComma . RPAREN FuncRes

    RPAREN          shift and go to state 472


state 428

    (122) InterfaceDecl -> LPAREN IDENTIFIER RPAREN .

    SEMICOL         reduce using rule 122 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)
    RBRACE          reduce using rule 122 (InterfaceDecl -> LPAREN IDENTIFIER RPAREN .)


state 429

    (165) TypeDeclList -> TypeDeclList SEMICOL TypeDecl .

    SEMICOL         reduce using rule 165 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)
    RPAREN          reduce using rule 165 (TypeDeclList -> TypeDeclList SEMICOL TypeDecl .)


state 430

    (26) CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 26 (CommonDecl -> TYPE LPAREN TypeDeclList OSemi RPAREN .)


state 431

    (268) ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .

    DOT             reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACK          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEFT_LEFT       reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LPAREN          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDE          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MOD             reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL             reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR             reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPERS          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAR          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMES           reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUS            reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUS           reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    XOR             reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OR              reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQEQ            reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    NOTEQ           reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LEQ             reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GEQ             reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    GREAT           reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LESS            reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPAMP          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSEQ          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSEQ         reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    TIMESEQ         reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DIVIDEEQ        reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MODEQ           reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OREQ            reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPEQ           reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    CAREQ           reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHL_ASSIGN      reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SHR_ASSIGN      reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    AMPCAREQ        reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PLUSPLUS        reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    MINUSMIN        reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    OROR            reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    SEMICOL         reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    EQUAL           reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLONEQ         reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COMMA           reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    LBRACE          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACE          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    PIPE            reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RBRACK          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    COLON           reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_RIGHT     reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RPAREN          reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    RIGHT_ANGLE     reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)
    DDD             reduce using rule 268 (ForCompExpr -> LBRACK Expr PIPE RangeStmt RBRACK .)


state 432

    (63) RangeStmt -> ExprList EQUAL . RANGE Expr

    RANGE           shift and go to state 361


state 433

    (64) RangeStmt -> ExprList COLONEQ . RANGE Expr

    RANGE           shift and go to state 362


state 434

    (59) CaseBlock -> Case . StmtList
    (168) StmtList -> . Stmt SEMICOL
    (169) StmtList -> . StmtList cmtlist Stmt SEMICOL
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    StmtList                       shift and go to state 473
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 333
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NonDeclStmt                    shift and go to state 208
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    FuncLiteralDecl                shift and go to state 33
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 435

    (54) Case -> CASE . ExprOrTypeList COLON
    (55) Case -> CASE . ExprOrTypeList EQUAL Expr COLON
    (56) Case -> CASE . ExprOrTypeList COLONEQ Expr COLON
    (150) ExprOrTypeList -> . ExprOrType
    (151) ExprOrTypeList -> . ExprOrTypeList COMMA ExprOrType
    (228) ExprOrType -> . Expr
    (229) ExprOrType -> . NonExprType
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 192
    LMINUS          shift and go to state 31
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 187
    Prec4Expr_                     shift and go to state 39
    ExprOrTypeList                 shift and go to state 474
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    ExprOrType                     shift and go to state 298
    Arrayexp                       shift and go to state 75
    NonExprType                    shift and go to state 189
    OtherType                      shift and go to state 190
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 191
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 436

    (231) SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .

    SEMICOL         reduce using rule 231 (SwitchStmt -> SWITCH IfHeader LBRACE CaseBlockList RBRACE .)


state 437

    (57) Case -> DEFAULT . COLON

    COLON           shift and go to state 475


state 438

    (61) CaseBlockList -> CaseBlockList CaseBlock .

    RBRACE          reduce using rule 61 (CaseBlockList -> CaseBlockList CaseBlock .)
    CASE            reduce using rule 61 (CaseBlockList -> CaseBlockList CaseBlock .)
    DEFAULT         reduce using rule 61 (CaseBlockList -> CaseBlockList CaseBlock .)


state 439

    (223) Keyval -> Expr COLON CompLitExpr .

    COMMA           reduce using rule 223 (Keyval -> Expr COLON CompLitExpr .)
    RIGHT_RIGHT     reduce using rule 223 (Keyval -> Expr COLON CompLitExpr .)


state 440

    (226) CompLitExpr -> Expr .
    (255) Expr -> Expr . OROR Prec2Expr_

    COMMA           reduce using rule 226 (CompLitExpr -> Expr .)
    RIGHT_RIGHT     reduce using rule 226 (CompLitExpr -> Expr .)
    OROR            shift and go to state 171


state 441

    (227) CompLitExpr -> LEFT_LEFT . BracedKeyvalList RIGHT_RIGHT
    (176) BracedKeyvalList -> .
    (177) BracedKeyvalList -> . KeyvalList OComma
    (172) KeyvalList -> . Keyval
    (173) KeyvalList -> . BareCompLitExpr
    (174) KeyvalList -> . KeyvalList COMMA Keyval
    (175) KeyvalList -> . KeyvalList COMMA BareCompLitExpr
    (223) Keyval -> . Expr COLON CompLitExpr
    (224) BareCompLitExpr -> . Expr
    (225) BareCompLitExpr -> . LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RIGHT_RIGHT     reduce using rule 176 (BracedKeyvalList -> .)
    LEFT_LEFT       shift and go to state 292
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 291
    PseudoCall                     shift and go to state 49
    KeyvalList                     shift and go to state 293
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Keyval                         shift and go to state 289
    BareCompLitExpr                shift and go to state 294
    PExpr                          shift and go to state 70
    BracedKeyvalList               shift and go to state 476

state 442

    (225) BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 225 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 225 (BareCompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 443

    (174) KeyvalList -> KeyvalList COMMA Keyval .

    COMMA           reduce using rule 174 (KeyvalList -> KeyvalList COMMA Keyval .)
    RIGHT_RIGHT     reduce using rule 174 (KeyvalList -> KeyvalList COMMA Keyval .)


state 444

    (175) KeyvalList -> KeyvalList COMMA BareCompLitExpr .

    COMMA           reduce using rule 175 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)
    RIGHT_RIGHT     reduce using rule 175 (KeyvalList -> KeyvalList COMMA BareCompLitExpr .)


state 445

    (212) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . RBRACK
    (213) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr . COLON OExpr RBRACK

    RBRACK          shift and go to state 477
    COLON           shift and go to state 478


state 446

    (270) PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .

    DOT             reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACK          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEFT_LEFT       reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LPAREN          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDE          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MOD             reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL             reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR             reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPERS          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAR          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMES           reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUS            reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUS           reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    XOR             reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OR              reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQEQ            reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    NOTEQ           reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LEQ             reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GEQ             reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    GREAT           reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LESS            reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPAMP          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLON           reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OROR            reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COMMA           reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SEMICOL         reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RPAREN          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSEQ          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSEQ         reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    TIMESEQ         reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DIVIDEEQ        reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MODEQ           reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    OREQ            reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPEQ           reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    CAREQ           reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    AMPCAREQ        reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PLUSPLUS        reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    MINUSMIN        reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    EQUAL           reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    COLONEQ         reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    LBRACE          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    PIPE            reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACK          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    RBRACE          reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)
    DDD             reduce using rule 270 (PseudoCall -> PExpr LPAREN ExprOrTypeList OComma RPAREN .)


state 447

    (151) ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .

    DDD             reduce using rule 151 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COMMA           reduce using rule 151 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    RPAREN          reduce using rule 151 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLON           reduce using rule 151 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    EQUAL           reduce using rule 151 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)
    COLONEQ         reduce using rule 151 (ExprOrTypeList -> ExprOrTypeList COMMA ExprOrType .)


state 448

    (271) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma . RPAREN

    RPAREN          shift and go to state 479


state 449

    (209) PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .

    DOT             reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACK          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEFT_LEFT       reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LPAREN          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDE          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MOD             reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL             reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR             reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPERS          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAR          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMES           reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUS            reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUS           reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    XOR             reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OR              reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQEQ            reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    NOTEQ           reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LEQ             reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GEQ             reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    GREAT           reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LESS            reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPAMP          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSEQ          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSEQ         reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    TIMESEQ         reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DIVIDEEQ        reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MODEQ           reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OREQ            reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPEQ           reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    CAREQ           reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHL_ASSIGN      reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SHR_ASSIGN      reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    AMPCAREQ        reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PLUSPLUS        reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    MINUSMIN        reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    OROR            reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    SEMICOL         reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    EQUAL           reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLONEQ         reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COMMA           reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    LBRACE          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    PIPE            reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACK          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RPAREN          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_ANGLE     reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RBRACE          reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    COLON           reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    RIGHT_RIGHT     reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)
    DDD             reduce using rule 209 (PExprNoParen -> PExpr DOT LPAREN ExprOrType RPAREN .)


state 450

    (210) PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .

    DOT             reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LBRACK          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LEFT_LEFT       reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LPAREN          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DIVIDE          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MOD             reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHL             reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHR             reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPERS          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPCAR          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    TIMES           reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUS            reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUS           reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    XOR             reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OR              reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    EQEQ            reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    NOTEQ           reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LEQ             reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    GEQ             reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    GREAT           reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LESS            reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPAMP          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUSEQ          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUSEQ         reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    TIMESEQ         reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DIVIDEEQ        reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MODEQ           reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OREQ            reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPEQ           reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    CAREQ           reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHL_ASSIGN      reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SHR_ASSIGN      reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    AMPCAREQ        reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PLUSPLUS        reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    MINUSMIN        reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    OROR            reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    SEMICOL         reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    EQUAL           reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COLONEQ         reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COMMA           reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    LBRACE          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    PIPE            reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RBRACK          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RPAREN          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RIGHT_ANGLE     reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RBRACE          reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    COLON           reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    RIGHT_RIGHT     reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)
    DDD             reduce using rule 210 (PExprNoParen -> PExpr DOT LPAREN TYPE RPAREN .)


state 451

    (73) IfStmt -> IF IfHeader LoopBody ElseIfList Else .

    SEMICOL         reduce using rule 73 (IfStmt -> IF IfHeader LoopBody ElseIfList Else .)


state 452

    (76) ElseIfList -> ElseIfList ElseIf .

    ELSE            reduce using rule 76 (ElseIfList -> ElseIfList ElseIf .)
    SEMICOL         reduce using rule 76 (ElseIfList -> ElseIfList ElseIf .)


state 453

    (78) Else -> ELSE . CompoundStmt
    (74) ElseIf -> ELSE . IF IfHeader LoopBody
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE

    IF              shift and go to state 481
    LBRACE          shift and go to state 207

    CompoundStmt                   shift and go to state 480

state 454

    (119) StructDecl -> TIMES LPAREN Embed . RPAREN OLiteral

    RPAREN          shift and go to state 482


state 455

    (117) StructDecl -> TIMES Embed OLiteral .

    SEMICOL         reduce using rule 117 (StructDecl -> TIMES Embed OLiteral .)
    RBRACE          reduce using rule 117 (StructDecl -> TIMES Embed OLiteral .)


state 456

    (118) StructDecl -> LPAREN TIMES Embed . RPAREN OLiteral

    RPAREN          shift and go to state 483


state 457

    (116) StructDecl -> LPAREN Embed RPAREN . OLiteral
    (152) OLiteral -> .
    (153) OLiteral -> . Literal
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING

    SEMICOL         reduce using rule 152 (OLiteral -> .)
    RBRACE          reduce using rule 152 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42

    OLiteral                       shift and go to state 484
    Literal                        shift and go to state 399

state 458

    (171) NewNameList -> NewNameList COMMA NewName .

    COMMA           reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)
    LPAREN          reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)
    TYPE            reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)
    FUNCTION        reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)
    LBRACK          reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)
    TIMES           reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)
    STRUCT          reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)
    INTERFACE       reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)
    CHAN            reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)
    LMINUS          reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)
    IDENTIFIER      reduce using rule 171 (NewNameList -> NewNameList COMMA NewName .)


state 459

    (114) StructDecl -> NewNameList NType OLiteral .

    SEMICOL         reduce using rule 114 (StructDecl -> NewNameList NType OLiteral .)
    RBRACE          reduce using rule 114 (StructDecl -> NewNameList NType OLiteral .)


state 460

    (111) StructDeclList -> StructDeclList SEMICOL StructDecl .

    SEMICOL         reduce using rule 111 (StructDeclList -> StructDeclList SEMICOL StructDecl .)
    RBRACE          reduce using rule 111 (StructDeclList -> StructDeclList SEMICOL StructDecl .)


state 461

    (95) StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .

    EQUAL           reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LBRACE          reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_ANGLE      reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    LEFT_LEFT       reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    SEMICOL         reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RBRACE          reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COMMA           reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    RPAREN          reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    OR_RIGHT        reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    INTEGER         reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    FLOAT           reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    STRING          reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLON           reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    COLONEQ         reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)
    DDD             reduce using rule 95 (StructType -> STRUCT LBRACE StructDeclList OSemi RBRACE .)


state 462

    (58) CompoundStmt -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (169) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (273) cmtlist -> cmtlist . COMMENT
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 485
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 463
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NonDeclStmt                    shift and go to state 208
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    FuncLiteralDecl                shift and go to state 33
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 463

    (169) StmtList -> StmtList cmtlist Stmt . SEMICOL

    SEMICOL         shift and go to state 486


state 464

    (147) FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .

    DOT             reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACK          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEFT_LEFT       reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LPAREN          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDE          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MOD             reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL             reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR             reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPERS          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAR          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMES           reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUS            reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUS           reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    XOR             reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OR              reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQEQ            reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    NOTEQ           reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LEQ             reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GEQ             reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    GREAT           reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LESS            reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPAMP          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OROR            reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACK          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SEMICOL         reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    LBRACE          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSEQ          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSEQ         reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    TIMESEQ         reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DIVIDEEQ        reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MODEQ           reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    OREQ            reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPEQ           reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    CAREQ           reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHL_ASSIGN      reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    SHR_ASSIGN      reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    AMPCAREQ        reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PLUSPLUS        reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    MINUSMIN        reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    EQUAL           reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLONEQ         reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COMMA           reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    PIPE            reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RPAREN          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_ANGLE     reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RBRACE          reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    COLON           reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    RIGHT_RIGHT     reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)
    DDD             reduce using rule 147 (FuncLiteral -> FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE .)


state 465

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi . RPAREN

    RPAREN          shift and go to state 487


state 466

    (163) ConstDeclList -> ConstDeclList SEMICOL . ConstDecl1
    (137) OSemi -> SEMICOL .
    (33) ConstDecl1 -> . ConstDecl
    (34) ConstDecl1 -> . DeclNameList NType
    (35) ConstDecl1 -> . DeclNameList
    (31) ConstDecl -> . DeclNameList NType EQUAL ExprList
    (32) ConstDecl -> . DeclNameList EQUAL ExprList
    (166) DeclNameList -> . DeclName
    (167) DeclNameList -> . DeclNameList COMMA DeclName
    (178) DeclName -> . IDENTIFIER

    RPAREN          reduce using rule 137 (OSemi -> SEMICOL .)
    IDENTIFIER      shift and go to state 108

    ConstDecl1                     shift and go to state 488
    DeclName                       shift and go to state 109
    DeclNameList                   shift and go to state 412
    ConstDecl                      shift and go to state 414

state 467

    (34) ConstDecl1 -> DeclNameList NType .
    (31) ConstDecl -> DeclNameList NType . EQUAL ExprList

    SEMICOL         reduce using rule 34 (ConstDecl1 -> DeclNameList NType .)
    RPAREN          reduce using rule 34 (ConstDecl1 -> DeclNameList NType .)
    EQUAL           shift and go to state 347


state 468

    (106) FuncBody -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (169) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (273) cmtlist -> cmtlist . COMMENT
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 489
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 463
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NonDeclStmt                    shift and go to state 208
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    FuncLiteralDecl                shift and go to state 33
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 469

    (101) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList . FuncRes
    (104) ArgList -> ArgList . LPAREN OArgTypeListOComma RPAREN
    (107) FuncRes -> .
    (108) FuncRes -> . FuncRetType
    (109) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (127) FuncRetType -> . FuncType
    (128) FuncRetType -> . OtherType
    (129) FuncRetType -> . PtrType
    (130) FuncRetType -> . DotName
    (131) FuncRetType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    LPAREN          shift and go to state 247
    LBRACE          reduce using rule 107 (FuncRes -> .)
    SEMICOL         reduce using rule 107 (FuncRes -> .)
    LEFT_OR         shift and go to state 253
    TYPE            shift and go to state 255
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    DotName                        shift and go to state 254
    Name                           shift and go to state 229
    FuncType                       shift and go to state 248
    OtherType                      shift and go to state 251
    InterfaceType                  shift and go to state 28
    FuncRes                        shift and go to state 490
    PtrType                        shift and go to state 249
    ChannelType                    shift and go to state 46
    FuncRetType                    shift and go to state 250

state 470

    (66) ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .

    LBRACE          reduce using rule 66 (ForHeader -> OSimpleStmt SEMICOL OSimpleStmt SEMICOL OSimpleStmt .)


state 471

    (62) LoopBody -> LBRACE cmtlist StmtList cmtlist . RBRACE
    (169) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (273) cmtlist -> cmtlist . COMMENT
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RBRACE          shift and go to state 491
    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 463
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NonDeclStmt                    shift and go to state 208
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    FuncLiteralDecl                shift and go to state 33
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 472

    (123) InDecl -> LPAREN OArgTypeListOComma RPAREN . FuncRes
    (107) FuncRes -> .
    (108) FuncRes -> . FuncRetType
    (109) FuncRes -> . LEFT_OR OArgTypeListOComma OR_RIGHT
    (127) FuncRetType -> . FuncType
    (128) FuncRetType -> . OtherType
    (129) FuncRetType -> . PtrType
    (130) FuncRetType -> . DotName
    (131) FuncRetType -> . TYPE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (126) PtrType -> . TIMES NType
    (132) DotName -> . Name
    (133) DotName -> . Name DOT IDENTIFIER
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (179) Name -> . IDENTIFIER

    SEMICOL         reduce using rule 107 (FuncRes -> .)
    RBRACE          reduce using rule 107 (FuncRes -> .)
    LEFT_OR         shift and go to state 253
    TYPE            shift and go to state 255
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 232
    TIMES           shift and go to state 226
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    LMINUS          shift and go to state 122
    IDENTIFIER      shift and go to state 120

    StructType                     shift and go to state 68
    DotName                        shift and go to state 254
    Name                           shift and go to state 229
    FuncType                       shift and go to state 248
    OtherType                      shift and go to state 251
    InterfaceType                  shift and go to state 28
    PtrType                        shift and go to state 249
    ChannelType                    shift and go to state 46
    FuncRes                        shift and go to state 492
    FuncRetType                    shift and go to state 250

state 473

    (59) CaseBlock -> Case StmtList .
    (169) StmtList -> StmtList . cmtlist Stmt SEMICOL
    (272) cmtlist -> .
    (273) cmtlist -> . cmtlist COMMENT

    RBRACE          reduce using rule 59 (CaseBlock -> Case StmtList .)
    CASE            reduce using rule 59 (CaseBlock -> Case StmtList .)
    DEFAULT         reduce using rule 59 (CaseBlock -> Case StmtList .)
    COMMENT         reduce using rule 272 (cmtlist -> .)
    LBRACE          reduce using rule 272 (cmtlist -> .)
    CONSTANT        reduce using rule 272 (cmtlist -> .)
    VAR             reduce using rule 272 (cmtlist -> .)
    TYPE            reduce using rule 272 (cmtlist -> .)
    FALLTHROUGH     reduce using rule 272 (cmtlist -> .)
    BREAK           reduce using rule 272 (cmtlist -> .)
    CONTINUE        reduce using rule 272 (cmtlist -> .)
    GOTO            reduce using rule 272 (cmtlist -> .)
    RETURN          reduce using rule 272 (cmtlist -> .)
    FOR             reduce using rule 272 (cmtlist -> .)
    SWITCH          reduce using rule 272 (cmtlist -> .)
    IF              reduce using rule 272 (cmtlist -> .)
    CONSTANTS       reduce using rule 272 (cmtlist -> .)
    IDENTIFIER      reduce using rule 272 (cmtlist -> .)
    LMINUS          reduce using rule 272 (cmtlist -> .)
    LBRACK          reduce using rule 272 (cmtlist -> .)
    STRUCT          reduce using rule 272 (cmtlist -> .)
    INTERFACE       reduce using rule 272 (cmtlist -> .)
    CHAN            reduce using rule 272 (cmtlist -> .)
    AMPERS          reduce using rule 272 (cmtlist -> .)
    NOT             reduce using rule 272 (cmtlist -> .)
    TIMES           reduce using rule 272 (cmtlist -> .)
    PLUS            reduce using rule 272 (cmtlist -> .)
    MINUS           reduce using rule 272 (cmtlist -> .)
    XOR             reduce using rule 272 (cmtlist -> .)
    LPAREN          reduce using rule 272 (cmtlist -> .)
    INTEGER         reduce using rule 272 (cmtlist -> .)
    FLOAT           reduce using rule 272 (cmtlist -> .)
    STRING          reduce using rule 272 (cmtlist -> .)
    FUNCTION        reduce using rule 272 (cmtlist -> .)
    SEMICOL         reduce using rule 272 (cmtlist -> .)

    cmtlist                        shift and go to state 493

state 474

    (54) Case -> CASE ExprOrTypeList . COLON
    (55) Case -> CASE ExprOrTypeList . EQUAL Expr COLON
    (56) Case -> CASE ExprOrTypeList . COLONEQ Expr COLON
    (151) ExprOrTypeList -> ExprOrTypeList . COMMA ExprOrType

    COLON           shift and go to state 496
    EQUAL           shift and go to state 494
    COLONEQ         shift and go to state 495
    COMMA           shift and go to state 497


state 475

    (57) Case -> DEFAULT COLON .

    LBRACE          reduce using rule 57 (Case -> DEFAULT COLON .)
    CONSTANT        reduce using rule 57 (Case -> DEFAULT COLON .)
    VAR             reduce using rule 57 (Case -> DEFAULT COLON .)
    TYPE            reduce using rule 57 (Case -> DEFAULT COLON .)
    FALLTHROUGH     reduce using rule 57 (Case -> DEFAULT COLON .)
    BREAK           reduce using rule 57 (Case -> DEFAULT COLON .)
    CONTINUE        reduce using rule 57 (Case -> DEFAULT COLON .)
    GOTO            reduce using rule 57 (Case -> DEFAULT COLON .)
    RETURN          reduce using rule 57 (Case -> DEFAULT COLON .)
    FOR             reduce using rule 57 (Case -> DEFAULT COLON .)
    SWITCH          reduce using rule 57 (Case -> DEFAULT COLON .)
    IF              reduce using rule 57 (Case -> DEFAULT COLON .)
    CONSTANTS       reduce using rule 57 (Case -> DEFAULT COLON .)
    IDENTIFIER      reduce using rule 57 (Case -> DEFAULT COLON .)
    LMINUS          reduce using rule 57 (Case -> DEFAULT COLON .)
    LBRACK          reduce using rule 57 (Case -> DEFAULT COLON .)
    STRUCT          reduce using rule 57 (Case -> DEFAULT COLON .)
    INTERFACE       reduce using rule 57 (Case -> DEFAULT COLON .)
    CHAN            reduce using rule 57 (Case -> DEFAULT COLON .)
    AMPERS          reduce using rule 57 (Case -> DEFAULT COLON .)
    NOT             reduce using rule 57 (Case -> DEFAULT COLON .)
    TIMES           reduce using rule 57 (Case -> DEFAULT COLON .)
    PLUS            reduce using rule 57 (Case -> DEFAULT COLON .)
    MINUS           reduce using rule 57 (Case -> DEFAULT COLON .)
    XOR             reduce using rule 57 (Case -> DEFAULT COLON .)
    LPAREN          reduce using rule 57 (Case -> DEFAULT COLON .)
    INTEGER         reduce using rule 57 (Case -> DEFAULT COLON .)
    FLOAT           reduce using rule 57 (Case -> DEFAULT COLON .)
    STRING          reduce using rule 57 (Case -> DEFAULT COLON .)
    FUNCTION        reduce using rule 57 (Case -> DEFAULT COLON .)
    SEMICOL         reduce using rule 57 (Case -> DEFAULT COLON .)


state 476

    (227) CompLitExpr -> LEFT_LEFT BracedKeyvalList . RIGHT_RIGHT

    RIGHT_RIGHT     shift and go to state 498


state 477

    (212) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 212 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr RBRACK .)


state 478

    (213) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON . OExpr RBRACK
    (142) OExpr -> .
    (143) OExpr -> . Expr
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    RBRACK          reduce using rule 142 (OExpr -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 343
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    OExpr                          shift and go to state 499
    PExpr                          shift and go to state 70

state 479

    (271) PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .

    DOT             reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACK          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEFT_LEFT       reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LPAREN          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDE          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MOD             reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL             reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR             reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPERS          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAR          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMES           reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUS            reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUS           reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    XOR             reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OR              reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQEQ            reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    NOTEQ           reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LEQ             reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GEQ             reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    GREAT           reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LESS            reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPAMP          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLON           reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OROR            reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COMMA           reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_RIGHT     reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SEMICOL         reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RPAREN          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSEQ          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSEQ         reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    TIMESEQ         reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DIVIDEEQ        reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MODEQ           reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    OREQ            reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPEQ           reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    CAREQ           reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHL_ASSIGN      reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    SHR_ASSIGN      reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    AMPCAREQ        reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PLUSPLUS        reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    MINUSMIN        reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    EQUAL           reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    COLONEQ         reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    LBRACE          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    PIPE            reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACK          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RIGHT_ANGLE     reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    RBRACE          reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)
    DDD             reduce using rule 271 (PseudoCall -> PExpr LPAREN ExprOrTypeList DDD OComma RPAREN .)


state 480

    (78) Else -> ELSE CompoundStmt .

    SEMICOL         reduce using rule 78 (Else -> ELSE CompoundStmt .)


state 481

    (74) ElseIf -> ELSE IF . IfHeader LoopBody
    (71) IfHeader -> . OSimpleStmt
    (72) IfHeader -> . OSimpleStmt SEMICOL OSimpleStmt
    (138) OSimpleStmt -> .
    (139) OSimpleStmt -> . SimpleStmt
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    SEMICOL         reduce using rule 138 (OSimpleStmt -> .)
    LBRACE          reduce using rule 138 (OSimpleStmt -> .)
    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 141
    OSimpleStmt                    shift and go to state 160
    Prec3Expr_                     shift and go to state 23
    IfHeader                       shift and go to state 500
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    Literal                        shift and go to state 51
    PExpr                          shift and go to state 70

state 482

    (119) StructDecl -> TIMES LPAREN Embed RPAREN . OLiteral
    (152) OLiteral -> .
    (153) OLiteral -> . Literal
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING

    SEMICOL         reduce using rule 152 (OLiteral -> .)
    RBRACE          reduce using rule 152 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42

    OLiteral                       shift and go to state 501
    Literal                        shift and go to state 399

state 483

    (118) StructDecl -> LPAREN TIMES Embed RPAREN . OLiteral
    (152) OLiteral -> .
    (153) OLiteral -> . Literal
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING

    SEMICOL         reduce using rule 152 (OLiteral -> .)
    RBRACE          reduce using rule 152 (OLiteral -> .)
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42

    OLiteral                       shift and go to state 502
    Literal                        shift and go to state 399

state 484

    (116) StructDecl -> LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 116 (StructDecl -> LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 116 (StructDecl -> LPAREN Embed RPAREN OLiteral .)


state 485

    (58) CompoundStmt -> LBRACE cmtlist StmtList cmtlist RBRACE .

    SEMICOL         reduce using rule 58 (CompoundStmt -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 486

    (169) StmtList -> StmtList cmtlist Stmt SEMICOL .

    COMMENT         reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACE          reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANT        reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    VAR             reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TYPE            reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FALLTHROUGH     reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    BREAK           reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONTINUE        reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    GOTO            reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    RETURN          reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FOR             reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SWITCH          reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IF              reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CONSTANTS       reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    IDENTIFIER      reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LMINUS          reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LBRACK          reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRUCT          reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTERFACE       reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CHAN            reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    AMPERS          reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    NOT             reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    TIMES           reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    PLUS            reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    MINUS           reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    XOR             reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    LPAREN          reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    INTEGER         reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FLOAT           reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    STRING          reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    FUNCTION        reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    SEMICOL         reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    RBRACE          reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    CASE            reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)
    DEFAULT         reduce using rule 169 (StmtList -> StmtList cmtlist Stmt SEMICOL .)


state 487

    (20) CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .

    SEMICOL         reduce using rule 20 (CommonDecl -> CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN .)


state 488

    (163) ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .

    SEMICOL         reduce using rule 163 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)
    RPAREN          reduce using rule 163 (ConstDeclList -> ConstDeclList SEMICOL ConstDecl1 .)


state 489

    (106) FuncBody -> LBRACE cmtlist StmtList cmtlist RBRACE .

    SEMICOL         reduce using rule 106 (FuncBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 490

    (101) FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .

    LBRACE          reduce using rule 101 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)
    SEMICOL         reduce using rule 101 (FuncDecl_ -> LEFT_OR OArgTypeListOComma OR_RIGHT IDENTIFIER ArgList FuncRes .)


state 491

    (62) LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .

    ELSE            reduce using rule 62 (LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)
    SEMICOL         reduce using rule 62 (LoopBody -> LBRACE cmtlist StmtList cmtlist RBRACE .)


state 492

    (123) InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .

    SEMICOL         reduce using rule 123 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)
    RBRACE          reduce using rule 123 (InDecl -> LPAREN OArgTypeListOComma RPAREN FuncRes .)


state 493

    (169) StmtList -> StmtList cmtlist . Stmt SEMICOL
    (273) cmtlist -> cmtlist . COMMENT
    (188) Stmt -> .
    (189) Stmt -> . CompoundStmt
    (190) Stmt -> . CommonDecl
    (191) Stmt -> . NonDeclStmt
    (58) CompoundStmt -> . LBRACE cmtlist StmtList cmtlist RBRACE
    (18) CommonDecl -> . CONSTANT ConstDecl
    (19) CommonDecl -> . CONSTANT LPAREN ConstDecl OSemi RPAREN
    (20) CommonDecl -> . CONSTANT LPAREN ConstDecl SEMICOL ConstDeclList OSemi RPAREN
    (21) CommonDecl -> . CONSTANT LPAREN RPAREN
    (22) CommonDecl -> . VAR VarDecl
    (23) CommonDecl -> . VAR LPAREN VarDeclList OSemi RPAREN
    (24) CommonDecl -> . VAR LPAREN RPAREN
    (25) CommonDecl -> . TYPE TypeDecl
    (26) CommonDecl -> . TYPE LPAREN TypeDeclList OSemi RPAREN
    (27) CommonDecl -> . TYPE LPAREN RPAREN
    (192) NonDeclStmt -> . SimpleStmt
    (193) NonDeclStmt -> . ForStmt
    (194) NonDeclStmt -> . SwitchStmt
    (195) NonDeclStmt -> . IfStmt
    (196) NonDeclStmt -> . LabelName COLON Stmt
    (197) NonDeclStmt -> . FALLTHROUGH
    (198) NonDeclStmt -> . BREAK ONewName
    (199) NonDeclStmt -> . CONTINUE ONewName
    (200) NonDeclStmt -> . GOTO NewName
    (201) NonDeclStmt -> . RETURN OExprList
    (38) SimpleStmt -> . Expr
    (39) SimpleStmt -> . Expr PLUSEQ Expr
    (40) SimpleStmt -> . Expr MINUSEQ Expr
    (41) SimpleStmt -> . Expr TIMESEQ Expr
    (42) SimpleStmt -> . Expr DIVIDEEQ Expr
    (43) SimpleStmt -> . Expr MODEQ Expr
    (44) SimpleStmt -> . Expr OREQ Expr
    (45) SimpleStmt -> . Expr AMPEQ Expr
    (46) SimpleStmt -> . Expr CAREQ Expr
    (47) SimpleStmt -> . Expr SHL_ASSIGN Expr
    (48) SimpleStmt -> . Expr SHR_ASSIGN Expr
    (49) SimpleStmt -> . Expr AMPCAREQ Expr
    (50) SimpleStmt -> . ExprList EQUAL ExprList
    (51) SimpleStmt -> . ExprList COLONEQ ExprList
    (52) SimpleStmt -> . Expr PLUSPLUS
    (53) SimpleStmt -> . Expr MINUSMIN
    (70) ForStmt -> . FOR ForBody
    (231) SwitchStmt -> . SWITCH IfHeader LBRACE CaseBlockList RBRACE
    (73) IfStmt -> . IF IfHeader LoopBody ElseIfList Else
    (124) LabelName -> . NewName
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (148) ExprList -> . Expr
    (149) ExprList -> . ExprList COMMA Expr
    (125) NewName -> . IDENTIFIER
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    COMMENT         shift and go to state 4
    SEMICOL         reduce using rule 188 (Stmt -> .)
    LBRACE          shift and go to state 207
    CONSTANT        shift and go to state 37
    VAR             shift and go to state 35
    TYPE            shift and go to state 54
    FALLTHROUGH     shift and go to state 27
    BREAK           shift and go to state 69
    CONTINUE        shift and go to state 57
    GOTO            shift and go to state 74
    RETURN          shift and go to state 62
    FOR             shift and go to state 48
    SWITCH          shift and go to state 63
    IF              shift and go to state 82
    CONSTANTS       shift and go to state 59
    IDENTIFIER      shift and go to state 66
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    FUNCTION        shift and go to state 121

    FuncType                       shift and go to state 71
    PExprNoParen                   shift and go to state 60
    Prec4Expr_                     shift and go to state 39
    SimpleStmt                     shift and go to state 72
    Prec3Expr_                     shift and go to state 23
    ForStmt                        shift and go to state 73
    CommonDecl                     shift and go to state 206
    ConvType                       shift and go to state 24
    OtherType                      shift and go to state 44
    IfStmt                         shift and go to state 25
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    Stmt                           shift and go to state 463
    NewName                        shift and go to state 45
    InterfaceType                  shift and go to state 28
    LabelName                      shift and go to state 29
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    NonDeclStmt                    shift and go to state 208
    Expr                           shift and go to state 78
    PseudoCall                     shift and go to state 49
    PExpr                          shift and go to state 70
    FuncLiteralDecl                shift and go to state 33
    ExprList                       shift and go to state 36
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    SwitchStmt                     shift and go to state 55
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    CompoundStmt                   shift and go to state 205

state 494

    (55) Case -> CASE ExprOrTypeList EQUAL . Expr COLON
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 503
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 495

    (56) Case -> CASE ExprOrTypeList COLONEQ . Expr COLON
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    LMINUS          shift and go to state 31
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    TIMES           shift and go to state 80
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120
    FUNCTION        shift and go to state 121

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 71
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    Arrayexp                       shift and go to state 75
    OtherType                      shift and go to state 44
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 504
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 496

    (54) Case -> CASE ExprOrTypeList COLON .

    LBRACE          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANT        reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    VAR             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    TYPE            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FALLTHROUGH     reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    BREAK           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    CONTINUE        reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    GOTO            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    RETURN          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FOR             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    SWITCH          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    IF              reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    CONSTANTS       reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    IDENTIFIER      reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    LMINUS          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    LBRACK          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    STRUCT          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    INTERFACE       reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    CHAN            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    AMPERS          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    NOT             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    TIMES           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    PLUS            reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    MINUS           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    XOR             reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    LPAREN          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    INTEGER         reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FLOAT           reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    STRING          reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    FUNCTION        reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)
    SEMICOL         reduce using rule 54 (Case -> CASE ExprOrTypeList COLON .)


state 497

    (151) ExprOrTypeList -> ExprOrTypeList COMMA . ExprOrType
    (228) ExprOrType -> . Expr
    (229) ExprOrType -> . NonExprType
    (254) Expr -> . Prec2Expr_
    (255) Expr -> . Expr OROR Prec2Expr_
    (256) Expr -> . CONSTANTS
    (257) Expr -> . Chexpr
    (258) Expr -> . Arrayexp
    (85) NonExprType -> . FuncType
    (86) NonExprType -> . OtherType
    (87) NonExprType -> . TIMES NonExprType
    (252) Prec2Expr_ -> . Prec3Expr_
    (253) Prec2Expr_ -> . Prec2Expr_ AMPAMP Prec3Expr_
    (259) Chexpr -> . LMINUS IDENTIFIER
    (260) Arrayexp -> . OtherType LBRACE ExprList RBRACE
    (102) FuncType -> . FUNCTION ArgList FuncRes
    (88) OtherType -> . LBRACK OExpr RBRACK NType
    (89) OtherType -> . StructType
    (90) OtherType -> . InterfaceType
    (91) OtherType -> . ChannelType
    (245) Prec3Expr_ -> . Prec4Expr_
    (246) Prec3Expr_ -> . Prec3Expr_ EQEQ Prec4Expr_
    (247) Prec3Expr_ -> . Prec3Expr_ NOTEQ Prec4Expr_
    (248) Prec3Expr_ -> . Prec3Expr_ LEQ Prec4Expr_
    (249) Prec3Expr_ -> . Prec3Expr_ GEQ Prec4Expr_
    (250) Prec3Expr_ -> . Prec3Expr_ GREAT Prec4Expr_
    (251) Prec3Expr_ -> . Prec3Expr_ LESS Prec4Expr_
    (95) StructType -> . STRUCT LBRACE StructDeclList OSemi RBRACE
    (96) StructType -> . STRUCT LBRACE RBRACE
    (97) InterfaceType -> . INTERFACE LBRACE InterfaceDeclList OSemi RBRACE
    (98) InterfaceType -> . INTERFACE LBRACE RBRACE
    (92) ChannelType -> . CHAN TYPE
    (93) ChannelType -> . CHAN LMINUS TYPE
    (94) ChannelType -> . LMINUS CHAN TYPE
    (240) Prec4Expr_ -> . Prec5Expr_
    (241) Prec4Expr_ -> . Prec4Expr_ PLUS Prec5Expr_
    (242) Prec4Expr_ -> . Prec4Expr_ MINUS Prec5Expr_
    (243) Prec4Expr_ -> . Prec4Expr_ XOR Prec5Expr_
    (244) Prec4Expr_ -> . Prec4Expr_ OR Prec5Expr_
    (232) Prec5Expr_ -> . UExpr
    (233) Prec5Expr_ -> . Prec5Expr_ DIVIDE UExpr
    (234) Prec5Expr_ -> . Prec5Expr_ MOD UExpr
    (235) Prec5Expr_ -> . Prec5Expr_ SHL UExpr
    (236) Prec5Expr_ -> . Prec5Expr_ SHR UExpr
    (237) Prec5Expr_ -> . Prec5Expr_ AMPERS UExpr
    (238) Prec5Expr_ -> . Prec5Expr_ AMPCAR UExpr
    (239) Prec5Expr_ -> . Prec5Expr_ TIMES UExpr
    (261) UExpr -> . PExpr
    (262) UExpr -> . AMPERS UExpr
    (263) UExpr -> . NOT UExpr
    (264) UExpr -> . TIMES UExpr
    (265) UExpr -> . PLUS UExpr
    (266) UExpr -> . MINUS UExpr
    (267) UExpr -> . XOR UExpr
    (204) PExpr -> . PExprNoParen
    (205) PExpr -> . LPAREN ExprOrType RPAREN
    (206) PExprNoParen -> . Literal
    (207) PExprNoParen -> . Name
    (208) PExprNoParen -> . PExpr DOT IDENTIFIER
    (209) PExprNoParen -> . PExpr DOT LPAREN ExprOrType RPAREN
    (210) PExprNoParen -> . PExpr DOT LPAREN TYPE RPAREN
    (211) PExprNoParen -> . PExpr LBRACK Expr RBRACK
    (212) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr RBRACK
    (213) PExprNoParen -> . PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK
    (214) PExprNoParen -> . PseudoCall
    (215) PExprNoParen -> . ConvType LEFT_ANGLE Expr OComma RIGHT_ANGLE
    (216) PExprNoParen -> . CompType LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (217) PExprNoParen -> . PExpr LEFT_LEFT BracedKeyvalList RIGHT_RIGHT
    (218) PExprNoParen -> . FuncLiteral
    (219) PExprNoParen -> . ForCompExpr
    (154) Literal -> . INTEGER
    (155) Literal -> . FLOAT
    (156) Literal -> . STRING
    (179) Name -> . IDENTIFIER
    (269) PseudoCall -> . PExpr LPAREN RPAREN
    (270) PseudoCall -> . PExpr LPAREN ExprOrTypeList OComma RPAREN
    (271) PseudoCall -> . PExpr LPAREN ExprOrTypeList DDD OComma RPAREN
    (220) ConvType -> . FuncType
    (221) ConvType -> . OtherType
    (222) CompType -> . OtherType
    (147) FuncLiteral -> . FuncLiteralDecl LBRACE cmtlist StmtList cmtlist RBRACE
    (268) ForCompExpr -> . LBRACK Expr PIPE RangeStmt RBRACK
    (146) FuncLiteralDecl -> . FuncType

    CONSTANTS       shift and go to state 59
    TIMES           shift and go to state 192
    LMINUS          shift and go to state 31
    FUNCTION        shift and go to state 121
    LBRACK          shift and go to state 56
    STRUCT          shift and go to state 83
    INTERFACE       shift and go to state 50
    CHAN            shift and go to state 61
    AMPERS          shift and go to state 38
    NOT             shift and go to state 58
    PLUS            shift and go to state 65
    MINUS           shift and go to state 41
    XOR             shift and go to state 79
    LPAREN          shift and go to state 81
    INTEGER         shift and go to state 34
    FLOAT           shift and go to state 84
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 120

    PExprNoParen                   shift and go to state 60
    FuncType                       shift and go to state 187
    Prec4Expr_                     shift and go to state 39
    Prec3Expr_                     shift and go to state 23
    Literal                        shift and go to state 51
    FuncLiteral                    shift and go to state 22
    ConvType                       shift and go to state 24
    Chexpr                         shift and go to state 26
    ExprOrType                     shift and go to state 447
    Arrayexp                       shift and go to state 75
    NonExprType                    shift and go to state 189
    OtherType                      shift and go to state 190
    InterfaceType                  shift and go to state 28
    Prec5Expr_                     shift and go to state 30
    ChannelType                    shift and go to state 46
    CompType                       shift and go to state 67
    StructType                     shift and go to state 68
    Name                           shift and go to state 76
    Prec2Expr_                     shift and go to state 32
    FuncLiteralDecl                shift and go to state 33
    Expr                           shift and go to state 191
    PseudoCall                     shift and go to state 49
    UExpr                          shift and go to state 52
    ForCompExpr                    shift and go to state 53
    PExpr                          shift and go to state 70

state 498

    (227) CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .

    COMMA           reduce using rule 227 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)
    RIGHT_RIGHT     reduce using rule 227 (CompLitExpr -> LEFT_LEFT BracedKeyvalList RIGHT_RIGHT .)


state 499

    (213) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr . RBRACK

    RBRACK          shift and go to state 505


state 500

    (74) ElseIf -> ELSE IF IfHeader . LoopBody
    (62) LoopBody -> . LBRACE cmtlist StmtList cmtlist RBRACE

    LBRACE          shift and go to state 272

    LoopBody                       shift and go to state 506

state 501

    (119) StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 119 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 119 (StructDecl -> TIMES LPAREN Embed RPAREN OLiteral .)


state 502

    (118) StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .

    SEMICOL         reduce using rule 118 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)
    RBRACE          reduce using rule 118 (StructDecl -> LPAREN TIMES Embed RPAREN OLiteral .)


state 503

    (55) Case -> CASE ExprOrTypeList EQUAL Expr . COLON
    (255) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 507
    OROR            shift and go to state 171


state 504

    (56) Case -> CASE ExprOrTypeList COLONEQ Expr . COLON
    (255) Expr -> Expr . OROR Prec2Expr_

    COLON           shift and go to state 508
    OROR            shift and go to state 171


state 505

    (213) PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .

    DOT             reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACK          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEFT_LEFT       reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LPAREN          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDE          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MOD             reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL             reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR             reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPERS          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAR          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMES           reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUS            reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUS           reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    XOR             reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OR              reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQEQ            reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    NOTEQ           reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LEQ             reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GEQ             reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    GREAT           reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LESS            reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPAMP          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSEQ          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSEQ         reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    TIMESEQ         reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DIVIDEEQ        reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MODEQ           reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OREQ            reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPEQ           reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    CAREQ           reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHL_ASSIGN      reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SHR_ASSIGN      reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    AMPCAREQ        reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PLUSPLUS        reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    MINUSMIN        reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    OROR            reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    SEMICOL         reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    EQUAL           reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLONEQ         reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COMMA           reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    LBRACE          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    PIPE            reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACK          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RPAREN          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_ANGLE     reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RBRACE          reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    COLON           reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    RIGHT_RIGHT     reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)
    DDD             reduce using rule 213 (PExprNoParen -> PExpr LBRACK OExpr COLON OExpr COLON OExpr RBRACK .)


state 506

    (74) ElseIf -> ELSE IF IfHeader LoopBody .

    ELSE            reduce using rule 74 (ElseIf -> ELSE IF IfHeader LoopBody .)
    SEMICOL         reduce using rule 74 (ElseIf -> ELSE IF IfHeader LoopBody .)


state 507

    (55) Case -> CASE ExprOrTypeList EQUAL Expr COLON .

    LBRACE          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANT        reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    VAR             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TYPE            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FALLTHROUGH     reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    BREAK           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONTINUE        reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    GOTO            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    RETURN          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FOR             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SWITCH          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IF              reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CONSTANTS       reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    IDENTIFIER      reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LMINUS          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LBRACK          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRUCT          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTERFACE       reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    CHAN            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    AMPERS          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    NOT             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    TIMES           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    PLUS            reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    MINUS           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    XOR             reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    LPAREN          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    INTEGER         reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FLOAT           reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    STRING          reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    FUNCTION        reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)
    SEMICOL         reduce using rule 55 (Case -> CASE ExprOrTypeList EQUAL Expr COLON .)


state 508

    (56) Case -> CASE ExprOrTypeList COLONEQ Expr COLON .

    LBRACE          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANT        reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    VAR             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TYPE            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FALLTHROUGH     reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    BREAK           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONTINUE        reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    GOTO            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    RETURN          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FOR             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SWITCH          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IF              reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CONSTANTS       reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    IDENTIFIER      reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LMINUS          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LBRACK          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRUCT          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTERFACE       reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    CHAN            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    AMPERS          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    NOT             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    TIMES           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    PLUS            reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    MINUS           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    XOR             reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    LPAREN          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    INTEGER         reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FLOAT           reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    STRING          reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    FUNCTION        reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)
    SEMICOL         reduce using rule 56 (Case -> CASE ExprOrTypeList COLONEQ Expr COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT in state 7 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 11 resolved as shift
