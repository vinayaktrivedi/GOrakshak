
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE EQUALS MINUS NAME NUMBER PLUS SEMIC TIMES VARassign_list : assign SEMIC assign_list\n                   | emptyassign : VAR NAME EQUALS exprexpr : expr PLUS term \n            | expr MINUS term\n            | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : NUMBERempty  : '
    
_lr_action_items = {'SEMIC':([3,9,10,11,12,17,18,19,20,],[6,-6,-10,-3,-9,-8,-7,-4,-5,]),'DIVIDE':([9,10,12,17,18,19,20,],[13,-10,-9,-8,-7,13,13,]),'NAME':([1,],[5,]),'EQUALS':([5,],[7,]),'NUMBER':([7,13,14,15,16,],[10,10,10,10,10,]),'PLUS':([9,10,11,12,17,18,19,20,],[-6,-10,15,-9,-8,-7,-4,-5,]),'VAR':([0,6,],[1,1,]),'TIMES':([9,10,12,17,18,19,20,],[14,-10,-9,-8,-7,14,14,]),'MINUS':([9,10,11,12,17,18,19,20,],[-6,-10,16,-9,-8,-7,-4,-5,]),'$end':([0,2,4,6,8,],[-11,0,-2,-11,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([7,15,16,],[9,19,20,]),'expr':([7,],[11,]),'factor':([7,13,14,15,16,],[12,17,18,12,12,]),'assign_list':([0,6,],[2,8,]),'assign':([0,6,],[3,3,]),'empty':([0,6,],[4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> assign_list","S'",1,None,None,None),
  ('assign_list -> assign SEMIC assign_list','assign_list',3,'p_list_of_assign','parser.py',7),
  ('assign_list -> empty','assign_list',1,'p_list_of_assign','parser.py',8),
  ('assign -> VAR NAME EQUALS expr','assign',4,'p_assign','parser.py',14),
  ('expr -> expr PLUS term','expr',3,'p_expr','parser.py',25),
  ('expr -> expr MINUS term','expr',3,'p_expr','parser.py',26),
  ('expr -> term','expr',1,'p_expr','parser.py',27),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',43),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',44),
  ('term -> factor','term',1,'p_term','parser.py',45),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',61),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',69),
]
